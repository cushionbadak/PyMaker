<div class="post-text" itemprop="text">
<p>I got a list, in one (the last) column is a string of comma separated items:</p>
<pre><code>temp = ['AAA', 'BBB', 'CCC-DDD', 'EE,FFF,FFF,EE']
</code></pre>
<p>Now I want to remove the duplicates in that column.</p>
<p>I tried to make a list out of every column:</p>
<pre><code>    e = [s.split(',') for s in temp]
    print e
</code></pre>
<p>Which gave me:</p>
<pre><code>[['AAA'], ['BBB'], ['CCC-DDD'], ['EE', 'FFF', 'FFF', 'EE']]
</code></pre>
<p>Now I tried to remove the duplicates with:</p>
<pre><code>    y = list(set(e))
    print y
</code></pre>
<p>What ended up in an error</p>
<pre><code>TypeError: unhashable type: 'list'
</code></pre>
<p>I'd appreciate any help.</p>
<p><strong>Edit</strong>:</p>
<p>I didn't exactly said what the end result should be. The list should look like that</p>
<pre><code>temp = ['AAA', 'BBB', 'CCC-DDD', 'EE', 'FFF']
</code></pre>
<p>Just the duplicates should get removed in the last column.</p>
</div>
<div class="post-text" itemprop="text">
<p>Apply <code>set</code> on the <em>elements</em> of the list not on the list of lists. You want your <code>set</code> to contain the strings of each list, not the lists.</p>
<pre><code>e = [list(set(x)) for x in e]
</code></pre>
<p>You can do it directly as well:</p>
<pre><code>e = [list(set(s.split(','))) for s in temp]

&gt;&gt;&gt; e
[['AAA'], ['BBB'], ['CCC-DDD'], ['EE', 'FFF']]
</code></pre>
<p>you may want <code>sorted(set(s.split(',')))</code> instead to ensure lexicographic order (sets aren't ordered, <a href="https://stackoverflow.com/questions/45581901/are-sets-ordered-like-dicts-in-python3-6">even in python 3.7</a>)</p>
<p>for a flat, ordered list, create a flat set comprehension and sort it:</p>
<pre><code>e = sorted({x for s in temp for x in s.split(',')})
</code></pre>
<p>result:</p>
<pre><code>['AAA', 'BBB', 'CCC-DDD', 'EE', 'FFF']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is solution, that uses <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer">itertools.chain</a> method</p>
<pre><code>import itertools

temp = ['AAA', 'BBB', 'CCC-DDD', 'EE,FFF,FFF,EE']
y = list(set(itertools.chain(*[s.split(',') for s in temp])))
# ['EE', 'FFF', 'AAA', 'BBB', 'CCC-DDD']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code> a = ['AAA', 'BBB', 'CCC-DDD', 'EE,FFF,FFF,EE']
 b = [s.split(',') for s in a]
 c = []
 for i in b:
     c = c + i
 c = list(set(c))

 ['EE', 'FFF', 'AAA', 'BBB', 'CCC-DDD']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a pure functional way to do it in Python:</p>
<pre><code>from functools import partial

split = partial(str.split, sep=',')

list(map(list, map(set, (map(split, temp)))))
[['AAA'], ['BBB'], ['CCC-DDD'], ['EE', 'FFF']]
</code></pre>
<p>Or as I see the answer doesn't need lists inside of a list:</p>
<pre><code>from itertools import chain

list(chain(*map(set, (map(split, temp)))))
['AAA', 'BBB', 'CCC-DDD', 'EE', 'FFF']
</code></pre>
</div>
<span class="comment-copy">you need <code>e = [list(set(x) for x in e]</code></span>
<span class="comment-copy">Actually don't need lists in a list at all. Is there a way to apply the set and remove the duplicates without list in list?</span>
<span class="comment-copy">yup, check my edit</span>
