<div class="post-text" itemprop="text">
<p>Base32 encoding in python 2.7 works like this:</p>
<pre><code>$ python
Python 2.7.10 (default, Oct  6 2017, 22:29:07)
[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import base64
&gt;&gt;&gt; print(base64.b32encode("abc"))
MFRGG===
</code></pre>
<p>But when I try to do the same thing in python3 it fails. Why?</p>
<pre><code>$ python
Python 3.7.2 (default, Jan 13 2019, 12:50:15)
[Clang 10.0.0 (clang-1000.11.45.5)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import base64
&gt;&gt;&gt; print(base64.b32encode("abc"))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "my-virtual-env/lib/python3.7/base64.py", line 154, in b32encode
    s = memoryview(s).tobytes()
TypeError: memoryview: a bytes-like object is required, not 'str'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Answer: </p>
<pre><code>print(base64.b32encode(bytearray("abc", 'ascii')).decode('utf-8'))
</code></pre>
</div>
<span class="comment-copy">A string in Python 3.x is a Unicode-string but a byte sequence is required. In this simple case here try <code>print(base64.b32encode(b"abc"))</code>.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/base64.html#base64.b32encode" rel="nofollow noreferrer">docs.python.org/3/library/base64.html#base64.b32encode</a></span>
<span class="comment-copy">I'd consider <code>"abc".encode('ascii')</code> to be the more canonical solution (no need for the mutability of <code>bytearray</code> here, and the method self-documents better to my mind). Not a real critique, but it's weird to see <code>bytearray</code> in non-mutable contexts outside of the rare case of code that needs a <code>bytes</code>-like type that works on Py2 (where <code>bytes</code> aliases <code>str</code> and doesn't iterate by <code>int</code>).</span>
