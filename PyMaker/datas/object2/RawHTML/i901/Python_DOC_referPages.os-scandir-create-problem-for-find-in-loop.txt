<div class="post-text" itemprop="text">
<p>I try to find a string in a filename derrived from os.scandir()
Like the string '15' in 'ilikecake15.pdf' or 'ilike1615cake.pdf' The strings are unique.
Background for this code: I have several folders with pdfs that I need to match to a list. The filename contains parts of the strings from the list. 
I thought using to for loops would do the trick, one getting info from a txt. and the other from os.scandir() and find() to check for != -1. </p>
<p>Troubleshooting has left med with two .txt of values that I try to compare with s.find(ins). My goal is to sort out the != -1.
It seems to work if I define v1 and v2 and do v1.find(v2) but in a nested for loop, everything comes out as -1. (even when I see the correct matchup)
I have removed pathsinfo like G:\thispath\and\thispath from the textfile using [xx]. Even try adding str() to almost everything (just in case) </p>
<pre><code>import os
tdpath = 'G:\Somepathwithalotofpdfs'
tdfiles = 'G:\Anothersuitablepath/tdfiles.txt'
tdlines = 'G:\Anothersuitablepath/tdlines.txt'
with os.scandir(tdpath) as pth, open(tdfiles, 'w') as fls:
    for td in pth:
        if td.is_file():
            fls.write(str(os.fsdecode(td)[51:])) #str and [51:] added to help troubleshoot
            fls.write('\n')

with open(tdlines) as fp, open(tdfiles) as fls:
    for cnt, line in enumerate(fp):
        for cmt, lajn in enumerate(fls):
            print(lajn, line) #just troubleshooting
            print(str(lajn).find(str(line))) #just troubleshooting
            if lajn.find(line) != -1:
                print('KASWSOFJIDFHAIFHSIHFIAHS') # Hlep ples
</code></pre>
<p>This has turned into a monster while trying to troubleshoot it. But the expected result is to print the latter statement when it finds a match from file tdlines.txt in tdfiles.txt</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure I exactly understand the nature of the problem you're describing, but I do see one thing that almost certainly doesn't behave as you expect.</p>
<p>Once you iterate over all the lines of an open file object, attempting to iterate over it again will yield nothing because the internal pointer keeping track of the working location in the file is now at the end. So for the first line of <code>tdlines</code>, your loops will behave as you expect, but for the rest of the lines, the inner <code>for</code> loop will never run.</p>
<p>The solution is either to close and reopen <code>tdfiles</code> on each iteration through <code>tdlines</code>, or <a href="https://docs.python.org/3/library/io.html#io.IOBase.seek" rel="nofollow noreferrer"><code>seek()</code></a> back to the beginning of the file just before the inner <code>for</code> loop. Here's the latter approach:</p>
<pre><code>with open(tdlines) as fp, open(tdfiles) as fls:
    for cnt, line in enumerate(fp):
        fls.seek(0)
        for cmt, lajn in enumerate(fls):
            if lajn.find(line) != -1:
                print('KASWSOFJIDFHAIFHSIHFIAHS')
</code></pre>
</div>
<span class="comment-copy">Thanks, I wondered about that one. And most tutorials on nested loops don't mention seek.  if I add print(lajn, line) and print(lajn.find(line)) to the loop I get the following result for this example: ``` 32_015412018113555.pdf 2018113555 -1 ``` I expect a positive result from find in this case. Also adding these strings to variables  instead reading from files yield the result I'm after.</span>
<span class="comment-copy">@McD Take a close look at your data. There's probably some extra whitespace or a newline preventing the match.</span>
<span class="comment-copy">I never thought the main file could be the culprit. Mostly since that file is a copy paste. But somehow something other than text managed to mess that one up. Now it all works :D Thanks alot!</span>
