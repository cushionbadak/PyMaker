<div class="post-text" itemprop="text">
<p>I have four columns looks like to following:</p>
<pre class="lang-none prettyprint-override"><code>[Case Number] [Party Type] [Party Name] [Attorney For]
01             Plaintiff        A            nan
01             Plaintiff        B            nan
01             Defendant        C            nan
01             Attorney         D            A
01             Attorney         E            C
02  ...
03  ...
</code></pre>
<p>How can I replace the party type for attorneys to reflect the party he/her is working for, <em>within each case</em>?</p>
<p>For example, Person D is the attorney for <code>Plaintiff A</code>, so I want to change his party type to <code>Plaintiff Attorney</code>.</p>
<p>That is, I want the dataset looks like:</p>
<pre class="lang-none prettyprint-override"><code>[Case Number]   [Party Type]         [Party Name] [Attorney For]
01              Plaintiff               A            nan
01              Plaintiff               B            nan
01              Defendant               C            nan
01              PlaintiffAttorney       D            A
01              DefendantAttorney       E            C
02   ...
03   ...
</code></pre>
<p>I just started learning python and really don't whether there are easy ways to do this...</p>
</div>
<div class="post-text" itemprop="text">
<p>My approach would be to merge the DataFrame on itself (you need just a subset of the columns: the merge columns and the <code>PartyType</code>), matching the <code>Attorney for</code>-column with the <code>Party Name</code>. Once you've done that, you can just look up the Party type of that column, and add that to the string <code>"Attorney"</code>.</p>
<pre><code>df_2 = df.merge(df[['[CaseNumber]', '[PartyName]', '[PartyType]']], 
                how='left', left_on=['[CaseNumber]', '[AttorneyFor]'],
                right_on=['[CaseNumber]', '[PartyName]'], suffixes=('', '_y'))
# suffixes to specify we don't want to rename the original columns
# Add the strings together if it's an attorney, otherwise pick original Party Type
df_2['New Party Type'] = np.where(df_2['[PartyType]_y'].notnull(),
                                        df_2['[PartyType]_y'] + df_2['[PartyType]'],
                                        df_2['[PartyType]'])
# Drop merge columns
df_2.drop(columns=['[PartyName]_y', '[PartyType]_y'])

#Output:
#       [CaseNumber] [PartyType] [PartyName] [AttorneyFor]     New Party Type
#0             1   Plaintiff           A           NaN          Plaintiff
#1             1   Plaintiff           B           NaN          Plaintiff
#2             1   Defendant           C           NaN          Defendant
#3             1    Attorney           D             A  PlaintiffAttorney
#4             1    Attorney           E             C  DefendantAttorney
</code></pre>
<p>Hope that helps</p>
</div>
<div class="post-text" itemprop="text">
<p>I recommend using python's <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionaries</a> 
and creating a <strong>separate dictionary for each row</strong>. Then read each column and test for whether the current row is an attorney or non attorney.</p>
<p>So as a rough example:</p>
<pre><code>for person in col # For each person in the column
    if person == 'Plaintiff' # Create a dictionary for the plaintiff and store the letter in 'Party Name' with a key of 'Plaintiff' , you may then store in list to compare later on.
    if person == 'Defendant' # Create a dictionary for the defendant and store the letter in 'Party Name' with a key of 'defendant' , you may then store in list to compare later on.
    if person == 'Attorney' # Same thing
</code></pre>
<p>You can either throw them in separate lists and test against the attorney dictionary or test them inside the loop. If the values of the key's match, then the string of the keys are your "Party Type" column. </p>
<p>This is just one of many ways, experimenting a little will get you a long way.</p>
</div>
<span class="comment-copy">I'm really confused, you need to edit the tables a little better, and is there another column for "Plaintiff Attorney" ? I don't understand what you're trying to mix and match here.</span>
<span class="comment-copy">What indicates that "Person D" is the attorney for <code>Plaintiff A</code>? Where is the information about  "Person D"?</span>
<span class="comment-copy">@GKE Sorry the table looked terrible. I just edited and hope it is better now. In the original data frame, [Party Type] only shows the person is defendant, plaintiff, or attorney. What I want to have is, in this party type, to show whether the attorney is for the defendant or for the plaintiff..</span>
<span class="comment-copy">@martineau Thank you for asking! In the row for person D, the last column [Attorney For] says D is the attorney for Person A. Then I go to A's row and see A is the plaintiff..</span>
<span class="comment-copy">This is a viable approach.</span>
<span class="comment-copy">This is brilliant! Thank you so much @Jondiedoop!!</span>
<span class="comment-copy">It works perfectly!!</span>
<span class="comment-copy">This is really helpful! Thank you so much @GKE!!</span>
