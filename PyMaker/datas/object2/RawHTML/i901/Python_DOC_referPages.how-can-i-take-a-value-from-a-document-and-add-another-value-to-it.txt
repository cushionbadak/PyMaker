<div class="post-text" itemprop="text">
<p>I have a Python program I'm writing that I would like to have track statistics given inputs. I'd like it to have two documents set up, and be able to refer to each. In each, there would be a value, let's say it's <em>x</em>. The program would be able to generate a number, and I'd like to be able to update the number in a given document by <em>adding</em> the generated number. Right now, my code would be as follows:</p>
<pre><code>f1 = open("player1records.txt", "a+")

f1.write(str(int(P1wins) + int(f1.read)))
</code></pre>
<p>This, however, raises the following:</p>
<pre><code>TypeError: int() argument must be a string, a bytes-like object or a number, 
not 'builtin_function_or_method'
</code></pre>
<p>How can I take that <em>x</em> and add another number to it, then update the document?</p>
</div>
<div class="post-text" itemprop="text">
<p>don't forget to add the () to the end of a function to call it:</p>
<pre><code>f1.write(str(int(P1wins) + int(f1.read())))  # not f1.read
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this sort of thing is difficult to do safely, one tends to end up with code that does:</p>
<pre><code>from os import replace

def updateRecords(value, filename="player1records.txt"):
  try:
    with open(filename) as fd:
      prev = int(fd.read())
  except (FileNotFoundError, ValueError):
    prev = 0

  changed = prev + value

  # write to a temp file in case of failure while doing this
  tmpname = filename + '~'
  with open(tmpname, 'w') as fd:
    fd.write(str(changed))

  # perform atomic rename so we don't end up with a half written file
  replace(tmpname, filename)
</code></pre>
<p>all of this fiddling is why people tend to end up hiding this complexity behind a relational database.  Python includes a relatively nice <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer"><code>SQLite</code></a> interface.  if everything was set up, you'd be able to do:</p>
<pre><code>  with dbcon:
    dbcon.execute(
      "UPDATE player SET wins=wins + ? WHERE player_id = ?",
      (P1wins, 1))
</code></pre>
<p>and have the SQLite library take care of platform specific fiddly bitsâ€¦</p>
</div>
<span class="comment-copy">What's the type of <code>f1.read</code>?</span>
<span class="comment-copy">typo: change <code>f1.read</code> to <code>f1.read()</code></span>
<span class="comment-copy">can you try out separately both the conversion to debug which one is causing the issue?. This is for sure will throw an error <code>f1.read</code> as read is a function and that cannot be converted to an <code>int</code> while <code>f1.read()</code> might if it is capturing a valid number</span>
<span class="comment-copy">Now I get this error:  ValueError: invalid literal for int() with base 10: ''</span>
<span class="comment-copy">@RyanCrank please tell me what is currently in player1records.txt in comments. it's possibly not a number, or the file is empty.</span>
<span class="comment-copy">why not encapsulate in a <code>try except</code> block then?</span>
<span class="comment-copy">@mad_ yes, you're right :). if the error reason is because the file is empty, a try-except is needed for the first run. I'm waiting for Ryan's response. if reason is empty file, I would edit the answer and add the missing exception handling. thanks</span>
<span class="comment-copy">The file has the number 0 in it.</span>
