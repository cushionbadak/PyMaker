<div class="post-text" itemprop="text">
<p>I have been thinking to do a sleep function where it sleeps until a certain date is called. My idea was based of date such as : 2019-01-20 12:00:00. </p>
<p>I haven't really figured out how to start to solve this problem. My idea was something similar such as </p>
<pre><code>if there is a date given:
   time.sleep(until the date and time)
</code></pre>
<p>So the question is how can I possibly be able to sleep until a certain time given in a value of 2019-01-20 12:00:00?</p>
</div>
<div class="post-text" itemprop="text">
<h1>Easy, calculate how long it is, and sleep the time.</h1>
<p>You can calculate how long it takes until your wakeup time is reached and sleep for the delta time.</p>
<p>Python can calculate with time intervals. If you subtract one timestamp from another, then you get a <code>datetime.timedelta</code>:</p>
<pre><code>import datetime
import time

target = datetime.datetime(2019,1,20,12,0,0)

now = datetime.datetime.now()
delta = target - now
if delta &gt; datetime.timedelta(0):
    print('will sleep: %s' % delta)
    time.sleep(delta.total_seconds())
    print('just woke up')
</code></pre>
<p>of course, you can put that in a function:</p>
<pre><code>import datetime
import time

target = datetime.datetime(2019,1,20,12,0,0)


def sleep_until(target):
    now = datetime.datetime.now()
    delta = target - now

    if delta &gt; datetime.timedelta(0):
        time.sleep(delta.total_seconds())
        return True


sleep_until(target)
</code></pre>
<p>You can check the return value: only if it slept, it returns True.</p>
<p>BTW: it's OK, to use a date in the past as target. This will generate a negative number of seconds. Sleeping a negative value will just not sleep.</p>
<p>if your time is a string, use this:</p>
<pre><code>target = datetime.datetime.strptime('20.1.2019 20:00:00', '%d.%m.%Y %H:%M:%s')
</code></pre>
<p>or</p>
<pre><code>target = datetime.datetime.strptime('2019-1-20 20:00:00', '%Y-%m-%d %H:%M:%s')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <code>while</code> loop.</p>
<pre><code>import datetime
_theday="01/01/2019"
while datetime.today() != _theday:
    some stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you mean something like this:</p>
<pre><code>from time import sleep
from datetime import datetime

x = datetime.datetime.strptime('2019-01-20 12:00:00', '%Y-%m-%d %H:%M:%S')
y = datetime.now()

sleep((max(x,y) - min(x,y)).seconds)
</code></pre>
</div>
<span class="comment-copy"><i>Hint:</i> <code>time.sleep()</code> expects seconds. Look at <code>time.strptime()</code> to convert a string to seconds since 1970-01-01 00:00.</span>
<span class="comment-copy">If you want to do this, because some code should run at that time, look at the Python standard library, it comes with a scheduler! <a href="https://docs.python.org/3/library/sched.html" rel="nofollow noreferrer">docs.python.org/3/library/sched.html</a></span>
<span class="comment-copy">Do you mean by calculate how many seconds it is from now until the date that is given? I could do that but I thought maybe there is a better way where you just give a function a date and hours which automatically will sleep until then :) ?</span>
<span class="comment-copy">I added the code - does that answer your question?</span>
<span class="comment-copy">Oh right! It work as I wish! The only little certain I have is that I would like to enter <code>2019-01-20 12:00:00</code> inside the <code>datetime.datetime</code> which I believe wont work since its a string and not a datetime object. Do you maybe think there is a way without entering manually the date as you did with <code>2019,1,20,12,0,0</code> I would understand if you don't have the time for it of course but either way! This was the answer that actually worked. It would be lovely if I could just paste in <code>2019-01-20 12:00:00</code> inside the datetime</span>
<span class="comment-copy">There it is! the <code>target = datetime.datetime.strptime('2019-1-20 20:00:00', '%Y-%m-%d %H:%M:%s')</code> was the solution til what I wanted! I really appreciate it and I thank you!! :) I have now listed this as answer!</span>
<span class="comment-copy">This is a form of <a href="https://en.wikipedia.org/wiki/Busy_waiting" rel="nofollow noreferrer">busy waiting</a> and is terribly inefficient.  I don't recommend this approach.  Something that involves making the thread sleep is far better, especially if the time to wait is long.</span>
<span class="comment-copy">I guess something like that yes. I assume it should be x-y since you will get negative if you do time now - some date? But yeah. and where x would be = 2019-01-20 12:00:00</span>
<span class="comment-copy">okay, edited for some more generality</span>
<span class="comment-copy">Oh, Thats strange. I tried this using <code>x = 2019-01-20 12:00:00</code> and I am getting `    print(((max(x,y) - min(x,y)).seconds))  ----- TypeError: '&gt;' not supported between instances of 'datetime.datetime' and 'str'`</span>
<span class="comment-copy">x must be a datetime object not a string</span>
