<div class="post-text" itemprop="text">
<p>I've created a function that takes in a file with dynamic SQL (and parameters) then returns the end SQL result. It seems to be adding extra strings because my unit test is failing and it shows extra strings.</p>
<p><strong>My function:</strong></p>
<pre><code>def file_to_sql(filename, kwargs=None):
    """Read file and return SQL statement.

    Parameters
    ----------
    filename: str
        Name of the file to read.
    kwargs : dict
        Keyword arguments to be passed into your SQL statement.
    """

    python_dir = Path('logic/extract/python3')
    python_file_path = python_dir / '{}'.format(filename)
    sql = python_file_path.read_text().format(**kwargs)

return sql
</code></pre>
<p><strong>My unit test:</strong></p>
<pre><code>def test_python_file_with_kwargs_to_sql():
    sql = file_to_sql(filename="select_all_from_{table}.py", kwargs={
        'table': 'sandbox.test_table'
        })

    assert sql == "SELECT * FROM sandbox.test_table;"
</code></pre>
<p><strong>select_all_from_{table}.py:</strong></p>
<pre><code>"SELECT * FROM {table};"
</code></pre>
<p><strong>Unit test failure message:</strong></p>
<pre><code>================================== FAILURES ===================================
_____________________ test_python_file_with_kwargs_to_sql _____________________

    def test_python_file_with_kwargs_to_sql():
        sql = file_to_sql(filename="select_all_from_{table}.py", kwargs={
            'table': 'sandbox.test_table'
            })

&gt;       assert sql == "SELECT * FROM sandbox.test_table;"
E       assert '"SELECT * FR....test_table;"' == 'select * from...x.test_table;'
E         - "SELECT * FROM sandbox.test_table;"
E         + SELECT * FROM sandbox.test_table;

tests\unit_tests\transform\test_preprocess.py:19: AssertionError
================ 1 failed, 2 passed, 4 skipped in 1.40 seconds ================
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are two reasons your unit test is failing:</p>
<ol>
<li><p>Your <code>sql</code> string is in mixed cases ("SELECT" and "FROM" are upper cases) whereas your comparison string is in all lower cases.</p></li>
<li><p>The text within <code>select_all_from_{table}.py</code> are in double quotes but your comparison string doesn't have the double quotes.</p></li>
</ol>
<p>Since <code>read_text()</code> reads the file content as <code>str</code> you don't need the double quotes.  Remove the double quotes from your file and for good practice, do a case insensitive test:</p>
<pre><code>sql.lower() == 'select * from sandbox.test_table'.lower()
</code></pre>
<p>Or just <code>sql.lower() == 'select * from sandbox.test_table'</code> will suffice in this particular case.</p>
<p>For unit tests it is best you be vigilant about your input and output and make sure your tests are exact.</p>
</div>
<span class="comment-copy">Well for one, your text cases are not matching so <code>==</code> will never evaluate to <code>True</code>... do a case insensitive comparison like <code>sql.lower() == 'select * from sandbox.test_table'</code>.</span>
<span class="comment-copy">Thanks @Idlehands for pointing that out. I've fixed that and confirmed I get the same error.</span>
<span class="comment-copy">See my answer.  You're also missing the double quotes.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text" rel="nofollow noreferrer">Path.read_text()</a> reads the file contents as a string. There is no need to enclose the contents in quotes.</span>
<span class="comment-copy">@WillKeeling Aha! thank you that was the answer I was looking for.</span>
<span class="comment-copy">That's the part I don't understand. Why are the double quotes missing during the assert but not missing when I read it from a file?</span>
<span class="comment-copy">Check your file.  Are you sure there's no double quotes in your actual file itself? It looks to me your text file was already containing exactly <code>"SELECT * FROM {table};"</code> including the double quotes themselves.</span>
<span class="comment-copy">Yes I didn't realize that read_text() read the file in as a string and that I didn't need the strings inside the file. If you update your answer I would be glad to mark it correct.</span>
<span class="comment-copy">I missed that you had already included the content of the file in your question.  I have updated the answer to address the concerns.  Thanks for being helpful to help us help you (you might be surprised but it's not always the case).</span>
