<div class="post-text" itemprop="text">
<p>I am trying to apply logging to Jupyter Notebook's <code>display(df)</code> functionality. How do I edit the last line of my code so that the dataframe is only displayed if logging INFO is active? Currently it's shown whether the logging is active or inactive.</p>
<pre><code>import pandas as pd

logging.basicConfig(level=logging.INFO, format=' %(asctime)s - %(levelname)s - %(message)s')

filename = 'test.csv'
df=pd.read_csv(filename, index_col=None, encoding='utf-8')

logging.info(display(df))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Currently it's shown whether the logging is active or inactive.</p>
</blockquote>
<p>I guess you are saying that when you change the argument <code>level</code> of <code>logging.basicConfig</code>, the result doesn't change along with it. That happens to me, too. After checking <a href="https://docs.python.org/3/library/logging.html" rel="nofollow noreferrer">logging - Doc</a> and <a href="https://stackoverflow.com/questions/30861524/logging-basicconfig-not-creating-log-file-when-i-run-in-pycharm">Logging basicConfig not creating log file when i run in pycharm?</a>, I am able to come out a solution:</p>
<pre><code>for handler in logging.root.handlers[:]:
    logging.root.removeHandler(handler)

logging.basicConfig(format=' %(asctime)s - %(levelname)s - %(message)s')
df = pd.DataFrame({'a':[1,2,3], 'b':[4,5,6], 'c':[7,8,9]})

logger = logging.getLogger()
logger.setLevel(logging.DEBUG)
logger.debug("\n"+str(df))
logger.info("\n"+str(df))
logger.warning("\n"+str(df))
logger.error("\n"+str(df))
logger.critical("\n"+str(df))
</code></pre>
<p>You can play with <code>logger.setLevel(logging.DEBUG)</code> to see if it works.</p>
<p>And since <code>display(df)</code> would be called anyway just like @AChampion says, I use <code>"\n"+str(df)</code> to replace <code>display(df)</code>.</p>
<p>Output:</p>
<pre><code> 2019-01-18 14:20:47,710 - DEBUG - 
   a  b  c
0  1  4  7
1  2  5  8
2  3  6  9
 2019-01-18 14:20:47,715 - INFO - 
   a  b  c
0  1  4  7
1  2  5  8
2  3  6  9
 2019-01-18 14:20:47,720 - WARNING - 
   a  b  c
0  1  4  7
1  2  5  8
2  3  6  9
 2019-01-18 14:20:47,724 - ERROR - 
   a  b  c
0  1  4  7
1  2  5  8
2  3  6  9
 2019-01-18 14:20:47,728 - CRITICAL - 
   a  b  c
0  1  4  7
1  2  5  8
2  3  6  9
</code></pre>
</div>
<span class="comment-copy"><code>display(df)</code> is evaluated (and rendered to the notebook) before it is sent to <code>logging.info()</code> - it is not lazy evaluated, so this approach will not work. Equivalent to <code>logging.info(print(df))</code> - <code>print(df)</code> will always output.</span>
<span class="comment-copy">Thanks. I can get your above code to work, however I'm wanting to use display(df) as it outputs a formatted table.</span>
<span class="comment-copy">@Deskjokey I've added the result above, and I think it looks just like the result of <code>display(df)</code>.</span>
