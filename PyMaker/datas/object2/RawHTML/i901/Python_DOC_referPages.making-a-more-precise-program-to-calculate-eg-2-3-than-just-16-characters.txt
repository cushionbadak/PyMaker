<div class="post-text" itemprop="text">
<p>Here is my code:</p>
<pre><code>def start():

    #main input variable to get a sign to do
    calculator = input('What would you like to calculate? (x, /, +, -): ')
    #gets 2 #'s to multiply, add, subtract, or divide 
    if (calculator) == ('+'):
        add = input('what is the frist number would you like to add? ')
        addi = input('what is the second number would you like to add? ')
    elif (calculator) ==('-'):
        sub = input('what is the first number would you like to subtract? ')
        subt = input('what is the second number you would like to subtract? ')
    elif (calculator) == ('/'):
        div = input('what is the first number would you like to divide? ')
        divi = input('what is the second number would you like to divide? ')
    elif (calculator) == ('x'):
        mult = input('what is the first number would you like to multiply? ')
        multi = input('what is the second number would you like to multiply? ')

    #failsafe if done incorrect
    elif (calculator) != ('x', '/', '-', '+'):
        print('try again')
        return


    #adds 2 inputted #'s
    if calculator == '+' :
        sumAdd = float (add) + float (addi)
        print(sumAdd)
    #multiplies the 2 inputted #'s
    elif calculator == 'x' :
        sumMul =  float (mult) * float (multi)
        print(sumMul)
    #divides the 2 inputted #'s
    elif calculator == '/' :
        sumDiv = float (div) / float (divi)
        print(sumDiv)
    #subtracting the 2 inputted #'s
    elif calculator == '-' :
        sumSub = float (sub) - float (subt)
        print(sumSub)

    #returns to top of code to do another setup

    return

start()
</code></pre>
<p>it is simple and i get it. Could of returned numbers/integers but I did this by scratch and I am happy with it</p>
<p>Just wondering how I can get more than 16 decimals without doing a lot more code. Also seeing if there is a better value than fro example: (float) or (int) to do the job. If not its all good
Open to answers if you have any
Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Try the <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer"><code>decimal</code></a> module:</p>
<pre><code>from decimal import Decimal, getcontext

# set desired precision, 30 for example
getcontext().prec = 30

# normal
print(1 / 7)
# 0.14285714285714285

# with Decimal
print(Decimal(1) / Decimal(7))
# 0.142857142857142857142857142857
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>EDIT: comment is correct, <code>format()</code> is not precise.</p>
<p>You could use the <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer">decimal</a> module.</p>
<pre><code>from decimal import *
getcontext().prec = 6 #set the number of decimals you prefer
Decimal(1) / Decimal(7)
&gt;&gt;&gt; Decimal('0.142857')
getcontext().prec = 28
Decimal(1) / Decimal(7)
&gt;&gt;&gt; Decimal('0.1428571428571428571428571429')
</code></pre>
</div>
<span class="comment-copy">What exactly is your desired result? Can you give us a sample input and output? Also, return doesn;t work like you think it does, return returns the string, integer, value, that is next to it, it doesn't return to the top in code. You can you a while loop for that.</span>
<span class="comment-copy">BTW, <code>elif (calculator) != ('x', '/', '-', '+')</code> doesn't do what you think it does.</span>
<span class="comment-copy">@usr2564301 thanks... updated ...</span>
