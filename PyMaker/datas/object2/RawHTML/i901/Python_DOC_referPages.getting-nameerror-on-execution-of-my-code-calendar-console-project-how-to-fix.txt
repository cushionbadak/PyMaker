<div class="post-text" itemprop="text">
<p>I want to code a calendar with two lists in the first are the dates and in the second are the events. I want that you have to input a date if its in the calendar list I want my code to search where it is in the list. Then my code should search what is in the events list at the same location and print the Event.
Thanks for every anser.</p>
<p>p.s. I code with python since  a few weeks so I am still a noob </p>
<pre><code>calendar = ['01.02.2019', '02.02.2019']
termine = ['15:20 playing football', '17:30 playing basketball']


date = str(input('Date: '))
if (date in calendar):           
    print ('found');                                                   
        esindices = [i for i, x in enumerate(calendar) if x == date] 
        print (esindices)
        print(events[int(esindices)])
</code></pre>
<p>Date: 01.02.2019
found
[0]</p>
<blockquote>
<pre><code>---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
&lt;ipython-input-17-00e8535c4c6c&gt; in &lt;module&gt;
      8     esindices = [i for i, x in enumerate(calendar) if x == date]
      9     print (esindices)
---&gt; 10     print(events[int(esindices)])

NameError: name 'events' is not defined
</code></pre>
</blockquote>
<p>This is the Error which comes and I dont know how to solve this. </p>
</div>
<div class="post-text" itemprop="text">
<p>You get a <code>NameError</code> - meaning python does not know something. This is often a <a href="https://stackoverflow.com/questions/291978/short-description-of-the-scoping-rules">scoping problem</a> or sometimes you forgot to <em>create a variable</em> (or have a typo in your variablename). </p>
<p>For debugging you can comment out the line that errors out and <code>print()</code> instead ... to see what might be wrong - you can read some more tips on debugging: <a href="https://stackoverflow.com/questions/4929251/can-you-step-through-python-code-to-help-debug-issues">Can you step through python code to help debug issues?</a></p>
<hr/>
<p><strong>Fault:</strong></p>
<p>Your code has <code>termine</code> - not <code>events</code> and uses a wild mix of german, english and spanish(?).</p>
<p>Fix:</p>
<pre><code>calendar = ['01.02.2019', '02.02.2019']
termine = ['15:20 playing football', '17:30 playing basketball']


date = str(input('Date: '))
if (date in calendar):           
    print ('found')                                         
    esindices = [i for i, x in enumerate(calendar) if x == date] 
    print (esindices)
    for index in esindices:  # this is a list, not a single index - you need to iterate over
        print(termine[index]) # fix naming
</code></pre>
<hr/>
<p>It would be better to use a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> - you can use real <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">dates</a> as key and a <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer">list</a> of things to do as value:</p>
<pre><code>import datetime

# your calender dictionary
cal = {}

# today
dt = datetime.date.today()

# put in some values
for i in range(5):
    cal[dt-datetime.timedelta(days=i)] = [f"look {i} vids"]    

# print default values
print(cal)
</code></pre>
<p>Output:</p>
<pre><code># defaults 
{datetime.date(2019, 1, 19): ['look 0 vids'], 
 datetime.date(2019, 1, 18): ['look 1 vids'], 
 datetime.date(2019, 1, 17): ['look 2 vids'], 
 datetime.date(2019, 1, 16): ['look 3 vids'], 
 datetime.date(2019, 1, 15): ['look 4 vids']}
</code></pre>
<p><strong>Inputting more data:</strong></p>
<pre><code># get input, split input
datestr,action = input("Date:action").split(":")  # 2018-01-25:Read a book

# make datestr into a real date
date = datetime.datetime.strptime(datestr.strip(),"%Y-%m-%d").date()

# create key if needed, append action to list (use a defaultdict - it is faster then this)
# if you feel you hit a speed-problem and want it to be more "optiomal"
cal.setdefault(date,[]).append(action)


# input another date:action
datestr,action = input("Date:action").split(":")  # 2018-01-25:Go out and party

# parse the date again
date = datetime.datetime.strptime(datestr.strip(),"%Y-%m-%d").date()

# this time the key exists and we add to that one
cal.setdefault(date,[]).append(action)

# print all
print(cal)
</code></pre>
<p>Output: </p>
<pre><code># after inputs:
{datetime.date(2019, 1, 19): ['look 0 vids'], 
 datetime.date(2019, 1, 18): ['look 1 vids'], 
 datetime.date(2019, 1, 17): ['look 2 vids'], 
 datetime.date(2019, 1, 16): ['look 3 vids'], 
 datetime.date(2019, 1, 15): ['look 4 vids'], 
 datetime.date(2018, 1, 25): ['Read a book', 'Go out and party']}
</code></pre>
<p>Doku: <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">dict.setdefault</a></p>
</div>
<span class="comment-copy">dont use lists - use a dict. <i>date</i> as key, list of events as <i>value</i></span>
<span class="comment-copy">Thank you very much for your answer :).I have tryied your fix and it works now. But now I read your solution too and I hope I understand it.</span>
