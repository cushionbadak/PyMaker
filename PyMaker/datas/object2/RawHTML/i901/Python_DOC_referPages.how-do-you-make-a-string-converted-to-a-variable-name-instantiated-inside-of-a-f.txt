<div class="post-text" itemprop="text">
<p>Sorry for that confusing title, in my function my parameter is the name I want I want to set as a global variable name. I can do this outside of a function, and I can instantiate a global variable without a string as its name, and I haven't found any other articles with a solution to both problems at the same time.</p>
<pre><code>def myFunc(varName):
    temp = varName
    # global vars()[temp]  &lt;== This line produces the error
    vars()[temp] = 5  # varName becomes a local variable
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals</code></a> function to achieve this:</p>
<pre><code>def set_global_var(name, value):
    globals()[name] = value


if __name__ == '__main__':
    set_global_var('foo', 3)
    print(foo)
</code></pre>
<p>Note that this is most of the case not a good idea. You might want to use a global <code>dict</code> object instead and simply assign new keys to it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>global</code>, like so (notice that <code>some_text</code> is unknown before the call to <code>fun1</code>):</p>
<pre><code>def fun1():
    global some_text
    some_text = "1234"

def fun2():
    print(some_text)

fun1()
fun2()
</code></pre>
<p>This produces <code>1234</code> as one would expect, see <a href="https://ideone.com/hLKerJ" rel="nofollow noreferrer"><strong>a demo on ideone.com</strong></a>.
<hr/>
So, in your case just go for</p>
<pre><code>def myFunc(varName):
    global TEMP
    TEMP = varName
</code></pre>
<p>Question remains: why would you want to do that? Don't clutter your global namespace with variables only a class/function needs.</p>
</div>
<span class="comment-copy">I do not understand what you want to achieve. Can you try to add to the post what your goal is, instead of what you are trying to do?</span>
<span class="comment-copy">Store the values in a dictionary with "variable name" as keys. Then you can replace or add values to it using something like <code>var_dict[varName] = 42</code>.</span>
<span class="comment-copy">I don't see any relation of this answer to the OP. He is passing some variable he wants to "make global" or something.</span>
<span class="comment-copy">@JanChristophTerasa: See the edit, was about to write something.</span>
<span class="comment-copy">Thanks. Maybe you guessed correctly. :-)</span>
