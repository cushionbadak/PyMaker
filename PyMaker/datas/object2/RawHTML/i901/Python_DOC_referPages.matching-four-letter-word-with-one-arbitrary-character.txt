<div class="post-text" itemprop="text">
<p>You are given a string str of lowercase letters. You need to count the number of times the word <code>doge</code> appears in the string. Also, the <code>g</code> in <code>doge</code> can be replaced by any letter from a-z so <code>dope</code> is also valid.</p>
<p>This question appeared on a website I was looking at. Since the site has no option to discuss the problem, I am asking for help here instead:</p>
<pre><code>def doge_count(str):
    count=0
    for i in range (0,len(str)):
        if (i=="d" and i+1=="o" and i+3=="e"):
            count= count+1
    return count
</code></pre>
<p>For Input:</p>
<pre><code>2
dog
dogedopedose
</code></pre>
<p>Your Output is:</p>
<pre><code>0
0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your logic is actually pretty close. The only problem is that <code>i</code> is an integer, so the comparisons <code>i=="d" and i+1=="o" and i+3=="e"</code> will always be false. You would expect to get a match when <code>i==0</code>, but <code>0 !="d"</code>, ever.</p>
<p>The fix is to use <code>i</code> to index into <code>str</code>, as it seems you intended:</p>
<pre><code>if str[i:i+2] == "do" and str[i+3] == "e":
</code></pre>
<p>You will also want to loop in a way that doesn't run past the end of the string:</p>
<pre><code>for i in range(len(str) - 3):
</code></pre>
<p>A more robust solution would be to use <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regular expressions</a>. The following pattern matches the strings you want:</p>
<pre><code>do[a-z]e
</code></pre>
<p>You can count occurrences using <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a>:</p>
<pre><code>count = len(re.findall('do[a-z]e]', str))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Reason behind your code not working is you are checking if an integer is equal to string in this line of code: <code>i=="d"</code>.</p>
<p>This line of code: <code>for i in range (0, len(str))</code> returns integer number from <code>0</code> to <code>length_of_string - 1</code>.</p>
<p>What you need to do is check if the string of <code>i</code>th position is equal to your desired stirng. like: <code>str[i] == "d"</code></p>
<p>This would be the correct version of your code in your logic:</p>
<pre><code>def doge_count(str):
    count = 0
    for i in range(0, len(str)-3):
        if str[i] == "d" and str[i+1] == "o" and str[i+3] == "e":
            count = count+1
    return count


print(doge_count('dog'))
print(doge_count('dogedopedose'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension:</p>
<pre><code>&gt;&gt;&gt; [s[i:i+4] for i in range(len(s)-3) if s[i:i+2]=='do' and s[i+3]=='e']
['doge', 'dope', 'dose']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>test_patterns='do[a-z]e'
phrase = 'this is doze but Doze again dore then dofe'
list_matches = re.findall(test_patterns,phrase.lower())
print('The number of d(any alphabet)ze : {frequency}'.format(frequency=len(list_matches)))
</code></pre>
<p><strong>FindAll matches of the pattern int he list then get the count of the list and you will get the number of doge or dofe or any such</strong> </p>
</div>
<span class="comment-copy">you should never ever call your objects after built-ins (<code>str</code> in your snippet)</span>
<span class="comment-copy">I've edited your title to describe your technical problem better. I hope you approve.</span>
<span class="comment-copy">The proper way to thank is to select the answer by clicking on the check mark next to it. I'm glad you found my answer useful.</span>
<span class="comment-copy">It is not working it is saying string index out of range e</span>
<span class="comment-copy">Updated. You need to change the range a bit.</span>
<span class="comment-copy">Thanks sir.......</span>
<span class="comment-copy">Thanks sir.....</span>
<span class="comment-copy">Thank u sir . .</span>
