<div class="post-text" itemprop="text">
<p><br/>
I've been trying to use the zipfile module for Python 3.6 to create a .zip file which contains multiple objects.<br/>
My problem is, I have to manage files from an Odoo database that only allows me to use <code>bytes</code> objects instead of files.<br/></p>
<p>This is my current code:</p>
<pre><code>import zipfile

empty_zip_data = b'PK\x05\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
zip = zipfile.ZipFile(empty_zip_data, 'w')

# files is a list of tuples: [(u'file_name', b'file_data'), ...]
for file in files:
    file_name = file[0]
    file_data = file[1]
    zip.writestr(file_name, file_data)
</code></pre>
<p>Which returns this error:</p>
<pre><code>File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/zipfile.py", line 1658, in writestr
  with self.open(zinfo, mode='w') as dest:
File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/zipfile.py", line 1355, in open
  return self._open_to_write(zinfo, force_zip64=force_zip64)
File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/zipfile.py", line 1468, in _open_to_write
  self.fp.write(zinfo.FileHeader(zip64))
File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/zipfile.py", line 723, in write
  n = self.fp.write(data)
AttributeError: 'bytes' object has no attribute 'write'
</code></pre>
<p>How am I supposed to do it? I followed the <a href="https://docs.python.org/3.6/library/zipfile.html#zipfile.ZipFile.writestr" rel="nofollow noreferrer">ZipFile.writestr() docs</a>, but that got me nowhere...<br/>
<br/>
EDIT: using <code>file_data = file[1].decode('utf-8')</code> as second parameter is not useful either, I get the same error.</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in my comment, the issue is with this line:</p>
<pre><code>empty_zip_data = b'PK\x05\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
zip = zipfile.ZipFile(empty_zip_data, 'w')
</code></pre>
<p>You're trying to pass a <code>byte</code> object into the <code>ZipFile()</code> method, but like <code>open()</code> it is expecting a path-like object.</p>
<p>In your case, you might want to utilize the <code>tempfile</code> module (in this particular example we'll use <a href="https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile" rel="nofollow noreferrer"><code>SpooledTemporaryFile</code></a> from this <a href="https://stackoverflow.com/questions/51508179/how-to-construct-an-in-memory-virtual-file-system-and-then-write-this-structure">relevant question</a>:</p>
<pre><code>import tempfile
import zipfile

# Create a virtual temp file
with tempfile.SpooledTemporaryFile() as tp:

    # pass the temp file for zip File to open
    with zipfile.ZipFile(tp, 'w') as zip:
        files = [(u'file_name', b'file_data'), (u'file_name2', b'file_data2'),]
        for file in files:
            file_name = file[0]
            file_data = file[1]
            zip.writestr(file_name, file_data)

    # Reset the cursor back to beginning of the temp file
    tp.seek(0)
    zipped_bytes = tp.read()

zipped_bytes
# b'PK\x03\x04\x14\x00\x00\x00\x00\x00\xa8U ... \x00\x00'
</code></pre>
<p>Note the use of context managers to ensure all your file objects are closed properly after being loaded.</p>
<p>This gives you <code>zipped_bytes</code> which is the bytes you want to pass back to Odoo.  You can also test the <code>zipped_bytes</code> by writing it to a physical file to see what it looks like first:</p>
<pre><code>with open('test.zip', 'wb') as zf:
    zf.write(zipped_bytes)
</code></pre>
<p>If you are handling file size that are considerably large, make sure to pay attention and make use of <a href="https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile" rel="nofollow noreferrer"><code>max_size</code> argument in the documentation.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to handle all of this in memory without a temporary file then use <code>io.BytesIO</code> as the file object for <code>ZipFile</code>:</p>
<pre><code>import io
from zipfile import ZIP_DEFLATED, ZipFile

file = io.BytesIO()
with ZipFile(file, 'w', ZIP_DEFLATED) as zip_file:
    for name, content in [
        ('file.dat', b'data'), ('another_file.dat', b'more data')
    ]:
        zip_file.writestr(name, content)

zip_data = file.getvalue()
print(zip_data)
</code></pre>
<p>You may also want to set the compression algorithm as shown because otherwise the default (no compression!) is used.</p>
</div>
<span class="comment-copy">The problem is not with the <code>ZipFile.writestr()</code> line, it's with the <code>zipfile.ZipFile(empty_zip_data, 'w')</code> line.  It's because <code>ZipFile</code> expected to <code>write</code> to a file determined by the <code>path-like</code> object <code>empty_zip_data</code>, but instead it is a <code>byte</code> object which doesn't have the <code>write</code> method.  One inelegant way to do this is to temporarily write the zip file to a physical local first, and then read it back in as <code>bytes</code> to be passed back to your Odoo database.</span>
