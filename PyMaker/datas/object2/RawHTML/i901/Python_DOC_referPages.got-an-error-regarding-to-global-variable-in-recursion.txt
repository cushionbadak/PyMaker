<div class="post-text" itemprop="text">
<p>I'm trying to use recursion to solve a question, but I got a confusing error. If anyone interested, it is a question from leetcode: <a href="https://leetcode.com/problems/plus-one/" rel="nofollow noreferrer">https://leetcode.com/problems/plus-one/</a></p>
<p>I could not figure out the mistake, could anyone help me with this? Thank you very much!</p>
<p>Here is my code below:</p>
<pre><code>class Solution(object):
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        i = -1
        head = -len(digits)
        def add_and_carry(x):
            global i
            if x + 1 == 10:
                if i == head:
                    digits.insert(0, 1)
                digists[i] = 0
                i -= 1
                add_and_carry(digits[i])
            else:
                digits[i] += 1

        add_and_carry(digits[i])
        return digits
</code></pre>
<p>Despite the fact that I have defined the variable i, as well as made it global with the “global” inside the body of the inner function, I still get an error of:</p>
<pre><code>NameError: global name 'i' is not defined
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure why you're using so much nested structure, but you need <a href="https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement" rel="nofollow noreferrer"><code>nonlocal</code></a> instead of <code>global</code> — in case if your python version allows it.</p>
</div>
<span class="comment-copy">It seems that if the inner function goes to the else statement which does not change the value of variable i, making it global will cause this error... What can I do to make the function working without having to pass the outer scope variable in?</span>
<span class="comment-copy">or better: don't use a nested function at all and pass all required params explicitely.</span>
<span class="comment-copy">Totally agreed, but I'm giving solution for accessing outer scope, not "how to solve it". Class itself is redundant, but ¯_(ツ)_/¯</span>
<span class="comment-copy">sorry for not having made clear that my comment was for the OP, not about your answer :oops:</span>
