<div class="post-text" itemprop="text">
<p>I'm trying to create a pattern in python. I need to have all the pages of a set of links (called "subjects_links"): ex. I've www.url/animal (with www.url/animal/page/1 ecc.) and www.url/plants (with www.url/plants/page/1 ecc).
I've done this:</p>
<pre><code>n = 1
next_page = subjects_links+'page/%d' % n+=1
</code></pre>
<p>but gives me an "invalid syntax" error. Is it not possible to use %d and += together?</p>
<h2>Edit</h2>
<p>I've found a solution using while and parsing with beautifulsoup:</p>
<pre><code>while True:
    next_page = soup_cat.find("a", class_="nextpostslink")
    next_page_link = next_page.get('href')
    print(next_page_link)
    cat_list.append(next_page_link)
    soup_cat = bs4(requests.get(next_page_link).text,'lxml')
</code></pre>
<p>This changes totally the way of doing it, but at least it works.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since python 3.8, you'll be able to use the assignment expression. n += 1 is am assignment statement. </p>
<pre><code>next_page = subjects_links+'page/%d' % (n := n+1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>n += 1</code>  is an <a href="https://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements" rel="nofollow noreferrer">augmented-assignment-statement</a> and you are trying to use it as an <a href="https://docs.python.org/3/reference/expressions.html" rel="nofollow noreferrer">expression</a>.</p>
<p>The following does work:</p>
<pre><code>n = 0

n += 1
print("page/%d" % n)
</code></pre>
<p><em>Note: I've modified the example so it can run on it's own</em></p>
</div>
<div class="post-text" itemprop="text">
<p>You should increase n separately as you are setting the value for n by doing <pre>n+=1</pre> which it is basically <pre>n = n +1</pre>. You could use n++ in other languages but I'm not sure that Python supports it.</p>
</div>
<span class="comment-copy"><code>n+=1</code> is not a value, so you can't use it as a substitution value. You can use <code>(n+1)</code>, or you can incremente <code>n</code> separately.</span>
<span class="comment-copy">n+=1 is assignment operation, it's not JavaScript, in Python you cannot use assignment as a statement that returns value. Do n+=1 on line before or after your operation.</span>
<span class="comment-copy">Or, if you need to do this a lot, you could roll your own wrapper class providing an <code>incrementAndGet</code> method. Also, where does Â´n` come from? This seems to be some kind of loop, maybe over some collection of results, so maybe you can just use <code>enumerate</code>?</span>
<span class="comment-copy">It would be way easier and readable to write n+=1 and use just n.</span>
<span class="comment-copy">So I need to upgrade from 3.7 to 3.8?</span>
<span class="comment-copy">@asynts You're correct.</span>
<span class="comment-copy">@Lara You don't have to. AFAIK 3.8 is in development. You can use the other solutions, although this one is slightly more convenient.</span>
<span class="comment-copy">This just prints me the first page, not the others</span>
<span class="comment-copy">I've modified the example so it can run on it's own (your code snippet doesn't provide <code>subjects_links</code>). You'll need to adopt it.</span>
<span class="comment-copy">Even if I make:<code>n = 0 n += 1 print('page/%d' % n)</code> it doesn't takes more pages than one</span>
<span class="comment-copy">Unfortunately not</span>
