<div class="post-text" itemprop="text">
<p>I have this little script that changes characters from the beginning of filenames in the directory script is ran in. I would like to let the user input the directory to change files in. Im not sure how to implement that.</p>
<pre><code>#!/usr/bin/env python3

import os

place = input("Enter the directory the files are in ")
drop  = input("Enter text to remove from filename ")
add   = input("Enter text to add to filename ")

for filename in os.listdir("."):
    if filename.startswith(drop):
        os.rename(filename, add+filename[len(drop):])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>os.listdir(path='.') Return a list containing the names of the entries
  in the directory given by path.</p>
</blockquote>
<p>Hence just change <code>"."</code> to a string containing the path of the directory.</p>
<p>For example, from command-line, you can do:</p>
<pre><code>mypath = input("Type path dir: ")
for filename in os.listdir(mypath):
    ...
</code></pre>
<p><code>mypath</code> can be both absolute or relative path.</p>
<p><strong>EDIT</strong></p>
<p>I forgot to say: as mentioned also <a href="https://stackoverflow.com/questions/2491222/how-to-rename-a-file-using-python">here</a> <code>os.rename()</code> needs the full path of the file if they are in a different directory.</p>
<p>Something like this should work, if <code>mypath</code> is the full path:</p>
<pre><code>os.rename(os.path.join(mypath, filename), os.path.join(mypath, add, filename[len(drop):]))
</code></pre>
<p>If not, you should build the full path.</p>
</div>
<span class="comment-copy">Use <code>os.listdir(place)</code> â€” <code>os.listdir(".")</code> means the current-working-directory.</span>
<span class="comment-copy">I get errors. I listed on another comment</span>
<span class="comment-copy"><code>os.listdir(place)</code> gives you just the filenames. To do anything with one of them you'll need to use something like <code>filepath = os.path.join(place, filename)</code>.</span>
<span class="comment-copy">If you instead used <code>for filename in glob.glob(os.path.join(place, '*.*'):</code>, each <code>filename</code> would be a fullpath.</span>
<span class="comment-copy">I tried that and I get this error. Its a subfolder Im trying this on I tried a fill and partial path to no avail.                                                                                                                        Traceback (most recent call last):   File "./renamer.py", line 11, in &lt;module&gt;     os.rename(filename, add+filename[len(drop):]) FileNotFoundError: [Errno 2] No such file or directory: 'foo.bar' -&gt; 'boo.bar'</span>
