<div class="post-text" itemprop="text">
<p>I have example CSV file:</p>
<pre><code>zipcode,firstname,lastname,email
12345,mike,alson,mike@m.com
54321,joe,don,joe@j.com
</code></pre>
<p>Need to create output file in this format:</p>
<pre><code>SET 12345 '{"firstname": "mike", "lastname": "alson", "email": "mike@m.com"}'
SET 54321 '{"firstname": "joe", "lastname": "don", "email": "joe@j.com"}'
</code></pre>
<p>How to achieve this?</p>
<p>I started with something like:</p>
<pre><code>#!/usr/bin/python
import csv, json
csvreader = csv.reader(open('data.csv', 'rb'), delimiter=',', quotechar='"')
data = []
for row in csvreader:
    r = []
    for field in row:
        if field == '': field = None
        else: field = unicode(field, 'ISO-8859-1')
        r.append(field)
    data.append(r)
jsonStruct = {
    'header': data[0],
    'data': data[1:]
}
open('data.json', 'wb').write(json.dumps(jsonStruct))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Read your rows into a <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>csv.DictReader</code></a>, then write the zip code separately with a serialized JSON formatted string from <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>json.dumps()</code></a> of the remaining elements:</p>
<pre><code>from csv import DictReader
from json import dumps

with open("rows.csv") as csv_file, open("output.txt", mode="w") as out_file:
    csv_reader = DictReader(csv_file)
    for row in csv_reader:
        zipcode = row["zipcode"]
        rest = {k: v for k, v in row.items() if k != "zipcode"}
        out_file.write("SET %s '%s'\n" % (zipcode, dumps(rest)))
</code></pre>
<p><strong>output.txt:</strong></p>
<pre><code>SET 12345 '{"firstname": "mike", "lastname": "alson", "email": "mike@m.com"}'
SET 54321 '{"firstname": "joe", "lastname": "don", "email": "joe@j.com"}'
</code></pre>
<p><strong>Note:</strong> As of Python3.6, <code>DictReader</code> returns rows of <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>collections.OrderedDict</code></a>, which will maintain order when writing to the file. For lower versions, you will need to handle this manually. </p>
</div>
<span class="comment-copy">Wow.. So elegant.. Was not aware of DictReader but seems perfect use here.. Thanks!</span>
