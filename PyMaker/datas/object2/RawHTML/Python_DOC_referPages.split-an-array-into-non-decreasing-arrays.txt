<div class="post-text" itemprop="text">
<p>I'm trying to split a given array into the non-decreasing arrays without for loops or using <code>np.diff</code>. I wonder if that could be done with <code>np.where</code> but can't imagine how to make it without looping.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a way using numpy:</p>
<pre><code>def split_increasing(x):
    # Check if following value is greater
    ix = np.greater(a[:-1], a[1:])
    # Use the indices where the above is True
    # to split the array
    return np.split(a, np.flatnonzero(ix)+1)
</code></pre>
<hr/>
<p>Lets check with some random array:</p>
<pre><code>a = np.random.randint(1,20,10)
# array([12, 15,  3,  7, 18, 18,  9, 16, 15, 19])
split_increasing(a)
</code></pre>
<p><b> Output </b></p>
<pre><code>[array([12, 15]), array([ 3,  7, 18, 18]), array([ 9, 16]), array([15, 19])]
</code></pre>
</div>
<span class="comment-copy">I think you should read this: <a href="https://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a></span>
<span class="comment-copy">I’m having trouble understanding exactly what your question is.  Can you define “non-decreasing arrays”—Is it just an array where the values don’t appear in exactly decreasing fashion?  Finally When you use the words cycles are you talking about for or while loops?</span>
<span class="comment-copy">Why are you considering Numpy?</span>
