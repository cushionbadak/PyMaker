<div class="post-text" itemprop="text">
<p>Currently, I am taking some computer science lessons online.  I have been issued the task of writing a program that, upon a valid input, will print the next letter in the alphabet.  Here is my code:</p>
<pre><code>char = input()
ordchar = ord(char)
nextletter = ordchar + 1
nextletter = chr(nextletter)

if nextletter == ("["):
    print("A")

if nextletter == ("{"):
    print("a")

if nextletter!=("[","{"):
    print(nextletter)
</code></pre>
<p>Now, I do see the problem with the code, though I don't know how to rectify it.  Basically, on the second to last line of code, I want it to essentially say "if nextletter does not equal { or [ print nextletter". </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>if nextletter not in ["[", "{"]:
    print(nextletter)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You do not need to test for those characters <em>at all</em>. In the code before it you make sure that <code>nextletter</code> is <em>never</em> going to be either <code>[</code> or <code>{</code>, if you just assign a different letter to <code>nextletter</code> there:</p>
<pre><code>if nextletter == "[":
    nextletter = "A"
elif nextletter == "{":
    nextletter = 'a'
</code></pre>
<p>If you still need to make such a test, use the <a href="http://docs.python.org/3/reference/expressions.html#not-in" rel="nofollow"><code>not in</code> operator</a>:</p>
<pre><code>if nextletter not in '[{':
</code></pre>
<p><code>not in</code> returns <code>True</code> if the left-hand operand is not present in the sequence on the right. I used a string with two characters in my example, which counts as a sequence:</p>
<pre><code>&gt;&gt;&gt; '[' in '[{'
True
&gt;&gt;&gt; '0' in '[{':
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>not in</code> membership operator:</p>
<pre><code>if nextletter not in ("[","{"):
    print(nextletter)
</code></pre>
<p>Also note that, you can avoid the third test if you used <code>if-elif</code> construct rather than individual <code>if's</code>. That way, you can just put the 3rd part in an <code>else</code> block.</p>
</div>
<div class="post-text" itemprop="text">
<p>While the other answers are correct, the right way of doing what you want is using <code>elif</code>and <code>else</code>:</p>
<pre><code>if nextletter == ("[") :
    print("A")
elif nextletter == ("{") :
    print("a")
else :
    print(nextletter)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you are asking if nextletter is not equal to the tuple of <code>("[","{")</code>. You wanted to ask if it is not equal to either "[" or "{". Therefore, you must ask,
<code>if nextletter != "[" and nextletter != "{"</code>
This will check if it is neither "[" nor "{". Hope this helps</p>
</div>
<span class="comment-copy">downvoter: Please explain how my answer is wrong/different than the other answers? What?</span>
<span class="comment-copy">Thanks for the help.</span>
<span class="comment-copy">@cIph3r: No, Ingbar is using a <i>list</i>, not a list comprehension. There is not much difference between using a tuple and a list here.</span>
<span class="comment-copy">@cIph3r You are correct that generators are faster than list-comprehension when storing the results doesn't matter, but in this case, you are just totally confused, see other responses.</span>
<span class="comment-copy">right.. I've mistaken that one.. sorry</span>
<span class="comment-copy">Wow, that was quick.  Thanks, you were a real help.</span>
<span class="comment-copy">@user2080719.. You're welcome :)</span>
<span class="comment-copy">why is that the right way?</span>
<span class="comment-copy">I was literally two characters away from that in an earlier version of the program, but I forgot to use elif.  Can't blame me, I've only been using Python for 5 days.</span>
<span class="comment-copy">@cIph3r Because you are not doing a redundant check: if you reach the <code>else</code> then <code>nextletter</code> cannot be either <code>[</code> or <code>{</code>.</span>
<span class="comment-copy">ok, but the runtime will be close to unmeasurable faster. Also the code is longer and looks more complex, making the code less readable ;)</span>
<span class="comment-copy">@cIph3r It is not longer, takes the exact same number of lines as the OP's code. It's biggest advantage is not execution speed, but minimizing the chances for errors and maintainability: if tomorrow you decide to check for <code>?</code> instead of <code>[</code>, you only need to edit one line, not two. And if you find using <code>else if</code> statements hurts readability, then you need to read more code.</span>
<span class="comment-copy">And that can be shortened to any one of the answers by <a href="http://stackoverflow.com/a/14922929/1561176">Martijn</a>, <a href="http://stackoverflow.com/a/14922919/1561176">Rohit</a> or <a href="http://stackoverflow.com/a/14922921/1561176">Myself</a></span>
