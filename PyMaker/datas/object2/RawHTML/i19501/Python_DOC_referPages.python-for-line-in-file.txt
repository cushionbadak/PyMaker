<div class="post-text" itemprop="text">
<p>Is there a way to create a loop in Python that reads a file, line by line, and does an action using the line? For example:</p>
<pre><code>for eachLine in '~/file':
    print eachLine
</code></pre>
<p>which would print <code>~/file</code> to the terminal</p>
</div>
<div class="post-text" itemprop="text">
<p>You were so close, all you had to do was <a href="http://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open()</code></a> the file:</p>
<pre><code>with open(os.path.expanduser('~/file')) as inputfile:
    for eachLine in inputfile:
        print eachLine
</code></pre>
<p>By using a <code>with</code> context manager block, the file is automatically closed when you are done with the loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>Solution is at : <a href="http://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow">click</a></p>
<p>I did not write the some codes here, because at link there are many different ways for your question. Have fun.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just need to open the file in your loop:</p>
<pre><code>for eachLine in open(os.path.expanduser('~/file')):
    print eachLine
</code></pre>
<p>On Win7 and OpenSUSE 12.1 (and I'm sure others) I've seen python doesn't like the "~" part of the path, so the <code>os.path.expanduser</code> fixes that.</p>
</div>
<span class="comment-copy">have you tried <code>readline()</code> ?</span>
<span class="comment-copy">Aside: the OP might need to use <code>os.path.expanduser('~/file')</code>.</span>
<span class="comment-copy">It has an extra newline, is there a way to get <code>print()</code> to skip the newline?</span>
<span class="comment-copy">@tkbx: You really, really want to go read the <a href="http://docs.python.org/2/tutorial/" rel="nofollow noreferrer">Python tutorial</a>... In python 2, <code>print</code> is a statement, not a function. You can add a trailing comma to omit the newline and use a space instead: <code>print eachLine,</code>.</span>
<span class="comment-copy">@MartijnPieters I'm using <code>from __future__ import print_function</code></span>
<span class="comment-copy">@MartijnPieters another question yields <code>print('hello world', end='')</code></span>
