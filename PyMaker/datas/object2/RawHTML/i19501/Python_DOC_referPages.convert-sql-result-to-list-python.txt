<div class="post-text" itemprop="text">
<p>im beginner with python.I want to convert sql results to a list.Here's my code:</p>
<pre><code>cursor = connnect_db()

query = "SELECT * FROM `tbl`"

cursor.execute(query)

options = list()

for i,row in enumerate(cursor.fetchall()):
   options.append(row[i])
</code></pre>
<p>There is 6 column in my table but this code doesn't create 6 element-list.Where am i doing wrong? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you have an iterable in Python, to make a list, one can simply call <a href="http://docs.python.org/3/library/functions.html#func-list" rel="noreferrer">the <code>list()</code> built-in</a>:</p>
<pre><code>list(cursor.fetchall())
</code></pre>
<p>Note that an iterable is often just as useful as a list, and potentially more efficient as it can be lazy.</p>
<p>Your original code fails as it doesn't make too much sense. You loop over the rows and enumerate them, so you get <code>(0, first_row), (1, second_row)</code>, etc... - this means you are building up a list of the nth item of each nth row, which isn't what you wanted at all.</p>
<p>This code shows some problems - firstly, <code>list()</code> without any arguments is generally better replaced with an empty list literal (<code>[]</code>), as it's easier to read.</p>
<p>Next, you are trying to loop by index, this is a bad idea in Python. Loop over values, themselves, not indices you then use to get values.</p>
<p>Also note that when you <em>do</em> need to build a list of values like this, a <a href="http://www.youtube.com/watch?v=pShL9DCSIUw" rel="noreferrer">list comprehension</a> is the best way to do it, rather than creating a list, then appending to it.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>cursor = connnect_db()

query = "SELECT * FROM `tbl`"

cursor.execute(query)

result = cursor.fetchall() //result = (1,2,3,) or  result =((1,3),(4,5),)

final_result = [list(i) for i in result]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One needs to only call list( cursor ) as demonstrated below.</p>
<pre><code>import pymysql

# Create the database connection.
# The connection parameters are host, port, user, password, and database.
# These parameters in this code are held in the app.config().
dump_conn = pymysql.connect(
    host=app.config[ 'DUMP_SQLALCHEMY_HOST' ],
    port=int( app.config[ 'DUMP_SQLALCHEMY_PORT' ] ),
    user=vault[ 'data' ][ 'username' ],
    passwd=vault[ 'data' ][ 'password' ],
    db=app.config[ 'DUMP_SQLALCHEMY_DB' ]
)

# Grab the query from a sql_queries helper file.
sql_query = query_transactions_for_csv()

# From the connection get a cursor.
dump_cursor = dump_conn.cursor()

# Handle the cursor.close() with a 'with' statement.
with dump_cursor as cursor:

    # Execute the query.
    cursor.execute( sql_query )

    # Use list( cursor ) to get a Python list.
    rows = list( cursor )
</code></pre>
</div>
<span class="comment-copy">thank's.This is what i am looking for.</span>
<span class="comment-copy">didn't work for me.</span>
<span class="comment-copy">While this code may answer the question, providing additional context regarding why and/or how this code answers the question improves its long-term value.</span>
