<div class="post-text" itemprop="text">
<pre><code>my_list = []
with open(home + "/Documents/stocks/" + filePath , newline='') as f:
    array1 = (line.split(',') for line in f.readlines())
    last_col = [line.split(',')[-1] for line in f]
    for line in array1:          
        my_list.append(line[-1])
</code></pre>
<p>This works but my_list has <code>\n</code> at the end of each line. How can I remove it. After I remove it how do I turn it into an integer list?
I've tried doing something like</p>
<pre><code>list(map(int, my_list))
</code></pre>
<p>but I get an error because of the new lines.</p>
<pre><code>ValueError: invalid literal for int() with base 10: 'Adj Close\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you just want the last column as a list of integers.  Is that correct?  If so:</p>
<pre><code>with open(datafile) as fin:
    last_column = [ int(line.split(',')[-1]) for line in fin ]
</code></pre>
<p>should do the trick...</p>
<p>If you want each row as a list of integers:</p>
<pre><code>with open(datafile) as fin:
    rows = [ [int(x) for x in line.split(',')] for line in fin ]
    #same as
    #rows = [ list(map(int,line.split(','))) for line in fin ] #if you prefer ...
</code></pre>
<p>Note that in python, <code>int</code> will happily convert a string with any whitespace:</p>
<pre><code>&gt;&gt;&gt; print(int('\t\n300\n'))
300
</code></pre>
<p>so the newlines aren't a problem ... (tested using python3.2 and python2.7)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to parse CSV files, you don't want to have to deal with all the fiddly cases like newlines in the last column, spaces around the commas, etc. Just use the <a href="http://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module that comes with Python:</p>
<pre><code>my_list = []
with open(home + "/Documents/stocks/" + filePath) as f:
    for row in csv.reader(f):
        numbers = list(map(int, row))
        my_list.append(line[-1])
</code></pre>
<p>Or, possibly more simply:</p>
<pre><code>with open(home + "/Documents/stocks/" + filePath) as f:
    my_list = [list(map(int, row)) for row in csv.reader(f)]
</code></pre>
<p>Mixing a list comprehension and a <code>map</code> onto one line looks a bit surprising to me, but in this case, I think it looks a little better than the pure comprehension alternative:</p>
<pre><code>with open(home + "/Documents/stocks/" + filePath) as f:
    my_list = [[int(col) for col in row] for row in csv.reader(f)]
</code></pre>
<p>And a lot better than the pure functional alternative:</p>
<pre><code>my_list = list(map(compose(list, partial(map, int)), 
                   csv.reader(iterwith(open(home + "/Documents/stocks/" + filePath)))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your existing code works just fine for what you're trying to do.</p>
<p>To make it self-contained, I moved the file into the program as a <code>StringIO</code>, but otherwise, this is your code, word for word:</p>
<pre><code>import io

f = io.StringIO('''1, 2, 3
4, 5, 6
''')

my_list = []
array1 = (line.split(',') for line in f.readlines())
last_col = [line.split(',')[-1] for line in f]
for line in array1:          
    my_list.append(line[-1])

print(list(map(int, my_list)))
</code></pre>
<p>And here's what it does:</p>
<pre><code>[3, 6]
</code></pre>
<p>Which is exactly what you wanted, right?</p>
<p>So, if it's not working, it's not because of the newlines; it's because of something else. And, since you never told us what the error is, or anything about it beyond "I get an error because of the new lines", nobody can possibly guess what that something else might be. Maybe you've got a <code>3.6</code> in there, and you're getting <code>ValueError: invalid literal for int() with base 10: '3.6'</code>. Maybe you have no file at the specified path, and you're getting a <code>FileNotFoundError</code> error. Maybe you forgot a shebang and you're running your Python 3.x script with a Python 2 interpreter, or with bash. Anything's possible, based on what you've told us.</p>
</div>
<span class="comment-copy">would something like <code>str.rstrip</code>`str.strip` work?</span>
<span class="comment-copy">It looks very much like you're trying to write a CSV-file parser by hand. Don't do that; just use the standard <a href="http://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module.</span>
<span class="comment-copy">Don't just say "I get an error", please show us the error (with the traceback). And make sure that the code you've posted actually generates that error. And give us some (short) sample input that demonstrates the error.</span>
<span class="comment-copy">I'm getting 'list' object has no attribute 'split' error.</span>
<span class="comment-copy">@user2018488 -- I find that hard to believe.  I can't see any way that <code>line</code> would be a <code>list</code> type in my above code...</span>
<span class="comment-copy">@mgilson: In fact, I can't see how his <i>original</i> code could fail in the way he describes, either. I suspect his input is now what it should be, and his error is not actually anything to do with the newlines.</span>
<span class="comment-copy">@abarnert -- Yeah.  OP's original code is a bit annoying to unravel, but basically the problem is that by the time the generator is started for iteration, the file has already been consumed by the list-comprehension and so there's nothing left to iterate over -- I think this would leave <code>my_list</code> completely empty ... scratch that -- After seeing your edit it looks like <code>f.readlines()</code> is run when the generator is created ... <i>sigh</i> I wish python would remove <code>readlines</code> from the file object all together ...</span>
<span class="comment-copy">@mgilson: They did remove <code>readlines</code>, you just need to upgrade to 3.x. (Of course <code>list(f)</code> does the same thing as <code>f.readlines()</code>, and it's still thereâ€¦ but nobody ever thinks that's what they want, except in the rare cases where it really <i>is</i> what they want.)</span>
<span class="comment-copy">My best guess is that the file has a blank line at the end, and the error message we haven't seen is <code>ValueError: invalid literal for int() with base 10: '\n'</code>, but who can say?  Could also be an extra <code>,</code> at the end of a line or something, too, but guessing probably isn't very productive..</span>
