<div class="post-text" itemprop="text">
<p>I'm running a python script manually that fetches data in JSON format.How do I automate this script to run automatically on an hourly basis?</p>
<p>I'm working on Windows7.Can I use tools like Task scheduler?If I can use it,what do I need to put in the batch file?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Can I use tools like Task scheduler?</p>
</blockquote>
<p>Yes. Any tool that can run arbitrary programs can run your Python script. Pick the one you like best.</p>
<blockquote>
<p>If I can use it,what do I need to put in the batch file?</p>
</blockquote>
<p>What batch file? Task Scheduler takes anything that can be run, with arguments—a C program, a .NET program, even a document with a default app associated with it. So, there's no reason you need a batch file. Use <code>C:\Python33\python.exe</code> (or whatever the appropriate path is) as your executable, and your script's path (and its arguments, if any) as the arguments. Just as you do when running the script from the command line.</p>
<p>See <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa384006%28v=vs.85%29.aspx" rel="nofollow">Using the Task Scheduler</a> in MSDN for some simple examples, and <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa383611%28v=vs.85%29.asp" rel="nofollow">Task Scheduler Schema Elements</a> or <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa383607%28v=vs.85%29.aspx" rel="nofollow">Task Scheduler Scripting Objects</a> for reference (depending on whether you want to create the schedule in XML, or via the scripting interface).</p>
<p>You want to create an <code>ExecAction</code> with <code>Path</code> set to <code>"C:\Python33\python.exe"</code> and <code>Arguments</code> set to <code>"C:\MyStuff\myscript.py"</code>, and a <code>RepetitionPattern</code> with <code>Interval</code> set to <code>"PT1H"</code>. You should be able to figure out the rest from there.</p>
<p>As sr2222 points out in the comments, often you end up scheduling tasks frequently, and needing to programmatically control their scheduling. If you need this, you can control Task Scheduler's scripting interface from Python, or build something on top of Task Scheduler, or use a different tool that's a bit easier to get at from Python and has more helpful examples online, etc.—but when you get to that point, take a step back and look at whether you're over-using OS task scheduling. (If you start adding delays or tweaking times to make sure the daily <code>foo1.py</code> job never runs until 5 minutes after the most recent hourly <code>foo0.py</code> has finished its job, you're over-using OS task scheduling—but it's not always that obvious.)</p>
</div>
<div class="post-text" itemprop="text">
<p>May I suggest <a href="http://www.winautomation.com" rel="nofollow noreferrer">WinAutomation</a> or <a href="http://www.networkautomation.com/automate/automate/" rel="nofollow noreferrer">AutoMate</a>. These two do the exact same thing, except the UI is a little different. I prefer WinAutomation, because the scripts are a little easier to build.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can use the Task Scheduler to run the script on an hourly bases.</p>
<p>To execute a python script via a Batch File, use the following code:</p>
<pre><code>start path_to_python_exe path_to_python_file
</code></pre>
<p>Example:</p>
<pre><code>start C:\Users\harshgoyal\AppData\Local\Continuum\Anaconda3\python.exe %UserProfile%\Documents\test_script.py
</code></pre>
<p>If python is set as Window’s Environment Window then you can reduce the syntax to:</p>
<pre><code>start python %UserProfile%\Documents\test_script.py
</code></pre>
<p>What I generally do is run the batch file once via Task Scheduler and within the python script I call a thread/timer every hour. </p>
<p><a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">class threading.Timer(interval, function, args=None, kwargs=None)</a></p>
</div>
<span class="comment-copy">Are you using Python 3.x or 2.7? More importantly, is the Python version relevant in any way to  your question?</span>
<span class="comment-copy">Good answer, but you <i>can</i> also set up Task Scheduler to run a batch file for you.</span>
<span class="comment-copy">If this is a one-off need, this is good, but if this is the first of many scripts that will need to be managed, especially if they are going to be interrelated and calling each other, looking in to a slightly thicker layer of Python to manage scheduled tasks instead of or underneath Task Scheduler will almost certainly end up saving headaches in the future.  "Let me just schedule this task with the OS," is often the first step down the rabbit hole of jerry-rigged and fragile scripts that call each other through the OS.</span>
<span class="comment-copy">@Hannele: Sure, and you can set it up to run a C program that runs a batch file that downloads cygwin and runs a bash script that runs your Python script… but why? If you want to run a Python script, run the Python script.</span>
<span class="comment-copy">@sr2222: Good point. I'll edit the answer a bit.</span>
<span class="comment-copy">@abarnert I agree that running the python script makes more sense, but  I also find 'Task Scheduler takes an executable with arguments, not a batch file' a little misleading. Perhaps as simple as rephrasing, '<i>any</i> executable with arguments, not <i>just</i> a batch file'? I apologise, I am being a little picky.</span>
