<div class="post-text" itemprop="text">
<p>let say i got string(that is supposed to be a bytes):</p>
<pre><code>"b'YzJGNVltYzJGNVltOTBlbk5oZVdKdmRIcHpZWGxpYjNSNmMyRjVZbTkwZW5OaGVXSnZkSHB6WVhsaWIzUjZjMkY1WW05MGVnOTBlblJsYzNRPXNheWJvdHo='"
</code></pre>
<p>and i want to decode it but it say it got to be in bytes so i got to turn that to this somehow</p>
<pre><code>b'YzJGNVltYzJGNVltOTBlbk5oZVdKdmRIcHpZWGxpYjNSNmMyRjVZbTkwZW5OaGVXSnZkSHB6WVhsaWIzUjZjMkY1WW05MGVnOTBlblJsYzNRPXNheWJvdHo='
</code></pre>
<p>i am working on a chat client and when it sent the data(bytes), it turn into a string somehow when passing though the server and when it reach the other side, it can't decode it</p>
<p>ps: it is ENCRYPT, decoding that will give random number and letters, the client will decrypt it</p>
<p>oh, and, i don't really know if the '=' sign is supposed to be there, when i got the data in a test between me and my friend, i got it like that string(the one on the top) with the error saying that it got to be in byte.</p>
<p>part of the code in the client(just one line to show everyone, the rest is a secret):</p>
<pre><code>base64.b64decode(that_string).decode('ascii')
</code></pre>
<p>it mainly use ascii so i think this is right, right?</p>
<p>more info:</p>
<pre><code>base64.b64encode(message.encode('ascii'))
</code></pre>
<p>the message here is for getting the string sent from the other side</p>
<pre><code>Room.message(str(secretEncrypt(par, codes())))
</code></pre>
<p>i don't know how i miss this, it str it before it send =.=
well, it still need to turn it to bytes, how so i do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>The following greatly works    </p>
<pre><code>&gt;&gt;&gt; import base64
&gt;&gt;&gt; s = "Hello StackOwerflow!"
&gt;&gt;&gt; b = s.encode()
&gt;&gt;&gt; c = base64.b64encode(b)
&gt;&gt;&gt; c
b'SGVsbG8gU3RhY2tPd2VyZmxvdyE='
&gt;&gt;&gt; b1 = base64.b64decode(c) 
&gt;&gt;&gt; b1
b'Hello StackOwerflow!'
&gt;&gt;&gt; b1.decode()
'Hello StackOwerflow!'
</code></pre>
<p>Show how you encode string </p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is here:</p>
<pre><code>Room.message(str(secretEncrypt(par, codes())))
</code></pre>
<p><code>secretEncrypt(...)</code> returns bytes, but then you do <code>str(b"thereturnvalue")</code> which does <em>not</em> do what you want:</p>
<pre><code>&gt;&gt;&gt; my_bytes = b"abc"
&gt;&gt;&gt; type(my_bytes)
&lt;class 'bytes'&gt;
&gt;&gt;&gt; str(my_bytes)
"b'abc'"
&gt;&gt;&gt; type(str(my_bytes))
&lt;class 'str'&gt;
</code></pre>
<p>It is putting the string-representation (<code>repr</code>) of your bytes into a string, which is why your string starts with <code>b"</code></p>
<p>How best to fix this depends on the surrounding code.. Either:</p>
<ul>
<li>if the <code>secretEncrypt</code> function returns bytes, make <code>Room.message</code> accept bytes also (and remove the <code>str(...)</code> cast). </li>
<li>Make <code>secretEncrypt</code> return a string, removing the need for the <code>str(...)</code> cast</li>
<li><p>Least elegant solution: decode the bytes returned from <code>secretEncrypt</code>, turning it into a string. Something like this:</p>
<pre><code>encrypted = secretEncrypt(par, codes())
Room.message(encrypted.decode("whatever-encoder-was-used"))
</code></pre>
<p>Where <code>whatever-encoding-was-used</code> is the text encoding (likely <code>utf-8</code> or <code>ascii</code>, but it is impossible to tell without seeing the rest of your code)</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>and i was right, no need to over think it</p>
<p>the string:</p>
<pre><code>"b'YzJGNVltYzJGNVltOTBlbk5oZVdKdmRIcHpZWGxpYjNSNmMyRjVZbTkwZW5OaGVXSnZkSHB6WVhsaWIzUjZjMkY1WW05MGVnOTBlblJsYzNRPXNheWJvdHo='"
</code></pre>
<p>just need to be split, eg:</p>
<pre><code>string = "b'YzJGNVltYzJGNVltOTBlbk5oZVdKdmRIcHpZWGxpYjNSNmMyRjVZbTkwZW5OaGVXSnZkSHB6WVhsaWIzUjZjMkY1WW05MGVnOTBlblJsYzNRPXNheWJvdHo='"
string = string.split("'")[1]
</code></pre>
<p>and that would get me a string without the b':</p>
<pre><code>"YzJGNVltYzJGNVltOTBlbk5oZVdKdmRIcHpZWGxpYjNSNmMyRjVZbTkwZW5OaGVXSnZkSHB6WVhsaWIzUjZjMkY1WW05MGVnOTBlblJsYzNRPXNheWJvdHo="
</code></pre>
<p>then i just need to bytes it:</p>
<pre><code>string = bytes(string, "ascii")
</code></pre>
<p>which would get me the b' outside the string:</p>
<pre><code>b"YzJGNVltYzJGNVltOTBlbk5oZVdKdmRIcHpZWGxpYjNSNmMyRjVZbTkwZW5OaGVXSnZkSHB6WVhsaWIzUjZjMkY1WW05MGVnOTBlblJsYzNRPXNheWJvdHo="
</code></pre>
<p>ps: to everyone out there who say things about cracking my code, it got randoms 
mumbo jumbo things with the id dump into it, if you manage to crack it, it not much use and anyway, it just a chat client for a mini chatroom games for kids</p>
</div>
<span class="comment-copy">str.encode() in python3.x uses utf-8 by default <a href="http://docs.python.org/3/library/stdtypes.html#str.encode" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.encode</a></span>
<span class="comment-copy">It looks like your friend sent you <code>repr(data)</code> instead of just <code>data</code>.  Show the code doing the sending and we can fix the right problem.</span>
<span class="comment-copy"><code>base64.b64encode(...)</code> returns bytes, so how is it sent to the client?</span>
<span class="comment-copy">edited, turn out it str it before senting it...</span>
<span class="comment-copy">It sounds like what you really want to do is smuggle an arbitrary <code>bytes</code> through a <code>str</code> without decoding/encoding (in other words, send each byte as the Unicode codepoint with the same number). This isn't impossibleâ€”but it's almost always a sign that you're doing something wrong. There's almost always a better answer. For example: If your API is byte-based, use <code>bytes</code> instead of <code>str</code> in the API; if your <code>bytes</code> are ASCII (which is always true for base64), just <code>b.decode('ascii')</code> to get the <code>str</code>; etc.</span>
<span class="comment-copy">and i found out that i didn't give a lot of info... sorry...  i am new here and didn't really want to give a lot of the codes till it is done</span>
<span class="comment-copy">oh, and that didn't really help, it already got a b'the-codez in the string... and having a b"b'the-codez will not work</span>
<span class="comment-copy">We can't help you, until you show, how you encrypt and decrypt your strings</span>
<span class="comment-copy">If you want secure transfer, you should use RSA or AES, not base64. Use <a href="https://www.dlitz.net/software/pycrypto/" rel="nofollow noreferrer">dlitz.net/software/pycrypto</a></span>
<span class="comment-copy">naw, no need something like that, it just a chat client, after it done, it be use to sent secret message without the other team knowing when play a chatroom game or for senting links without the admin of the room knowing, after all, it hidden and only my chat client can decrypt it and see it, and even if they see it, they will just see random number and letter</span>
<span class="comment-copy">the Room.message is very messy already, i don't think i want to mess with it because it the main code, while secretEncrypt is a lot smaller and clearer, so, how would i make it remove the str(...) cast?</span>
<span class="comment-copy">@freeforalltousez By making <code>secretEncrypt</code> return a string, so you can remove the <code>str()</code> call. I've added another solution (decoding the the bytes returned by <code>secretEncrypt</code>, which can then be passed to <code>Room.message</code>)</span>
<span class="comment-copy">oops, forgot to mark the answer that i post, it less messy and easier for new comers to understand, thanks anyway.</span>
