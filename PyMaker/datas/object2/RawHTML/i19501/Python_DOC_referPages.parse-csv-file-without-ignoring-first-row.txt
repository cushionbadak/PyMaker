<div class="post-text" itemprop="text">
<p>I wrote a small parser for a csv file, where I read the number of coloumns from the first line. </p>
<p>However, I need the first line for calculations...is there a way to not ignore the first line?</p>
<pre><code>with open(dataset_path, "r") as f:
    coloumns =  f.readline().strip().split(',')
    numRows = 0
    sums = coloumns
    for line in f:
        values = line.split(',')
            for i in xrange(len(values)):
                sums[i] = float(values[i])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your file isn't huge, you can just read all the lines at once:</p>
<pre><code>lines = f.readlines()
columns = lines[0].strip().split(',')
numRows = 0
sums = columns
for line in lines:
    values = line.split(',')
    for i in xrange(len(values)):
        sums[i] = float(values[i])
</code></pre>
</div>
<span class="comment-copy">Formatting? And how are you getting f?</span>
<span class="comment-copy">I'm sure you know this, but I'll mention it just in case. Python comes with <a href="http://docs.python.org/3/library/csv.html#module-csv" rel="nofollow noreferrer">a built-in module to parse and write csv files</a>.</span>
<span class="comment-copy">pls check the edited version</span>
<span class="comment-copy">@Jon-Eric: sure. why not this method :-)</span>
<span class="comment-copy">@user2015933 because there can be some subtleties involved with parsing csv files, escaping characters, line endings, etc, why not let a proven module <code>csv</code> do all the work for you?</span>
<span class="comment-copy">Thanks.. but almost done iwth the implementation using csv</span>
<span class="comment-copy"><code>sums = map(float, values)</code> or <code>sums = [float(v) for v in values]</code> both eliminate the loop.</span>
