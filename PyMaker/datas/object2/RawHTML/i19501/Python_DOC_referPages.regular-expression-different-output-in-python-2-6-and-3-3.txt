<div class="post-text" itemprop="text">
<p>I am getting a different output in python 2 and 3 when I execute same code for regular expression.</p>
<p>Suppose this is the data that I want which is located somewhere in the webpage. </p>
<pre><code>source = ['\x1e\x1e5.5.30-log\x1epcofiowa@localhost\x1epcofiowa_pci\x1e',
          '\x1e\x1e5.5.30-log\x1epcofiowa@localhost\x1epcofiowa_pci\x1e', 
          '\x1e\x1e5.5.30-log\x1epcofiowa@localhost\x1epcofiowa_pci\x1e', 
          '\x1e\x1e5.5.30-log\x1epcofiowa@localhost\x1epcofiowa_pci\x1e']
</code></pre>
<p>So, when I run the below code in python 2.6, it works perfect. I'm getting exact output like above.</p>
<pre><code>match = re.findall("\x1e\x1e\S+",source)
</code></pre>
<p>But when I execute it in python 3.3 like:</p>
<pre><code>match = re.findall("\x1e\x1e\S+", str(source))
</code></pre>
<p>I'm getting the output of the match variable like:</p>
<pre><code>['\x1e\x1e5.5.30-log', '\x1e\x1e5.5.30-log', '\x1e\x1e5.5.30-log','\x1e\x1e5.5.30-log']
</code></pre>
<p>So, would you please tell me that why it's not taking whole string in python 3? Why it's skipping <code>\x1epcofiowa@localhost\x1epcofiowa_pci\x1e</code> each time? I want output like python 2.6.</p>
<p>So, I am clueless at this moment. I'm waiting for your reply. Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Seems like <code>\S</code> behave differently in <code>Python 2</code> and <code>Python 3</code>.</p>
<p>According to <a href="http://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">Python 3 re module docs</a>: -</p>
<blockquote>
<p><code>\S</code> - Matches any character which is not a Unicode whitespace
  character. This is the opposite of <code>\s</code>. If the <code>ASCII flag</code> is used this
  becomes the equivalent of <code>[^ \t\n\r\f\v]</code> (but the flag affects the
  entire regular expression, so in such cases using an explicit <code>[^
  \t\n\r\f\v]</code> may be a better choice).</p>
</blockquote>
<p>Now, since <code>\x1e</code> (equivalent to <code>U+001E</code>, that comes after your <code>\x1e\x1e5.5.30-log</code> is a <code>unicode whitespace</code> character - <a href="http://code.activestate.com/lists/python-list/193571/" rel="nofollow">reference to activestate</a>, so it is not matched by <code>\S</code> in Python 3. </p>
<hr/>
<p>Whereas in <a href="http://docs.python.org/2/howto/regex.html" rel="nofollow">Python 2</a>: -</p>
<blockquote>
<p><code>\S</code> - Matches any non-whitespace character; this is equivalent to the
  class <code>[^ \t\n\r\f\v]</code>.</p>
</blockquote>
<p>So, it only considers the <code>ASCII</code> character set for matching non-whitespace, and hence it matches <code>\x1e</code>.</p>
</div>
<span class="comment-copy">First off, you're going to have an issue due to the fact that you're not using a raw string. The <code>\S+</code> will not be parsed properly because the "\" is not escaped. It needs to be <code>r"stuff\S+"</code>. However, this will mean your hex-escaped values won't be parsed properly either, so you'll need to substitute them in as variables. I do not know if this is the exact cause of your problem though.</span>
<span class="comment-copy">@Anorov yeah, this could be a problem. But I have no idea regarding that. Can I have more information please?</span>
<span class="comment-copy">So, how will I get the proper output. What should I use or modify?</span>
<span class="comment-copy">@magneto.. The alternative is already mentioned in the docs of Python 3. See the first quote I mentioned. You can enable the <code>ASCII</code> flag, or just use <code>[^ \t\n\r\f\v]</code>, instead of <code>\S</code>, in Python 3</span>
<span class="comment-copy">would you please help me on how to modify it in the above code? I'm novice python user. So, it's difficult for me to understand that. or you can explain me in-depth.</span>
<span class="comment-copy">@magneto. Try <code>match = re.findall("\x1e\x1e[^ \t\n\r\f\v]+", str(source))</code> or <code>match = re.findall("\x1e\x1e\S+", str(source), re.ASCII)</code> in Python 3.3</span>
<span class="comment-copy">Hey, thank you very much. It has solved the problem. I was confused regrading the usage of <code>[^ \t\n\r\f\v]</code> in code. I thought I had to use it as individual options!</span>
