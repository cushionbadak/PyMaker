<div class="post-text" itemprop="text">
<p>new to python 
windows 7 python 3.3.0
 I can't figure out how to return the function argument value. been looking around like crazy 
this is a class assignment, but I do have a easy script made to turn in, but im shooting to push my self. just need to know if im going in the wrong direction something. thanks</p>
<pre><code>def main():
    seat_a = 15.00
    seat_b = 12.00
    seat_c = 9.00
    class_a(seat_a)
    class_b(seat_b)
    class_c(seat_c)
    set_a = class_a(ticket_a)
    set_b = class_b(ticket_b)
    set_c = class_b(ticket_c)
    result_a_b_c =  set_a + set_b + set_c
    print("The total income generated from all ticket sales is $ ", format(result_a_b_c,',.2f'))

def class_a(ticket_a):
    while True:
        try:
            ask_a = float(input("How many class A seat tickets were sold? "))
            total_a = ticket_a * (ask_a)
            break
        except ValueError:
            print("That is not a valid number. Please try again.")
            class_a(ticket_a)
            break
        total_a = class_a(ticket_a)

def class_b(ticket_b):
    while True:
        try:
            ask_b = float(input("How many class B seat tickets were sold? "))
            total_b = ticket_b * (ask_b)
            break
        except ValueError:
            print("That is not a valid number. Please try again.")
            class_b(ticket_b)
            total_b = class_b(ticket_b)
            break

def class_c(ticket_c):
    while True:
        try:
            ask_c = float(input("How many class C seat tickets were sold? "))
            total_c = ticket_c * ask_c
            break
        except ValueError:
            print("That is not a valid number. Please try again.")
            class_c(ticket_c)
            total_c = class_c(ticket_c)
            break

main()   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, your functions do not return anything. Look at adding a return statement to pass back a value. 
<a href="http://net.tutsplus.com/tutorials/python-tutorials/python-from-scratch-functions-and-modules-2/" rel="nofollow">Here is a fairly simple introduction to functions</a></p>
<p>Secondly, if the function does return a value, you'd want to assign it to a variable, your code just calls the function without assignment.</p>
<p>For example, this small program passes an integer to a function, which then doubles it and returns the new value, which is then printed.</p>
<pre><code>def double(x):
    y = x * 2
    return y

z = double(2)
print(z)
</code></pre>
</div>
<span class="comment-copy"><code>def add(arg1, arg2): return arg1 + arg2</code></span>
<span class="comment-copy">See <a href="http://docs.python.org/3/reference/simple_stmts.html#the-return-statement" rel="nofollow noreferrer">ยง7.6 "The <code>return</code> statement" in v5.3.3 of <i>The Python Reference Manual</i></a>.</span>
<span class="comment-copy">By the way, unless I'm misunderstanding you, you're using the term "argument" wrong. A function's "arguments" are what you pass <i>into</i> it. What you get <i>out</i> of it is its "return value".</span>
<span class="comment-copy">This is a strange question.</span>
