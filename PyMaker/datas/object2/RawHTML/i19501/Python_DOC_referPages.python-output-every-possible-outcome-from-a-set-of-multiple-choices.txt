<div class="post-text" itemprop="text">
<p>This is very basic but I don't know hot to go about it. </p>
<p>Suppose I have a list of "choices" as an input. For example: </p>
<pre><code>c = [2,3,2]
</code></pre>
<p>This represents 3 choices with 2 options, 3 options, then 2 options. As an output I need something like:</p>
<pre><code>[1,1,1]
[1,1,2]
[1,2,1]
[1,2,2]
[1,3,1]
[1,3,2]
[2,1,1]
[2,1,2]
[2,2,1]
[2,2,2]
[2,3,1]
[2,3,2]
</code></pre>
<p>So each permutation of choices. I know how I'd do it if it was the same amount of choices each time (3 in the example) but I need it to work for any number of choices. I have no doubt this has been asked before but the terminology I'm searching with isn't turning anything up. </p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done with <a href="http://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow"><code>itertools.product()</code></a> and a <a href="http://www.youtube.com/watch?v=pShL9DCSIUw" rel="nofollow">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; list(itertools.product(*[range(1, j+1) for j in c]))
[(1, 1, 1), (1, 1, 2), (1, 2, 1), (1, 2, 2), (1, 3, 1), (1, 3, 2), (2, 1, 1), (2, 1, 2), (2, 2, 1), (2, 2, 2), (2, 3, 1), (2, 3, 2)]
</code></pre>
<p>We loop through your list, and create a range representing the potential values for each column.</p>
<pre><code>&gt;&gt;&gt; [range(1, j+1) for j in c]
[range(1, 3), range(1, 4), range(1, 3)]
</code></pre>
<p>(I use 3.x, and <code>range()</code> gives a generator, in 2.x, it'll be a list, e.g: <code>[[1, 2], [1, 2, 3], [1, 2]]</code>, either way it works - as you consume it here anyway, it isn't worth using <code>xrange()</code> in 2.x unless you particularly feel like it).</p>
<p>Then we unpack this into <code>itertools.product()</code> which gives us all the possible combinations, which is what you want.</p>
</div>
<span class="comment-copy">Well that was easy. I wasn't understanding the product function of itertools, with that demonstration I do now. Thank you.</span>
