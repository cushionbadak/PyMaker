<div class="post-text" itemprop="text">
<p>I would like to know how to format a text file using Python or any other programming/scripting language?</p>
<p>current format in text file is like this:</p>
<pre><code>ABALONE
Ab`a*lo"ne, n. (Zo√∂l.)

Defn: A univalve mollusk of the genus Haliotis. The shell is lined
with mother-of-pearl, and used for ornamental purposes; the sea-ear.
Several large species are found on the coast of California, clinging
closely to the rocks.
</code></pre>
<p>I want it to be like this (all on one line excluding some words etc.):</p>
<pre><code>ABALONE : A univalve mollusk of the genus Haliotis. The shell is lined with
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the format is always exactly as you described (word, pronunciation, empty line, "Defn: ", definition), it's a simple matter of string splitting and concatenating:</p>
<pre><code>def reformat(text):
    lines = text.split('\n', 3)
    word = lines[0]
    definition_paragraph = lines[3][len('Defn:'):]
    definition_line = definition_paragraph.replace('\n', ' ')
    return word + ' : ' + definition_line
</code></pre>
<p>The idea is to make a piece of code that can be easily invoked to fix text. In this case the function is called <code>reformat</code> and it works by splitting the given text into the three first lines and the definition, extracting the definition from the paragraph, and gluing together the word itself with the definition.</p>
<p>An alternative solution is a <a href="https://en.wikipedia.org/wiki/Regular_expression" rel="nofollow">regular expression</a>, which is more fit to the task but can be harder to understand because of the strange syntax:</p>
<pre><code>import re
pattern = re.compile('(.+?)\n.+?\n\nDefn: (.+)', re.DOTALL)
def reformat(text):
    word, definition = pattern.search(text).groups()
    return word + ' : ' + definition.replace('\n', ' ')
</code></pre>
<p>This should work exactly the same as the other code above, but it's simpler, more flexible and can be ported to different languages.</p>
<p>To use any of the above, just call the method passing the text as argument.</p>
<p>To replace the text in a file, you need to open the file, read the contents, reformat using any of the functions above, and save back to the file:</p>
<pre><code>with open('word.txt') as open_file:
    text = open_file.read()

with open('word.txt', 'w') as open_file:
    open_file.write(reformat(text))
</code></pre>
<p>If you need to do this to all files in a given directory, for example, look into  <a href="http://docs.python.org/2/library/os.html#os.listdir" rel="nofollow"><code>listdir</code></a> in the <code>os</code> module.</p>
</div>
<span class="comment-copy">what did you try?</span>
<span class="comment-copy">And what are the rules that transform the first piece of text into the second? Manipulating strings in Python is relatively straightforward, what did you try yourself and what didn't work?</span>
<span class="comment-copy">Start with <a href="http://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/index.html</a></span>
<span class="comment-copy">@ Cfreak I tried Find/Replace &amp; macros in Notepad++ but I can't do it with that. So I wanted to know if it is possible doing it through a script.</span>
<span class="comment-copy">What about regular expression ? Can you define a pattern that will always valid like line 1 is terms, line 2 is pronunciation + grammar + topic, 3rd line is the definition, etc. It will be much easier if you have your data as XML then XSLT will rocks</span>
