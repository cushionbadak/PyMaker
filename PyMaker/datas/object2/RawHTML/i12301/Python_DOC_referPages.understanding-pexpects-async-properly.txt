<div class="post-text" itemprop="text">
<p>I'm trying to write a gdb frontend using pexpect to communicate with gdb/mi. I'm new to pexpect and trying to figure out async property of expect_exact() function. I wrote a simple test which looks like this:</p>
<pre><code>def attach(str):
    global p
    p=pexpect.spawnu('sudo gdb --interpreter=mi')
    p.expect_exact("(gdb) ")
    GDB_Engine.send_command("set target-async 1")
    GDB_Engine.send_command("set pagination off")
    GDB_Engine.send_command("set non-stop on")
    GDB_Engine.send_command("attach " + str + "&amp;")

def test():
    for x in range(0,3):
        global p
        time.sleep(0.5)
        GDB_Engine.send_command("find 0x00400000,+500,1")

def send_command(str):
    global p
    p.sendline(str)
    p.expect_exact("(gdb) ",async=False)
    print(p.before)
</code></pre>
<p>In main I simply call attach() and then test() functions. The result is this:</p>
<pre><code>find 0x00400000,+500,1
&amp;"find 0x00400000,+500,1\n"
~"0x400006\n"
~"0x400014\n"
~"0x40002a\n"
~"0x400061\n"
~"0x400069\n"
~"0x4000a8\n"
~"0x4000b0\n"
~"0x4000d2\n"
~"0x4000da\n"
~"0x4000e8\n"
~"0x4000f2\n"
~"0x40012a\n"
~"0x40019a\n"
~"13 patterns found.\n"
^done


find 0x00400000,+500,1
&amp;"find 0x00400000,+500,1\n"
~"0x400006\n"
~"0x400014\n"
~"0x40002a\n"
~"0x400061\n"
~"0x400069\n"
~"0x4000a8\n"
~"0x4000b0\n"
~"0x4000d2\n"
~"0x4000da\n"
~"0x4000e8\n"
~"0x4000f2\n"
~"0x40012a\n"
~"0x40019a\n"
~"13 patterns found.\n"
^done

find 0x00400000,+500,1
&amp;"find 0x00400000,+500,1\n"
~"0x400006\n"
~"0x400014\n"
~"0x40002a\n"
~"0x400061\n"
~"0x400069\n"
~"0x4000a8\n"
~"0x4000b0\n"
~"0x4000d2\n"
~"0x4000da\n"
~"0x4000e8\n"
~"0x4000f2\n"
~"0x40012a\n"
~"0x40019a\n"
~"13 patterns found.\n"
^done
</code></pre>
<p>Works as expected, but if I pass the argument async as True in the function send_command(), the result output becomes something like this:</p>
<pre><code>=thread-group-added,id="i1"
~"GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\n"
~"Copyright (C) 2014 Free Software Foundation, Inc.\n"
~"License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\n"
~"This GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details."
~"\nFor bug reporting instructions, please see:\n"
~"&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\n"
~"Find the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\n"
~"For help, type \"help\".\n"
~"Type \"apropos word\" to search for commands related to \"word\".\n"
=cmd-param-changed,param="disassembly-flavor",value="intel"

=thread-group-added,id="i1"
~"GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\n"
~"Copyright (C) 2014 Free Software Foundation, Inc.\n"
~"License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\n"
~"This GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details."
~"\nFor bug reporting instructions, please see:\n"
~"&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\n"
~"Find the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\n"
~"For help, type \"help\".\n"
~"Type \"apropos word\" to search for commands related to \"word\".\n"
=cmd-param-changed,param="disassembly-flavor",value="intel"

=thread-group-added,id="i1"
~"GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\n"
~"Copyright (C) 2014 Free Software Foundation, Inc.\n"
~"License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\n"
~"This GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details."
~"\nFor bug reporting instructions, please see:\n"
~"&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\n"
~"Find the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\n"
~"For help, type \"help\".\n"
~"Type \"apropos word\" to search for commands related to \"word\".\n"
=cmd-param-changed,param="disassembly-flavor",value="intel"
</code></pre>
<p>It only prints the result of the first command executed(which is <code>p=pexpect.spawnu('sudo gdb --interpreter=mi')</code>. Why does this happen? What's the proper usage of async property?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <code>pexpect</code> docs:</p>
<blockquote>
<p>On Python 3.4, or Python 3.3 with <code>asyncio</code> installed, passing
  <code>async=True</code>  will make this return an <code>asyncio</code> coroutine,
  which you can <code>yield from</code> to get the same result that this method would
  normally give directly. So, inside a coroutine, you can replace this code:</p>
</blockquote>
<pre><code>index = p.expect(patterns)
</code></pre>
<blockquote>
<p>With this non-blocking form:</p>
</blockquote>
<pre><code>index = yield from p.expect(patterns, async=True)
</code></pre>
<p>See <a href="https://docs.python.org/3/library/asyncio-task.html#coroutine" rel="nofollow">coroutines</a>.</p>
</div>
<span class="comment-copy">to simplify the question (to focus it on <code>async=True</code>), use a dummy Python child process instead of <code>gdb</code>. See <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">Thank you, I'll try this out asap after I fix some other serious problems in my program.</span>
<span class="comment-copy">I finally got back to this issue again, tried it out but had this error: <code>Can't convert 'bytes' object to str implicitly</code>. I checked up internet and found this <a href="https://github.com/pexpect/pexpect/issues/286" rel="nofollow noreferrer">github.com/pexpect/pexpect/issues/286</a>, although they say they fixed it I still get the error. Is there a way to fix this by hand without changing the library's code?</span>
<span class="comment-copy">@Desertricker it is unrelated to <code>async=True</code> issue. If you have new questions; ask them separately. See <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy">Btw it seems like the async feature only works for multiple different pipes of the same process, but I want to take outputs from the same pipe. So I guess the thing I was looking for is a little different, but I'm going to accept your answer tho, because it's correct and useful.</span>
<span class="comment-copy">Oh btw I meant multiple different spawns, not the process sorry. Just wanted to be clear.</span>
