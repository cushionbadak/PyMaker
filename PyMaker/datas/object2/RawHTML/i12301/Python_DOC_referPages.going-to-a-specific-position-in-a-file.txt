<div class="post-text" itemprop="text">
<p>I am fairly new to python. I have been doing a project that i have been struggling on recently and I'd be glad if i can receive some help. </p>
<p>I am conducting a programme in which will take an input from a user and see if the input is seen in the file. The input is a name tag, e.g. the user will have to type in a unique code like 't56700' and then the programme will see if the code is in the file. However, along with the code comes with other information. </p>
<p>What i need to do is to take in a user input, and if it's valid, i would need to jump to where that input is located on the file and print the code (the name tag) along with all the information with it.</p>
<p>The file looks like this:</p>
<p>nametag,x,x,x</p>
<p>nametag,x,x,x</p>
<p>nametag,x,x,x</p>
<p>^ Several lines of this</p>
<p>This is my code so far, I'm trying to get to where the user's input is seen on the file and print the info along with it. </p>
<pre><code>file = open("filetest.txt","r").readlines()


nametag = input ("What is your name tag?")

if nametag in open('filetest.txt').read():

    with open('filetest.txt', 'r') as searchfile:

        for line in searchfile:
                    if nametag in line:



                        print ("nametag: " + nametag)
                        print ("xxxx ", line[2])
                        print("xxxx:",line[3])
                        print("xxxx:",line[1])
                        print("xxxx:",line[4])

                        break 
</code></pre>
<p>The numbers within the square brackets like 'line[2]' for example only take me to the start of the file and not the location at where i want the file to read from.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, you don't need to open and read the file three times - once will suffice.</p>
<p>The data appears to be in CSV format so you can use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module to help parse the file.</p>
<pre><code>import csv

nametag = input("What is your name tag?")

with open('filetest.txt') as searchfile:
    reader = csv.reader(searchfile)
    for row in reader:
        for row[0] == nametag:
            print("nametag: {}".format(nametag))
            print("xxxx: {}".format(row[2]))
            print("xxxx: {}".format(row[3]))
            print("xxxx: {}".format(row[1]))
            break    # if you want the first one only
</code></pre>
<p>This assumes that the file contains 4 columns of data as shown in your sample. Remember that column numbers start from 0.</p>
<p>If you don't want to use the <code>csv</code> module, you can use <code>str.split()</code> to a similar effect:</p>
<pre><code>with open('filetest.txt') as searchfile:
    for line in searchfile:
        row = line.split(',')
        for row[0] == nametag:
            ...
</code></pre>
</div>
<span class="comment-copy">I'd suggest that, in your loop, you do <code>line.split(',')</code> to get an array for each line that would look like <code>['nametag', 'x', 'x', 'x']</code> and then in your if you check if <code>nametag == line[0]</code> (or whatever you call the array). Currently <code>line[2]</code> will be the third character on that line and not the second "item".</span>
<span class="comment-copy">Thank you so much bro, really helped!</span>
