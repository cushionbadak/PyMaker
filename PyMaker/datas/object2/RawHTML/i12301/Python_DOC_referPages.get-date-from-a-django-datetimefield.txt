<div class="post-text" itemprop="text">
<p>I would like to request some assistance regarding this matter</p>
<p>I am learning django and trying out some codes but I hit a brick wall at trying to get the date only from a model's DateTimeField</p>
<p>here's the code that I am working on:</p>
<pre><code>class APPLICANT_DATA(models.Model):
    SCHEDULED_AT = models.DateTimeField(null=True, blank=True)


def somefunction():
    app_data = APPLICANT_DATA.objects.all()
    for item in app_data:
        the_date = str(item.SCHEDULED_AT.strftime("%B-%d-%Y")) + ", " + the _date
</code></pre>
<p>And I am getting (<code>'NoneType' object has no attribute 'strftime'</code>) even though my model contains 3 records that all have date and time</p>
<p>What am I doing wrong? any advice for a newbie? many thanks.</p>
</div>
<div class="post-text" itemprop="text">
<h2>DateTimeField becomes a <code>datetime.datetime</code> object in Python</h2>
<p>If you need a <code>date</code> object to manipulate later on, you could pull the <code>datetime.date</code> object directly from your <code>DateTimeField()</code>, using <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.date" rel="noreferrer"><code>datetime.datetime.date()</code></a> like below:</p>
<pre><code>class ApplicantData(models.Model):
    scheduled_at = models.DateTimeField(null=True, blank=True)

date = application_data.scheduled_at.date()
</code></pre>
<p>This works because Django will translate the <code>DateTimeField</code> into the Python type <code>datetime.datetime</code>, upon which we have called <code>date()</code>.</p>
<h2>Format the <code>datetime.date</code> like you wish</h2>
<p>Then from that, you get a <code>datetime.date</code> object, that you can format like you wish, using <a href="https://docs.python.org/3/library/datetime.html#datetime.date.strftime" rel="noreferrer"><code>datetime.date.strftime()</code></a>.</p>
<p>If you don't need a <code>date</code> object, you can also use <code>strftime</code> on your <code>datetime.datetime</code> object too, no problems with that. Except that your had a None field in your object.</p>
<h2>Dealing with <code>NULL</code>/<code>None</code> fields</h2>
<p>If you want to allow for NULL values in <code>scheduled_at</code> you can do:</p>
<pre><code>if application_data.scheduled_at is not None:
      date = application_data.scheduled_at.date()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>SCHEDULED_AT</code> is set to <code>null=True</code>, so sometimes <code>item.SCHEDULED_AT</code> doesn't have value so it's <code>None</code>. If you do a <code>.strftime</code> on <code>None</code> it will have the error you got. <code>null=True</code> means django model allows the field to have <code>NULL</code> value.</p>
<p>By the way, it's really bad practice to use all upper case for model and field names, model name should be camel case and fields should be lower case with underscore. You model name should be <code>ApplicantData</code>, field name should be <code>scheduled_at</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>While in the given example the problem is most probably due to the object truly being <code>None</code>, as said in other answers, please note that you might come across such a situation in test code if you forget to clean your data by calling, e.g. <code>full_clean()</code> on your DateTimeField as in :</p>
<pre><code>test_obj = YourModel(
    date=datetime.datetime(2016,2,26,tzfinfo=GM1),
    ...
)
test_obj.full_clean() # &lt;-- don't forget this or you'll get a NoneType object
test_obj.save()
</code></pre>
</div>
<span class="comment-copy">What is the meaning of  <code>+ the _date</code>?</span>
<span class="comment-copy">I see, will try and many thanks</span>
<span class="comment-copy">Got it, many thanks! really.</span>
