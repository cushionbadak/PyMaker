<div class="post-text" itemprop="text">
<p>I am using Python v2.x Windows 64bit.
The question is, I would like to extract a number (102) from a list, but I can only get a part of if.</p>
<p>Here is a list: </p>
<pre><code>data = ['getmotors \r', 'Parameter,Value\r', 'Brush_RPM,0\r', 'Brush_mA,0\r', 'Vacuum_RPM,0\r', 'Vacuum_mA,0\r', 'LeftWheel_RPM,1800\r', 'LeftWheel_Load%,42\r', 'LeftWheel_PositionInMM,10452\r', 'LeftWheel_Speed,102\r', 'RightWheel_RPM,1800\r', 'RightWheel_Load%,42\r', 'RightWheel_PositionInMM,9650\r', 'RightWheel_Speed,102\r', 'ROTATION_SPEED,0.00\r', 'SideBrush_mA,0\r', '\x1a']
</code></pre>
<p>How to extract the speed of LeftWheel_Speed (102)?
I tried <code>data[9][-2]</code>, but what I get is ‘<code>2</code>’ rather than ‘<code>102</code>’.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>re.search</code> and a regex pattern, you can extract the integer value from the string.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; 
&gt;&gt;&gt; re.search(r'\d+', data[9])
&lt;_sre.SRE_Match object; span=(16, 19), match='102'&gt;
&gt;&gt;&gt; re.search(r'\d+', data[9]).group(0)
'102'
&gt;&gt;&gt; speed = int(re.search(r'\d+', data[9]).group(0))
&gt;&gt;&gt; speed
102
</code></pre>
<p>Here, <code>re.search(r'\d+', data[9])</code> will return a match if data[9] has any decimal characters. Then retrieving this decimal characters using <code>.group(0)</code> and finally convert them to integer, using <code>int()</code> built-in method</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; int(data[9][-4:-1])+1
103
</code></pre>
<p>Use <code>iterable[start:end]</code> to get a subset of them.</p>
<p>Another thing you can do is, if you want to get a single integer from a string, is something along the lines of (python2.x):</p>
<pre><code>s = "test123\n"
x = int(filter(lambda x: x.isdigit(), s))
</code></pre>
<p>In Python3, filter returns a <code>filter object</code> which is an iterable. You can turn it into a list and join them for the same functional result.</p>
<pre><code>s = "test123\n"
x = int(''.join(list(filter(lambda x: x.isdigit(), s))))
</code></pre>
<p>Note that this does not take into account separated numbers. For example, <code>s = "123test456"</code> will return <code>123456</code>. If you want them separated, you will need to use something a bit more clever.</p>
<pre><code>&gt;&gt;&gt; s = "\n123test456\n"
&gt;&gt;&gt; nums = map(int, ''.join([x if x.isdigit() else ' ' for x in s]).split())
&gt;&gt;&gt; print(nums)
[123, 456]
</code></pre>
<p>Again, in python3, map returns a <code>map object</code>, so you just have to convert it to a list.</p>
<pre><code>&gt;&gt;&gt; s = "\n123test456\n"
&gt;&gt;&gt; nums = list(map(int, ''.join([x if x.isdigit() else ' ' for x in s]).split()))
&gt;&gt;&gt; print(nums)
[123, 456]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If all the items in the list that contain a single <code>,</code> can be considered key-value pairs, you can turn the data into a dictionary. That makes it easy to access the values that you are interested in.</p>
<pre><code>datadict = {}
for item in data:
    key_value = item.strip().split(',')
    if len(key_value) == 2:
        key, value = key_value
        datadict[key] = value
print(datadict['RightWheel_Speed'])  # 102
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>at index 9 in the list the element is a string <code>'LeftWheel_Speed,102\r'</code>, [-1] will display the <code>'\r'</code> character, and thus [-2] will display the <code>2</code>.  A string in python is list type, so you are looking at the second to last character. you need to split the string for each data element like:</p>
<pre><code>data[9].split(',')[1]
</code></pre>
<p>which first splits the string into 2 strings at the comma and print <code>102</code>, but beware it still contains the <code>\r</code> character which you might want to remove:</p>
<pre><code>data[9].split(',')[1][:-1]
</code></pre>
<p><code>[:-1]</code> will slice off the last character of the string (which is a list so you can do list slicing)</p>
<p>EDIT: as commented below, <code>'102\r'.strip()</code> would be a more complete answer to removing special characters as it would remove them all</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>print data[9].split(',')[1]
</code></pre>
<p>You can split it on ',' and display the second string </p>
</div>
<span class="comment-copy">how about data[9][-4:-1]?</span>
<span class="comment-copy">@GarrettR That would fail for the others.</span>
<span class="comment-copy"><code>float(data[9].strip().split(',')[1])</code> works everywhere except in the first two elements as they don't have a value. Using <code>strip</code> to remove the <code>\r</code></span>
<span class="comment-copy">@Amber.G ... Do accept one of the below answers to close your question otherwise comments if not working for you...</span>
<span class="comment-copy">Why <code>+1</code>?​​​​​​</span>
<span class="comment-copy">No particular reason. Really just to show that it successfully parsed as an int and can therefore be used in arithmetic functions.</span>
<span class="comment-copy">+1 one because this is the only answer that comes close both providing a solution, and addressing the underlying cause: the questioner's total ignorance of slicing lists in python. He doesn't need string functions or regex, he needs to spend an afternoon with Dive Into Python.</span>
<span class="comment-copy">This has the potential to fail if the digits are not always on the same index postion...which is not one of OP's statements.</span>
<span class="comment-copy">This answer can't be generalized.</span>
<span class="comment-copy">Thanks for your answer. I run your code, however, we got an error "list" object has no attribute 'strip'. (yes, data is a list)</span>
<span class="comment-copy">I made a mistake. It should be item.strip(). I've fixed the answer.</span>
<span class="comment-copy">The <code>\r</code> can be removed using <code>strip</code>.</span>
<span class="comment-copy">you are right let me add that in thank you</span>
<span class="comment-copy"><code>str.strip</code>. Not <code>string.strip</code>. :-)</span>
<span class="comment-copy"><code>'blabla'.strip()</code></span>
<span class="comment-copy">Nope. <code>str</code> and <code>string</code> are two different things in Python. See <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>str</code></a> and <a href="https://docs.python.org/3/library/string.html#module-string" rel="nofollow noreferrer"><code>string</code></a>. Good that you've edited now.</span>
<span class="comment-copy">Something went wrong with your code formatting. Consult <a href="http://stackoverflow.com/editing-help#code">Markdown help - Code and Preformatted Text</a> and <a href="https://stackoverflow.com/posts/35348201/edit">edit</a> your post.</span>
