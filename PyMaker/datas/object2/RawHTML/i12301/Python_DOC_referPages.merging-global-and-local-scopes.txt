<div class="post-text" itemprop="text">
<p>If this works</p>
<pre><code>x=5
def main():
    for globe in locals():
        globals().update(locals()[globe])
    print x
main()
</code></pre>
<p>then why doesn't this?</p>
<pre><code>x=5
def main():
    for globe in locals():
        globals().update(locals()[globe])
    x+=1
    print x
main()
</code></pre>
<p>The error in the latter statement claims that x is referenced before assignment, however it works in the first example...</p>
</div>
<div class="post-text" itemprop="text">
<p>In python when you assign a variable the declaration happens automatically.
So when you assign a value to <code>x</code> inside the function, python think that is a new local variable, shadowing the global <code>x</code>.</p>
<p>if you want to assign a value to the global <code>x</code> you can do this:</p>
<pre><code>x=5
def main():
    global x

    x += 1
    print x
main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cannot assign a global variable in python without explicitly doing so. By writing <code>x+=1</code> you are assigning a value to x and are implicitly declaring x as a local variable. But it is not defined and therefore you get an error.</p>
<p>The loop has no actual effect, as the <code>locals</code> dictionary is empty.</p>
<p>If you want to use global variables in Python (which you shouldn't, but that's another matter), you should use the <code>global</code> keyword.</p>
</div>
<div class="post-text" itemprop="text">
<p>suffixing 1 and 2 your two functions, you can find local names (syntax slightly different in python 2) :</p>
<pre><code>In [7]: main1.__code__.co_varnames
Out[7]: ('globe',)

In [8]: main2.__code__.co_varnames
Out[8]: ('globe', 'x')
</code></pre>
<p>So <code>x</code> have different status. In the second case the local <code>x</code> mask the global one, so x=x+1 cause the error, because not yet defined.</p>
<p>From <a href="https://docs.python.org/3/reference/executionmodel.html" rel="nofollow">docs</a> :</p>
<blockquote>
<p>If a name is bound in a block, it is a local variable of that block, unless declared as nonlocal or global.(...).If a variable is used in a code block but not defined there, it is a free variable.</p>
</blockquote>
</div>
