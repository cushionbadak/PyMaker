<div class="post-text" itemprop="text">
<p>I am getting hassle checking types for datetime.date. I don't know if getting good typechecks is a hassle in python or if there's something I'm missing:</p>
<pre><code>In [14]: type(datetime.date)
Out[14]: type

In [15]: type(d)
Out[15]: datetime.date

In [16]: arbitrary = datetime.date(1990, 1, 1)

In [17]: type(arbitrary)
Out[17]: datetime.date
</code></pre>
<p>I'd like something simpler than needing to make a fake date within <code>__init__</code> each time</p>
<pre><code>import datetime

class Month(object):

    def __init__(self, dateobj):
        if type(dateobj) == the type of datetime.date:
            we're good
        else:
            raise Exception('Please feed me a dateobj')
</code></pre>
<p>What is the fastest way to check these types, since the type of the base class normally returns a useless <code>type</code>. Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Use:</p>
<pre><code>type(your_variable)
</code></pre>
<p>Or if you know it supposed to be <code>datetime.date</code>:</p>
<pre><code>isinstance(your_variable, datetime.date)
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow"><strong><code>type</code></strong></a> gives you the type of variable, <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow"><strong><code>isinstance</code></strong></a> returns <code>True</code> or <code>False</code>.
Example:</p>
<pre><code>&gt;&gt;&gt; from datetime import date
&gt;&gt;&gt; today = date.today()
&gt;&gt;&gt; type(today)
&lt;type 'datetime.date'&gt;
&gt;&gt;&gt; isinstance(today, datetime.date)
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I use <a href="https://docs.python.org/3/library/functions.html?highlight=isinstance#isinstance" rel="noreferrer"><code>isinstance</code></a> for type checking:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; isinstance('2016', datetime.datetime)
False
&gt;&gt;&gt; today = datetime.datetime.now()
&gt;&gt;&gt; isinstance(today, datetime.datetime)
True
</code></pre>
</div>
<span class="comment-copy">What's wrong with <code>isinstance</code>? You could also do <code>type(d) == datetime.datetime</code>, as <code>type(datetime.datetime) -&gt; type</code> might have suggested. Note that <code>type(...) ==</code> will check for exact matches, while <code>isinstance</code> also works for subclasses.</span>
<span class="comment-copy">What's wrong with duck typing, to start with?</span>
<span class="comment-copy">nothin, that's what I was missing. do yall read the standard library or just find stuff as it comes up</span>
<span class="comment-copy"><code>isinstance</code> and <code>type</code> are not in the standard library, they are <a href="https://docs.python.org/3.5/library/functions.html" rel="nofollow noreferrer">builtins</a>. Being familiar with the builtins is a big plus.</span>
<span class="comment-copy">You don't need to get the type of the class, you need the type of the instance, which for instances of normal classes is the class name. i.e. you don't do <code>if type(dateobj) == the type of datetime.date</code> you just do <code>if type(dateobj) is datetime.date</code>. type() returns the metaclass, and most are constructed using <code>type()</code> builtin, see <a href="https://docs.python.org/3/reference/datamodel.html#metaclasses" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#metaclasses</a></span>
<span class="comment-copy"><code>datetime.datetime</code> is a subclass of <code>datetime.date</code> which may or may not be helpful. In that example, <code>isinstance</code> would return true for both date and datetime.</span>
