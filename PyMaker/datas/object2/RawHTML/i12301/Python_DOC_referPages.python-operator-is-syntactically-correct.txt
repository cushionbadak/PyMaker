<div class="post-text" itemprop="text">
<p>I accidentally wrote:</p>
<pre><code>total_acc =+ accuracy
</code></pre>
<p>instead of:</p>
<pre><code>total_acc += accuracy
</code></pre>
<p>I searched the net and could not find <a href="http://www.tutorialspoint.com/python/python_basic_operators.htm" rel="nofollow noreferrer">anything</a>. So what happened, why does Python think I mean what I am typing?</p>
<p><sub>Computers trust us too much. :)</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>This is the same as if you were to do like <code>total_acc = -accuracy</code>, except positive instead of negative. It basically is the same as <code>total_acc = accuracy</code> though, as adding a + before a value does not change it.</p>
<p>This is called an <em>unary operator</em> as there is only one argument (ex: <code>+a</code>) instead of two (ex: <code>a+b</code>).</p>
<p><a href="https://docs.python.org/2.0/ref/unary.html" rel="noreferrer">This link</a> explains it a little more.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are interested in catching this type of errors early, you can do that with <em>static code analysis</em>. For example, <a href="https://pypi.python.org/pypi/flake8" rel="noreferrer"><code>flake8</code></a>:</p>
<pre><code>$ cat test.py
total_acc = 0
accuracy = 10

total_acc =+ accuracy
$ flake8 test.py
test.py:4:12: E225 missing whitespace around operator
</code></pre>
<p>In this case, it is complaining about the extra space after the <code>+</code>, thinking that you actually meant <code>total_acc = +accuracy</code>. This would have helped you to discover the problem earlier.</p>
<p>FYI, <a href="http://www.pylint.org/" rel="noreferrer"><code>pylint</code></a> would catch that too.</p>
</div>
<div class="post-text" itemprop="text">
<p>It thinks you're doing <code>total_acc = +accuracy</code>, which sets <code>total_acc</code> equal to <code>accuracy</code>. <code>+</code> before a variable without another value causes the variable's <a href="https://docs.python.org/3/library/operator.html#operator.__pos__" rel="nofollow"><code>__pos__</code></a> method to be called. For most types, this is a <code>nop</code>, but there are certain types, e.g. <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow"><code>Decimal</code></a> that implement <code>__pos__</code>.</p>
</div>
<span class="comment-copy"><code>total_acc =+ accuracy</code> is <code>total_acc = +accuracy</code></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/35208351/logic-regarding-the-use-of-spaces-with-unary-operators-in-python3">Logic regarding the use of spaces with Unary Operators in Python3</a></span>
<span class="comment-copy">There ain't any changes regarding this from 2 to 3. But (imo) this post has way better answers. Hence I am not marking this as dupe. (If there is a better dupe, then I have no probs)</span>
<span class="comment-copy">Since you can put as many unary operators in a row as you want, you can really annoy your code reviewers with <code>total_sec+=-+-+-+-+-+-+-+-+-+-+-+-accuracy</code>.</span>
<span class="comment-copy">That's almost as evil as it is the greek semicolon in my C++ code @tdelaney. :)</span>
<span class="comment-copy">Your answer adds <i>really</i> something special here, you deserve an upvote²!</span>
<span class="comment-copy">Yes that's correct, but what happens with <code>+</code> operator?</span>
<span class="comment-copy"><code>+</code> before a value invokes the object's <code>__pos__()</code> method if it has one. Most types don't have such a method, so it's a no-op. <code>Decimal</code> is one type that does use it; <a href="https://stackoverflow.com/questions/16819023/whats-the-purpose-of-the-pos-unary-operator-in-python" title="whats the purpose of the pos unary operator in python">stackoverflow.com/questions/16819023/…</a></span>
<span class="comment-copy">@kindall Huh, I did not know that. Good to know, thanks! I'll add that to my answer.</span>
