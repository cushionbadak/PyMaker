<div class="post-text" itemprop="text">
<p>Why does <code>sum(1,2)</code>  lead to <code>TypeError: 'int' object is not iterable</code>, and <code>sum(1,2,3)</code>  lead to <code>TypeError: sum expected at most 2 arguments, got 3</code>, but it's OK if I add more parentheses?</p>
<pre><code>sum((1,2,3))
</code></pre>
<p>Meanwhile,  <code>max(1,2,3)</code> and <code>max((1,2,3))</code>  are all OK.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is because python built in function sum() takes an argument of a iterable and a second argument of starting position in the iterable. sum(iterable[, start])</p>
<p>This is why adding 3 arguments give you an error. you can read more in the docs: <a href="https://docs.python.org/2/library/functions.html#sum" rel="nofollow">https://docs.python.org/2/library/functions.html#sum</a></p>
<p>max() on the other hand accepts argument differently, max(iterable[, key]) and
max(arg1, arg2, *args[, key]) as found in <a href="https://docs.python.org/2/library/functions.html#max" rel="nofollow">https://docs.python.org/2/library/functions.html#max</a>
It can accept both an iterable or a bunch of numbers as arguments and return the max.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sum</code> takes one mandatory argument which needs to be any sequence of numbers i.e. list or tuple (but not string) of numbers.</p>
<p>An optional second argument would be added to the result if given.</p>
<pre><code>&gt;&gt;&gt; sum((1, 2, 3))
6
&gt;&gt;&gt; sum([1, 2, 3])
6
&gt;&gt;&gt; sum((1, 2, 3), 4)
10
&gt;&gt;&gt; sum([1, 2, 3], 4)
10
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>"Sums start and the items of an <strong>iterable</strong> from left to right and returns the total."<br/>
Just to prove it and perhaps mess with your sanity:</p>
<pre><code>&gt;&gt;&gt; type ((1))
&lt;type 'int'&gt;
&gt;&gt;&gt; sum ((1),2)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'int' object is not iterable

&gt;&gt;&gt; type ((1,))
&lt;type 'tuple'&gt;
&gt;&gt;&gt; sum ((1,),2)
3

&gt;&gt;&gt; type ([1])
&lt;type 'list'&gt;
&gt;&gt;&gt; sum ([1],2)
3

&gt;&gt;&gt; type ([1,])
&lt;type 'list'&gt;
&gt;&gt;&gt; sum ([1,],2)
3
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">They're different functions, and they accept different arguments. <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum takes an iterable plus an optional starting value</a> while <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">max takes an iterable or a set of values</a>.</span>
<span class="comment-copy">Read <a href="https://docs.python.org/2/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">docs.python.org/2/tutorial/â€¦</a> for differences</span>
<span class="comment-copy">@jakevdp you should make that an answer.</span>
