<div class="post-text" itemprop="text">
<p>With the following code,</p>
<pre><code># $ pip install pysha3
import sys
if sys.version_info &lt; (3, 4):
    import sha3

import hashlib

s = hashlib.new("sha3_512")

s.update(b"")
print(s.hexdigest())
</code></pre>
<p>I am getting </p>
<pre><code>0eab42de4c3ceb9235fc91acffe746b29c29a8c366b7c60e4e67c466f36a4304c00fa9caf9d87976ba469bcbe06713b435f091ef2769fb160cdab33d3670680e
</code></pre>
<p>instead of</p>
<pre><code>a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26
</code></pre>
<p>cf. <a href="https://en.wikipedia.org/wiki/SHA-3#Examples_of_SHA-3_variants" rel="nofollow">https://en.wikipedia.org/wiki/SHA-3#Examples_of_SHA-3_variants</a></p>
<p>Could anyone advise me?</p>
</div>
<div class="post-text" itemprop="text">
<p>The pysha3 module you found was based on an <em>draft</em> of the SHA-3 specification, before it was standardised.</p>
<p>The module was created as a POC for <a href="http://bugs.python.org/issue16113" rel="nofollow">Python issue 16113</a>, and the code has not been updated since 2012. The NIST standard wasn't finalised until October 2015. As such, the implementation can't be used if you expect it to follow the released standard.</p>
<p>That ticket links to an implementation that does claim to have been updated to the standard: <a href="https://github.com/bjornedstrom/python-sha3" rel="nofollow">https://github.com/bjornedstrom/python-sha3</a>. That package doesn't appear to be listed on PyPI, but can be installed with pip directly from GitHub:</p>
<pre><code>pip install git+https://github.com/bjornedstrom/python-sha3
</code></pre>
<p>and this package does produce the expected result:</p>
<pre><code>&gt;&gt;&gt; import hashlib
&gt;&gt;&gt; import sha3
&gt;&gt;&gt; hashlib.sha3_512(b'').hexdigest()
b'a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26'
</code></pre>
<p>This package doesn't patch the built-in <code>hashlib.new()</code> constructor, but that's easily done by plugging in the constructor into the module cache:</p>
<pre><code>&gt;&gt;&gt; hashlib.__builtin_constructor_cache['sha3_512'] = sha3.sha3_512
&gt;&gt;&gt; hashlib.new('sha3_512')
&lt;sha3.SHA3512 object at 0x10b381a90&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>SHA3</code> has been added to the built-in <a href="https://docs.python.org/3/library/hashlib.html#module-hashlib" rel="nofollow noreferrer"><code>hashlib</code></a> module in Python 3.6:</p>
<blockquote>
<p><a href="https://docs.python.org/3/whatsnew/3.6.html" rel="nofollow noreferrer">What’s New In Python 3.6</a></p>
<p>The <code>SHA-3</code> hash functions <code>sha3_224()</code>, <code>sha3_256()</code>, <code>sha3_384()</code>,
  <code>sha3_512()</code>, and <code>SHAKE</code> hash functions <code>shake_128()</code> and <code>shake_256()</code> were
  added. (Contributed by Christian Heimes in issue 16113. Keccak Code
  Package by Guido Bertoni, Joan Daemen, Michaël Peeters, Gilles Van
  Assche, and Ronny Van Keer.)</p>
</blockquote>
<p>It can be used in the follow way:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; import hashlib
&gt;&gt;&gt; s = hashlib.new("sha3_512")    # sha3_224, sha3_256 and sha3_384 are also available
&gt;&gt;&gt; s.update(b"")
&gt;&gt;&gt; print(s.hexdigest())
a69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26
</code></pre>
</div>
<span class="comment-copy">How was the expected output determined?</span>
<span class="comment-copy">You could include a link to the <a href="https://en.wikipedia.org/wiki/SHA-3#Examples_of_SHA-3_variants" rel="nofollow noreferrer">Wikipedia page</a>.</span>
<span class="comment-copy">@MartijnPieters: I have to say, I find that edit <i>very</i> unhelpful.   (For example, it makes it much harder to check for an endian problem.)  Anything which forces SO to display horizontal scroll bars is a BadThing(TM) in my opinion.  I don't see what was wrong with a proportional font for the display.</span>
<span class="comment-copy">Have you tried reporting a bug to the <code>pysha3</code> project? I don't see anything specifically wrong with your approach.</span>
<span class="comment-copy">@MartinBonner: I was more concerned with producing actual output for the code shown. Feel free to use a blockquote instead of a code block.</span>
<span class="comment-copy">I am seeing  "sha3.c:27:20: fatal error: Python.h: No such file or directory  compilation terminated.  error: command 'x86_64-linux-gnu-gcc' failed with exit status 1  "</span>
<span class="comment-copy">follow by " Cleaning up... Command /usr/bin/python -c "import setuptools, tokenize;__file__='/tmp/pip-do9L2k-build/setup.py';exec(compile(getattr(tokenize, 'open', open)(<b>file</b>).read().replace('\r\n', '\n'), <b>file</b>, 'exec'))" install --record /tmp/pip-NjGrG3-record/install-record.txt --single-version-externally-managed --compile --user failed with error code 1 in /tmp/pip-do9L2k-build Storing debug log for failure in /home/michachan/.pip/pip.log "</span>
<span class="comment-copy">I did  <code>sudo apt-get install python-dev</code>  It's installed now.</span>
