<div class="post-text" itemprop="text">
<p>I am trying to use "requests" package and retrieve info from Github, like the Requests doc page explains:</p>
<pre><code>import requests
r = requests.get('https://api.github.com/events')
</code></pre>
<p>And this:</p>
<pre><code>with open(filename, 'wb') as fd:
    for chunk in r.iter_content(chunk_size):
        fd.write(chunk)
</code></pre>
<p>I have to say I don't understand the second code block. </p>
<ul>
<li>filename - in what form do I provide the path to the file if created? where will it be saved if not?</li>
<li>'wb' - what is this variable? (shouldn't second parameter be 'mode'?)</li>
<li>following two lines probably iterate over data retrieved with request and write to the file</li>
</ul>
<p>Python docs explanation also not helping much.</p>
<p><strong>EDIT: What I am trying to do:</strong></p>
<ul>
<li>use Requests to connect to an API (Github and later Facebook GraphAPI)</li>
<li>retrieve data into a variable</li>
<li>write this into a file (later, as I get more familiar with Python, into my local MySQL database)</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<h3>Filename</h3>
<p>When using <code>open</code> the path is relative to your current directory. So if you said <code>open('file.txt','w')</code> it would create a new file named <code>file.txt</code> in whatever folder your python script is in. You can also specify an absolute path, for example <code>/home/user/file.txt</code> in linux. If a file by the name <code>'file.txt'</code> already exists, the contents will be completely overwritten.</p>
<h3>Mode</h3>
<p>The <code>'wb'</code> option is indeed the mode. The <code>'w'</code> means write and the <code>'b'</code> means bytes. You use <code>'w'</code> when you want to write (rather than read) froma file, and you use <code>'b'</code> for binary files (rather than text files). It is actually a little odd to use <code>'b'</code> in this case, as the content you are writing is a text file. Specifying <code>'w'</code> would work just as well here. Read more on the modes in the <a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow">docs for open</a>.</p>
<h3>The Loop</h3>
<p>This part is using the <code>iter_content</code> method from <code>requests</code>, which is intended for use with large files that you may not want in memory all at once. This is unnecessary in this case, since the page in question is only 89 KB. See the <a href="http://docs.python-requests.org/en/master/api/" rel="nofollow">requests library docs</a> for more info.</p>
<h3>Conclusion</h3>
<p>The example you are looking at is meant to handle the most general case, in which the remote file might be binary and too big to be in memory. However, we can make your code more readable and easy to understand if you are only accessing small webpages containing text:</p>
<pre><code>import requests
r = requests.get('https://api.github.com/events')

with open('events.txt','w') as fd:
    fd.write(r.text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>filename</code> is a string of the path you want to save it at. It accepts either local or absolute path, so you can just have <code>filename = 'example.html'</code></p>
<p><code>wb</code> stands for <code>WRITE</code> &amp; <code>BYTES</code>, learn more <a href="http://pymbook.readthedocs.org/en/latest/file.html" rel="nofollow">here</a></p>
<p>The for loop goes over the entire returned content (in chunks incase it is too large for proper memory handling), and then writes them until there are no more. Useful for large files, but for a single webpage you could just do: </p>
<pre><code># just W becase we are not writing as bytes anymore, just text.
with open(filename, 'w') as fd: 
    fd.write(r.content)
</code></pre>
</div>
<span class="comment-copy">Your second question is confusing. "wb" is a string representing the mode, yes.</span>
<span class="comment-copy">But official documentation says it can be 'r', 'w', 'r+' and 'a'? :) They are all new to me so could be that I am mistaken.</span>
<span class="comment-copy">Thank you Daniel! Do you have another solution how I can go about this?</span>
<span class="comment-copy">You should link to the places you think you're reading these things. The full list of mode parameters to <code>open</code> is <a href="https://docs.python.org/3/library/functions.html?highlight=open#open" rel="nofollow noreferrer">here</a>, where you can see what the b stands for.</span>
<span class="comment-copy">You haven't described what you are trying to do. Almost certainly, the GitHub api responds with JSON, so you should use the JSON methods described above the bit you read.</span>
<span class="comment-copy">Demon, how does Python know where the file is (if using a previously created file)? I suppose it has to be in the same directory like my .py script files in that case?</span>
<span class="comment-copy">for a local file it is based on the <code>current working directory</code>, so if you run your python script your home folder then change directories and run again, it will go into that new directory. The safe way to implement it is a full path such as "/home/Alex/example.html" (unix example) or "C:\\example.html" (windows example)</span>
