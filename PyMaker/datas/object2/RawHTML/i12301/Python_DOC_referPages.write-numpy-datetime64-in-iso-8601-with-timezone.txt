<div class="post-text" itemprop="text">
<p>How can the time zone be controlled when writing numpy datetime64 objects as an ISO 8601 string?  Specifically, I would like the time zone to be "+0000", just like the input below.  For this very simple example I just want it to print back the original string.</p>
<pre><code>import numpy
print(numpy.datetime64('2014-03-07T17:52:00.000+0000'))
</code></pre>
<p>For me, it returns</p>
<pre><code>2014-03-07T12:52:00.000-0500
</code></pre>
<p>I am using python 3.4, numpy 1.9.2, and windows.</p>
<p><a href="https://stackoverflow.com/questions/25134639/how-to-force-python-print-numpy-datetime64-with-specified-timezone/32764078#32764078">This</a> question is similar, but the first two answers don't actually answer the question and the third answer is specific to unix.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>s = '2014-03-07T17:52:00.000+0000'
print(numpy.datetime64(s).item().replace(tzinfo=pytz.UTC).isoformat('T'))
</code></pre>
<p>Thanks to ShadowRanger for getting me going in the right direction.  item gets naive datetime from datetime64, then replace time zone with UTC since I know that's what it is in this case, then get it in ISO format with the 'T' separator.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>import numpy, time, os

os.environ['TZ'] = 'GMT'
time.tzset()


print(numpy.datetime64('2014-03-07T17:52:00.000+0000'))
</code></pre>
<p>based on this stackoverflow answer:</p>
<p><a href="https://stackoverflow.com/a/32764078/5915424">https://stackoverflow.com/a/32764078/5915424</a></p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/25134639/how-to-force-python-print-numpy-datetime64-with-specified-timezone">How to force python print numpy datetime64 with specified timezone?</a></span>
<span class="comment-copy">@ShadowRanger which answer actually answers this question?</span>
<span class="comment-copy">The accepted answer correctly states that <code>numpy</code> doesn't support any explicit datetime formatting, the highest voted shows how converting to a Python <code>datetime</code> allows you to achieve the same effect.</span>
<span class="comment-copy">@ShadowRanger the highest voted answer end with "2013-03-09 22:30:54", which is not what that question or mine asked for.  If it is impossible, I would like to know more details as to why because that seems very odd.</span>
<span class="comment-copy">Once you've converted to a Python native datetime, you can use <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime" rel="nofollow noreferrer"><code>datetime.strftime</code></a> to format it however you like. <code>numpy</code> just doesn't seem to provide any formatting operators; Python types only have one <code>__str__</code> method, and it doesn't take arguments, so you need special formatting function (or use <code>__format__</code> to define a format minilanguage). Internally, <code>datetime64</code> doesn't store a timezone at all; it reads it to convert to UTC, but discards it to minimize storage requirements after.</span>
<span class="comment-copy">that method is only available on unix, I am using windows.  I also edited the question to make that known.</span>
