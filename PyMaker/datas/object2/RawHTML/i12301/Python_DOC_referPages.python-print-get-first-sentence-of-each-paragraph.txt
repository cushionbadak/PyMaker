<div class="post-text" itemprop="text">
<p>This is the code I have, but it prints the whole paragraph. How to print the first sentence only, up to the first dot?</p>
<pre><code>from bs4 import BeautifulSoup
import urllib.request,time

article = 'https://www.theguardian.com/science/2012/\
oct/03/philosophy-artificial-intelligence'

req = urllib.request.Request(article, headers={'User-agent': 'Mozilla/5.0'})
html = urllib.request.urlopen(req).read()

soup = BeautifulSoup(html,'lxml')

def print_intro():
    if len(soup.find_all('p')[0].get_text()) &gt; 100:
        print(soup.find_all('p')[0].get_text())
</code></pre>
<p>This code prints:</p>
<blockquote>
<p>To state that the human brain has capabilities that are, in some
  respects, far superior to those of all other known objects in the
  cosmos would be uncontroversial. The brain is the only kind of object
  capable of understanding that the cosmos is even there, or why there
  are infinitely many prime numbers, or that apples fall because of the
  curvature of space-time, or that obeying its own inborn instincts can
  be morally wrong, or that it itself exists. Nor are its unique
  abilities confined to such cerebral matters. The cold, physical fact
  is that it is the only kind of object that can propel itself into
  space and back without harm, or predict and prevent a meteor strike on
  itself, or cool objects to a billionth of a degree above absolute
  zero, or detect others of its kind across galactic distances.</p>
</blockquote>
<p>BUT I ONLY want it to print:</p>
<blockquote>
<p>To state that the human brain has capabilities that are, in some
  respects, far superior to those of all other known objects in the
  cosmos would be uncontroversial.</p>
</blockquote>
<p>Thanks for help</p>
</div>
<div class="post-text" itemprop="text">
<p>Split the text on that dot; for a single split, using <a href="https://docs.python.org/3/library/stdtypes.html#str.partition" rel="nofollow"><code>str.partition()</code></a> is faster than <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow"><code>str.split()</code></a> with a limit:</p>
<pre><code>text = soup.find_all('p')[0].get_text()
if len(text) &gt; 100:
    text = text.partition('.')[0] + '.'
print(text)
</code></pre>
<p>If you only need to process the <em>first</em> <code>&lt;p&gt;</code> element, use <code>soup.find()</code> instead:</p>
<pre><code>text = soup.find('p').get_text()
if len(text) &gt; 100:
    text = text.partition('.')[0] + '.'
print(text)
</code></pre>
<p>For your given URL, however, the sample text is found as the <em>second</em> paragraph:</p>
<pre><code>&gt;&gt;&gt; soup.find_all('p')[1]
&lt;p&gt;&lt;span class="drop-cap"&gt;&lt;span class="drop-cap__inner"&gt;T&lt;/span&gt;&lt;/span&gt;o state that the human brain has capabilities that are, in some respects, far superior to those of all other known objects in the cosmos would be uncontroversial. The brain is the only kind of object capable of understanding that the cosmos is even there, or why there are infinitely many prime numbers, or that apples fall because of the curvature of space-time, or that obeying its own inborn instincts can be morally wrong, or that it itself exists. Nor are its unique abilities confined to such cerebral matters. The cold, physical fact is that it is the only kind of object that can propel itself into space and back without harm, or predict and prevent a meteor strike on itself, or cool objects to a billionth of a degree above absolute zero, or detect others of its kind across galactic distances.&lt;/p&gt;
&gt;&gt;&gt; text = soup.find_all('p')[1].get_text()
&gt;&gt;&gt; text.partition('.')[0] + '.'
'To state that the human brain has capabilities that are, in some respects, far superior to those of all other known objects in the cosmos would be uncontroversial.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def print_intro():
    if len(soup.find_all('p')[0].get_text()) &gt; 100:
        paragraph = soup.find_all('p')[0].get_text()
        phrase_list = paragraph.split('.')
        print(phrase_list[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>split</code> the paragraph at the first <code>period</code>. Argument <code>1</code> species the <code>MAXSPLIT</code> and saves your time from unneccessary extra splitting.</p>
<pre><code>def print_intro():
    if len(soup.find_all('p')[0].get_text()) &gt; 100:
        my_paragraph = soup.find_all('p')[0].get_text()
        my_list = my_paragraph.split('.', 1)
        print(my_list[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use <code>find('.')</code>, it return the index of the first occurence of what you're looking for.</p>
<p>So if the paragraph is stored in a variable called <code>paragraph</code></p>
<pre><code>sentence_index = paragraph.find('.')
# add the '.'
sentence += 1
print(paragraph[0: sentence_index])
</code></pre>
<p>Obviously here is missing the control part like check if the string contained in <code>paragraph</code> variable has '.' etc.. anyway find() return -1 if it does not find the substring you're looking for.</p>
</div>
<span class="comment-copy">After you get the first paragrapgh (i.e. first &lt;p&gt; element), you can split the string to string list. <code>mystring.split(sep='.')</code>. After that you can get the first list element. Can you try this?</span>
<span class="comment-copy">I get different output for that URL, <code>'\n\nWednesday 3 October 2012 07.00\xa0BST\n\n\nLast modified on Sunday 10 January 2016 09.11\xa0GMT\n\n'</code>. It is the <i>second</i> <code>&lt;p&gt;</code> tag that holds that text.</span>
<span class="comment-copy">Thanks everyone. This worked. However, I don't know what the "[0]" does in this line...anyone can explain?</span>
<span class="comment-copy">@skeitel <code>str.partition()</code> returns a tuple with three elements (head, partition string, and tail), but we are only interested in the first value of those.</span>
<span class="comment-copy">I get it now. Thank you</span>
<span class="comment-copy">This needlessly splits more than needed. At the very least limit the split (second argument to <code>str.split()</code>).</span>
