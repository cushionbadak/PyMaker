<div class="post-text" itemprop="text">
<p>I have a strange problem. Trying to write a network app in python. Currently I am using osx and I have troubles with sockets. My code works fine on debian, but when I try to use <code>recv(buff_size)</code> on a connected tcp socket I get this error:<br/>
<code>socket.error: [Errno 35] Resource temporarily unavailable</code> </p>
</div>
<div class="post-text" itemprop="text">
<p>Are you using non-blocking sockets, or timeouts? <a href="http://www.ioplex.com/~miallen/errcmp.html" rel="nofollow noreferrer">According to this table</a>, Errno 35 is <code>EAGAIN</code> on OSX; according to <a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man2/recv.2.html" rel="nofollow noreferrer">Apple man pages <code>recv(2)</code></a>:</p>
<blockquote>
<p>[<code>EAGAIN</code>]</p>
<p>The socket is marked non-blocking, and the receive operation would block, or a
  receive timeout had been set, and the timeout expired before data were received.</p>
</blockquote>
<p>It could also be possible that <a href="https://docs.python.org/3/library/socket.html#socket.setdefaulttimeout" rel="nofollow noreferrer"><code>socket.setdefaulttimeout</code></a> was called with non-zero value (in which case <a href="https://docs.python.org/3/library/socket.html#socket.getdefaulttimeout" rel="nofollow noreferrer"><code>socket.getdefaulttimeout</code></a> would return non-none value.</p>
<hr/>
<p>See also <a href="https://stackoverflow.com/questions/5454275/spurious-recv-eagain-on-osx">Spurious recv() EAGAIN on OSX?</a>; <a href="https://stackoverflow.com/questions/735249/blocking-socket-returns-eagain">Blocking socket returns EAGAIN</a>.</p>
</div>
<span class="comment-copy">I didn't set sockets to be either blocking or non blocking. I thought they are blocking by default. When I have set it manually to blocking, it works.</span>
<span class="comment-copy">But in an example, that I got from some tutorial I don't see setting socket to blocking and yet <code>recv()</code> just blocks the socket till something comes to the socket.</span>
<span class="comment-copy">Yeah, I'd expect them to be blocking as well, but maybe something else is setting a default.</span>
<span class="comment-copy">What confuses me most, is that on debian it is blocking by default, on mac sometimes it is blocking when You don't specify and sometimes not. Messy. But it teaches user, to always take care of everything and make sure, that everything is how he wants it to be</span>
