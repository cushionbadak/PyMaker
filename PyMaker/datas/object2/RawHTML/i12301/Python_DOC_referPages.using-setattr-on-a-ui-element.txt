<div class="post-text" itemprop="text">
<p>I am trying to use setattr on a UI element (QLineEdit) to fill in with what was read from a text file.   I believe in order to set a QlineEdit it would be <em>self.lineEdit.setText()</em> </p>
<p>The text file I am reading consists of a Name and it's value:</p>
<p>Name1=Value1</p>
<p>splitLine[0] consists of "Name1", and splitLine[1] is "Value1".  self.Name1 is the name of the lineEdit I am changing, hence I used eval() to pass the actual value "Name1" to setattr.</p>
<p>I am not sure how to go about setting the value.  Right now I have tried these with no success:</p>
<pre><code>setattr(self, eval("splitLine[0]"), eval("splitLine[1]"))

setattr(self, eval("splitLine[0]"), setText(eval("splitLine[1]")))
</code></pre>
<p>Also, using:</p>
<pre><code>self.splitLine[0].setText(splitLine[1])
</code></pre>
<p>Does not work as it thinks the actual object is called splitLine, rather than it's value (hence why I tried eval() ).</p>
<pre><code># AttributeError: 'Ui_Dialog' object has no attribute 'splitLine'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <code>getattr</code>, not <code>setattr</code>. That is, you first need to <strong>get</strong> the line-edit object (via its attribute name), so that you can then call its <code>setText</code> method to populate the field:</p>
<pre><code>    lineEdit = getattr(self, splitLine[0])
    lineEdit.setText(splitLine[1])
</code></pre>
<p>or in one line:</p>
<pre><code>    getattr(self, splitLine[0]).setText(splitLine[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's no need for <code>eval</code>; <code>splitLine</code> contains strings, which is the required type for the second argument and sufficient for the third argument.</p>
<pre><code>setattr(self, splitLine[0], splitLine[1])
</code></pre>
</div>
<span class="comment-copy">What attributes are you trying to set?  Most Qt objects don't have any attributes you can set.  You normally have to use the accessor/mutator methods.</span>
<span class="comment-copy">There doesn't seem to be any need of your <code>eval</code> calls, since you're using a constant string for each of them. Why not just use <code>splitline[0]</code> and <code>splitline[1]</code>?</span>
<span class="comment-copy">self.splitLine[0].setText(splitLine[1]) is not valid  The Qt object I am setting is:   self.Name1  and  splitLine[0] = "Name1"  How am I to get that value out of splitLine[0] in order to set the Qt object?</span>
<span class="comment-copy">I am trying to set a QLineEdit UI field.  Why would I use getattr?  I am confused.</span>
<span class="comment-copy">@sz200. I have updated my answer to make it clearer. Did you actually try the code?</span>
<span class="comment-copy">Thank you @ekhumoro.  But I would like to understand this.  why would assigning the value to another variable lineEdit, and then calling setText on lineEdit give me the result?  But say...       self.splitLine[0].setText(splitLine[1])  Will not and instead I get:     # AttributeError: 'Ui_Dialog' object has no attribute 'splitLine'?  I just don't get it and would like to understand the logic.</span>
<span class="comment-copy">The <a href="http://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">getattr</a> function allows you to get an attribute by using a string corresponding to its name. The actual attribute name of your line-edit is "Name1", not "splitline[0]". You need to be able to do <code>self.Name1.setText(splitline[1])</code>. The <code>self.Name1</code> part is done by <code>getattr(self, splitline[0])</code>, where <code>splitline[0]</code> <i>contains</i> the string "Name1".</span>
<span class="comment-copy">Ok thanks I understand.</span>
<span class="comment-copy">Though the call doesn't work on a Qt object.</span>
