<div class="post-text" itemprop="text">
<p>I was wondering if tuple unpacking can be used in a <em>"index from ... to"</em> kind of style, so with <code>inds = (a,b)</code>, <code>M[*inds]</code> would lead to <code>M[a:b]</code>.</p>
<p>I often have tuples which contain the indices that I use to slice my data into some interesting subset, and would think that something like the proposed above would be convenient. Is there a way to do this?</p>
<p>thanks for input</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use tuple unpacking, but you have to unpack them into a <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow"><code>slice</code></a>, and then use the slice for indexing:</p>
<pre><code>&gt;&gt;&gt; A = list(range(10))
&gt;&gt;&gt; inds = 3, 6
&gt;&gt;&gt; A[slice(*inds)]
[3, 4, 5]
</code></pre>
<p>Also works with <code>numpy</code>:</p>
<pre><code>&gt;&gt;&gt; B = np.array([[1,2,3],[4,5,6],[7,8,9]])
&gt;&gt;&gt; ind_x, ind_y = (0,2), (1,None)
&gt;&gt;&gt; B[slice(*ind_x),slice(*ind_y)]
array([[2, 3],
       [5, 6]])
</code></pre>
<p>Remember that <code>A[start:stop:step]</code> is just syntactic sugar for <code>A[slice(start,stop,step)]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot use <code>tuples</code> (at least not in the start-stop-step way). But you can always use <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow">slice</a>.</p>
<p>some examples:</p>
<pre><code>indx = slice(start, stop, step)
indy = slice(starty, stopy, stepy)
sliced = M[indx]
sliced2 = M[:,indy]
sliced3 = M[(indx, indy)]
</code></pre>
</div>
<span class="comment-copy">You can try to patch/overload the <b>getitem</b> method of your list objects, such thath <code>M[inds]</code> is supported.</span>
<span class="comment-copy">@grgrsr If this helped you, you might consider <i>accepting</i> the answer to mark the question as being resolved.</span>
<span class="comment-copy">thank you for reminding me. Still new to this stackoverflow system.</span>
