<div class="post-text" itemprop="text">
<p>I would like to create nested dict in python3, I've the following list(from a sql-query):</p>
<pre><code> [('madonna', 'Portland', 'Oregon', '0.70', '+5551234', 'music', datetime.date(2016, 9, 8), datetime.date(2016, 9, 1)), ('jackson', 'Laredo', 'Texas', '2.03', '+555345', 'none', datetime.date(2016, 5, 23), datetime.date(2016, 5, 16)), ('bohlen', 'P', 'P', '2.27', '+555987', 'PhD Student', datetime.date(2016, 9, 7))]
</code></pre>
<p>I would like to have the following output:</p>
<pre><code>{madonna:{city:Portland, State:Oregon, Index: 0.70, Phone:+5551234, art:music, exp-date:2016, 9, 8, arrival-date:datetime.date(2016, 5, 23)},jackson:{city: Laredo, State:Texas........etc...}}
</code></pre>
<p>Can somebody show me an easy to understand code?</p>
<p>I try:</p>
<pre><code>from collections import defaultdict
usercheck = defaultdict(list)
for accname,  div_ort,  standort,  raum,  telefon,  position,  exp, dep in cur.fetchall():
    usercheck(accname).append[..]
</code></pre>
<p>but this don't work, I can't think any further myself</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use Dict Comprehension (defined <a href="https://www.python.org/dev/peps/pep-0274/" rel="nofollow">here</a>) to dynamically create a dictionary based on the elements of a list:</p>
<pre><code>sql_list = [
    ('madonna', 'Portland', 'Oregon', '0.70', '+5551234', 'music', datetime.date(2016, 9, 8), datetime.date(2016, 9, 1)),
    ('jackson', 'Laredo', 'Texas', '2.03', '+555345', 'none', datetime.date(2016, 5, 23), datetime.date(2016, 5, 16)),
    ('bohlen', 'P', 'P', '2.27', '+555987', 'PhD Student', datetime.date(2016, 9, 7))
]
sql_dict = {
    element[0]: {
        'city': element[1],
        'state': element[2],
        'index': element[3],
        'phone': element[4],
        'art': element[5],
    } for element in sql_list
}
</code></pre>
<p>Keep in mind that every item in the dictionary needs to have a key and a value, and in your example you have a few values with no key.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have a list of the columns, you can use the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> function:</p>
<pre><code>from collections import defaultdict
import datetime

# list of columns returned from your database query
columns = ["city", "state", "index", "phone", "art", "exp-date", "arrival-date"]
usercheck = defaultdict(list)
for row in cur.fetchall():
    usercheck[row[0]] = defaultdict(list, zip(columns, row[1:]))

print usercheck
</code></pre>
<p>This will output a dictionary like:</p>
<pre><code>defaultdict(&lt;type 'list'&gt;, {'madonna': defaultdict(&lt;type 'list'&gt;, {'city': 'Portland', 'art': 'music', 'index': '0.70', 'phone': '+5551234', 'state': 'Oregon', 'arrival-date': datetime.date(2016, 9, 1), 'exp-date': datetime.date(2016, 9, 8)}), 'jackson': defaultdict(&lt;type 'list'&gt;, {'city': 'Laredo', 'art': 'none', 'index': '2.03', 'phone': '+555345', 'state': 'Texas', 'arrival-date': datetime.date(2016, 5, 16), 'exp-date': datetime.date(2016, 5, 23)}), 'bohlen': defaultdict(&lt;type 'list'&gt;, {'city': 'P', 'art': 'PhD Student', 'index': '2.27', 'phone': '+555987', 'state': 'P', 'arrival-date': None, 'exp-date': datetime.date(2016, 9, 7)})})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When using <code>defaultdict</code>, the argument specifies the default value type in the dictionary.</p>
<pre><code>from collections import defaultdict
usercheck = defaultdict(dict)
for accname,  div_ort,  standort,  raum,  telefon, position,  exp, dep in cur.fetchall():
    usercheck[accname]['city'] = div_ort
    usercheck[accname]['state'] = standout
    ...
</code></pre>
<p>The keys in the dictionary are referenced using <code>[key]</code>, not <code>(key)</code>.</p>
</div>
<span class="comment-copy">What's wrong with what you have? I ran your code it it worked fine.</span>
<span class="comment-copy">Your list has invalid syntax - you're missing a closing paren on the last item, and the last item does not have a second date.</span>
<span class="comment-copy">you right, its just an example, it doesn't matter for the code, i post it only that you can see what i have and what i want</span>
