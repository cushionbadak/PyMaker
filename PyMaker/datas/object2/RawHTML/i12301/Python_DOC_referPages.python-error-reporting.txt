<div class="post-text" itemprop="text">
<p>I've recently started development with Python, and I've noticed that whenever my code generates an runtime error, the details flash into the output for a split-second and then the program closes. Is there a way to either stop the program from closing when this happens or to log the errors into a textfile?</p>
</div>
<div class="post-text" itemprop="text">
<p>In addition to the suggestions in the comments which all work well, you can always (and should always) use the <code>logging</code> module. You can set up basic logging facilities quickly, and it allows to change the level of information displayed to the user.</p>
<p>(From the <a href="https://pymotw.com/2/logging/" rel="nofollow">'Python Module of The Week' website</a>)</p>
<pre><code>import logging

LOG_FILENAME = 'logging_example.out'
logging.basicConfig(filename=LOG_FILENAME,
                    level=logging.DEBUG)

logging.debug('This message should go to the log file')

f = open(LOG_FILENAME, 'rt')
try:
    body = f.read()
finally:
    f.close()

print 'FILE:'
print body
</code></pre>
<p>You can log to different levels (i.e. info, warning, debug, error) and have those displayed while the code is running, or hiding them, by setting the level arg of <code>logging.basicConfig()</code>.</p>
<p><a href="https://docs.python.org/3/howto/logging.html" rel="nofollow">How To Logging</a></p>
<p><a href="https://docs.python.org/3/howto/logging-cookbook.html" rel="nofollow">Logging Cookbook</a></p>
</div>
<div class="post-text" itemprop="text">
<p>To sum up the above comments, you can:</p>
<ul>
<li><p>run your file from the command-line with <code>python filename.py</code></p></li>
<li><p>log the errors to any text file with <code>python filename.py &gt; output.txt</code></p></li>
<li><p>use a Python <a href="https://en.wikipedia.org/wiki/Integrated_development_environment" rel="nofollow">IDE</a> like <a href="https://www.jetbrains.com/pycharm/" rel="nofollow">PyCharm</a></p></li>
</ul>
<p>All of the above should help you reading the error stack trace.</p>
</div>
<span class="comment-copy">Run your python programs from the command-line with <code>python filename.py</code>.</span>
<span class="comment-copy">Log the errors with <code>python filename.py &gt; output.txt</code>.</span>
<span class="comment-copy">Or use any Python IDE, e.g. <a href="https://www.jetbrains.com/pycharm/" rel="nofollow noreferrer">jetbrains.com/pycharm</a></span>
<span class="comment-copy">Note that just <code>filename.py</code> should work, too.</span>
<span class="comment-copy">@pp_ only for unix systems. Under Windows this is no working.</span>
<span class="comment-copy">Of course using the logging module for scripts with a few lines may seem overkill; it will still work, but dumping it to file with <code>&gt;</code> may serve your needs better if you're just prototyping. For modules and programs, <code>logging</code> is a must.</span>
<span class="comment-copy">There is a typo, it's <code>stack trace</code>.</span>
