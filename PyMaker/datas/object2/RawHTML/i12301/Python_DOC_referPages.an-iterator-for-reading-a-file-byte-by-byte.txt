<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1035340/reading-binary-file-and-looping-over-each-byte">Reading binary file and looping over each byte</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>Is there an iterator for reading a file <a href="https://docs.python.org/3.1/library/functions.html#bytearray" rel="nofollow">byte by byte</a>?</p>
</div>
<div class="post-text" itemprop="text">
<p>There isn't an iterator for byte by byte but it is easier enough to create a generator to do it:</p>
<pre><code>def bytefile(f):
    b = f.read(1)
    while b:
        yield b
        b = f.read(1)

with open('&lt;file&gt;', 'rb') as f:
    for b in bytefile(f):
        &lt;do something&gt;
</code></pre>
<p>But this really isn't very efficient, and it's not clear what you are trying to do.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://docs.python.org/3/library/mmap.html" rel="nofollow"><code>mmap</code></a> the file, if you're using *nix or Windows. This should be the <em>most</em> efficient way to iterate over the bytes of a file:</p>
<pre><code>import mmap

with open('user.py', 'rb') as f:
    # memory-map the file, size 0 means whole file
    mm = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)
    for b in mm:
        print(b)
    mm.close()
</code></pre>
</div>
<span class="comment-copy">You can use file.read(1) to read a single character from a file. If you really need to this can be typecast to a byte.</span>
<span class="comment-copy">it's pretty easy to read the file line-by-line, then iterate the characters in the line, though I know that's not exactly what you're asking.</span>
