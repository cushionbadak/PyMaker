<div class="post-text" itemprop="text">
<p><code>datetime</code>, Python's builtin module, have some classes.</p>
<p>But I can not understand well parameter of <code>datetime.time</code> class.</p>
<p><code>time</code> class have <code>tzinfo</code> param, default is <code>None</code>.</p>
<p>I want to know why <code>time</code> class needs timezone information.</p>
<p>In case of <code>datetime</code> class, it has <code>.astimezone</code> method and we can change data by timezone information. But <code>time</code> class have no method like <code>.astimezone</code>.</p>
<p>Is it just reserved for <code>datetime.combine</code> classmethod? or is there some important story about time and timezone?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I want to know why time class needs timezone information.</p>
</blockquote>
<p>I find it useful e.g. if we're dealing with events that occur in the same time regardless of the date (e.g. a scheduled job), and need to display, manipulate and compare, in a different timezone.</p>
<h2>How to get a TZ-aware <code>datetime.time</code> object</h2>
<blockquote>
<p><strong>datetime.timetz()</strong></p>
<p>Return time object with same hour, minute, second,
  microsecond, and tzinfo attributes. See also method time().</p>
</blockquote>
<p>So as for my example use case, I'd pull the <code>datetime.time</code> object from my tz-aware <code>datetime.datetime</code> object, using <code>datetime.datetime.timetz()</code>, which conserves it's <code>tzinfo</code></p>
<p>This would fit in a <code>datetime.time</code> object, as opposed to a <code>datetime.datetime</code> object that also carries the date information.</p>
<blockquote>
<p>But time class have no method like .astimezone.</p>
</blockquote>
<h2>You can't TZ-convert using time only</h2>
<p>As for the reason there is no <code>time.astimezone()</code>, I think it might be because without a date, it is impossible to guess the effects of DST transitions and other non-fixed UTC offsets.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>time</code> class makes use of a <code>tzinfo</code> for comparison and operations. For example, 9:00 AM in US/Pacific is not equal to 9:00 AM in US/Eastern. Also, python can raise a TypeError if you are comparing an aware to a naive time, i.e., comparing 9:00 AM in US/Pacific to just "9:00 AM" </p>
<p>From <a href="https://docs.python.org/3/library/datetime.html#datetime.time.tzinfo" rel="nofollow">the docs</a>: </p>
<blockquote>
<p>comparison of time to time, where a is considered less than b when a precedes b in time. If one comparand is naive and the other is aware, TypeError is raised if an order comparison is attempted. For equality comparisons, naive instances are never equal to aware instances.</p>
</blockquote>
</div>
