<div class="post-text" itemprop="text">
<p>The python documentation has information on the grammar of <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow">formatting strings</a>, however I can't seem to find information on how to read the table defining the grammar for the replacement field.</p>
<pre><code>replacement_field ::=  "{" [field_name] ["!" conversion] [":" format_spec] "}"
field_name        ::=  arg_name ("." attribute_name | "[" element_index "]")*
arg_name          ::=  [identifier | integer]
attribute_name    ::=  identifier
element_index     ::=  integer | index_string
index_string      ::=  &lt;any source character except "]"&gt; +
conversion        ::=  "r" | "s" | "a"
format_spec       ::=  &lt;described in the next section&gt;
</code></pre>
<p>There's also a similar table in the <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow">format specification section</a>.</p>
<p>I understand portions of the table, like the <code>::=</code> separates the definiendum and definien, characters inside quotes are literals, and the <code>|</code> means "or", but the rest of the table escapes me. </p>
</div>
<div class="post-text" itemprop="text">
<p>This kind of formatting is what's known as Backus-Naur Form. <a href="https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form" rel="nofollow">More information found on BNF here.</a> Basically, BNF is a set of derivation rules.</p>
<p>Defining the symbols:</p>
<ul>
<li>Anything other than the meta symbols ::=, |, and class names in closed in &lt;,&gt; are symbols of the language being defined (e.g. This Python example)</li>
<li>The meta symbols ::= is to be interpreted as "is defined as"</li>
<li>The | is used to separate alternative definitions and is interpreted as "or"</li>
<li>The meta symbols &lt;,&gt; are delimiters enclosing a class name. </li>
</ul>
<p>A little bit of dissecting this example to get you started:</p>
<pre><code>replacement_field ::=  "{" [field_name] ["!" conversion] [":" format_spec] "}"
field_name        ::=  arg_name ("." attribute_name | "[" element_index "]")*
</code></pre>
<p><code>replacement_field</code> consists of an optional <code>field_name</code>, optional <code>conversion</code> and optional <code>format_spec</code>. The brackets ( the [ and ]'s ) indicate <em>optional parameters</em>.</p>
<p>If you do pass in <code>field_name</code> to <code>replacement_field</code>, it consists of an <code>arg_name</code> function in which you pass <code>attribute_name</code> <em>or</em> <code>element_index</code>. Note <code>element_index</code> is mandatory because the brackets are in quotation marks, and thus escaping BNF form for optional.</p>
</div>
