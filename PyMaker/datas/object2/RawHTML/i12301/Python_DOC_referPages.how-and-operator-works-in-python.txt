<div class="post-text" itemprop="text">
<p>Could you please explain me how and works in python?
I know when </p>
<pre><code>x  y  and
0  0   0 (returns x)
0  1   0 (x)
1  0   0 (y)
1  1   1 (y)
</code></pre>
<p>In interpreter</p>
<pre><code>&gt;&gt; lis = [1,2,3,4]
&gt;&gt; 1 and 5 in lis
</code></pre>
<p>output gives FALSE</p>
<p>but,</p>
<pre><code>&gt;&gt;&gt; 6 and 1 in lis
</code></pre>
<p>output is TRUE</p>
<p>how does it work?</p>
<p>what to do in such case where in my program I have to enter if condition only when both the values are there in the list?</p>
</div>
<div class="post-text" itemprop="text">
<p>This lines </p>
<pre><code>lis = [1,2,3,4]
1 and 5 in lis
</code></pre>
<p>are equivalent to</p>
<pre><code>lis = [1,2,3,4]
1 and (5 in lis)
</code></pre>
<p>Since <code>bool(1)</code> is <code>True</code>, it's like writing</p>
<pre><code>lis = [1,2,3,4]
True and (5 in lis)
</code></pre>
<p>now since 5 is <em>not</em> in <code>lis</code>, we're getting <code>True</code> and <code>False</code>, which is <code>False</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Despite lots of arguments to the contrary,</p>
<pre><code>6 and 1 in lis
</code></pre>
<p>means</p>
<pre><code>6 and (1 in lis)
</code></pre>
<p>It does <em>not</em> mean:</p>
<pre><code>(6 and 1) in lis
</code></pre>
<p>The <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow">page</a> that Maroun Maroun linked to in his comments indicates that <code>and</code> has a lower precedence than <code>in</code>.</p>
<p>You can test it like this:</p>
<pre><code>0 and 1 in [0]
</code></pre>
<p>If this means <code>(0 and 1) in [0]</code> then it will evaluate to true, because <code>0</code> is in <code>[0]</code>.</p>
<p>If it means <code>0 and (1 in [0])</code> then it will evaluate to <code>0</code>, because <code>0</code> is false.</p>
<p>It evaluates to <code>0</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your statement <code>1 and 5 in lis</code> is evaluated as follows:</p>
<pre><code>5 in lis --&gt; false
1 and false  --&gt; false
</code></pre>
<p>and <code>6 and 1 in lis</code>  is evaluated like this:</p>
<pre><code>1 in lis --&gt; true
6 and true --&gt; true
</code></pre>
<p>The last statement evaluates to true as any number other than 0 is <code>true</code></p>
<p>In any case, this is the wrong approach to verify if multiple values exist ina list. You could use the <code>all</code> operator for this <a href="https://stackoverflow.com/questions/6159313/can-python-test-the-membership-of-multiple-values-in-a-list">post</a>:</p>
<pre><code>all(x in lis for x in [1, 5])
</code></pre>
</div>
<span class="comment-copy">read it as <code>6 and (1 in lis)</code></span>
<span class="comment-copy">Hint: what does just <code>1 and 5</code> print? How about <code>6 and 1</code>?</span>
<span class="comment-copy">if i use (6 and 1 ) in lis also it is TRUE how come it is supposed to be false right?</span>
<span class="comment-copy">I think it is <code>6 and (1 in lis)</code>, not <code>(6 and 1) in lis</code>. Otherwise <code>0 and 1 in [0]</code> would evaluate to true.</span>
<span class="comment-copy">@khelwood It's not, see the link in my previous comment.</span>
<span class="comment-copy">Even better, <code>0 and 0 in [0]</code> returns 0, because <code>and</code> short-circuits if the first value is "not a true value".</span>
<span class="comment-copy">@Jaco, thanks for the answer could you please explain how 6 and 1 returns 1 , x(which is 6) is false and y (which is 1) is true this should return x which is false right?</span>
<span class="comment-copy">@sanyesh: 6 is true! Of numbers, only 0 is false. Check it with <code>bool(6)</code>.</span>
<span class="comment-copy">I am pretty sure it is <code>1 and (5 in lis)</code>, not <code>(1 and 5) in lis</code>.</span>
<span class="comment-copy">@RemcoGerlich, thanks, so I should do bool(6). ok</span>
<span class="comment-copy">@khelwood is right, corrected my answer</span>
