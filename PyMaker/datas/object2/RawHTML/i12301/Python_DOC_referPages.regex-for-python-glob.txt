<div class="post-text" itemprop="text">
<p>I have a series of files which need to loop over them (I am using glob)and execute my python script.
the pattern of file name is:</p>
<pre><code>All.h1.123.w_0.124 
</code></pre>
<p>the two numbers consecutively increase so as the next file is:</p>
<ul>
<li>...0.124 </li>
<li>...0.125</li>
<li>and so on.</li>
</ul>
<p>I am not able to find a regex for this pattern.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex : <code>.*(\d+\.\d+)</code> to get <code>0.124</code>, <code>0.125</code> etc. in a group</p>
<pre><code>Python 3.4.0 (default, Apr 11 2014, 13:05:11)
[GCC 4.8.2] on linux
   import re
=&gt; None
   m = re.search('.*(_\d+\.\d+)', 'All.h1.123.w_0.124')
=&gt; None
   m.group(1)
=&gt; '_0.124'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In my opinion, using os.walk is much safer than trying to use glob.If you know the path you can try searchDir2 for python2.7 or searchDir35 for python 3.5. Python 3.5 performs much better on large directories.</p>
<pre><code>import sys
import os
def searchDir2(directory, pattern="",  recursive=False):
    fullPathFiles = []

    for fDirPat, dirNames, files in os.walk(directory):
        for eachFile in sorted(files):
            if pattern in eachFile: fullPathFiles.append(os.path.join(fDirPat,eachFile))
        if not recursive: break
    return fullPathFiles


def searchDir35(directory, pattern="",  recursive=False):
    fullPathFiles = []

    for entry in os.scandir(directory):
        path = entry.path
        if entry.is_file() and pattern in entry.name:
            fullPathFiles.append(path)
        if recursive and entry.is_dir(follow_symlinks=True):
            fullPathFiles+= searchDir35(path,pattern,recursive)
    return fullPathFiles
def sort_fx(x):
    x = x.split("_")
    major,minor = x[-1].split(".")
    return (int(major),int(minor))
files=searchDir2(path)
files = sorted(files, key=sort_fx)
</code></pre>
</div>
<span class="comment-copy"><i>"the two numbers consecutively"</i> -- there are 4 numbers in your filename (1, 123, 0, 124) and in your example you are increasing only the last one</span>
<span class="comment-copy">Also it's not clear to me whether you want to use <code>glob</code> (<a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">docs.python.org/3/library/glob.html</a>) or <code>re</code> (<a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a>), as you mention both in your question</span>
<span class="comment-copy">Can't you just <code>fn.split(".")</code> and test the relevant fields? i.e., <code>"All.h1.123.w_0.124".split(".")[-1]</code></span>
