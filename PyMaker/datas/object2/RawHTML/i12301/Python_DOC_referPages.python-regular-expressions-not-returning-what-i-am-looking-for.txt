<div class="post-text" itemprop="text">
<p>I am scraping a website and would like to get the content inside a specific tag.
The tag I'd like to get the content inside is: <em><code>&lt;pre class="js-tab-content"&gt;&lt;/pre&gt;</code></em></p>
<p>Here is my code:</p>
<pre><code>request = urllib.request.Request(url=url)
response = urllib.request.urlopen(request)
content = response.read().decode()

tab = re.findall(r'&lt;pre class="js-tab-content"&gt;(.*?)&lt;/pre&gt;', content)

print(tab)
</code></pre>
<p>When I print tab I get an empty list <code>[]</code></p>
<p>Here is the content I am searching in:</p>
<pre><code>.... &lt;pre class="js-tab-content"&gt;&lt;i&gt;&lt;/i&gt;&lt;span&gt;Em&lt;/span&gt;              &lt;span&gt;D&lt;/span&gt;              &lt;span&gt;Em&lt;/span&gt;             &lt;span&gt;D&lt;/span&gt;

Lift M
ac Cahir Og your face, brooding o'er the old disgrace 

     &lt;span&gt;Em&lt;/span&gt;                  &lt;span&gt;D&lt;/span&gt;                       &lt;span&gt;G&lt;/span&gt;-&lt;span&gt;D&lt;/span&gt;-&lt;span&gt;Em&lt;/span&gt;     

That black Fitzwilliam stormed your place and drove you to the Fern.

&lt;span&gt;Em&lt;/span&gt;              &lt;span&gt;D&lt;/span&gt;           &lt;span&gt;Em&lt;/span&gt;                         &lt;span&gt;D&lt;/span&gt;

Gray said victory was sure, soon the firebrand he'd secure

&lt;span&gt;Em&lt;/span&gt;                &lt;span&gt;D&lt;/span&gt;          &lt;span&gt;G&lt;/span&gt;-&lt;span&gt;D&lt;/span&gt;-&lt;span&gt;Em&lt;/span&gt;

Until he met at Glenmalure, Feach Mac Hugh O'Byrne 



Chorus:

&lt;span&gt;G&lt;/span&gt;                                &lt;span&gt;D&lt;/span&gt;

Curse and swear, Lord Kildare, Feach will do what Feach will dare

&lt;span&gt;G&lt;/span&gt;                               &lt;span&gt;G&lt;/span&gt;-&lt;span&gt;D&lt;/span&gt;-&lt;span&gt;Em&lt;/span&gt;

Now Fitzwilliam have a care, fallen is your star low

&lt;span&gt;G&lt;/span&gt;                                       &lt;span&gt;D&lt;/span&gt; 

Up with halbert, out with sword, on we go for by the Lord

&lt;span&gt;G&lt;/span&gt;                               &lt;span&gt;G&lt;/span&gt;-&lt;span&gt;D&lt;/span&gt;-&lt;span&gt;Em&lt;/span&gt;

Feach Mac Hugh has given his word: Follow me up to Carlow 



From Tassagart ____to Clonmore flows a stream of Saxon Gore

Great is Rory Og O'More at sending loons to Hades.

White is sick and Lane is fled, now for black Fitzwilliams head

We'll send it over, dripping red, to Liza and her ladies



See the swords of Glen Imayle flashing o'er the English Pale

See all the children of the Gael, beneath O'Byrne's banners

Rooster of the fighting stock, would you let an Saxon cock

Crow out upon an Irish rock, fly up and teach him manners

&lt;/pre&gt; ....
</code></pre>
<p>I do not see why this is returning an empty list instead of a string inside the list with the content inside.</p>
<p>I have looked around the internet for around a half an hour and couldn't find any help.</p>
<p>Sorry if I look stupid here, if it is so obvious!</p>
<p>Anyway, thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>tab = re.findall(r'&lt;pre class="js-tab-content"&gt;(.*?)&lt;/pre&gt;', content, re.S)
</code></pre>
<p><a href="https://docs.python.org/3/library/re.html#re.S" rel="nofollow"><code>re.S</code></a> is required for <code>.</code> to match newline characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>Okay, to add to the comments, here is how you can use <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="noreferrer"><code>BeautifulSoup</code></a> <em>HTML Parser</em> to extract the <code>pre</code> text in this case:</p>
<pre><code>from bs4 import BeautifulSoup

soup = BeautifulSoup(content, "html.parser")
print(soup.find("pre", class_="js-tab-content").get_text())
</code></pre>
</div>
<span class="comment-copy">Don't use regular expressions to parse HTML. See here: <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags#answer-1732454" title="regex match open tags except xhtml self contained tags%23answer 1732454">stackoverflow.com/questions/1732348/â€¦</a></span>
<span class="comment-copy">Ok, there 2 obvious things here: 1) parsing HTML with regex is a bad idea, 2) <code>.</code> does not match a newline in Python regex by default (add <code>flags=re.S</code>). A not so obvious thing: lazy dot matching pattern is known to slow down your app when matching huge chunks of text, so, I'd recommend using BeautifulSoup or any other HTML parsing library for Python.</span>
<span class="comment-copy">And... that fixed my problem. Wow, I didn't realize that!  I think I see why regex is bad with html. I also know that there won't be other attributes in the tag or anything like that, and the tags inside doesn't matter.</span>
<span class="comment-copy">Html is not a <a href="https://en.m.wikipedia.org/wiki/Regular_language" rel="nofollow noreferrer">regular language</a> is really what it comes down to.</span>
<span class="comment-copy">Thanks, works perfectly! What does the re.M do?</span>
<span class="comment-copy">Still, a bad idea to use <code>.*?</code>. You should unroll it, and you would not even need <code>re.S</code>.</span>
<span class="comment-copy">@AndreaCorbellini, fixed. It's a force of habit, I prefer the use re.M to indicate the purpose is for multiple line.It's not necessary here.</span>
<span class="comment-copy">Thank you for your help. I decided to use xfx's answer as I will be using re not containing html in the program aswell. Thanks anyway!</span>
