<div class="post-text" itemprop="text">
<pre><code>import os

def rename_files():
    # (1) get file names from a folder
    file_list = os.listdir(r"C:\Users\USEER\Desktop\Udacity\Udacity - Programming Foundation with Python\Project\prank\prank")

    # print(file_list)
    saved_path = os.getcwd()
    print("Current Working Directory is " + saved_path)
    os.chdir(r"C:\Users\USEER\Desktop\Udacity\Udacity - Programming Foundation with Python\Project\prank\prank")

    # (2) for each file, rename file name
    for file_name in file_list:
        print("Old Name - " + file_name)
        print("New Name - " + file_name.translate("0123456789"))
        os.rename(file_name, file_name.translate("0123456789"))
    os.chdir(saved_path)

rename_files()
</code></pre>
<p>The code above doesn't rename the file by removing the integers. Can anyone help? (Python 3x)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

new_name = re.sub('[0-9]', '', file_name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3 the String.translate is gone.  Therefore you need to use the str.translate. It needs 'str.maketrans' which normally creates a translation table with the first two arguments supplied(not needed in this example), the third argument supplies the characters to be stripped.</p>
<p>This line should have the desired effect ...</p>
<pre><code>os.rename(file_name, file_name.translate(str.maketrans('','','0123456789'))
</code></pre>
<p>Previous suggestions used .strip() however in this case as the numbers are mixed in with the filenames (not before or after) I believe it would not work, another used Regular Expressions which is perfectly valid, however within the context of this particular Udacity course translate was the suggested solution.</p>
<p>Here are the docs for maketrans : 
[<a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans][1]" rel="nofollow">https://docs.python.org/3/library/stdtypes.html#str.maketrans][1]</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is in your translate function that doesn't do anything. There are better options available, but if your want to use translate then the proper syntax is:</p>
<pre><code>#!/usr/bin/env python2

import string
new_name = string.translate(file_name, None, "0123456789")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one way of renaming files.</p>
<ol>
<li>Use <code>os.renames</code> to rename the files  </li>
<li>Use <code>file_name.strip("0123456789")</code> to remove numbers</li>
</ol>
<p>Code is given below:</p>
<pre class="lang-python prettyprint-override"><code>import os
def file_rename():
    name_list=os.listdir(r"C:\python\prank")
    print(name_list)
    saved_path=os.getcwd()
    print("Current working directory is"+saved_path)
    os.chdir(r"C:\python\prank")

    for file_name in name_list:
        print("old name"+file_name)
        print("new name"+file_name.strip("0123456789"))
        os.renames(file_name,file_name.strip("0123456789"))
    os.chdir(saved_path)

file_rename()
</code></pre>
<p>To read more about <code>os.renames</code> <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">check here</a>.<br/>
To read more about the <code>strip</code> function, <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">check here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another way to do this without <code>import re</code>. Instead of utilizing the <code>.translate</code>, use the <code>.strip</code>.</p>
<pre><code>os.rename(file_name, file_name.strip('0123456789'))
</code></pre>
<p>Another observation is that your code wont read the new file name after changing it. At the top of your code you are reading file names and saving those name in <code>file_list</code></p>
<pre><code># (1) get file names from a folder
file_list = os.listdir(r"C:\Users\USEER\Desktop\Udacity\Udacity - Programming Foundation with Python\Project\prank\prank")
</code></pre>
<p>In the for loop, where you are changing the name of each file, YOU ARE NOT reading the new file's name. You need to do something like this.</p>
<pre><code># (2) for each file, rename file name
for file_name in file_list:
    print("Old Name - " + file_name)
    os.rename(file_name, file_name.strip("0123456789"))

# (3) read file's name again... 'file_list' has old names
new_file_list = os.listdir(r"C:\Users\USEER\Desktop\Udacity\Udacity - Programming Foundation with Python\Project\prank\prank")
for file_name in new_file_list:
    print("New file's name: " + new_file_name)

os.chdir(saved_path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os

def rename_files():
    #1 Get file names from the folder
    file = os.listdir(r"C:\Web\Python\prank")
    print(file)
    saved_path = os.getcwd()
    print("Current Working Directory is"+saved_path)
    os.chdir(r"C:\Web\Python\prank")

    #2 For each file name rename file names
    for file_name in file:
       print("Old Name - " + file_name)
       os.rename(file_name,file_name.strip("0123456789"))
       print("New Name - " + file_name)

    os.chdir(saved_path)
rename_files()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>will guys i was trying to solve this problem because i see udacity online courses and it require to rename file without numbers thanks to simon for his replay i have to figured it out</p>
<p>this is my code to rename files without numbers,  hope it jhelp anyone who stuck</p>
<pre><code>import os
import re

def rename():

    #get the list of the photo name
    plist = os.listdir(r"D:\pay\prank")
    print(plist)
    #removing the numbers from the photo names

    os.chdir(r"D:\pay\prank")
    for pname in plist :
        os.rename(pname, re.sub('[0-9]', '' , pname))
        print(pname)
rename()
</code></pre>
</div>
<span class="comment-copy">Welcome to StackOverflow! Please make the titles to your questions more descriptive instead of vague in order to attract the appropriate attention to them</span>
<span class="comment-copy">Thanks a lot. I tried it and it just goes on smooth. Thank you!</span>
<span class="comment-copy"><code>string.translate()</code> is gone in Python 3</span>
<span class="comment-copy">Oops, you're right!</span>
<span class="comment-copy">Yeah! However I appreciate you take time to answer. Thanks</span>
