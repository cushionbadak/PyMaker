<div class="post-text" itemprop="text">
<p>Is there an easy and more or less standard way to dump all the variables into a file, something like stacktrace but with the variables names and values? The ones that are in locals(), globals() and maybe dir().
I can't find an easy way, here's my code for "locals()" which doesn't work because the keys can be of different types:</p>
<pre><code>vars1 = list(filter(lambda x: len(x) &gt; 2 and locals()[x][:2] != "__", locals()))
</code></pre>
<p>And without filtering, when trying to dump the variables I get an error:</p>
<pre><code>f.write(json.dumps(locals()))
# =&gt;
TypeError: &lt;filter object at 0x7f9bfd02b710&gt; is not JSON serializable
</code></pre>
<p>I think there must be something better that doing it manually.</p>
</div>
<div class="post-text" itemprop="text">
<p>To start, in your non-working example, you don't exactly filter the keys (which should normally only be strings even if it's not technically required); <code>locals()[x]</code> is the values.</p>
<p>But even if you did filter the keys in some way, you don't generally know that all of the remaining values are JSON serialisable. Therefore, you either need to filter the values to keep only types that can be mapped to JSON, or you need a <code>default</code> serialiser implementation that applies some sensible serialisation to any value. The simplest thing would be to just use the built-in string representation as a fall-back:</p>
<pre><code>json.dumps(locals(), default=repr)
</code></pre>
<p>By the way, there's also a more direct and efficient way of dumping JSON to a file (note the difference between <code>dump</code> and <code>dumps</code>):</p>
<pre><code>json.dump(locals(), f, default=repr)
</code></pre>
</div>
<span class="comment-copy">You must write custom serializator for all classes See: <a href="http://stackoverflow.com/questions/3768895/python-how-to-make-a-class-json-serializable" title="python how to make a class json serializable">stackoverflow.com/questions/3768895/…</a></span>
<span class="comment-copy">@MaximPanfilov, ты че, гонишь что-ли? а переменные?</span>
<span class="comment-copy">json сериализует только базовые типы данных, так что придется для каждого небазового типа написать свой сериализатор. Можно еще использовать pickle и сериализовать такие данные в текст + base64, например, но такие данные можно будет десериализовать только в python.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/help/be-nice">be nice</a>. Use English on stackoverflow.com. Visit <a href="http://ru.stackoverflow.com">ru.stackoverflow.com</a> if you need Russian.</span>
<span class="comment-copy">it is not clear how <code>locals()</code> and "variables in a file" are connected. To get a list of all objects, you could use <a href="https://docs.python.org/3/library/gc.html#gc.get_objects" rel="nofollow noreferrer"><code>gc.get_objects()</code></a>. You probably want to ask instead: <i>"how to serialize as JSON an arbitrary Python object?"</i></span>
