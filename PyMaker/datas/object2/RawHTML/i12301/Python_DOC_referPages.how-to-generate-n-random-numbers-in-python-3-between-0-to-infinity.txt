<div class="post-text" itemprop="text">
<p>How do I generate n random numbers in python 3? n is a to be determined variable. preferably natural numbers (integers &gt; 0), 
All answers I've found take random integers from a range, however I don't want to generate numbers from a range. (unless the range is 0 to infinity)</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no infinity in computers world. You can get largest positive integer supported by your machine using <a href="https://docs.python.org/3/library/sys.html#sys.maxsize" rel="nofollow"><code>sys.maxsize</code></a> (<code>sys.maxint</code> in python 2) and pass it to <code>random.randint</code> function:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.maxsize
9223372036854775807
&gt;&gt;&gt; random.randint(0,sys.maxsize)
7512061515276834201
</code></pre>
<p>And for generating multiple random number you can use a list comprehension like following:</p>
<pre><code>&gt;&gt;&gt; N = 10
&gt;&gt;&gt; [random.randint(0,sys.maxsize) for _ in range(N)]
[3275729488497352533, 7487884953907275260, 36555221619119354, 1813061054215861082, 619640952660975257, 9041692448390670491, 5863449945569266108, 8061742194513906273, 1435436865777681895, 8761466112930659544]
</code></pre>
<p>For more info about the difference of <code>sys.maxint</code> and <code>sys.maxsize</code>  in <a href="https://docs.python.org/3.4/whatsnew/3.0.html#integers" rel="nofollow">python 2.X and 3.X</a>:</p>
<blockquote>
<p>The sys.maxint constant was removed, since there is no longer a
  limit to the value of integers. However, sys.maxsize can be used as an
  integer larger than any practical list or string index. It conforms to
  the implementation’s “natural” integer size and is typically the same
  as sys.maxint in previous releases on the same platform (assuming the
  same build options).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I think you probably need to rethink what it is you're trying to do with the random number you want. In particular, what distribution are you sampling the number from?
If you want your random numbers uniformly distributed (equal probability of each number being chosen), you can't: you'd need an infinite amount of memory (or time, or both).</p>
<p>Of course, if you allow for non-uniform distributions, here are some random numbers between 1 and (roughly) the largest <code>float</code> my system allows, but there are gaps due to the way that such numbers are represented. And you may feel that the probability of "large" numbers being selected falls away rather quicker than you'd like...</p>
<pre><code>In [254]: [int(1./random.random()) for i in range(10)]
Out[254]: [1, 1, 2, 1, 1, 117, 1, 3, 2, 6]
</code></pre>
</div>
<span class="comment-copy">Infinity is a pretty large number. :-) it's very convenient in Math, but is pretty hard to represent programmatically</span>
<span class="comment-copy">There is no <code>sys.maxint</code> in Python 3... OP needs to rethink this question and provide more context for it.</span>
<span class="comment-copy">@xnx Yes, I missed python3 tag. Actually  In pyhthon 3  it's <code>sys.maxsize</code>.</span>
<span class="comment-copy"><code>sys.maxsize</code> is "can be used as an integer larger than any practical list or string index" but it isn't the largest integer that Python 3 can represent (that's limited only by the memory available to the implementation).</span>
<span class="comment-copy">@xnx Indeed, Since it will act like <code>sys.maxint</code> it doesn't make any difference. And it will give a result based the machines capacity.</span>
