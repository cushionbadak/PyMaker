<div class="post-text" itemprop="text">
<p>My assignment is to make a game, were supposed to have multiple modules to avoid clutter in one script. I'm having an issue with import a variable from one of the modules. So far I have a settings one, and a main one. The settings is pretty simple and goes:</p>
<pre><code>class Settings():
def __init__(self):
    self.screen_width = 1920
    self.screen_height = 1080
    self.bg_color = (230, 230, 230)
</code></pre>
<p>Pretty simple, yet when I try to reference these variables it says "Unresolved attribute reference 'screen_width' for class 'Settings'</p>
<p>main goes as this:</p>
<pre><code>import sys, pygame
from game_settings import Settings

def run_game():
    #Initialize the game and create the window
    pygame.init()
    screen = pygame.display.set_mode((Settings.screen_width,Settings.screen_height), pygame.FULLSCREEN)
    pygame.display.set_caption("Alien Invasion")

while True:

    #Listening for events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
             sys.exit()
    screen.fill(Settings.bg_color)
    pygame.display.flip()

run_game()
</code></pre>
<p>I thought maybe this would be a PyCharm issue, but found that it does the same thing in IDLE so what would be the correct way to import the variables?</p>
<p>Thanks for taking the time to read this!</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to create an instance of your <code>Settings</code> class, since the attributes you set up in its <code>__init__</code> method are instance attributes.</p>
<p>Try something like this:</p>
<pre><code>def run_game():
    my_settings = Settings() # create Settings instance
    pygame.init()
    screen = pygame.display.set_mode((my_settings.screen_width, # lookup attributes on it
                                      my_settings.screen_height),
                                     pygame.FULLSCREEN)
    # ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to create an instance of the Settings object: <code>s = Settings()</code></p>
<p>Usage: <code>s.bg_color</code>, etc.</p>
<p>OR</p>
<p>Alter your Settings class like so and the properties are accessible statically:</p>
<pre><code>class Settings():
    screen_width = 1920
    screen_height = 1080
    bg_color = (230, 230, 230)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Both files have to be in the same folder and you have to create an instance of your <code>Settings</code> class. Then you can access the properties of your instance.</p>
<p><code>main.py:</code></p>
<pre><code>from game_settings import Settings
s = Settings()
print(s.bg_color)
</code></pre>
<p><code>game_settings.py:</code></p>
<pre><code>class Settings():
    def __init__(self):
        self.screen_width = 1920
        self.screen_height = 1080
        self.bg_color = (230, 230, 230)
</code></pre>
<p>When you run <code>main.py</code>, the output will be:</p>
<pre><code>(230, 230, 230)
</code></pre>
</div>
<span class="comment-copy">but it runs right??</span>
<span class="comment-copy">I am definitely no expert, but arent <code>bg_color</code> , <code>screen_width</code> and <code>scree_height</code> part of the instances rather than the class itself? In other words, I dont think you can just access Settings.bg_color, I think you need to make a Settings object like <code>s = Settings()</code> and then you can do <code>s.bg_color</code>.</span>
<span class="comment-copy">@danidee no it doesn't work</span>
<span class="comment-copy">Btw, have a look at this article if you would like to learn more about this issue you are having <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html</a></span>
<span class="comment-copy">@Andr√©sAG Thanks, such a simple problem I was missing though. I knew mostly how to get it all except that I needed to create an instance.</span>
<span class="comment-copy">Thank you! This worked perfectly.</span>
