<div class="post-text" itemprop="text">
<p>I have a list like this one</p>
<pre><code>[['min: 1', '2', '3', '5', '6\n'], 
['max: 1', '2', '3', '5', '6\n'], 
['avg: 1', '2', '3', '5', '6']]
</code></pre>
<p>on a textfile.</p>
<p>I would like to calculate the min, max and avg but i am having trouble removing min, max and avg on the list.</p>
<pre><code>infile = open('input.txt', 'r+')
lisnum = []
for line in infile:
    listnum.append(line.split(','))
for i in listnum:
    print i
infile.close()

def minimum(mi):
    min_value = min(mi)
    return min_value

def maximum(ma):
    max_value = max(ma)
    return max_value

def average(avg):
    sum = 0
    for x in av:
        sum+=x
    return(sum/len(av))

print listnum
a = [i.split(':')[0] for i in listnum]
print a
print minimum(listnum)
print maximum(listnum)
print average(listnum)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems like you are using <code>split(',')</code> on something that is not a CSV file (comma-separated values). You could treat the first value in the list separately, using <code>split(':')[1]</code> to get the part after the <code>:</code>, but instead I suggest to use <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regular expressions</a> to get all the numbers in the list:</p>
<pre><code>&gt;&gt;&gt; line = 'max: 1,2,3,5,6\n'
&gt;&gt;&gt; re.findall('\d+', line)
['1', '2', '3', '5', '6']
&gt;&gt;&gt; nums = [int(x) for x in re.findall('\d+', line)]
&gt;&gt;&gt; min(nums)
1
</code></pre>
<p>Also, it seems like you are applying your functions to the entire list of lists, instead of just to the respective lines. To get, e.g., the <code>max</code> for the "max" line, use <code>print maximum(listnum[1])</code></p>
<hr/>
<p>Seems like you are still having problems with this. As I said, you can not split the entire list by <code>,</code> because the entire list is not separated by <code>,</code>. You can either use a regular expression to get both the operation and the numbers, or you can <em>first</em> split by <code>:</code> and <em>then</em> by <code>,</code>. Just try this:</p>
<pre><code>operations = {"sum": sum, "min": min, "max": max,
              "avg": lambda lst: float(sum(lst))/len(lst)}

with open("input.txt") as f:
    for line in f:
        op, numbers = line.split(":")
        op = op.strip().lower()
        numbers = [float(n) for n in numbers.split(",")]
        if op in operations:
            print("%s of %r is %f" % (op, numbers, operations[op](numbers)))
        else:
            print("Don't know how to do %s" % op)
</code></pre>
<p>Output:</p>
<pre><code>min of [1.0, 2.0, 3.0, 5.0, 6.0] is 1.000000
max of [1.0, 2.0, 3.0, 5.0, 6.0] is 6.000000
avg of [1.0, 2.0, 3.0, 5.0, 6.0] is 3.400000
Don't know how to do p90
sum of [1.0, 2.0, 3.0, 4.0, 5.0, 6.0] is 21.000000
Don't know how to do p70
</code></pre>
</div>
<span class="comment-copy">what trouble are you having exactly. post some code</span>
<span class="comment-copy">I'm voting to close this question as off-topic because this is neither a code-writing nor tutorial service</span>
<span class="comment-copy">As danidee said, post some code of what you have tried so far, also the expected output. Furthermore the 6 in avg has no \n, is this on purpose?</span>
<span class="comment-copy">@jonrsharpe I think it is a bit too early to close this, it seems like he has tried something.</span>
<span class="comment-copy">@Altoyr there's still no <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>, <i>"having trouble"</i> is not a useful problem description. It should definitely be closed until the OP adds more information.</span>
<span class="comment-copy">Thank you, managed to use both your suggestions.</span>
<span class="comment-copy">I have a file contaning the following :                                                                ['min: 1', '2', '3', '5', '6\n'] ['max: 1', '2', '3', '5', '6\n'] ['avg: 1', '2', '3', '5', '6\n'] ['P90: 1', '2', '3', '4', '5', '6', '7', '9', '10\n'] ['Sum: 1', '2', '3', '4', '5', '6\n'] ['P70: 1', '2', '3', '\n'](each list on a different line)                                                                              and now I want to remove everything before 1 for each line in my text file so I can do my calculations for each line. Can I do this using re.findal or any other way?</span>
<span class="comment-copy">@Sine Do the files contain <i>exactly</i> this, including the <code>[</code> and <code>'</code>, or did you split the content of the file by <code>,</code> again, although it is obviously not a CSV file?</span>
<span class="comment-copy">it a text file containing these each in different line: min: 1,2,3,5,6 max: 1,2,3,5,6 avg: 1,2,3,5,6 P90: 1,2,3,4,5,6,7,9,10 Sum: 1,2,3,4,5,6 P70: 1,2,3, i then read it into a list like this ['min: 1', '2', '3', '5', '6\n'] ['max: 1', '2', '3', '5', '6\n'] ['avg: 1', '2', '3', '5', '6\n'] ['P90: 1', '2', '3', '4', '5', '6', '7', '9', '10\n'] ['Sum: 1', '2', '3', '4', '5', '6\n'] ['P70: 1', '2', '3', '\n'] [70, 1, 2, 3] each list in a different line.</span>
<span class="comment-copy">@Sine Well, the point of my answer was <i>not</i> to read them into a list like that in the first place. Don't do <code>split(',')</code> on something that's not really comma-separated.</span>
