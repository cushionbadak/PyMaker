<div class="post-text" itemprop="text">
<p>I'm new in python windows winapi.</p>
<p>How to get an location time from winapi using python
so the result time is like 
   <code>(UTC-08:00) Pacific Time (US &amp; Canada)</code></p>
<p>I have tried using <code>win32api.GetTimeZoneInformation()</code> but the result just an number <code>(1, (480, u'Pacific Standard Time', &lt;PyTime:11/1/2000 2:00:00 AM&gt;, 0, u'Pacific Daylight Time', &lt;PyTime:3/2/2000 2:00:00 AM&gt;, -60))</code></p>
<p>sorry for noob &amp; bad question.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check out the Python <a href="https://docs.python.org/3/library/time.html" rel="nofollow">time</a> module:</p>
<pre><code>import time

utc_offset = time.strftime('%z')
tz_name = time.tzname[0]

print('(UTC{0}) {1}'.format(utc_offset, tz_name))
</code></pre>
</div>
<span class="comment-copy">I like the answer from @pp_ that doesn't use any third-party packages, however I also notice that the actual <a href="https://docs.python.org/2/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer">Python 2.7 documentation</a> recommends using the third-party <code>pytz</code> package.</span>
<span class="comment-copy">I want get result like this <a href="http://stackoverflow.com/questions/12112419/getting-windows-time-zone-information-c-mfc?rq=1">question</a> in python, in there using c++  I don't know about c++.</span>
<span class="comment-copy"><code>tzname</code> may be corrupted mojibake depending on your system locale, current preferred thread language, and current thread locale when <code>time</code> is first imported. With Japanese as the preferred language in the default C locale, the value of <code>tzname</code> in the UTC timezone is <code>'\x8b\xa6\x92\xe8\x90￠\x8aE\x8e\x9e'</code>, which is the ANSI (CP932) encoding mistakenly cast as a Unicode string. I have to first set the thread <code>LC_CTYPE</code> locale to Japanese to get the correct string, <code>'協定世界時'</code>. It would be better to use the Windows Unicode API directly via ctypes instead.</span>
<span class="comment-copy">@eryksun Thank you for pointing that out.</span>
