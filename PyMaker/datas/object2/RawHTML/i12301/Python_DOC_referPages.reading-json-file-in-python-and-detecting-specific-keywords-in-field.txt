<div class="post-text" itemprop="text">
<p>I just started this week to learn Python and I have the following question. I have a JSON file (Aberdeen2015.json) that contains 60 lines (each line containing a newspaper article). Moreover, each line contains a list with the <code>date</code>, <code>title</code> and <code>body</code> of the article (see picture below, title cannot be seen since it's towards the end of the line). </p>
<p><a href="https://i.stack.imgur.com/q0p2x.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/q0p2x.png"/></a></p>
<p>I want to do the following: if certain keywords are in the <code>body</code> of an article, print a list with the <code>date</code> of those articles. So far I have tried to do the following:</p>
<pre><code>with open("Aberdeen2015.json") as f:
    for i in line():
        if (' tax ' in body[i]
        or ' Tax ' in body[i]
        or ' policy ' in body[i]
        or ' Policy ' in body[i]
        or ' regulation ' in body[i]
        or ' Regulation ' in body[i]
        or ' spending ' in body[i]
        or ' Spending ' in body[i]
        or ' budget ' in body[i]
        or ' Budget ' in body[i]
        or ' central bank ' in body[i]
        or ' Central Bank ' in body[i]
        or ' Central bank ' in body[i]):

        print("date")
</code></pre>
<p>I am aware that the code might have many failures, any help is more than welcome.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about this:</p>
<pre><code># import json module for parsing
import json

# define a list of keywords
keywords = ('tax', 'policy', 'regulation', 'spending', 'budget', 'central bank')

with open('test.json') as json_file:

    # read json file line by line
    for line in json_file.readlines():

        # create python dict from json object
        json_dict = json.loads(line)

        # check if "body" (lowercased) contains any of the keywords
        if any(keyword in json_dict["body"].lower() for keyword in keywords):
            print(json_dict["date"])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The efficient way to do this is using set intersection.</p>
<p>We use the standard Python <a href="https://docs.python.org/3/library/json.html" rel="nofollow"><code>json</code></a> module to parse the data, which gives us a <code>list</code> of <code>dict</code>s, one <code>dict</code> per row. Then we get the <code>body</code> field of each row, convert it to lower case and split it into single words. Then we see if that set of words has a non-empty intersection with the set of keywords. If it does, we print the date of that row.</p>
<pre><code>import json

keywords = ('tax', 'policy', 'regulation', 'spending', 'budget', 'central bank')
keywords = set(keywords)

fname = "Aberdeen2015.json"
with open(fname) as f:
    data = json.load(f)

for row in data:
    s = row['body']
    if keywords.intersection(s.lower().split()):
        print(row['date'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I assumed that your json file looks like this:</p>
<pre><code>[
    {"date": "DEC 27, 2015", "body":"the policy has been defined"},
    {"date": "AUG 15 2015", "body":"the tax and policy are done"},
    {"date": "JAN 23 2002", "body": "nothing to get from this one"}
]
</code></pre>
<p>This code works, tell me if you do not understand</p>
<pre><code>import json, re

words = ["policy", "tax"]

def lookingfor(words):
    with open("file.json", "rb") as f:
        data = json.load(f)
        for line in data:
            for word in words:
                match = re.findall(word, line['body'])
                if match:
                    print(  "word matched: %s ==&gt; date: %s" % (word, line['date']))


lookingfor(words)
</code></pre>
</div>
<span class="comment-copy">Could you please post a small extract of the actual text of your JSON file? It's really hard to copy &amp; paste text from an image. :) You should be using Python's <code>json</code> module to parse that file. FWIW, there's a compact and efficient way to solve your problem, but I'd prefer to illustrate my solution with some real data.</span>
