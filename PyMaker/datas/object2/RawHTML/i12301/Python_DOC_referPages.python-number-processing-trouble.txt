<div class="post-text" itemprop="text">
<p>I want to write a program that asks a user how many numbers they wish to process, then ask for that many numbers. Then it will find the total and the maximum of the numbers processed. Example output:</p>
<pre class="lang-none prettyprint-override"><code>Enter the number of values to process: 5

First value: 3
Next value: 9.2
Next value: -2.5
Next value: 0.25
Next value: 6

The total is 15.95
The maximum is 9.20
</code></pre>
<p>One thing I am lost on is that if if I have the code <code>for num in (1, 3)</code>
and <code>num</code> gets assigned multiple values, how do I extract both those values?</p>
</div>
<div class="post-text" itemprop="text">
<p>Set <code>example_list = list()</code>, then do a <code>for</code> loop where each time you ask for input and add the value to the list via <code>example_list.append(input_response)</code>.</p>
<p>Extract the values back out using the same <code>for</code> loop to cycle through the list.</p>
<pre><code>example_list = list()
total = 0
max_value = 0

for stored_number in example_list:
    # Ask for input and store in input_response variable
    example_list.append(input_response)

    # Here is where you could add the values to a counter variable, 
    # as well as check whether they are the maximum
    total += stored_number
    if stored_number &gt; max:
        max_value = stored_number

# Display results
</code></pre>
<p>For what you want, you could also just use the built-in functions max and sum:</p>
<pre><code>max_value = max(example_list)
total = sum(example_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code># ask how many
quantity = int(raw_input("Enter the number of values to process: "))
# ask for numbers and store them in list
numbers = [float(raw_input("Enter number " + str(each) + " : ")) for each in range(0,quantity)]
#print result
print "The total is " + str(sum(numbers)) + " and the maximum is " + str(max(numbers))
</code></pre>
</div>
<span class="comment-copy">To store multiple values in one variable, use a list.</span>
<span class="comment-copy">Set <code>example_list = list()</code>, then do a <code>for</code> loop where each time you ask for input and add the value to the list via <code>example_list.append(input_response)</code>. Extract the values back out by doing another <code>for</code> loop to cycle through the list: <code>for stored_number in example_list: do stuff</code>.</span>
<span class="comment-copy">Welcome to Stack Overflow. Please see <a href="http://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>  for information on writing a good question.</span>
<span class="comment-copy">@Evan Nichos: might want to check <a href="https://docs.python.org/3/tutorial/datastructures.html?#list-comprehensions" rel="nofollow noreferrer">this</a> and <a href="https://docs.python.org/3/tutorial/datastructures.html?#more-on-lists" rel="nofollow noreferrer">this</a> out</span>
