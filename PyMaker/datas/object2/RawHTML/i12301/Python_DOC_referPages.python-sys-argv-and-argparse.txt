<div class="post-text" itemprop="text">
<p>I have been looking for ways to add argument values to a script when I run it from the command line. The two packages I have found that seem to do this are sys.argv and argparse.</p>
<p>I'd also like to be able to add some sort of help function if possible.</p>
<p>Can somebody explain the difference between the two, and perhaps what would be easier for someone starting out?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/sys.html#sys.argv"><code>sys.argv</code></a> is simply a list of the commandline arguments.</p>
<p><a href="https://docs.python.org/3/library/argparse.html"><code>argparse</code></a> is a full featured commandline parser which generally <em>parses</em> <code>sys.argv</code> and gives you back the data in a much easier to use fashion.</p>
<p>If you're doing anything more complicated than a script that accepts a few required positional arguments, you'll want to use a parser.  Depending on your python version, there are 3 available in the python standard library (<code>getopt</code>, <code>optparse</code> and <code>argparse</code>) and <code>argparse</code> is by far the best.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend you use argparse for your command line arguments for two reasons. Making an arg is very straight forward as pointed out in the documentation, and second because you want a help function argparse gives you it for free.</p>
<p>Documentation: <a href="https://docs.python.org/2/howto/argparse.html" rel="nofollow">https://docs.python.org/2/howto/argparse.html</a></p>
<p>Let me know if you need more help.</p>
</div>
<span class="comment-copy"><code>sys.argv</code> is not a package. You'd use <code>argparse</code>.</span>
<span class="comment-copy"><code>sys.argv</code> is a list of arguments. <code>argparse</code> is a package to help you deal with arguments (including adding a <code>--help</code> argument).</span>
<span class="comment-copy"><code>sys.argv</code> is the list of strings derived from the commandline.  <code>argparse</code> lets you create a parser the can decode <code>sys.argv</code>.  For simple cases you can use <code>sys.argv</code> directly.</span>
<span class="comment-copy">I'm curious, is getopt the same getopt from perl's module?</span>
<span class="comment-copy">@Seekheart More or less. <code>getopt</code> is the standard POSIX library for parsing command line options, and many languages provide a wrapper or implementation. The Python module is mainly for ease of porting code from other languages that use it, rather than for use in new code.</span>
<span class="comment-copy">This is exactly what I was looking for. Thank You!</span>
