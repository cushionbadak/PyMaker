<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2600191/how-can-i-count-the-occurrences-of-a-list-item">How can I count the occurrences of a list item?</a>
<span class="question-originals-answer-count">
                    22 answers
                </span>
</li>
</ul>
</div>
<p>I have a document that consists of labels like this:</p>
<pre><code>201
202
205
201
203
204
201
</code></pre>
<p>If I wish to count the number of occurrences of each label and print it out, how can I do so in python?</p>
<p>What I am trying to get is:</p>
<pre><code>201: 3
202: 1
204: 1 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>import itertools

with open("your_document") as f:
    lines = sorted(map(str.int, f.read().strip().split()))
    for x,y in itertools.groupby(lines):
        print x, list(y)
</code></pre>
<p>if your document is huge like in Gb's</p>
<pre><code>import collections
my_dict = collections.defaultdict(int)
with open("your_document") as f:
    for line in f:
        my_dict[line] += 1
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; my_dict
defaultdict(&lt;type 'int'&gt;, {'201': 2, '203': 1, '202': 1, '205': 1, '204': 1})
</code></pre>
<p>without collections or itertools:</p>
<pre><code>my_dict = {}
with open("your_document") as f:
    for line in f:
        line = line.strip()
        my_dict[line] = my_dict.get(line, 0) + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> from <code>collections</code> module to map key as strings with their counts</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; 
&gt;&gt;&gt; s
'202\n205\n201\n203\n204\n201\n'
&gt;&gt;&gt; s = '''
201
202
205
201
203
204
201
'''
&gt;&gt;&gt; c=Counter()
&gt;&gt;&gt; for d in s.rstrip().split():
        c[d] += 1


&gt;&gt;&gt; c
Counter({'201': 3, '205': 1, '204': 1, '203': 1, '202': 1})
</code></pre>
<p>Or as suggested by <a href="https://stackoverflow.com/users/5299236/kevin-guan">Kevin Guan</a>:</p>
<pre><code>&gt;&gt;&gt; c = Counter(s.rstrip().split())
</code></pre>
<p><strong>EDIT:</strong></p>
<p>I think this can be further simply done, this way:</p>
<pre><code>&gt;&gt;&gt; l = s.rstrip().split()
&gt;&gt;&gt; l
['201', '202', '205', '201', '203', '204', '201']
&gt;&gt;&gt; c = [l.count(x) for x in l]
&gt;&gt;&gt; 
&gt;&gt;&gt; c
[1, 1, 1, 3, 1]
&gt;&gt;&gt; 
&gt;&gt;&gt; d = dict(zip(l,c))
&gt;&gt;&gt; 
&gt;&gt;&gt; d
{'205': 1, '201': 3, '203': 1, '204': 1, '202': 1}
</code></pre>
<p>And if you are fun of one liner expression, then:</p>
<pre><code>&gt;&gt;&gt; l = s.rstrip().split()
&gt;&gt;&gt;
&gt;&gt;&gt; dict(zip(l,map(l.count, l)))
{'205': 1, '204': 1, '201': 3, '203': 1, '202': 1}
&gt;&gt;&gt;
&gt;&gt;&gt; dict(zip(set(l),map(l.count, set(l))))
{'205': 1, '201': 3, '203': 1, '204': 1, '202': 1}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/io.html?highlight=readlines#io.IOBase.readlines" rel="nofollow"><code>readlines()</code></a> method to return the list of lines then use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>Counter</code></a>  from the <code>collections</code> module to return the count for each "label".</p>
<pre><code>&gt;&gt;&gt; with open('text.txt') as f:
...     c = Counter(map(str.strip, f.readlines()))
...     print(c)
... 
Counter({'201': 3, '205': 1, '202': 1, '204': 1, '203': 1})
</code></pre>
</div>
<span class="comment-copy">Do you really need a <code>Counter()</code> object, if you would do this count yourself? Or you mean <code>Counter(s.rstrip().split())</code>?</span>
<span class="comment-copy">Why wouldn't I use it @KevinGuan?</span>
<span class="comment-copy">Because, why not simply <code>Counter(s.rstrip().split())</code>? If you really want use a <code>for</code> loop instead of this simple way, <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict()</code></a> is enough.</span>
<span class="comment-copy">@KevinGuan...true...That would be more simple...thanks .. :)</span>
<span class="comment-copy">@minks .. Check update answer</span>
