<div class="post-text" itemprop="text">
<p>Suppose </p>
<pre><code>p1="python"
p2="script"
r=0.242424

print(p1+" "+p2+" "+r)          #wrong or error in python
print(p1+" "+p2+" "+str(r))       #correct  
</code></pre>
<p>Why do I we have to convert a float to string explicitly in Python, but other languages like Java convert it implicitly? </p>
</div>
<div class="post-text" itemprop="text">
<p>You don't. You only need to convert it explicitly when concatenating. <code>print()</code> will use spaces to separate arguments on its own, converting each to a string:</p>
<pre><code>print(p1, p2, r)
</code></pre>
<p>Quoting the <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow"><code>print()</code> documentation</a>:</p>
<blockquote>
<p>All non-keyword arguments are converted to strings like <code>str()</code> does and written to the stream, separated by <em>sep</em> and followed by <em>end</em>. </p>
</blockquote>
<p><em>sep</em> defaults to the <code>' '</code> string.</p>
<p>You usually use <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow"><em>string formatting</em></a> to interpolate values into a string:</p>
<pre><code>print("Running a {} {} to show the value of r={:.6f}".format(p1, p2, r))
</code></pre>
<p>Otherwise, trying to concatenate strings with other values does <em>not</em> convert values implicitly; this goes against the <a href="http://www.python.org/dev/peps/pep-0020/" rel="nofollow">Zen of Python</a>:</p>
<blockquote>
<p>Explicit is better than implicit.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>If you want to join various data types into a string, concatenation with <code>+</code> or with the <code>str.join</code> method will require them to be strings <em>before</em> you do it. </p>
<p>As Martijn shows, it's not needed for printing, but that can be confusing because printing by default includes newlines and a space that separates elements separated by commas that are being printed.</p>
<p>If you want to implicitly convert them to strings, I recomend the <code>string.format</code> method:</p>
<pre><code>&gt;&gt;&gt; '{0} {1} {2}'.format(p1, p2, r)
'python script 0.242424'
</code></pre>
<p>This is quite a useful and efficient way to format text and not have to worry about the types, so long as you don't mind getting their default string representation. </p>
</div>
<span class="comment-copy">Because different languages are different. Python is <a href="http://en.wikipedia.org/wiki/Strong_and_weak_typing" rel="nofollow noreferrer"><i>strongly-typed</i></a>; there is no implicit conversion.</span>
<span class="comment-copy">In Python, <a href="http://legacy.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">explicit is better than implicit</a>, also what you are doing is adding a string and a float, which is not allowed. You are adding first, then printing the result.</span>
<span class="comment-copy">IMHO Java and other languages get it wrong in this case... in fact in Java you can do that simply because the compiler, when translating the code, hiddenly creates a <code>StringBuilder</code> and joins the various pieces of the string, so you aren't <i>actually</i> calling any <code>String</code> method. They had to allow this because, otherwise, the code would have been really too verbose.</span>
<span class="comment-copy">Yeah, because the Java idiom of writing <code>s = "" + x;</code> to convert a number to a string is really clear isn't it?!</span>
