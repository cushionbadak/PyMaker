<div class="post-text" itemprop="text">
<p>I'm working with someone else's Python code which imports a number of modules dynamically:</p>
<pre><code>mod = __import__('outputs.'+filename,fromlist=['a']) #why does this work
</code></pre>
<p>Obviously the presence of the comment at the end is bit worrying, but having done some reading of other SO questions I think I'm starting to understand. It successfully imports a number of other modules, but falls over with one specific file:</p>
<pre><code>filename = "http"
print(filename)
mod = __import__('outputs.'+filename,fromlist=['a']) #why does this work
print("success")
</code></pre>
<p>This gives the following output:</p>
<pre><code>http
TypeError: list indices must be integers, not str
</code></pre>
<p>As far as I can tell it's definitely that line that's giving the problem; if I change <code>['a']</code> to <code>[]</code> then I get an <code>AttributeError</code> instead.</p>
<p>The start of the module I'm trying to import looks identical (syntactically) to the others which do import successfully:</p>
<pre><code>&lt;various import statements&gt;
class http(output.Output):
    &lt;some variables&gt;
    def __init__(self,data):
        &lt;some stuff&gt;
    &lt;some more defs&gt;...
</code></pre>
<p>I'd be grateful for any suggestions anyone may have about why it isn't working. Should I be focussing on the misbehaving module itself rather than the <code>__import__</code> statement (since that works for everything else)? Even just a hint at an answer would be good! I'm not sure if it's something weird, my unfamiliarity with Python, or just one of those can't-see-the-wood-for-the-trees days! Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looking <a href="https://docs.python.org/3/library/functions.html?highlight=__import__#__import__" rel="nofollow">at the docs</a> for <code>__import__</code>, it says that the sub-module is only returned if <code>fromlist</code> is not empty -- so I'm going to guess that whoever wrote that was trying to get <code>http</code> or <code>whatever</code> into <code>mod</code>, and not <code>outputs</code>, and <code>fromlist</code> did the trick although the reason why was unknown.</p>
<p>The only other thing I can offer is that it is possible to replace <code>__import__</code> with one's own function, and perhaps that is what the PP* did?</p>
<p><code>*</code> PP = Previous Programmer</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks everyone. Having worked out how to get a full traceback, it clearly shows that the problem lies with the module which I'm trying to load, and is nothing to do with any of the code above. Apologies for posting such an, on reflection, elementary question, but also thank you for steering me directly to a solution!</p>
</div>
<span class="comment-copy">can you show more of your code?</span>
<span class="comment-copy">Can you show a complete traceback please?</span>
