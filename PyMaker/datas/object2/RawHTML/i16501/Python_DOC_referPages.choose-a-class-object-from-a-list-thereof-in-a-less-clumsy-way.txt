<div class="post-text" itemprop="text">
<p>I have a self defined class, say, <code>Man</code>, (class names etc arbitrary throughout) and a list of these objects <code>men</code>. My goal is to search this list for any object whose <code>age</code> attribute is a certain number, and perform an operation on this object. If no such entry exists, I'd like to make one. </p>
<p>Now, I know I can do this:</p>
<pre><code>for year in range(70):
    year_found = False
    if year in [m.age for m in men]:
        # do something
        year_found = True
    if not year_found:
        men.append(Man(age=year))
</code></pre>
<p>but use of <code>year_found</code> to keep a place in the array seems clunky. Does anyone know of a better data structure than a list of classes, or a more pythonic way to approach this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try using <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow"><code>next()</code></a>:</p>
<pre><code>man_search = next((man for man in men if man.age == year), None)

if man_search is None:
    men.append(Man(age=year))
else:
    # do something
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You probably want to use sets for this.</p>
<pre><code>ages = set(m.age for m in men)
all_ages = set(range(70))
for age in (all_ages - ages):
    men.append(Man(age=age))
</code></pre>
</div>
<span class="comment-copy">This is your best bet. You can even do this in one loop. Just make an empty set for ages then add each age you come across to that set as you perform your actions of the array.</span>
<span class="comment-copy">This looks to be an extremely efficient way of adding new <code>men</code>. Ii doesn't let me do anything to the ones already in the list, however. On closer inspection, neither does the code in my question; this is likely my fault for using such a contrived example</span>
