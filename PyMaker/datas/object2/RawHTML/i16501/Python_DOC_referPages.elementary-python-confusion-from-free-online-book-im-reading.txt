<div class="post-text" itemprop="text">
<p>I'm reading <a href="http://interactivepython.org/courselib/static/pythonds/Introduction/introduction.html#review-of-basic-python" rel="nofollow">http://interactivepython.org/courselib/static/pythonds/Introduction/introduction.html#review-of-basic-python</a>. </p>
<p>If <code>adict</code> is a dictionary, then <code>adict.keys()</code> returns the keys of the dictionary in a <code>dict_keys</code> object. However, I just tried this in a Python shell:</p>
<pre><code>&gt;&gt;&gt; a = {'a': 1, 'b': 2}
&gt;&gt;&gt; a
{'a': 1, 'b': 2}
&gt;&gt;&gt; a.keys()
['a', 'b']
&gt;&gt;&gt; list(a.keys())
['a', 'b']
</code></pre>
<p>And the book says that if I type <code>a.keys()</code>, it should return <code>dict_items['a','b']</code> instead of just <code>['a','b']</code>. Why is that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your book is using Python3</p>
<pre><code>$ python3
Python 3.3.2+ (default, Feb 28 2014, 00:52:16) 
[GCC 4.8.1] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; a = {'a': 1, 'b': 2}
&gt;&gt;&gt; a.keys()
dict_keys(['a', 'b'])
&gt;&gt;&gt; a.items()
dict_items([('a', 1), ('b', 2)])
</code></pre>
<p>In python2, a <code>list</code> is returned instead of these new <code>dict_keys</code> and <code>dict_items</code> objects</p>
<p>Since the book is using Python3, you should probably go ahead and install that alongside your Python2 to try out their examples or you'll have more problems like this down the track</p>
</div>
<div class="post-text" itemprop="text">
<p>Your book was written for Python 3.x but you are using Python 2.x. </p>
<p>In Python 3.x <em>only</em>, <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="nofollow"><code>dict.keys</code></a> returns a <a href="https://docs.python.org/3/library/stdtypes.html#dict-views" rel="nofollow">dictionary view object</a> of a dictionary's keys (or what you called a <code>dict_keys</code> object):</p>
<pre><code>&gt;&gt;&gt; # Python 3.x interpreter
&gt;&gt;&gt; a = {'a': 1, 'b': 2}
&gt;&gt;&gt; a.keys()
dict_keys(['b', 'a'])
&gt;&gt;&gt;
</code></pre>
<p>In Python 2.x however, the method simply returns a list of the keys.</p>
<pre><code>&gt;&gt;&gt; # Python 2.x interpreter
&gt;&gt;&gt; a = {'a': 1, 'b': 2}
&gt;&gt;&gt; a.keys()
['b', 'a']
&gt;&gt;&gt;
</code></pre>
<p>You need to use <a href="https://docs.python.org/2/library/stdtypes.html#dict.viewkeys" rel="nofollow"><code>dict.viewkeys</code></a> to get a dictionary view object like in Python 3.x:</p>
<pre><code>&gt;&gt;&gt; # Python 2.x interpreter
&gt;&gt;&gt; a = {'a': 1, 'b': 2}
&gt;&gt;&gt; a.viewkeys()
dict_keys(['a', 'b'])
&gt;&gt;&gt;
</code></pre>
</div>
