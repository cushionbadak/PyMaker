<div class="post-text" itemprop="text">
<p>so far I have this:</p>
<pre><code>import datetime
f = open("log.txt", "a", encoding='UTF-8')
print ("Log file created")
print ("Enter /close to leave.")
spc = " "
while 1:
    msg = input("&gt;&gt;:")
    now = datetime.datetime.now()
    now1 = str(now)
    if msg == None:
        pass
    if msg == " ":
        pass
    else:
        msg2 = now1+spc+msg+"\n"
        if msg == "/close":
            exit()
        f.write(msg2)
        f.flush()
</code></pre>
<p>However, this line is not functioning as I want it, it still returns a blank line on the log file:</p>
<pre><code>if msg == None:
    pass
</code></pre>
<p>I want it to not return anything and simply continue the while loop, How would I fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should be using</p>
<pre><code>if msg is None:
    pass
</code></pre>
<p><strong>Edit</strong></p>
<p>You're missing what the pass function is all about. I would re-write your look like so. This way we're only processing this if the msg is not one of the bad input. Once we're done we break out of the loop.</p>
<pre><code>...
while 1:
    msg = input("&gt;&gt;:")
    now = datetime.datetime.now()
    now1 = str(now)
    if not msg in [None, " "]
        msg2 = now1+spc+msg+"\n"
        if msg == "/close":
            exit()
            f.write(msg2)
            f.flush()
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Evaluation of the rest of the loop will still continue after <code>pass</code>, and as <code>None</code> does not equal <code>" "</code>, this means the block beginning with <code>msg2 = now1+spc+msg+"\n"</code> will be executed.  You need to either unite the <code>if ... if ... else</code> into a single <code>if</code> block by changing <code>if msg == " ":</code> to <code>elif msg == " ":</code> or else change <code>if msg == None: pass</code> to <code>if msg == None: continue</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your condition doesn't make any sense. The <code>input</code> function will never return <code>None</code>, only strings.</p>
<p>If you want to skip empty strings, a better test would be <code>if not msg</code> (empty strings are "falsy"). Or, if you want to reject any all-whitespace strings, try <code>if not msg.strip()</code> (which removes leading and trailing whitespace before checking if the rest of the string is empty or not).</p>
<p>Further, it's rarely a good idea to write an <code>if</code> statement that just contains <code>pass</code>. Instead, invert the test so that the condition is true for cases where you want to run some code (in this case, when <code>msg</code> is not empty or all whitespace) and simply omit the cases where you'd do nothing:</p>
<pre><code>while 1:
    msg = input("&gt;&gt;:")
    now = datetime.datetime.now()
    now1 = str(now)
    if msg.strip():               # msg is not empty or all whitespace
        msg2 = now1+spc+msg+"\n"
        if msg == "/close":
            exit()
        f.write(msg2)
        f.flush()
</code></pre>
<p>One final issue (unrelated to the main question). Python's <code>exit</code> function is primarily intended for use in the interactive interpreter. It is added to the builtins by the <code>site</code> module, and so it won't exist if Python was run with the <code>-S</code> flag. If you want to close the interpreter, you should instead call <code>sys.exit</code>, raise a <code>SystemExit</code> exception, or just run off the end of the main module (a <code>break</code> statement would probably do that for the loop you've shown here, or perhaps a <code>return</code> if you're in a function somewhere).</p>
</div>
<span class="comment-copy"><code>None == None</code>, so this won't make a difference.</span>
<span class="comment-copy">perfect, thanks. I guess it was just a mistake on my part (its my 3rd day with python)</span>
<span class="comment-copy">@ChrisM. You'll find more flow control example at this link. <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html</a></span>
<span class="comment-copy">@jwodder - My thinking, as well. In fact, using 'is' instead of '==' could have unintended consequences : <a href="http://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is-in-python" title="is there a difference between and is in python">stackoverflow.com/questions/132988/â€¦</a></span>
<span class="comment-copy">@Slick - I'd forgotten that, thanks! Regardless, looking at the source code, how exactly would msg be None, anyway? raw_input() will return a string, no matter what, right? Seems like checking for None is unnecessary.</span>
