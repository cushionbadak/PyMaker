<div class="post-text" itemprop="text">
<p>I am trying to run a script to parse data that is in a log. I believe the issue is in the with open statement or the way it is reading the keyword. When I enter the below all I get is 'WEB_SERVER_API' about 1000 times. </p>
<p>My code: <em>[edited after feedback from Banana]</em></p>
<pre><code>from bs4 import BeautifulSoup

parsed_lines = []
to_find = ['QUERY_STRING','REMOTE_ADDR','HTTP_SERVER','CERT_SERIALNUMBER','CERT_SERVER_SUBJECT','CF_TEMPLATE_PATH','WEB_SERVER_API']

with open (r'C:/app/....', 'r') as log_lines:
    data = log_lines.read()
    log_lines.seek(0)  # Added after edit.
    for line in log_lines:
        soup = BeautifulSoup(line)
        parsed = {}
        for keyword in to_find:
            result = soup.find(text=keyword)
            if result and hasattr(result.parent.next_sibling, "text"):
                parsed[keyword] = result.parent.next_sibling.text
        parsed_lines.append(parsed) # Changed after edit.
print (parsed_lines)
</code></pre>
<p>If I add dummy data it parses correctly:</p>
<pre><code>parsed_lines = []
to_find = ['QUERY_STRING', 'REMOTE_ADDR', 'HTTP_SERVER', 'OTHER']
log_lines = [
   '&lt;td&gt;QUERY_STRING&lt;/td&gt;&lt;td&gt;fa=string&lt;/td&gt;&lt;td&gt;REMOTE_ADDR&lt;/td&gt;&lt;td&gt;address&lt;/td&gt;&lt;td&gt;HTTP_SERVER&lt;/td&gt;&lt;td&gt;address&lt;/td&gt;', 
   '&lt;td&gt;QUERY_STRING&lt;/td&gt;&lt;td&gt;second qs&lt;/td&gt;&lt;td&gt;REMOTE_ADDR&lt;/td&gt;&lt;td&gt;address&lt;/td&gt;&lt;td&gt;HTTP_SERVER&lt;/td&gt;&lt;td&gt;address&lt;/td&gt;',
   '&lt;td&gt;OTHER&lt;/td&gt;&lt;td&gt;OtherValue&lt;/td&gt;&lt;td&gt;REMOTE_ADDR&lt;/td&gt;&lt;td&gt;address&lt;/td&gt;&lt;td&gt;HTTP_SERVER&lt;/td&gt;&lt;td&gt;address&lt;/td&gt;'
   '&lt;action&gt;QUERY_STRING&lt;/td&gt;&lt;td&gt;fa=string&lt;/td&gt;&lt;td&gt;REMOTE_ADDR&lt;/table&gt;&lt;saasd&gt;address&lt;/body&gt;&lt;title&gt;HTTP_SERVER&lt;/td&gt;&lt;td&gt;address&lt;/title&gt;'
]

for line in log_lines:
    soup = BeautifulSoup(line)
    parsed = {}
    for keyword in to_find:
        result = soup.find(text=keyword)
        if result:
             parsed[keyword] = result.parent.next_sibling.text
     parsed_lines.append(parsed)
print (parsed_lines)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After using <code>read()</code> there is nothing left to read. You need to tell python to start over from line 1:</p>
<pre><code>(...)
data = log_lines.read()    
log_lines.seek(0) #read file from line 1
for line in log_lines:
    (...)
</code></pre>
<p>See <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow">documentation</a> for more info.</p>
<p><strong>[EDIT]</strong> Also, you have a mistake as you've written <code>parsed_lines.append(keyword)</code> instead of <code>parsed_lines.append(parsed)</code>.</p>
</div>
<span class="comment-copy">@Banana I didn't see I had that line still in. I generally run it without the data = log_lines but I will try adding it.</span>
<span class="comment-copy">I still just get a bunch of 'WEB_SERVER_API' or really which ever keyword is last.</span>
<span class="comment-copy">That's because you append the keyword AFTER the loop. After the loop the keyword is the last item in the list. I think you wanted to append <code>parsed</code>? I've added it to my answer.</span>
<span class="comment-copy">Yes. However, in your dummy example you append the parsed data, and for that it is the right place.</span>
<span class="comment-copy">@OneBlindMan if this or any answer has solved your question please consider <a href="http://meta.stackexchange.com/q/5234/179419">accepting it</a> by clicking the check-mark. This indicates to the wider community that you've found a solution and gives some reputation to both the answerer and yourself. There is no obligation to do this.</span>
<span class="comment-copy">I'm confused as to what the 'updated' code is - can you post it in an edit somewhere?</span>
