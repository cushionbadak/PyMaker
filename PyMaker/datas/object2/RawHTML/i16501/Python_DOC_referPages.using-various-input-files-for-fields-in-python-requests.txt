<div class="post-text" itemprop="text">
<p>I am sending queries to Google's directions API. From another programme, I am generating origin and destination latitude and longitude coordinates. I am currently saving these in CSV's files in this structure</p>
<pre><code>Y,X,
51.516185371445459,-0.102373799765274,
51.512892732882598,-0.083154776597858,
51.514087813699639,-0.097131850779755,
</code></pre>
<p>I am using the fantastic python Requests to generate these queries, but cannot work out how to specify in the fields, a look up to these csv files I have created. I am using the following - </p>
<pre><code>&gt;&gt;&gt; import json, requests
&gt;&gt;&gt; params = {'origin': '*directory to csv location*', 'destination': '*directory to csv location*', 'key': '*key*'}
&gt;&gt;&gt; r = requests.get('https://maps.googleapis.com/maps/api/directions/json', params=params)
&gt;&gt;&gt; print(r.url)
</code></pre>
<p>How do I tell the requests where the file is and what fields within the CSV to use? For the API, the coordinates need to be entered without comma's or spaces, so I would need to carry out this manipulation too. </p>
<p>Perhaps there is a better way than using CSV's?</p>
</div>
<div class="post-text" itemprop="text">
<p>No, the <a href="https://developers.google.com/maps/documentation/directions/" rel="nofollow">Google Maps API webservice</a>, nor <code>requests</code> take CSV filenames. You'll have to read the data from the CSV file first, then pass the values to the API. You can use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code> module</a> for this instead:</p>
<pre><code>import requests
import csv

url = 'https://maps.googleapis.com/maps/api/directions/json'
apikey = '*key*'

with open('csv_filename', 'r', newline='') as csvfile:
    reader = csv.DictReader(csvfile)
    coords = ['{X},{Y}'.format(**row) for row in reader]
    start, waypoints, end = coords[0], coords[1:-1], coords[-1]
    params = {'origin': start,
              'waypoints': '|'.join(waypoints),
              'destination': end,
              'key': apikey}
    directions = requests.get(url, params=params).json()
</code></pre>
<p>Here, the <code>DictReader()</code> will take the first row as keys, so each column can be addressed as <code>X</code> and <code>Y</code>, respectively. I then just format those into a string Google can understand.</p>
<p>I've assumed that the CSV file represents a series of points to get directions for; start, waypoints and end.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; import requests
&gt;&gt;&gt; sample = '''\
... Y,X,
... 51.516185371445459,-0.102373799765274,
... 51.512892732882598,-0.083154776597858,
... 51.514087813699639,-0.097131850779755,
... '''
&gt;&gt;&gt; reader = csv.DictReader(sample.splitlines())
&gt;&gt;&gt; next(reader)
{'': '', 'X': '-0.102373799765274', 'Y': '51.516185371445459'}
&gt;&gt;&gt; reader = csv.DictReader(sample.splitlines())
&gt;&gt;&gt; coords = ['{X},{Y}'.format(**row) for row in reader]
&gt;&gt;&gt; start, waypoints, end = coords[0], coords[1:-1], coords[-1]
&gt;&gt;&gt; params = {'origin': start,
...           'waypoints': '|'.join(waypoints),
...           'destination': end,
...           'key': 'someapikey'}
&gt;&gt;&gt; params
{'destination': '-0.097131850779755,51.514087813699639', 'waypoints': '-0.083154776597858,51.512892732882598', 'key': 'someapikey', 'origin': '-0.102373799765274,51.516185371445459'}
&gt;&gt;&gt; url = 'https://maps.googleapis.com/maps/api/directions/json'
&gt;&gt;&gt; directions = requests.get(url, params=params).json()
&gt;&gt;&gt; from pprint import pprint
&gt;&gt;&gt; pprint(directions)
{'routes': [], 'status': 'ZERO_RESULTS'}
</code></pre>
<p>In this specific case, your coordinates do not actually result in a viable route, so <code>'status': 'ZERO_RESULTS'</code> is returned.</p>
</div>
<span class="comment-copy">You cannot just pass a CSV file to the API, no. You can easily read the data from the CSV with the <code>csv</code> module though. Did you read up on the <a href="https://developers.google.com/maps/documentation/directions/" rel="nofollow noreferrer">API documentation</a> to see what parameters the API takes?</span>
<span class="comment-copy">What coordinates are the origin and the destination here?</span>
<span class="comment-copy">Many thanks! I have the origin and destination coordinates in two separate CSV. Would I be better to put them in one CSV and put them in different columns?  I don't have any waypoints, so that simplifies things.</span>
<span class="comment-copy">Depends on how you want to combine them. If it is a straight-up start - end pairing, you can put them in one file, or you can use <code>zip()</code> to pair up the rows (<code>for start, end in zip(start_reader, end_reader):</code>).</span>
<span class="comment-copy">I shall try the straight up start and end pairing and see how I go! Many thanks. I shall try and get this to work</span>
