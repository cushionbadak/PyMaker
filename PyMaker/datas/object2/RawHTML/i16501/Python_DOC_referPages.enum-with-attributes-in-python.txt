<div class="post-text" itemprop="text">
<p>I am a Java developer, but now I am working on a Python project. Is it possible to write an enum whose constructor has attributes?</p>
<p>I would do it this way in Java.</p>
<pre><code>public class Main {

    private enum Planet {
        MERCURY(3.303e+23, 2.4397e6),
        VENUS(4.869e+24, 6.0518e6),
        EARTH(5.976e+24, 6.37814e6),
        MARS(6.421e+23, 3.3972e6),
        JUPITER(1.9e+27, 7.1492e7),
        SATURN(5.688e+26, 6.0268e7),
        URANUS(8.686e+25, 2.5559e7),
        NEPTUNE(1.024e+26, 2.4746e7);

        private final double mass; // in kilograms
        private final double radius; // in meters

        Planet(double mass, double radius) {
            this.mass = mass;
            this.radius = radius;
        }

        @Override
        public String toString() {
            return super.toString() + " radius: " + radius + ", mass: " + mass;
        }
    }

    public static void main(String[] args) {
        for (Planet planet : Planet.values()) {
            System.out.println(planet);
        }
    }

}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As Joram noted, your Planet example is <a href="https://docs.python.org/3/library/enum.html#planet" rel="nofollow noreferrer">in the docs</a>.</p>
<p>If you want to know how to add a plain constant to an <code>Enum</code>, check out <a href="https://stackoverflow.com/questions/17911188/is-it-possible-to-define-a-class-constant-inside-an-enum/18035135#18035135">this answer</a>.</p>
<p>Oh, and <code>Enum</code> <a href="https://pypi.python.org/pypi/enum34" rel="nofollow noreferrer">has also been backported</a>.</p>
</div>
<span class="comment-copy">What version of Python are you using?</span>
<span class="comment-copy">ummm your example code is in the official docs ... <a href="https://docs.python.org/3/library/enum.html#planet" rel="nofollow noreferrer">docs.python.org/3/library/enum.html#planet</a> ... (note that enum is only available in python3)</span>
<span class="comment-copy">@dano, Python 3.4.0</span>
