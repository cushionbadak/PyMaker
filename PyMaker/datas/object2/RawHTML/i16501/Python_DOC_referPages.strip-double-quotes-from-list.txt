<div class="post-text" itemprop="text">
<p>I'm using sage, python and CSV.</p>
<p>Here is an example row from my csv file:</p>
<pre><code>"(4, 4)",0.921,1.512,1.718,"[[(0, 0, 1), (1, 0, 0)]]","[[(0, 0, 3), (1, 0, 0)]]"
</code></pre>
<p>I also have:</p>
<pre><code>with open('log.csv', 'rt') as logFile:
    logreader = csv.reader(logFile)
    for row in logreader:
        a = row[3]
        b = row[4]
</code></pre>
<p>I was expecting <code>csv.reader</code> to strip the double-quotes when assigning <code>a</code> and <code>b</code> such that:</p>
<pre><code>a == [[(0, 0.5, 1), (1, 0, 0)]]
b == [[(0, 0, 3), (1, 0, 0)]]
</code></pre>
<p>however</p>
<pre><code>a == "[[(0, 0, 1), (1, 0, 0)]]"
b == "[[(0, 0, 3), (1, 0, 0)]]"
</code></pre>
<p>What is the best way to achieve what I was expecting?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow"><code>ast.literal_eval</code></a> to parse the strings into lists:</p>
<pre><code>from ast import literal_eval
with open('log.csv', 'rt') as logFile:
    logreader = csv.reader(logFile)
    for row in logreader:
        a = literal_eval(row[3])
        b = literal_eval(row[4])
</code></pre>
<p>See a demonstration below:</p>
<pre><code>&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; literal_eval("[[(0, 0, 1), (1, 0, 0)]]")
[[(0, 0, 1), (1, 0, 0)]]
&gt;&gt;&gt; type(literal_eval("[[(0, 0, 1), (1, 0, 0)]]"))
&lt;class 'list'&gt;
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use the built-in strip function:</p>
<pre><code>a = row[3].strip('"')
b = row[4].strip('"')
</code></pre>
</div>
<span class="comment-copy">To anyone that is having this problem when using sage, make sure that all numbers are either <code>int</code> or <code>float</code>, NOT <code>rational</code>. This should fix things</span>
<span class="comment-copy">I tried using literal_eval but got <code>ValueError: malformed string</code>, I believe this is to do with having Sage Rationals in the tuples. Thanks for your help</span>
<span class="comment-copy">@TheRef - Yes, that is the cause.  If you look at the documentation for <code>ast.literal_eval</code>, you will see that it can only parse strings, bytes, numbers (which are ints, floats, and complex), tuples, lists, dicts, sets, booleans, and <code>None</code>.  In other words, it can only handle the basic Python datatypes.</span>
