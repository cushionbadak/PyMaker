<div class="post-text" itemprop="text">
<p>I have a json string in a txt file and I'm trying to read it to do some other procedures afterwards. It looks like this:</p>
<pre><code>with open('code test.txt', 'r', encoding=('UTF-8')) as f:
    x = json.load(f)
</code></pre>
<p>I know the json is valid, but I'm getting:</p>
<pre><code>Traceback (most recent call last):
  File "C:\Python33\lib\json\decoder.py", line 368, in raw_decode
    obj, end = self.scan_once(s, idx)
StopIteration

During handling of the above exception, another exception occurred:

    Traceback (most recent call last):
      File "C:\Users\rodrigof\Desktop\xml test\xml extraction.py", line 334, in &lt;module&gt;
        user_input()
      File "C:\Users\rodrigof\Desktop\xml test\xml extraction.py", line 328, in user_input
        child_remover()
      File "C:\Users\rodrigof\Desktop\xml test\xml extraction.py", line 280, in child_remover
        x = json.load(f)
      File "C:\Python33\lib\json\__init__.py", line 274, in load
        parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
      File "C:\Python33\lib\json\__init__.py", line 319, in loads
        return _default_decoder.decode(s)
      File "C:\Python33\lib\json\decoder.py", line 352, in decode
        obj, end = self.raw_decode(s, idx=_w(s, 0).end())
      File "C:\Python33\lib\json\decoder.py", line 370, in raw_decode
        raise ValueError("No JSON object could be decoded")
    ValueError: No JSON object could be decoded
</code></pre>
<p>I used this <a href="http://jsonlint.com/" rel="nofollow">website</a> to check if the string is valid. If I use <code>.loads()</code>, I get a different error:</p>
<pre><code>Traceback (most recent call last):
  File "C:\Users\rodrigof\Desktop\xml test\xml extraction.py", line 334, in &lt;module&gt;
    user_input()
  File "C:\Users\rodrigof\Desktop\xml test\xml extraction.py", line 328, in user_input
    child_remover()
  File "C:\Users\rodrigof\Desktop\xml test\xml extraction.py", line 280, in child_remover
    x = json.loads(f)
  File "C:\Python33\lib\json\__init__.py", line 319, in loads
    return _default_decoder.decode(s)
  File "C:\Python33\lib\json\decoder.py", line 352, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
TypeError: expected string or buffer
</code></pre>
<p>Originally the json was embeded in my script like this:</p>
<pre><code>json_text="""json stuff here"""
</code></pre>
<p>And didn't get any errors. Any ideas on how to fix this???</p>
<p>Running python 3.3.3 just in case.</p>
<p>Thanks!!</p>
<p><strong>EDIT:</strong></p>
<p>Just some random (valid) json on the txt and I get the same issue. This os one of the ones i tried:</p>
<pre><code>{"data":
    {"mobileHelp":
        {"value":
            {
            "ID1":{"children": [1,2,3,4,5]},
            "ID2":{"children": []},
            "ID3":{"children": [6,7,8,9,10]}
            }
        }
    }
}
</code></pre>
<p>Which is valid as well as per jsonlint.com.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your file contains a <a href="http://en.wikipedia.org/wiki/Byte_order_mark#UTF-8" rel="noreferrer">UTF-8 BOM character</a> at the start. UTF-8 <strong>doesn't need a BOM</strong> but especially Microsoft tools insist on adding one anyway.</p>
<p>Open the file with the <code>utf-8-sig</code> encoding instead:</p>
<pre><code>&gt;&gt;&gt; open('/tmp/json.test', 'wb').write(b'\xef\xbb\xbf{"data":\r\n    {"mobileHelp":\r\n        {"value":\r\n            {\r\n            "ID1":{"children": [1,2,3,4,5]},\r\n            "ID2":{"children": []},\r\n            "ID3":{"children": [6,7,8,9,10]}\r\n            }\r\n        }\r\n    }\r\n}')
230
&gt;&gt;&gt; import json
&gt;&gt;&gt; with open('/tmp/json.test', encoding='utf8') as f:
...     data = json.load(f)
... 
Traceback (most recent call last):
  File "/Users/mj/Development/Library/buildout.python/parts/opt/lib/python3.3/json/decoder.py", line 367, in raw_decode
    obj, end = self.scan_once(s, idx)
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 2, in &lt;module&gt;
  File "/Users/mj/Development/Library/buildout.python/parts/opt/lib/python3.3/json/__init__.py", line 271, in load
    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
  File "/Users/mj/Development/Library/buildout.python/parts/opt/lib/python3.3/json/__init__.py", line 316, in loads
    return _default_decoder.decode(s)
  File "/Users/mj/Development/Library/buildout.python/parts/opt/lib/python3.3/json/decoder.py", line 351, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Users/mj/Development/Library/buildout.python/parts/opt/lib/python3.3/json/decoder.py", line 369, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
&gt;&gt;&gt; with open('/tmp/json.test', encoding='utf-8-sig') as f:
...     data = json.load(f)
... 
&gt;&gt;&gt; data
{'data': {'mobileHelp': {'value': {'ID2': {'children': []}, 'ID3': {'children': [6, 7, 8, 9, 10]}, 'ID1': {'children': [1, 2, 3, 4, 5]}}}}}
</code></pre>
<p>Note that from Python 3.4 onwards you get a more helpful error message here:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 2, in &lt;module&gt;
  File "/Users/mj/Development/Library/buildout.python/parts/opt/lib/python3.4/json/__init__.py", line 268, in load
    parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
  File "/Users/mj/Development/Library/buildout.python/parts/opt/lib/python3.4/json/__init__.py", line 314, in loads
    raise ValueError("Unexpected UTF-8 BOM (decode using utf-8-sig)")
ValueError: Unexpected UTF-8 BOM (decode using utf-8-sig)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not sure what your code looks like for the second error, but it looks like you are passing <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow"><code>json.loads</code></a> a file object and not a string. Try:</p>
<pre><code>with open('code test.txt', 'r', encoding=('UTF-8')) as f:
    x = json.loads(f.read())
</code></pre>
<p>or without newlines with:</p>
<pre><code>with open('code test.txt', 'r', encoding=('UTF-8')) as f:
    x = json.loads(f.read().replace('\n', ''))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As another choice, This will be much easier to fix this issue.</p>
<pre><code>json.loads(open('test.txt').read().decode('utf-8-sig'))
</code></pre>
</div>
<span class="comment-copy"><code>ValueError: No JSON object could be decoded</code> implies that the file contains invalid JSON. Can you edit your post with the file contents?</span>
<span class="comment-copy">Please add the content of your file to your question.</span>
<span class="comment-copy">The errors indicate your file ran out before the JSON object was found to be complete.</span>
<span class="comment-copy">You can go to <a href="http://jsonlint.com/" rel="nofollow noreferrer">jsonlint.com</a> to validate your json.</span>
<span class="comment-copy">@rodrigocf I have noticed, your python scripts are containing space in file name (including directory). Could you try to do the same in directory without spaces in path? Plus the script being also "space-less".</span>
<span class="comment-copy">Completely nailed it, that encoding solved it. Thanks!!</span>
<span class="comment-copy"><code>json.load</code> takes a file-like object, <code>json.loads</code> takes a string.</span>
<span class="comment-copy">With this I still get the "no json object could be decoded"</span>
<span class="comment-copy">Not sure why this anwer got two upvotes, as it doesn't address the issue at all; <code>json.load()</code> (<i>no</i> <code>s</code>) is a perfectly valid method to load a JSON file, <i>provided the file data can be decoded and is correct</i>.</span>
