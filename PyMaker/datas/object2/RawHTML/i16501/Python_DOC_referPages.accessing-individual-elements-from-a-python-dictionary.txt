<div class="post-text" itemprop="text">
<p>I have a data which has been generated dynamically. The output of the data looks like this and it is of dictionary type.</p>
<pre><code>dict_items([('date', ['2011-10-31', '2012-05-08']), 

('status', ['completed', 'completed']), 

('id', ['18', '12']) ])
</code></pre>
<p>I need to access these data and insert it into the database dynamically.</p>
<p>How to get this into a structure which can be used to insertion operation?
I am not sure of how to proceed after this. can someone suggest me a possible way of insertion into a database.</p>
<p>I want the structure to look like this:</p>
<pre><code>{ {date,status,id},{'2011-10-31','completed','18'},
{date,status,id},{'2011-05-08','completed','12'}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you wanted to output a list of <strong>dictionaries</strong>, one for each 'column' in the values, you can use <code>zip()</code> to transform the values into grouped columns:</p>
<pre><code>keys = yourdict.keys()
output = [dict(zip(keys, col)) for col in zip(*yourdict.values())]
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; yourdict = {'date': ['2011-10-31', '2012-05-08'], 'id': ['18', '12'], 'status': ['completed', 'completed']}
&gt;&gt;&gt; keys = yourdict.keys()
&gt;&gt;&gt; [dict(zip(keys, col)) for col in zip(*yourdict.values())]
[{'date': '2011-10-31', 'id': '18', 'status': 'completed'}, {'date': '2012-05-08', 'id': '12', 'status': 'completed'}]
</code></pre>
<p>If you really wanted to output interleaved sets of keys, then values, you can do:</p>
<pre><code>keys = set(yourdict.keys())
output = [elem for col in zip(*yourdict.values()) for elem in (keys, set(col))]
</code></pre>
<p>which results in:</p>
<pre><code>&gt;&gt;&gt; keys = set(yourdict.keys())
&gt;&gt;&gt; [elem for col in zip(*yourdict.values()) for elem in (keys, set(col))]
[{'date', 'id', 'status'}, {'completed', '2011-10-31', '18'}, {'date', 'id', 'status'}, {'2012-05-08', 'completed', '12'}]
</code></pre>
<p>Note that I used a list here, not an (outer) set, as that'd not allow for multiple <code>{'date', 'id', 'status'}</code> sets; values in a set are unique, after all.</p>
</div>
<div class="post-text" itemprop="text">
<p>to some extend to update mysql  below format may be sufficient</p>
<pre><code>t=[('date', ['2011-10-31', '2012-05-08']),

('status', ['completed', 'completed']),

('id', ['18', '12']) ]

dic={i[0]:i[1] for i in t}
lis=[]
for i,j,k in zip(*dic.values()):
    lis.append((i,j,k))


print lis
#[('2011-10-31', 'completed', '18'), ('2012-05-08', 'completed', '12')]
</code></pre>
</div>
<span class="comment-copy">you cant have a structure like <code>{ {date,status,id},{'2011-10-31','completed','18'},{date,status,id},{'2011-05-08','completed','12'}}</code> Its neither a dict nor a list</span>
<span class="comment-copy">Then can you please tell me how the struture will look like</span>
<span class="comment-copy">@AshokaLella: but it <i>is</i> a <b>set</b>. You cannot have (mutable) sets in side another set, but you can use <code>frozenset()</code> to get essentially the same.</span>
<span class="comment-copy">What you have is <b>not</b> a dictionary, however. You have the result of calling <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer"><code>dict.items()</code></a>, which is a <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer">dictionary view object</a>. It may be that you expected sets, however. Presumably your original dictionary was <code>{'date': ['2011-10-31', '2012-05-08'], 'id': ['18', '12'], 'status': ['completed', 'completed']}</code>.</span>
<span class="comment-copy">@MartijnPieters, my bad, never came across such data structure</span>
<span class="comment-copy">For the record, this is <i>probably</i> Python 3, where <code>dict.items()</code> returns a <code>dict_items()</code> dictionary view. In Python 2 you'd call <code>dict.viewitems()</code>, but fewer people stumble upon that.</span>
<span class="comment-copy">@MartijnPieters i donnot know  that . thanks</span>
<span class="comment-copy">Ah, I missed something in the requirements of the OP here. You can use <code>zip(*list_of_lists)</code> to transpose rows to columns.</span>
