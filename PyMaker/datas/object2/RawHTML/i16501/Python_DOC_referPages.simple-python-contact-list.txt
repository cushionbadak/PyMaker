<div class="post-text" itemprop="text">
<p>My code does not seem to be working. It will create a max of one dictionary. If you create another name and number, aka dictionary it will replace the current one.</p>
<h1>Here is my code:</h1>
<pre><code>list = {}

def start():
    print "Welcome to Contact+ \n \nPlease enter your name: ",
    name = raw_input()
    print "Hi " + name + " would you like to check your current contacts or make new ones? \nTo make new contacts type in 'New' \nTo check current contacts type in 'Contacts'"
    print "Go to: ",
    choose = ""
    choose = raw_input()
    valid = False
    while(not valid):
        if choose == "'New'" or choose == "'new'" or choose == "New" or choose == "new":
            new_function()
        elif choose == "'Contacts'" or choose == "'contacts'" or choose == "Contacts" or choose == "contacts":
            contacts_function()

def new_function():
    global list
    list = {}
    print "\nPlease input the name: ",
    contact_name = raw_input()
    print "Please input the number: ",
    contact_number = raw_input()
    list.update({contact_name:contact_number})
    print "Contact created \n\nWould you like to make more contacts or check current contacts? \nTo make new contacts type in 'New' \nTo check current contacts type in 'Contacts'"
    print "Go to: ",
    choose = ""
    choose = raw_input()
    valid = False
    while(not valid):
        if choose == "'New'" or choose == "'new'" or choose == "New" or choose == "new":
            new_function()
        elif choose == "'Contacts'" or choose == "'contacts'" or choose == "Contacts" or choose == "contacts":
            contacts_function()

def contacts_function():
    global list
    for keys,values in list.items():
        print "\n---------------------------------------------------------"
        print str("Name: ") + str(keys)
        print str("Number: ") + str(values)
        print "---------------------------------------------------------\n"
    print "Would you like to make more contacts or check current contacts? \nTo make new contacts type in 'New' \nTo check current contacts type in 'Contacts'"
    print "Go to: ",
    choose = ""
    choose = raw_input()
    valid = False
    while(not valid):
        if choose == "'New'" or choose == "'new'" or choose == "New" or choose == "new":
            new_function()
        elif choose == "'Contacts'" or choose == "'contacts'" or choose == "Contacts" or choose == "contacts":
            contacts_function()

start()
</code></pre>
<p>Sorry if this is a stupid question, I am still new to programming.</p>
</div>
<div class="post-text" itemprop="text">
<p>Each time <code>new_function()</code> is called, you are doing this:</p>
<pre><code>list = {}
</code></pre>
<p>That replace the contents of list with an empty dictionary!</p>
<p>Just remove that line.</p>
<hr/>
<p>Since you're new to programming, allow me to point out a few other issues with your code:</p>
<ul>
<li>You are not asking for new input if the input is not valid</li>
<li>You shouldn't need to repeat the choice entry code like that.</li>
<li>You can process your choices with a simpler condition.</li>
</ul>
<p>Take a look at this, and see what you can learn from it:</p>
<pre><code>def start():
    ...
    print "Hi " + name
    while True:
        print "Would you like to make more contacts or check current contacts? \nTo make new contacts type in 'New' \nTo check current contacts type in 'Contacts'"
        print "Go to: ",
        choose = raw_input().lower()
        if choose == "new":
            new_function()
        elif choose == "contacts":
            contacts_function()
</code></pre>
<p>You can then remove that repeated code from the end of <code>new_function</code> and <code>contacts_function</code>.</p>
<p>As others have mentioned, using the name <code>list</code> as a variable is also a bad idea, because it hides the built-in <a href="https://docs.python.org/2/library/functions.html#list" rel="nofollow"><code>list</code></a>.</p>
<p>Finally, it's generally considered bad practice to use global data like that.  Consider declaring your contact list dictionary in <code>start()</code>, and passing it as a parameter to <code>new_function</code> and <code>contacts_function</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are resetting <code>list</code> each time you call <code>new_function</code>:</p>
<pre><code>def new_function():
    global list
    list = {}
</code></pre>
<p>That rebinds <code>list</code> to point to a <em>new</em> dictionary, remove that line. If all you do is add new keys to the dictionary, you don't even need the <code>global</code> line here.</p>
<p>Further down, the line:</p>
<pre><code>list.update({contact_name:contact_number})
</code></pre>
<p>will indeed correctly add a new entry to the dictionary. Using <code>dict.update()</code> for adding one entry is overkill however, you can just assign to the key instead:</p>
<pre><code>list[contact_name] = contact_number
</code></pre>
<p>Note that using <code>list</code> as a variable is a bad idea, you are masking the <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow">built-in type</a>. A better name would be <code>contacts</code>.</p>
</div>
<span class="comment-copy">Why do you have a dictionary called list?</span>
<span class="comment-copy">Your <code>raw_input</code> statements should be inside you <code>while</code> loops.  If you misspell a command, your program will infinitely loop in the <code>while</code> as is.  Also, <code>raw_input().lower()</code> will help limit your <code>if</code> comparisons.</span>
<span class="comment-copy">Thank you so much!!!!</span>
