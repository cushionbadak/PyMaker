<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10880813/typeerror-sequence-item-0-expected-string-int-found">TypeError: sequence item 0: expected string, int found</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I have a list of ints and want to create a comma-separated string. The following:</p>
<pre><code>x = [3, 1, 4, 1, 5]
y = ",".join(x)
</code></pre>
<p>Give the error:</p>
<pre><code>TypeError: sequence item 0: expected string, int found
</code></pre>
<p>How do I create the string? I could manually convert every element from int to string, insert this into a new list, and then do the join on this new list, but I'm wondering if there is a cleaner solution.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>str.join</code> only accepts an iterable of strings, not one of integers.  From the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="noreferrer">docs</a>:</p>
<blockquote>
<p><code>str.join(iterable)</code></p>
<p>Return a string which is the concatenation of the <strong>strings</strong> in the iterable <code>iterable</code>.</p>
</blockquote>
<p>Thus, you need to convert the items in <code>x</code> into strings.  You can use either <a href="https://docs.python.org/3/library/functions.html#map" rel="noreferrer"><code>map</code></a> or a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a>:</p>
<pre><code>x = [3, 1, 4, 1, 5]
y = ",".join(map(str, x))

x = [3, 1, 4, 1, 5]
y = ",".join([str(item) for item in x])
</code></pre>
<p>See a demonstration below:</p>
<pre><code>&gt;&gt;&gt; x = [3, 1, 4, 1, 5]
&gt;&gt;&gt;
&gt;&gt;&gt; ",".join(map(str, x))
'3,1,4,1,5'
&gt;&gt;&gt;
&gt;&gt;&gt; ",".join([str(item) for item in x])
'3,1,4,1,5'
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are dealing with a csv file that is something other than the trivial example here, please do remember you are better off using the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow">csv module</a> to read and write csv, since <a href="http://creativyst.com/Doc/Articles/CSV/CSV01.htm#FileFormat" rel="nofollow">CSV can be surprisingly complex</a>.</p>
<p>Here is a write example:</p>
<pre><code>import csv

x = [['Header\n1', 'H 2', 'H 3', 'H, 4'],[1,2,3,4],[5,6,7,8],[9,10,11,12]]

with open('/tmp/test.csv', 'w') as fout:
    writer=csv.writer(fout)
    for l in x:
        writer.writerow(l)
</code></pre>
<p>Note the embedded comma in <code>'H, 4'</code> and the embedded new line in <code>'Header\n1'</code> that may trip up efforts to decode if not properly encoded. </p>
<p>The file 'test.csv' that the csv module produces:</p>
<pre><code>"Header
1",H 2,H 3,"H, 4"
1,2,3,4
5,6,7,8
9,10,11,12
</code></pre>
<p>Note the quoting around <code>"Header\n1"</code> and "H, 4"` in the file so that the csv is correctly decoded in the future. </p>
<p>Now check you can read that back:</p>
<pre><code>with open('/tmp/test.csv') as f:
    csv_in=[[int(e) if e.isdigit() else e for e in row] 
               for row in csv.reader(f)]

&gt;&gt;&gt; csv_in==x
True
</code></pre>
<p>Just sayin' You are usually better off using the tools in the library for csv. </p>
</div>
<div class="post-text" itemprop="text">
<p>Just modify the argument to <code>join</code> so that each element is converted to a string:</p>
<pre><code>x = [3, 1, 4, 1, 5]
y = ",".join(str(i) for i in x)
</code></pre>
</div>
<span class="comment-copy">You could use <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a>: <code>y = ",".join(map(str, x))</code>.</span>
<span class="comment-copy">the <code>str.join</code> answer is OK if your list is guaranteed to have only integers - for anything serious use the csv module, it will handle a lot of corner cases.</span>
<span class="comment-copy">@IoannisFilippidis - Using a list comprehension is more efficient with <code>str.join</code>. See here for details: <a href="http://stackoverflow.com/a/9061024/2555451">stackoverflow.com/a/9061024/2555451</a></span>
<span class="comment-copy">Very interesting, thank you for noting this. I think it would make a valuable addition to the answer.</span>
<span class="comment-copy">thnx Austin...still getting used to helping out at Stackoverflow</span>
