<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/509211/understanding-slice-notation">Understanding slice notation</a>
<span class="question-originals-answer-count">
                    31 answers
                </span>
</li>
</ul>
</div>
<p>I've got a string test_string like 'Hello, two is a number'" and I want to copy the characters between position 7 and 12. In the programming language I use:</p>
<pre><code>test_string = 'Hello, two is a number'
new_string = string_copy(test_string, 7, 12)
</code></pre>
<p>the value of new_string would be ' two i'. My example might be a bit stupid, but does a function exist in Python equal to string_copy?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a built-in feature, thatâ€™s called <em>slicing</em>:</p>
<pre><code>'Hello, two is a number'[7:12]
</code></pre>
<p>or</p>
<pre><code>test_string = 'Hello, two is a number'
new_string = test_string[7:12]
</code></pre>
<p>You seem to have miscounted though, as the result will be 'two i' (without leading space).</p>
<p><em>edit: Or, as Zero Piraeus points out, your language uses 1-based indexing in contrast to python</em></p>
<p>See also <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow">https://docs.python.org/3/tutorial/introduction.html#lists</a></p>
</div>
<span class="comment-copy">That should be <code>'Hello, two is a number'[6:12]</code> ... question assumes 1-based indexing and closed <a href="http://en.wikipedia.org/wiki/Interval_%28mathematics%29#Terminology" rel="nofollow noreferrer">intervals</a> (which is reasonable, just not how Python does it), whereas Python's slicing is <a href="http://en.wikipedia.org/wiki/Zero-based_numbering" rel="nofollow noreferrer">zero-based</a> and half-open.</span>
<span class="comment-copy">Thanks for the answer and your method works like a charm. I checked the GML (Game Maker Language) documentation which uses 1-based indexing indeed.</span>
