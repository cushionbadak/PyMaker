<div class="post-text" itemprop="text">
<p>I have a string like;</p>
<pre><code>'[abc] [def] [zzz]'
</code></pre>
<p>How would I be able to split it into three parts:</p>
<pre><code>abc
def
zzz
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html" rel="nofollow"><code>re.findall</code></a>:</p>
<pre><code>&gt;&gt;&gt; from re import findall
&gt;&gt;&gt; findall('\[([^\]]*)\]', '[abc] [def] [zzz]')
['abc', 'def', 'zzz']
&gt;&gt;&gt;
</code></pre>
<p>All of the Regex syntax used above is explained in the link, but here is a quick breakdown:</p>
<pre><code>\[      # [
(       # The start of a capture group
[^\]]*  # Zero or more characters that are not ]
)       # The end of the capture group
\]      # ]
</code></pre>
<hr/>
<p>For those who want a non-Regex solution, you could always use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow"><code>str.split</code></a>:</p>
<pre><code>&gt;&gt;&gt; [x[1:-1] for x in '[abc] [def] [zzz]'.split()]
['abc', 'def', 'zzz']
&gt;&gt;&gt;
</code></pre>
<p><code>[1:-1]</code> strips off the square brackets on each end of <code>x</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another way:</p>
<pre><code>s = '[abc] [def] [zzz]'
s = [i.strip('[]') for i in s.split()]
</code></pre>
</div>
<span class="comment-copy">Remove the brackets from the string, and then perform an ordinary split on the spaces.</span>
<span class="comment-copy">Ah, but what if the next string is <code>'[abc def] [zzz]'</code>?</span>
<span class="comment-copy">Using <code>[^\]]*</code> instead of <code>.*?</code> is significantly faster (I can see a 3x improvement with longer groups and strings) (the list-comprehension seems fastest anyway...)</span>
<span class="comment-copy">why do you need to specify <code>' '</code> in split?</span>
<span class="comment-copy">@PadraicCunningham Yes right</span>
