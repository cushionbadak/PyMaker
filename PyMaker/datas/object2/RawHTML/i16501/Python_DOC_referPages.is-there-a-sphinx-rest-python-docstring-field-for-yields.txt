<div class="post-text" itemprop="text">
<p>I'm trying to use reST-style docstrings, i.e.</p>
<pre><code>def foo(bar):
    """a method that takes a bar

    :param bar: a Bar instance
    :type bar: Bar
</code></pre>
<p>Is there a standard way to document <code>yields</code>? I looked at <a href="http://sphinx-doc.org/domains.html#info-field-lists" rel="noreferrer">http://sphinx-doc.org/domains.html#info-field-lists</a>, a-la this question [ <a href="https://stackoverflow.com/questions/5334531/python-documentation-standard-for-docstring">Using javadoc for Python documentation</a> ], but no luck. I'm imagining something like,</p>
<pre><code>    :yields: transformed bars
    :yield type: Baz
</code></pre>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Python 3.5 <code>Iterator[]</code> annotation</strong></p>
<p>They offer a standardized <code>Iterator[]</code> syntax for this as documented at: <a href="https://docs.python.org/3/library/typing.html#typing.Generator" rel="nofollow noreferrer">https://docs.python.org/3/library/typing.html#typing.Generator</a></p>
<p>Before Python 3, I recommend that you use this syntax to make it easier to port later on:</p>
<pre><code>from typing import List
def f():
    """
    :rtype: Iterator[:class:`SomeClass`]
    """
    yield SomeClass()
</code></pre>
<p>And after Python 3, use <a href="https://pypi.python.org/pypi/sphinx-autodoc-annotation" rel="nofollow noreferrer">https://pypi.python.org/pypi/sphinx-autodoc-annotation</a> with syntax:</p>
<pre><code>from typing import Iterator
def f() -&gt; Iterator[SomeClass]:
    yield SomeClass()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have reviewed the other answer and it doesn't in my opinion answer the question.</p>
<p>The way to document a generator, although not the best, is by using <code>:return</code> as in the rest of the docs. Use the description to give notice that it is a generator.</p>
<p>Yields from Google/Numpy style docs convert yields to return clauses.</p>
<p><a href="https://bitbucket.org/RobRuana/sphinx-contrib/src/a06ae33f1c70322c271a97133169d96a5ce1a6c2/napoleon/sphinxcontrib/napoleon/docstring.py?at=default&amp;fileviewer=file-view-default#docstring.py-678:680" rel="nofollow">https://bitbucket.org/RobRuana/sphinx-contrib/src/a06ae33f1c70322c271a97133169d96a5ce1a6c2/napoleon/sphinxcontrib/napoleon/docstring.py?at=default&amp;fileviewer=file-view-default#docstring.py-678:680</a></p>
</div>
<span class="comment-copy">Close to <a href="http://stackoverflow.com/questions/7652540/docstring-tag-for-yield-keyword?rq=1">Docstring tag for 'yield' keyword</a>.</span>
<span class="comment-copy">I don't know reST, but my guess would be that you document it the way you'd document any other "returns an iterator" function. The use of <code>yield</code> is an implementation detail.</span>
<span class="comment-copy">yeah, I know the other question is similar, I want a reST-specific answer, thanks!</span>
