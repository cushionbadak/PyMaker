<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5082452/python-string-formatting-vs-format">Python string formatting: % vs. .format</a>
<span class="question-originals-answer-count">
                    17 answers
                </span>
</li>
</ul>
</div>
<p>I find it takes quite a bit of focus, time an effort to format a string with the syntax I'm currently using:</p>
<pre><code>myList=['one','two','three']
myString='The number %s is larger than %s but smaller than %s.'%(myList[1],myList[0],myList[2])
</code></pre>
<p>Result:</p>
<pre><code>"The number two is larger than one but smaller than three"
</code></pre>
<p>Strange but every time I reach <code>%</code> keyboard key followed by <code>s</code> I feel kind of interrupted...</p>
<p>I wonder if there is alternative way of achieving a similar string formatting. Please post some examples.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may be looking for <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format</code></a>, the new, preferred way to perform string formatting operations:</p>
<pre><code>&gt;&gt;&gt; myList=['one','two','three']
&gt;&gt;&gt; 'The number {1} is larger than {0} but smaller than {2}.'.format(*myList)
'The number two is larger than one but smaller than three.'
&gt;&gt;&gt;
</code></pre>
<p>The main advantage of this method is that, instead of doing <code>(myList[1],myList[0],myList[2])</code>, you can simply <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow">unpack</a> <code>myList</code> by doing <code>*myList</code>.  Then, by numbering the format fields, you can put the substrings in the order you want.</p>
<p>Note too that numbering the format fields is unnecessary if <code>myList</code> is already in order:</p>
<pre><code>&gt;&gt;&gt; myList=['two','one','three']
&gt;&gt;&gt; 'The number {} is larger than {} but smaller than {}.'.format(*myList)
'The number two is larger than one but smaller than three.'
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">You mean interrupted in terms of your typing flow?</span>
<span class="comment-copy">This is not a duplicate. Format is just one of the many possible ways to do a string. Other options like concatenation are an option for this question. Or perhaps something based around <code>string.join</code></span>
<span class="comment-copy">With <code>str.format</code> you can also do indexing within the format string rather than unpacking, if you want: <code>"The number {0[1]} is larger than {0[0]} but smaller than {0[2]}.".format(mylist)</code>.</span>
