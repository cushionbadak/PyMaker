<div class="post-text" itemprop="text">
<p>I am trying to print a list in python with the " quotation marks instead of ' quotations marks.</p>
<p>E.g. What I am getting <code>myList = ['a','b','c','d']</code>
What I want to get <code>myList = ["a","b","c","d"]</code></p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do that using <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a>:</p>
<pre><code>import json

myList = ['a','b','c','d']

out = json.dumps(myList)
print(out)
# ["a", "b", "c", "d"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The easy way to do this is with <code>json</code> (because that happens to be the format JSON uses):</p>
<pre><code>import json
print(json.dumps(['a', 'b', 'c', 'd'])
</code></pre>
<p><em>Here is some insight on how you could do it in pure python:</em></p>
<p>The built in <code>__repr__</code> method of the <code>list</code> class is just calling <code>__repr__</code> on each of the elements...  in this case <code>str</code>.</p>
<p><code>str.__repr__</code> has the behavior of using single quotes.  There is no (straightforward) way to change this.</p>
<p>You can roll your own type with it's own <code>__repr__</code> function to do it easily enough... </p>
<pre><code>class mystr(str):
  def __repr__(self):
     return '"' + str.__repr__(self)[1:-1].replace('"', r'\"') + '"'


yourlist = ['a', 'b', 'c', 'd']

# convert your list in place
for i,v in enumerate(yourlist):
  yourlist[i] = mystr(v)

print(yourlist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could create your own string subclass whose representation uses <code>"</code> characters:</p>
<pre><code>class MyStr(str):
    # Special string subclass to override the default representation
    # method. Main purpose is to prefer using double quotes and avoid hex
    # representation on chars with an ord() &gt; 128
    def __repr__(self):
        quotechar = '"'
        rep = [quotechar]
        for ch in self:
            # Control char?
            if ord(ch) &lt; ord(' '):
                # remove the single quotes around the escaped representation
                rep += repr(str(ch)).strip("'")
            # Does embedded quote match quotechar being used?
            elif ch == quotechar:
                rep += "\\"
                rep += ch
            # Else just use others as they are.
            else:
                rep += ch
        rep += quotechar
        return "".join(rep)


myList = ['a','b','c','d']
print(myList)  # -&gt; ['a', 'b', 'c', 'd']
print([MyStr(element) for element in myList])  # -&gt; ["a", "b", "c", "d"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way obviously is to solve it using json:</p>
<pre><code>import json
print('myList = ', json.dumps(myList))
</code></pre>
<p>But another approach on solving it without using any additional library is this</p>
<pre><code>myList = ['a','b','c','d']

print('myList = ', end='[')
for i in range(len(myList)):
    if i != 0:
        print(', \"' + myList[i], end='\"')
    else:
        print('\"' + myList[i], end='\"')
print(']')
</code></pre>
</div>
<span class="comment-copy">Why does it matter?</span>
<span class="comment-copy">I am trying to take that list and use it somewhere else that doesn't accept the ' quotations it specifically asks for ".</span>
<span class="comment-copy">I think you are mistaken somewhere.  There is no difference between " and '</span>
<span class="comment-copy">Are you trying to produce JSON or something? If you want JSON, you should use a <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">JSON dumper</a>.</span>
<span class="comment-copy">So for your list to json <code>print(json.dumps(myList))</code></span>
<span class="comment-copy">This solution worked for me. Thanks!</span>
