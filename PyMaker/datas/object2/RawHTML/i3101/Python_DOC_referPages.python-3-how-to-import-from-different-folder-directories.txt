<div class="post-text" itemprop="text">
<p>I’ve been working a lot lately with python 3 and I found that I am unable to import a module from a separate folder. Is there a way to import it while it’s in a folder subdivision? 
To give more context of this issue here is the “launcher” location and folder that I want to access: </p>
<pre><code>Launcher.py
Folder
- program-to-import.py
</code></pre>
<p>That’s the layout. How do I import into launcher from my other module?</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned by others, <code>-</code> in name is invalid, try importing after removing them if you have them in your file name. For now, let's call it <code>program_to_import</code></p>
<pre><code>from folder import program_to_import
</code></pre>
<p>And to call a function from <code>program_to_import</code>, you use this -</p>
<pre><code>program_to_import.function_to_call()
</code></pre>
<p>Also, it's always a good idea to look at the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">documentation</a></p>
<p>You could also try by adding an <code>__init__.py</code> in your folder. The use of <code>__init.py__</code> is as follows -</p>
<blockquote>
<p>The <strong>init</strong>.py files are required to make Python treat the directories as containing packages; this is done to prevent directories with a common name, such as string, from unintentionally hiding valid modules that occur later (deeper) on the module search path. In the simplest case, <strong>init</strong>.py can just be an empty file, but it can also execute initialization code for the package or set the <strong>all</strong> variable, described later.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Python supports importing from child paths rather trivially.
in Launcher.py enter the following.</p>
<pre><code>from Folder.program-to-import import *
</code></pre>
</div>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html#packages</a></span>
<span class="comment-copy">You'd have to start by taking the dashes out of that name. This being python, there is of course a way to import a file with dashes, but it's not something you want to focus on as a beginner.</span>
<span class="comment-copy">I've used my close vote, but any of the following are dupes: <a href="https://stackoverflow.com/q/5155135/2988730">stackoverflow.com/q/5155135/2988730</a>, <a href="https://stackoverflow.com/q/391879/2988730">stackoverflow.com/q/391879/2988730</a>, <a href="https://stackoverflow.com/q/1801878/2988730">stackoverflow.com/q/1801878/2988730</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/5155135/how-to-organize-a-python-project">How to organize a Python Project?</a></span>
<span class="comment-copy">@MadPhysicist Thanks for the research, I've voted as duplicate of the first one.</span>
<span class="comment-copy">Does this work without adding <code>__init__.py</code> to the <code>folder</code>?</span>
<span class="comment-copy">Yes, works without <code>__init__</code></span>
<span class="comment-copy">Lots of missing information here</span>
<span class="comment-copy">1/ This wont work if Folder isn't a package. 2/ As already noted by @Mad Physicist,  <code>-</code> is forbidden in names.</span>
<span class="comment-copy">Not your job per se, but it's presumably the burden you've willingly accepted when you decided to post a good answer :)</span>
<span class="comment-copy">1/ This wont work if <code>Folder</code> isn't a package. 2/ Importing * is usually discouraged.</span>
<span class="comment-copy">There are at least a couple of problems here...</span>
<span class="comment-copy">Also, using - in a package or module name is prohibited for obvious reasons.</span>
<span class="comment-copy">@MadPhysicist The name was took from his example, I am well aware that a - should not be used. -ThierryLathuille This does work even if Folder is not a package. Import * is discouraged although the user did not state what the structure of the folder to be imported was so * was used.</span>
<span class="comment-copy">Thank so for the answer. After a little work I modified all the program and got it working. I have been working with python for a rather short time so I hope you all can understand why I am a little on the unknowledgeable side of things.</span>
