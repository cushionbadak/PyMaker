<div class="post-text" itemprop="text">
<p>I have a directory comparison program (based on the example given in the docs - <a href="https://docs.python.org/3/library/filecmp.html" rel="nofollow noreferrer">https://docs.python.org/3/library/filecmp.html</a>) which doesn't find an extra file which I put in a subdirectory to test it. The program is:</p>
<pre><code>import sys
from filecmp import dircmp

def print_diff_files(dcmp):
    for name in dcmp.diff_files:
        print("diff_file %s found in %s and %s" % (name, dcmp.left, dcmp.right))
    for sub_dcmp in dcmp.subdirs.values():
        print_diff_files(sub_dcmp)

dcmp = dircmp(sys.argv[1], sys.argv[2]) 
print_diff_files(dcmp)
print(dcmp.left_only)
print(dcmp.right_only)
</code></pre>
<p>The right_only list should have something in it, except it's just []. Why is this?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>filecmp.dircmp</code> does not compare files recursively. If you want <code>dircmp.left_only</code> and <code>dircmp.right_only</code> to be recursive, you'll have to do it yourself like you do for <code>dircmp.diff_files</code>.</p>
<p>Move your <code>print(dcmp.left_only)</code> and <code>print(dcmp.right_only)</code> inside your recursive function <code>print_diff_files</code>:</p>
<pre><code>import sys
from filecmp import dircmp

def print_diff_files(dcmp):
    for name in dcmp.diff_files:
        print("diff_file %s found in %s and %s" % (name, dcmp.left, dcmp.right))
    if dcmp.left_only:
        print('%s: %s ' % (dcmp.left, dcmp.left_only))
    if dcmp.right_only:
        print('%s: %s ' % (dcmp.right, dcmp.right_only))
    for sub_dcmp in dcmp.subdirs.values():
        print_diff_files(sub_dcmp)

dcmp = dircmp(r'c:\temp\t', r'c:\temp\s')
print_diff_files(dcmp)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I made minor changes to blhsing's program, as shown:</p>
<pre><code>#diffdir.py - compares directories and lists shallow differences; use python3
import sys
from filecmp import dircmp

def print_diff_files(dcmp):
    for name in dcmp.diff_files:
        print("\nDiff file: %s found in %s and %s" % (name, dcmp.left, dcmp.right))
    for sub_dcmp in dcmp.subdirs.values():
        print_diff_files(sub_dcmp)
    if dcmp.left_only:
        print("\nLeft only:", dcmp.left_only)
    if dcmp.right_only:
        print("\nRight only:", dcmp.right_only)

dcmp = dircmp(sys.argv[1], sys.argv[2]) 
print_diff_files(dcmp)
print()
</code></pre>
</div>
<span class="comment-copy">It would help if you included directory listings for the files and directories that you're running this script on, as well as the actual arguments.</span>
<span class="comment-copy">But it recognizes the directories. I don't get an error message saying they're not there.</span>
<span class="comment-copy">No, I mean include more information in your question. Without information about the files that your program is operating on it's going to be very difficult for anyone to help you.</span>
<span class="comment-copy">The directories are duplicates - one is a back up. I added a text file to a subdirectory.</span>
<span class="comment-copy">Thanks - got it working. I think it may be because I was calling dcmp outside the function's namespace though.</span>
