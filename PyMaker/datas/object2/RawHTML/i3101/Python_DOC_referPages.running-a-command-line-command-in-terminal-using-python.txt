<div class="post-text" itemprop="text">
<p>I have to basically run a terminal-command using python script. General way of doing this would be</p>
<pre><code>In [1]: import subprocess

In [2]: subprocess.Popen(['python some-python-script.py'],shell=True)
Out[2]: &lt;subprocess.Popen at 0x103425358&gt;
</code></pre>
<p>Now, my requirement is that this script will be triggered n (&lt;=10) times printing some output. How do i ensure that everytime its triggered using python, it opens in <em>new</em> terminal tab printing the output?</p>
<p>Checked couple of refernce online and tried using</p>
<pre><code>In [11]: os.system("Terminal -x python some-python-script.py")
sh: Terminal: command not found
</code></pre>
<p>but doesn't help.</p>
<p>I am on OSx Sierra but a platform independent solution is welcome!!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow noreferrer">check_output</a> from the <strong>subprocess</strong> module. As your command must be executed more than once, you can just call the function inside <code>for</code> loop. The script may look something like this (the upper bound of the <code>range</code> may be variable):</p>
<pre><code>import subprocess

for idx in range(5):
    print(subprocess.check_output(['python3', 'full-path-to-script.py'], encoding='utf-8'))
</code></pre>
<p>As mentioned in the documentation, the <code>check_output</code> function returns the data as encoded bytes, but as the encoding is specified in my example, the output will be UTF-8 encoding string. Depending on your command the decoding to text may need to be handled separately.</p>
</div>
