<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/22044220/generate-string-of-numbers-python">Generate string of numbers python</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>How to create a <code>list</code> of <code>string</code> using <code>range()</code> built-in function in python?</p>
<p><code>range(1,7)</code> produces a range object equivilant to <code>[1,2,3,4,5,6]</code></p>
<p>Desired list: <code>['1','2','3','4','5','6']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Use a cast to <code>str()</code> &amp; <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> as per the following:</p>
<pre><code>string_list = [str(x) for x in range(1, 7)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With the map function:  </p>
<pre><code>list(map(str,range(7)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or the new f-strings:</p>
<pre><code>&gt;&gt;&gt; [f'{i}' for i in range(7)]
['0', '1', '2', '3', '4', '5', '6']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use string formatting &amp; list comprehension as per the following</p>
<p><code>string_list = ["{}".format(x) for x in range(1,7)]</code></p>
</div>
<span class="comment-copy"><code>range(7)</code> does not output <code>[1,2,3,4,5,6]</code>.</span>
<span class="comment-copy">It doesn't even output a list ;)</span>
<span class="comment-copy">If you mark it as duplicate you should link to a duplicate</span>
<span class="comment-copy">The link is above the question</span>
<span class="comment-copy">@ᴡʜᴀᴄᴋᴀᴍᴀᴅᴏᴏᴅʟᴇ3000, it does in python 2</span>
<span class="comment-copy">you want range(1, 7) since OP wants the list to start at '1'.</span>
<span class="comment-copy">Or <code>[*map(str,range(7))]</code>. But your solution is much more readable.</span>
<span class="comment-copy">Note this is python 3.6+</span>
<span class="comment-copy">You don't need the full functionality of <code>str.format</code> here - <code>str(x)</code> would have worked just as well as <code>"{}".format(x)</code>. Also, if you wanted to start from 1, your <code>range</code> call is wrong.</span>
<span class="comment-copy">Even if you need a format spec (which you don't, since you aren't using one), you still wouldn't want to use <code>str.format</code> here; just call <code>format(x, "03")</code> instead of <code>"{:03}".format(x)</code>. You only need <code>str.format</code> to put multiple things together. And even then, f-strings are usually better: <code>f"{x:03}"</code>.</span>
<span class="comment-copy">@user2357112, I have fixed the <code>range</code> call. and you are right about the use of <code>str(x)</code> it is also a solution</span>
