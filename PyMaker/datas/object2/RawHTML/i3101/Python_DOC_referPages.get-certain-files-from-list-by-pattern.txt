<div class="post-text" itemprop="text">
<p>I have this list. I want to make a <code>for</code> loop that will use in a function combinations of these files in the list. </p>
<p>I am not sure how to make these combinations that for each 'check' it will take the correct combination.</p>
<p>The function if it wasn't for the loop it would look like this:</p>
<pre><code>erase('check3_dwg_Polyline','check3_dwg_Polyline_feat_to_polyg_feat_to_line','output_name')
</code></pre>
<p>What I've tried:</p>
<p>Here's the list.</p>
<pre><code>li=['check3_dwg_Polyline', 'check2_dwg_Polyline', 
'check3_dwg_Polyline_feat_to_polyg',# this will not be needed to extracted
'check2_dwg_Polyline_feat_to_polyg',# &gt;&gt; &gt;&gt;
'check3_dwg_Polyline_feat_to_polyg_feat_to_line', 
 'check2_dwg_Polyline_feat_to_polyg_feat_to_line']
</code></pre>
<p>start with this:</p>
<pre><code>a=[li[i:i+3] for i in range(0, len(li), 3)]
</code></pre>
<p>where returns:</p>
<pre><code>[['check3_dwg_Polyline',
  'check2_dwg_Polyline',
  'check3_dwg_Polyline_feat_to_polyg'],
 ['check2_dwg_Polyline_feat_to_polyg',
  'check3_dwg_Polyline_feat_to_polyg_feat_to_line',
  'check2_dwg_Polyline_feat_to_polyg_feat_to_line']]
</code></pre>
<p>Finally:</p>
<pre><code>for base, base_f, base_line in a:
    print(base, base_line, base + "_output")
</code></pre>
<p>gives:</p>
<pre><code>check3_dwg_Polyline  check3_dwg_Polyline_feat_to_polyg  check3_dwg_Polyline_output
check2_dwg_Polyline_feat_to_polyg  check2_dwg_Polyline_feat_to_polyg_feat_to_line  check2_dwg_Polyline_feat_to_polyg_output
</code></pre>
<hr/>
<p>Other method:</p>
<pre><code>base = [f for f in li if not f.endswith(("_polyg", "_to_line"))]
base_f = {f.strip("_feat_to_polyg"): f for f in li if f.endswith("_polyg")}
base_line = {f.strip("_feat_to_polyg_feat_to_line"): f for f in li if f.endswith("_to_line")}
[(b, base_f[b], base_line[b]) for b in base]
</code></pre>
<p>gives:</p>
<pre><code>KeyError: 'check3_dwg_Polyline'
</code></pre>
<p>I have tried sorting the list but it just ruins it in a different way when put through the processes mentioned above.</p>
<p>The ideal result is this </p>
<p>when trying this:</p>
<pre><code>for base, base_f, base_line in a:
    print(base, base_line, base + "_output")
</code></pre>
<p>to give this:</p>
<pre><code>check3_dwg_Polyline   check3_dwg_Polyline_feat_to_polyg_feat_to_line  check3_dwg_Polyline_output

check2_dwg_Polyline   check2_dwg_Polyline_feat_to_polyg_feat_to_line  check2_dwg_Polyline_output
</code></pre>
<p>where will be put in like this:</p>
<pre><code>erase('check3_dwg_Polyline','check3_dwg_Polyline_feat_to_polyg_feat_to_line','output_name')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> the list into chunks of <em>check3</em>, <em>check2</em>… Then you can do your <em>for</em> loop.</p>
<pre><code>n = len(li) // 3
a = zip(*[li[i:i+n] for i in range(0, len(li), n)])
</code></pre>
<p>(<code>pprint(list(a))</code> would output </p>
<pre><code>[('check3_dwg_Polyline',
  'check3_dwg_Polyline_feat_to_polyg',
  'check3_dwg_Polyline_feat_to_polyg_feat_to_line'),
 ('check2_dwg_Polyline',
  'check2_dwg_Polyline_feat_to_polyg',
  'check2_dwg_Polyline_feat_to_polyg_feat_to_line')]
</code></pre>
</div>
<span class="comment-copy">What's your question?</span>
<span class="comment-copy">I am not sure how to make these combinations that for each 'check' it will take the correct combination.</span>
<span class="comment-copy">What's the “correct” combination?</span>
<span class="comment-copy">In your <i>other method</i>, you're passing a string to <code>str.strip</code> method – but the method takes a list of chars that should be stripped (regardless of order). You'd know if you checked your variables.</span>
<span class="comment-copy">i updated it to make it more clear. btw correct would as in the form of the function <code>erase</code>.Just look the update to understand.</span>
