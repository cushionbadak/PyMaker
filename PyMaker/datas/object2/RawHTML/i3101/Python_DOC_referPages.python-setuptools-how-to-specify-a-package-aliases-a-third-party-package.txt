<div class="post-text" itemprop="text">
<p>If I have a package <code>foobar</code>, I want it to tell pip/setuptools that it also provides package <code>vendor</code>. So that when I later install another third party package that depends on the <code>vendor</code> package, it sees that <code>foobar</code> is installed, and therefore won't install the <code>vendor</code> package. Is this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no such ability. <code>pip</code> is a rather simple package manager and doesn't have features from advanced package managers like <code>rpm/deb/etc</code>. It has neither "This package also provides…" nor "This package obsoletes…" nor "This package is incompatible with…" Alas!</p>
<p>The only way is to upload to PyPI a <code>vendor</code> package that consists of a single <code>setup.py</code> that lists <code>foobar</code> as a dependency.</p>
</div>
<span class="comment-copy">So you're saying that <a href="https://docs.python.org/3/distutils/setupscript.html#relationships-between-distributions-and-packages" rel="nofollow noreferrer"><code>provides</code> and <code>obsoletes</code> and friends</a> don't exist?</span>
<span class="comment-copy">I see neither <code>provides</code> nor <code>obsoletes</code> in either <a href="https://docs.python.org/3/distutils/apiref.html#distutils.core.setup" rel="nofollow noreferrer">distutils.core.setup()</a> or <a href="https://setuptools.readthedocs.io/en/latest/setuptools.html#new-and-changed-setup-keywords" rel="nofollow noreferrer">setuptools.setup()</a> docs. I see them in <a href="https://github.com/python/cpython/blob/ecf411c59e33d3760dbfebf6d5b4b205bcc29d5a/Lib/distutils/core.py#L42" rel="nofollow noreferrer">distutils sources</a> but I don't see if they are used for anything but <a href="https://github.com/python/cpython/blob/ecf411c59e33d3760dbfebf6d5b4b205bcc29d5a/Lib/distutils/dist.py#L122" rel="nofollow noreferrer">printing</a>.</span>
<span class="comment-copy">@abarnert: Interesting, it looks like the docs are indeed lying about the <code>provides</code> and <code>obsoletes</code>. The <a href="https://packaging.python.org/specifications/core-metadata/" rel="nofollow noreferrer">Core metadata specification</a> states that <i>it isn’t at all clear how tools should interpret them in the context of an open index server such as PyPI. As a result, popular installation tools ignore them completely, which in turn means there is little incentive for package publishers to set them appropriately. However, they’re retained in the metadata specification, as they’re still potentially useful for informational purposes.</i></span>
<span class="comment-copy">So, while the fields were retained in PEP 566 (from PEP 345, where they were initially introduced), they have no meaning neither for <code>distutils</code> nor for <code>setuptools</code> nor for the package managers. I find the docs rather misleading in this case, promising something that is not quite there.</span>
<span class="comment-copy">@hoefling Interesting. So I guess the short answer is that there <i>is</i> an official way to tell <code>pip</code> exactly what the OP wants, but it won't do any good because <code>pip</code> is just going to ignore it, and that's not likely to ever change…</span>
