<div class="post-text" itemprop="text">
<p>I have a python script where I'm trying to read all .txt files in a directory and determine if they return True or False for any conditions that are in my script. I have thousands of .txt files with text in .json format. However, I'm getting an error message saying invalid .json format. I have checked that my text files are in .json format. I want the script to determine if the .txt file matches any of the statements in my code below. I then want to output the result to a csv file. Your help is very much appreciated! I have included my error messages and example .txt file.</p>
<p><strong>Example .txt file with .json formattting</strong></p>
<pre><code>{
    "domain_siblings": [
        "try.wisebuygroup.com.au",
        "www.wisebuygroup.com.au"
    ],
    "resolutions": [
        {
            "ip_address": "34.238.73.135",
            "last_resolved": "2018-04-22 17:59:05"
        },
        {
            "ip_address": "52.0.100.49",
            "last_resolved": "2018-06-24 17:05:06"
        },
        {
            "ip_address": "52.204.226.220",
            "last_resolved": "2018-04-22 17:59:06"
        },
        {
            "ip_address": "52.22.224.230",
            "last_resolved": "2018-06-24 17:05:06"
        }
    ],
    "response_code": 1,
    "verbose_msg": "Domain found in dataset",
    "whois": null
}
</code></pre>
<p><strong>Error message</strong></p>
<pre><code>line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
</code></pre>
<p><strong>Code</strong></p>
<pre><code>import os
import json
import csv

path=r'./output/'
csvpath='C:/Users/xxx/Documents/csvtest'
file_n = 'file.csv'

def vt_result_check(path):
    vt_result = False
    for filename in os.listdir(path):
        with open(path + filename, 'r') as vt_result_file:
            vt_data = json.load(vt_result_file)

        # Look for any positive detected referrer samples
        # Look for any positive detected communicating samples
        # Look for any positive detected downloaded samples
        # Look for any positive detected URLs
        sample_types = ('detected_referrer_samples', 'detected_communicating_samples',
                        'detected_downloaded_samples', 'detected_urls')
        vt_result |= any(sample['positives'] &gt; 0 for sample_type in sample_types
                                                 for sample in vt_data.get(sample_type, []))

        # Look for a Dr. Web category of known infection source
        vt_result |= vt_data.get('Dr.Web category') == "known infection source"

        # Look for a Forecepoint ThreatSeeker category of elevated exposure
        # Look for a Forecepoint ThreatSeeker category of phishing and other frauds
        # Look for a Forecepoint ThreatSeeker category of suspicious content
        threats = ("elevated exposure", "phishing and other frauds", "suspicious content")
        vt_result |= vt_data.get('Forcepoint ThreatSeeker category') in threats

    return str(vt_result)


if __name__ == '__main__':
    with open(file_n, 'w') as output:
        for i in range(vt_result_file):
            output.write(vt_result_file, vt_result_check(path))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I suggest (1) limiting your script to only parsing <code>.txt</code> files, and (2) adding some basic error checking in the form of a <code>try</code>/<code>except</code> statement to catch any JSON errors that do occur. Something like this:</p>
<pre><code>def vt_result_check(path):
    vt_result = False
    for file in os.listdir(path):
        if not file.endswith(".txt"): # skip anything that doesn't end in .txt
            continue

        with open(path + file, 'r') as vt_result_file:
            try:
                vt_data = json.load(vt_result_file)
                # do whatever you want with the json data
            except Exception:
                print("Could not parse JSON file " + file)
</code></pre>
<p>You can fill in the rest of your code around this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your are trying to decode JSON from empty file (size <code>0</code>). Check your filepath and content of that file.</p>
<p>Note: the example you have provided in your question is valid JSON, it should load without problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are not opening files... </p>
<pre><code>for filename in os.listdir(path):
    with open(path + filename, 'r') as vt_result_file:
        vt_data = json.load(vt_result_file)
</code></pre>
<p>listdir - lists all <strong>dirs</strong> and files in the path. </p>
</div>
<span class="comment-copy">I got no error while loading the file. It is probably the checks you have implemented causing the trouble. Can you point the line of code at which the error is thrown?</span>
<span class="comment-copy">You might want to restrict your script to only parsing files with the suffix <code>.txt</code> -- see <a href="https://stackoverflow.com/questions/3964681/find-all-files-in-a-directory-with-extension-txt-in-python" title="find all files in a directory with extension txt in python">stackoverflow.com/questions/3964681/…</a></span>
<span class="comment-copy">@i_alarmed_alien thank you for your help! That seemed to fix my original error but now I'm getting another error. The error message is output.write((vt_result_check(path))) TypeError: write() argument must be str, not int  How do I convert vt_result_check(path) to an int?</span>
<span class="comment-copy">to convert something to a string, use <code>str()</code> -- e.g. <code>str(vt_result_check(path))</code>. Check out the Python documentation as all this information is there: <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str</a></span>
<span class="comment-copy">@Andrej_Kesely thank you for your help! That seemed to fix my original error but now I'm getting another error. The error message is output.write((vt_result_check(path))) TypeError: write() argument must be str, not int How do I convert vt_result_check(path) to an int?</span>
<span class="comment-copy">@bedford You are returning <code>int</code> from your function <code>vt_result_check(path)</code>. Check the return statements inside it. You need to return string.</span>
<span class="comment-copy">@Andrej_Kesely Thank you again for your response! I'm also trying to write the filename to my csv and I'm getting the following error when doing so. I've updated my code above.   for i in range(vt_result_file): NameError: name 'vt_result_file' is not defined</span>
<span class="comment-copy">@bedford I would like to help you, but comments aren't good place for that. If you have other new questions, not related to this question, you need to create new question here on Stack Overflow.</span>
<span class="comment-copy">@Andrej_Kesely Thank you! I posted as a new question. Here is the link: <a href="https://stackoverflow.com/questions/51564344/trying-to-write-filename-to-csv-in-python" title="trying to write filename to csv in python">stackoverflow.com/questions/51564344/…</a>  I would appreciate your help!</span>
<span class="comment-copy"><code>os.listdir(path='.')</code>: Return a list containing the names of the entries in the directory given by path. The list is in arbitrary order, and does not include the special entries '.' and '..' even if they are present in the directory.</span>
<span class="comment-copy">@Nuts Thank you for your response! I tried your recommended change but unfortunately I still get the same error message. Do you have any other advice?</span>
<span class="comment-copy">Find all files in the path using: <a href="https://stackoverflow.com/questions/3964681/find-all-files-in-a-directory-with-extension-txt-in-python" title="find all files in a directory with extension txt in python">stackoverflow.com/questions/3964681/…</a> Then read them</span>
<span class="comment-copy">@Nuts: your statement that "listdir - lists all dirs in the path" is wrong.</span>
<span class="comment-copy">@ialarmedalien Thanks, edited the answer :)</span>
