<div class="post-text" itemprop="text">
<p>I wrote this code to find a missing positive integer from a given list, but still, it returns <code>None</code> in some cases.</p>
<p>For example, given the array <code>A = [2, 4, 1, 5]</code>, the function should return 3, as it is the missing element in the consecutive sequence (1 2 3 4 5).</p>
<p>What am I doing wrong?</p>
<pre><code>def solution(A):
    i = 1
    while i&lt;len(A):
        if i not in A:
            return i
        i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to be aware that <code>i &lt; len(A)</code> is causing some problem.</p>
<p>Given this example:</p>
<pre><code>A = [1, 2, 3, 5]
</code></pre>
<p>It looks pretty clear that the desired answer is <code>4</code>, but your function is giving <code>None</code>. It's because <code>len(A) == 4</code> and thus, your loop condition is <code>i &lt; 4</code>, which effectively enumerates <code>i</code> from 1 to 3.</p>
<p>Since you want to find out the missing number, you might as well stop the loop when <code>i</code> reaches the largest number in the list, rather than the length of the list, so:</p>
<pre><code>while i &lt; max(A):
</code></pre>
<p>would be right.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you sort the list or approximate a sorted list using the <code>range</code> function, you can make use of a list comprehension:</p>
<pre><code>def solution(A):
    return [value for value in range(min(A),max(A)) if value not in A]
</code></pre>
<p>We're basically saying, look at the sequence of numbers beginning with the <code>min</code> value of <code>A</code> to the <code>max</code> value of <code>A</code>, and if any of those values are not in the original <code>A</code> list, return those. This will return multiple missing values, e.g.:</p>
<pre><code>&gt;&gt;&gt; def solution(A):
...     return [value for value in range(min(A),max(A)) if value not in A]
...
A = [1, 2, 3, 4, 7, 8, 10]
&gt;&gt;&gt; solution(A)
[5, 6, 9]
&gt;&gt;&gt;
&gt;&gt;&gt; A = [2, 4, 1, 5]
&gt;&gt;&gt;
&gt;&gt;&gt; solution(A)
[3]
</code></pre>
<p>Note: you mentioned "positive" integers, and not sure if that was a strict requirement or not, but this doesn't account for negative values.</p>
<p>I think we can account for that:</p>
<pre><code>def solution(A):
     positive = range(min([max(0,min(A))]),max(A))
     return [value for value in positive if value not in A]
</code></pre>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; A = [-6,-8,2,3,5]
&gt;&gt;&gt; solution(A)
[0, 1, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With the <code>i += 1</code> inside the loop, there's only an off-by-one error. If <code>A</code> has a length of <code>n</code>, and <code>n</code> is missing from <code>A</code>, but <code>n+1</code> exist in <code>A</code>, then the function will return <code>None</code>. This can be fixed by looping to <code>len(a)+1</code>. </p>
<pre><code>def solution(A):
    length = len(A) + 1
    i = 1 
    while i &lt; length:
        if i not in A:
            return i
        i += 1
</code></pre>
<hr/>
<p>By your definition of what a missing-positive integer is, this can be found through some math. </p>
<pre><code>def solution(A):
    n = len(A) + 1
    list_sum = (n * (n+1)) / 2
    a_sum = sum(A)
    missing = list_sum - a_sum
    if missing != n:
        return missing
</code></pre>
<p>Take the length of the list and add one and define it as <code>n</code>. Use the equation to sum contiguous positive integers and save it into <code>list_sum</code>. Find the sum of <code>A</code>. The difference of <code>list_sum</code> and <code>a_sum</code> will be the missing integer since we're guaranteed that only one integer can be missing. To keep with the behavior of your function, if the missing number ends to be <code>n</code>, then we know there are no missing numbers, so return <code>None</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, this works the best to find missing element from the list.</p>
<pre><code>def solution(A):
    if len(A) == 0:
        return 1
    return sum(range(1, len(A)+2)) - sum(A)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Seems to work fine.  Here's an alternative:</p>
<pre><code>def solution(A):
    a = set(A)
    for i, _ in enumerate(A, 1):
        if i in a:
            continue
        return i

solution(A)
# 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>Find missing numbers</h2>
<p>Using <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">range(start, stop)</a> we can build a sorted list which already contains all the numbers. Now it's just matter of finding the missing values in your list.</p>
<p>Our <code>range</code> will be made using the lower and higher values of your list. <code>range(min(A), max(A))</code>.</p>
<pre><code>def solution(A):
    missings = []
    for n in range(min(A), max(A)): # Iterate over each number in the sorted and complete list.
        if n not in A: # If that number isn't in your list.
            missings.append(n)
    return missings
</code></pre>
<p>Or as a list comprehension in one line:</p>
<pre><code>def solution(A): return [n for n in range(min(A), max(A)) if n not in A]
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; solution([1, 9, 4, 3, 11, 5, 7])
[2, 6, 8, 10]
</code></pre>
<h2>Find non-negative missing numbers</h2>
<p>But you said <strong>"find a missing</strong> <strong><em>positive</em></strong> <strong>integer"</strong>, so you don't want negatives ones.</p>
<p>Just change the <code>min(A)</code> part of <em><code>range(min(A), max(A))</code></em> to <code>range(</code><strong><code>max(0, min(A))</code></strong><code>, max(A))</code>.<br/>
<code>max(0, min(A))</code> will use <code>max</code> to give you the bigger number between 0 and your lower actual value, so negative ones are replaced by 0.</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; solution([-4, -5, 1, 9])
[0, 2, 3, 4, 5, 6, 7, 8]
</code></pre>
<h2>Find non-negative missing number after the lower non-negative number</h2>
<p>But as said before, you only said: <strong>"find a missing</strong> <strong><em>positive</em></strong> <strong>integer"</strong>, so at first, I understood you don't want negatives ones.<br/>
But, what if you only want <strong>the missing</strong> (as my first idea) <strong>non-negative values</strong> (as the second idea) <strong>after the lower non-negative value</strong> (new idea)?</p>
<p>Easy!<br/>
Just change the <code>min(A)</code> part of <em><code>range(min(A), max(A))</code></em> to <code>range(</code><strong><code>min([n for n in A if n &gt;= 0])</code></strong><code>, max(A))</code>.<br/>
<code>min([n for n in A if n &gt;= 0])</code> will look for the lower non-negative value in your list.</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; solution([-4, -5, 3, 9])
[4, 5, 6, 7, 8]
</code></pre>
</div>
<span class="comment-copy">Python is indentation sensitive, <code>i += 1</code> needs to be inside the while loop. Also, you haven't clarified as to what a <i>missing</i> positive integer even means?</span>
<span class="comment-copy">sorry for indentation one, it was a typo. I did add an explanation.</span>
<span class="comment-copy">I gave this a +1 for being a decent question, which is a pretty good start for a new user. Cheers and Welcome to Stack Overflow!</span>
<span class="comment-copy">Welcome to SO, you've got a lot of good answers to choose from below, it is usually considerate to up-vote helpful answers and to mark one of them (whichever you think best) as the Accepted answer.</span>
<span class="comment-copy">thanks It worked!  someone did -1 to my question, how can I remove that. As I am a beginner this is going to hurt my future questions or answers.</span>
<span class="comment-copy">@vivekkarn No you shouldn't focus on <i>how</i> people downvoted you, but how you improve your posts. I've done an edit and see for yourself if it looks better.</span>
<span class="comment-copy">but I got -2 now I cant ask any questions on StackOverflow!</span>
<span class="comment-copy">Try heading over <a href="https://meta.stackoverflow.com">Meta Stack Overflow</a> and explain your confuses. You'll get some explanation and feedbacks. Good luck.</span>
<span class="comment-copy">This doesn't really seem considerably different than the answer I posted 11 hours ago. In fact, the structure of your answer seems almost identical to mine up to and including the comments and revised solution about a "positive" integer.</span>
<span class="comment-copy">@DavidZemens, look at my third title, you don't have that in your answer. Also, I used a different code to find the lower non-negative value. You use <code>min([max(0,min(A))])</code> instead I use <code>max(0, min(A))</code>. Also, I tried to give some explanation about it.</span>
<span class="comment-copy">so 2/3 of your answer is essentially the same as mine. I'm not going to argue with you about this, I'm just going to suggest that if you think an answer can be improved, the usual method to do so here is not to copy that answer IYOW, but to revise the <i>other</i> answer, up to and including additional information if you think doing so would be helpful and non-destructive.</span>
