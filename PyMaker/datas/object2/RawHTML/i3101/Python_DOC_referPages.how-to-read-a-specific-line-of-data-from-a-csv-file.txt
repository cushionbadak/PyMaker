<div class="post-text" itemprop="text">
<p>I'm trying to run a code that can read a specific line of data from a csv file in python.</p>
<pre><code>import csv
with open('details.csv', 'rt') as f:
    reader = csv.reader(f)
    selected_details = input("Enter student ID for details:\n")
    for selected_details in reader:
        print(reader)
</code></pre>
<p>How could I take an input and then use that to select and print that specific row?</p>
</div>
<div class="post-text" itemprop="text">
<p>A filter should do the trick, something like </p>
<pre><code>import csv
with open('details.csv', 'rt') as f:
    reader = csv.reader(f)
    selected_details = input("Enter student ID for details:\n")
    results = filter(lambda x: selected_details in x, reader)
    for line in results:
        print(line)
</code></pre>
<h2>Explanation:</h2>
<p>Filter take an itterable (here reader) and will apply for each element of the itterable the lambda you give him and will return a new list "filtered". If the lambda return True the element will be returned in the filtered list.</p>
<p>A lambda is basically a dwarf-function (wiser, nerdier people will correct me on this over simplification but you get the idea) that return the one and only line you gave him.</p>
<p>So my lambda just does the operation "selected_details in x" that will return True if selected_details is in x and else False, you get the idea.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can iterate over each line and check if the user inputted data is in line.</p>
<p><strong>Ex:</strong></p>
<pre><code>import csv

selected_details = input("Enter student ID for details:\n")
with open('details.csv', 'rt') as f:
    reader = csv.reader(f)
    for line in reader:
        if selected_details in line:
            print(reader)
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a> with a default value.</p>
<p>This will return the first row where the <code>idx</code> index equals <code>value</code> or <code>None</code> if it is not found:</p>
<pre><code>import csv


def find_by_position(filename, idx, value):
    with open(filename) as f:
        reader = csv.reader(f)
        row = next((item for item in reader if item[idx] == value), None)

    return row
</code></pre>
<p>Sample usage:</p>
<pre><code>&gt;&gt;&gt; # `data/data.csv` looks like this:
... # 
... # id,name,score
... # 1,bla,65
... # 5,another name,95
... # 9,test,95
...
&gt;&gt;&gt; find_by_position('data/data.csv', 0, '5')
['5', 'another name', '95']
&gt;&gt;&gt; find_by_position('data/data.csv', 1, 'bla')
['1', 'bla', '65']
</code></pre>
<p>A more descriptive approach would be to use <a href="https://docs.python.org/3/library/csv.html?highlight=csv#csv.DictReader" rel="nofollow noreferrer"><code>csv.DictReader</code></a> so that we can search based on the column name:</p>
<pre><code>import csv


def find_by_column(filename, column, value):
    with open(filename) as f:
        reader = csv.DictReader(f)
        row = next((item for item in reader if item[column] == value), None)

    return row
</code></pre>
<p>Usage is very similar to the previous approach:</p>
<pre><code>&gt;&gt;&gt; # `data/data.csv` looks like this:
... # 
... # id,name,score
... # 1,bla,65
... # 5,another name,95
... # 9,test,95
...
&gt;&gt;&gt; find_by_column('data/data.csv', 'id', '5')
OrderedDict([('id', '5'), ('name', 'another name'), ('score', '95')])
&gt;&gt;&gt; find_by_column('data/data.csv', 'name', 'bla')
OrderedDict([('id', '1'), ('name', 'bla'), ('score', '65')])
</code></pre>
</div>
<span class="comment-copy">The code you have written defines <code>selected_details</code> as a user input, but immediately redefines <code>selected_details</code> as a row from the csv file.  See @Rakesh's answer.</span>
<span class="comment-copy">Which column is the student id in?</span>
<span class="comment-copy">@PeterWood Its the first</span>
<span class="comment-copy">You want <code>for row in reader: if selected_details == row[0]: ...</code></span>
<span class="comment-copy">Yes I got it to work. Could you explain how exactly it works?</span>
<span class="comment-copy">Wouldn't this find any matching column. e.g. the name of the student's teacher, or hometown, etc?</span>
<span class="comment-copy">Technically yes, but I have no idea what the csv look like, with the structure you could limit the filter to only the relevant column. ( "selected_details in x[0]" for example)</span>
<span class="comment-copy">@RaphaelTodo if you have no idea what the csv looks like you should clarify the question before answering it.</span>
<span class="comment-copy">What if the student id also happens to be in another column. e.g. <code>id=1</code>, <code>siblings=1</code></span>
