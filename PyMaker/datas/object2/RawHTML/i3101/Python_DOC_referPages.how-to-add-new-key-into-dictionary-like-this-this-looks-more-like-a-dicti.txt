<div class="post-text" itemprop="text">
<p>I would like to add new key into the dictionary list. Example:</p>
<p><code>"label" : []</code> (with empty list)</p>
<pre><code>[
  {
    "Next" : {
      "seed" : [ 
        {
          "Argument" : [ 
            {
              "id" : 4,
              "label" : "org"
            },
            {
              "id" : "I"
            },
            {
              "word" : "He",
              "seed" : 2,
              "id" : 3,
              "label" : "object"
            },
            {
              "word" : "Gets",
              "seed" : 9,
              "id" : 2,
              "label" : "verb"
            }
          ]
        } 
      ],
      "Next" : "he,get",
      "time" : ""
    }
  }
]
</code></pre>
<p>I tried to use loop into "seed" and then to "argument" then use .update("label":[]) in the loop but it won't work. Can anyone please give me an example of using for loop to loop from beginning then to add these new "label"? </p>
<p>My prefered goal: ( to have extra "label" within the dictionary according to my input)</p>
<p>Example:</p>
<pre><code>[
  {
    "Next" : {
      "seed" : [ 
        {
          "Argument" : [ 
            {
              "id" : 4,
              "label" : "org"
            },
            {
              "id" : "I"
            },
            {
              "word" : "He",
              "seed" : 2,
              "id" : 3,
              "label" : "object"
            },
            {
              "word" : "Gets",
              "seed" : 9,
              "id" : 2,
              "label" : "verb"
            },
            {
              "id" : 5,
              "label" : "EXTRA"
            },
            {
              "id" : 6,
              "label" : "EXTRA"
            },
            {
              "id" : 7,
              "label" : "EXTRA"
            }
          ]
        } 
      ],
      "Next" : "he,get",
      "time" : ""
    }
  }
]
</code></pre>
<p>I am new to dictionary so really need help with this </p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your problem correctly, you want to add 'label' to <code>dict</code> in <code>Argument</code> where there is no <code>label</code>. You could do it like so -</p>
<pre><code>for i in x[0]['Next']['seed'][0]['Argument']:
   if not 'label' in i.keys():
       i['label'] = []
</code></pre>
<p>Where <code>x</code> is your dict. But what's <code>x[0]['Next']['seed'][0]['Argument']:</code>?
Let's simplify your dict -</p>
<pre><code>x = [{'Next': {'Next': 'he,get',
'seed': [{'Argument': [{these}, {are}, {your}, {dicts}]}],
'time': ''}}]
</code></pre>
<p>How did we reach here?
Let's see-</p>
<pre><code>x = [{'Next'(parent dict): {'Next'(child of previous 'Next'):{}, 
'seed(child of previous 'Next')':[{these}, {are}, {your}, {dicts}](a list of dicts)}]
</code></pre>
<p>I hope that makes sense. And to add more dictionaries in <code>Argument</code> </p>
<pre><code># create a function that returns a dict
import random # I don't know how you want ids, so this
def create_dicts():
    return {"id": random.randint(1, 10), "label": ""}
for i in range(3): # 3 is how many dicts you want to push in Argument
    x[0]['Next']['seed'][0]['Argument'].append(create_dicts())
</code></pre>
<p>Now your <code>dict</code> will become -</p>
<pre><code>[{'Next': {'Next': 'he,get',
'seed': [{'Argument': [{'id': 4, 'label': 'org'},
  {'id': 'I'},
  {'id': 3, 'label': 'object', 'seed': 2, 'word': 'He'},
  {'id': 2, 'label': 'verb', 'seed': 9, 'word': 'Gets'},
  {'id': 1, 'label': ''},
  {'id': 4, 'label': ''},
  {'id': 4, 'label': ''}]}],
'time': ''}}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First things first: access the list of dict that need to be updated.</p>
<p>according to your given structure that's <code>l[0]["Next"]["seed"][0]["Argument"]</code></p>
<p>Then iterate that list and check if <code>label</code> already exists, if it does not then add it as an empty list.</p>
<p>This can be done by explicit checking:</p>
<pre><code>if "label" not in i:
    i["label"] = []
</code></pre>
<p>or by re-assigning:</p>
<pre><code>i["label"] = i.get("label", [])
</code></pre>
<p>Full Code:</p>
<pre><code>import pprint
l = [ {
  "Next" : {
    "seed" : [ {
      "Argument" : [ {
        "id" : 4,
        "label" : "org"
      }, {
        "id" : "I"
      }, {
        "word" : "He",
        "seed" : 2,
        "id" : 3,
        "label" : "object"
      }, {
        "word" : "Gets",
        "seed" : 9,
        "id" : 2,
        "label" : "verb"
      } ]
    } ],
    "Next" : "he,get",
    "time" : ""
  } }]

# access the list of dict that needs to be updated
l2 = l[0]["Next"]["seed"][0]["Argument"]
for i in l2:
    i["label"] = i.get("label", []) # use the existing label or add an empty list

pprint.pprint(l)
</code></pre>
<p>Output:</p>
<pre><code>[{'Next': {'Next': 'he,get',
           'seed': [{'Argument': [{'id': 4, 'label': 'org'},
                                  {'id': 'I', 'label': []},
                                  {'id': 3,
                                   'label': 'object',
                                   'seed': 2,
                                   'word': 'He'},
                                  {'id': 2,
                                   'label': 'verb',
                                   'seed': 9,
                                   'word': 'Gets'}]}],
           'time': ''}}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a list with <em>one</em> nested dictionary. Get the list of the inner dicts, and iterate. Assuming your initial data structure is named <em>data</em></p>
<pre><code>dict_list = data[0]['Next']['seed'][0]['Argument']

for item in dict_list:
    item['label'] = input()
</code></pre>
</div>
<span class="comment-copy">Three questions. Is the second id after "4" meant to be "1"? Where do ids 5 to 7 come from? Where you've written <code>"label": "EXTRA"</code>, do you mean to have <code>"label": []</code>?</span>
<span class="comment-copy">I wish I could get something like this. those "label" with values should take back its own values while at the same time I wish to include 2-3 more "label" with empty list. string 1 {"label": "new"}, string2{"label":[]} , string 3 {"label": []}</span>
<span class="comment-copy">Hi sir, thank you so much for your prompt response. However, in the dict it has already have "label" key and I wanted to add extra "label" keys with empty list into it. Apparently, when I use update, it just update the already existing "label" keys that contain values to empty value. Example; "label": "new" --&gt; "label": [] after using update. What I want is "label": [] x4 extra after "label": "new". Hope this clear the misunderstand a little</span>
<span class="comment-copy">Hi @Joe, you can't have multiple keys with same name in a dict. Look <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">Yes, but is there a way to put another string like {"label":[]} into the dictionary. I included some example in the post too. The lower part. I hope to make it that way. Is it not possible, sir?</span>
<span class="comment-copy">Oh I understand, you want some of the labels to have a list like <code>label:[]</code> but others to have <code>label: "string here"</code>, is it so?</span>
<span class="comment-copy">Yes, those "label" with values should take back its own values while at the same time I wish to include 2-3 more "label" with empty list. string 1 {"label": "new"}, string2{"label":[]} , string 3 {"label": []}</span>
<span class="comment-copy">Thank you, sir. is there a way to include something like the one I wish for in the bottom post above? I would like to add extra "label" with empty list if possible.</span>
<span class="comment-copy">Thank you, Sir. But can I know what is the input() for?</span>
<span class="comment-copy">the <code>input()</code> is for use input, from the keyboard. If you already have labels, I'll edit</span>
<span class="comment-copy">I wish to do this. those "label" with values should take back its own values while at the same time I wish to include 2-3 more "label" with empty list. string 1 {"label": "new"}, string2{"label":[]} , string 3 {"label": []}</span>
<span class="comment-copy">@Joe: Instead of <code>input()</code>, put the value you want, whether it's <code>"new"</code> or <code>[]</code>. You probably need another function to decide that</span>
<span class="comment-copy">Yes, but I am trying to get more "label" keys into the dictionary and not to make it "new" or []. I wanted to add another pair of key: value ("label":[]) into the dictionary. In the current time. I have 4 strings with 3 "label" keys inside. But I wanted to add another 3 more "label" keys into the dictionary with empty list</span>
