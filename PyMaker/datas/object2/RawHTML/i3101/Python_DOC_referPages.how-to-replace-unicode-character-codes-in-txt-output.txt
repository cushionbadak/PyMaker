<div class="post-text" itemprop="text">
<p>I'm using the Beautiful Soup library to parse the contents of a web page and print the results into a .txt file. This mostly works but I can't get rid of certain unicode character codes that appear in the text output. For example:</p>
<p>"Failed to investigate issue with customer\u2019s terminal."</p>
<p>I have been using the "io" library to encode the output as <code>utf-8</code>. I have tried changing the encoding to ascii, but this doesn't work either.</p>
<pre><code>def open_file(file):
    with open((file), encoding='utf-8') as input_data:
        global soup
        soup = BeautifulSoup(input_data)
        return soup

# stuff happens here to parse the html and prepare a list of dictionaries containing the content I want to print.

# this prepares the output

def dict_writer(dict_list, filename):
    with io.open('%s.txt' % filename, 'w', encoding="utf-8") as f:
        for dict in dict_list:
            content = json.dumps(dict.get("content"))
            loc_no = json.dumps(dict.get("location_number"))
            page_no = json.dumps(dict.get("page_number"))
            f.write("\n")
            f.write(content + " " + "(" + page_no + ", " + loc_no + ")" +"\n")
            f.write("\n")
</code></pre>
<p>I read the article below to try to get a general understanding of how character encoding works. It seems like if I encoded the content in the <code>open_file</code> function, encoding the output in the same standard in the <code>dict_writer</code> function should work.</p>
<p><a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/" rel="nofollow noreferrer">https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The reason you're getting non-ASCII characters encoded with <code>\u</code> is that you're using <code>json.dumps</code>. As you can see from <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer">the docs</a>, the <code>ensure_ascii</code> parameter defaults to <code>True</code>, and, if true, "the output is guaranteed to have all incoming non-ASCII characters escaped".</p>
<p>So, you <em>could</em> just add <code>ensure_ascii=False</code> to all of your <code>dumps</code> calls.</p>
<p>But really, why are you using <code>json.dumps</code> in the first place? The format you're outputting isn't a JSON file. In fact, it seems to be something designed for human rather than computer consumption. So why do you want extra quotes, escape characters, etc. to make the parts of it JSON-parseable even though the whole isn't? It would be much simpler, and probably produce nicer output, if you just didn't do that:</p>
<pre><code>content = dict.get("content")
loc_no = str(dict.get("location_number"))
page_no = str(dict.get("page_number"))
f.write("\n")
f.write(content + " " + "(" + page_no + ", " + loc_no + ")" +"\n")
</code></pre>
<p>… or, even better:</p>
<pre><code>content = dict.get("content")
loc_no = dict.get("location_number")
page_no = dict.get("page_number")
f.write("\n")
f.write("{} ({}, {})\n".format(content, page_no, loc_no)
</code></pre>
<hr/>
<p>While we're at it, calling your dict <code>dict</code> is confusing (and means you can't access the <code>dict</code> constructor in the rest of your function without getting one of those errors that will keep you up all night debugging and then feeling like an idiot).</p>
<p>Also, why are you using <code>get("content")</code> here?</p>
<p>If you don't have to worry about cases where there is no <code>content</code>, just use <code>["content"]</code>—or, even more simply, just pass the dict to <code>format_map</code>:</p>
<pre><code>for ref in refs:
    f.write("\n{content} ({page_number}, {location_number})\n".format_map(ref))
</code></pre>
<p>If you <em>do</em> need to worry about such cases, surely you want some appropriate human-meaningful string, not <code>None</code>. For example:</p>
<pre><code>for ref in refs:
    content = ref.get("content", "-- content missing --")
    page_no = ref.get("page_number", "N/A")
    loc_no = ref.get("location_number", "N/A")
    f.write("\n{} ({}, {})\n".format(content, page_no, loc_no)
</code></pre>
</div>
<span class="comment-copy">Thanks for taking the time to dissect my code and provide some detailed advice. I don't have a good reason for using json.dumps, other than that I was googling "how to write a dictionary to a file" and saw this here...<a href="https://www.quora.com/How-do-I-write-a-dictionary-to-a-file-in-Python" rel="nofollow noreferrer">quora.com/How-do-I-write-a-dictionary-to-a-file-in-Python</a>.</span>
<span class="comment-copy">Had not heard about format_map. I thought the best way to retrieve the value in a key-value pair of a dictionary was with that dictionary.get("key") content. I will try that out, too.</span>
<span class="comment-copy">and thank you for the advice about not using "dict"</span>
