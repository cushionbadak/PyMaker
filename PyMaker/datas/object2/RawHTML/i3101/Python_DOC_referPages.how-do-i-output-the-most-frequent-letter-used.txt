<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/47251934/how-to-count-the-most-frequent-letter-in-a-string">How to count the most frequent letter in a string?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<pre><code>def main():
    x = {}
    for word in sentence: 
        x[word] = sentence.count(word)
    for letter in sorted(x):
        print (letter + ': ' + str(x[letter]))


sentence=input("Enter a sentence: ")
main()
</code></pre>
<p>this code outputs the letter and how many times it is used however how can i modify it to also find and print the letter used the most? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you're looking for an easy to read solution that is close to what you wanted to implement, that could do the trick,</p>
<pre><code>def main():
    x = {}
    for word in sentence:
        if word != " ": 
            x[word] = sentence.count(word)
    maximum_occurrences = max(x.values())
    for letter,occurrences in x.items():
         if occurrences == maximum_occurrences:
              print("Max value found, the letter "+ letter + " was found " + str(occurrences)+ " times.")

sentence=input("Enter a sentence: ")
main()

&gt;&gt;&gt;&gt; Enter a sentence:  This is simply a test
&gt;&gt;&gt;&gt; Max value found, the letter s was found 4 times.
</code></pre>
<p>Basically it returns any letters with the most occurrences. Take note that this take care of the cases where more than one letter have the same number of occurrences.</p>
<p><strong>EDIT</strong></p>
<p>Also note that I added <code>if word != " ":</code> because your initial code would consider a space as a word which is probably not what you want. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can just sort the letters by values and then to write last member of that sorted array:</p>
<pre><code>def main():
    x = {}
    for word in sentence:
        x[word] = sentence.count(word)

    sorted_letters = sorted(x, key=lambda v: x[v])
    for letter in sorted_letters:
        print (letter + ': ' + str(x[letter]))

    print('Most used letter =', sorted_letters[-1])


sentence=input("Enter a sentence: ")
main()
</code></pre>
<p>Sample input/output:</p>
<pre><code>Enter a sentence: Hello World!
H: 1
e: 1
 : 1
W: 1
r: 1
d: 1
!: 1
o: 2
l: 3
Most used letter = l
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So to find the maximum used word from the dict <code>x</code>, you could use <code>operator</code> like -</p>
<pre><code>import operator
print max(x.iteritems(), key=operator.itemgetter(1))[0]
</code></pre>
<p>But this will give you only one of n number of words having equal, i.e. max value</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe you would want to use "defaultdict()" from collections
    What it does is even if you don't have the key in dictionary when calling it by keys,
    it won't cause any errors</p>
<pre><code>import collections
s = "This is a random sequence of text"
d = collections.defaultdict(int)
for c in s:
    if c != " ":
        d[c] += 1
print(sorted(d.items(), key=lambda x: x[1], reverse=True)[0])
</code></pre>
</div>
<span class="comment-copy">If you modify your code to use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>, you can take advantage of <code>Counter.most_common</code></span>
<span class="comment-copy"><code>import statistics</code> and <code>statistics.mode(sentence)</code></span>
<span class="comment-copy">i tried however im not too skilled with that function. any ideas?</span>
<span class="comment-copy">This feels like such a bad dupe for OP. Even if the questions title are similar, doesn't mean they're duplicate...</span>
<span class="comment-copy">What if more than one letter have the same number of occurrences ?</span>
<span class="comment-copy">@scharette That's edge case, op needs to specify it what needs to happen.</span>
