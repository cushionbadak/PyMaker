<div class="post-text" itemprop="text">
<p>I am returning a constant string from a c function. using ctypes, when i try to print
it is resulting into segfault. I assume since its a constant string i dont really
need to alloc memory explicitly. Is my assumption correct?</p>
<p>test.c:</p>
<pre><code>char *str = "constant string";
char* get_str() 
{
    return str;
}
</code></pre>
<p>test.py:</p>
<pre><code>import os
import sys
import ctypes

from ctypes import *

lib = CDLL('./libtest.so')
s = lib.get_str()
s = ctypes.cast(s, c_char_p)
print(s.value)
</code></pre>
<hr/>
<p>Program received signal SIGSEGV, Segmentation fault.
strlen () at ../sysdeps/x86_64/strlen.S:106
106     ../sysdeps/x86_64/strlen.S: No such file or directory.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to properly specify function's <code>restype</code> (and <code>argtypes</code>) as explained in <a href="https://docs.python.org/3/library/ctypes.html#module-ctypes" rel="nofollow noreferrer">[Python]: ctypes - A foreign function library for Python</a>.</p>
<p><em>test.py</em>:</p>
<pre><code>import sys
import ctypes


LIB_NAME = "./libtest.so"


def main():
    libtest_lib = ctypes.CDLL(LIB_NAME)

    get_str_func = libtest_lib.get_str
    get_str_func.atgtypes = []
    get_str_func.restype = ctypes.c_char_p

    s = get_str_func()
    print(s)


if __name__ == "__main__":
    print("Python {:s} on {:s}\n".format(sys.version, sys.platform))
    main()
</code></pre>
<p><strong>Output</strong>:</p>
<blockquote>
<pre><code>[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow/q051536391]&gt; python3 ./test.py
Python 3.5.2 (default, Nov 23 2017, 16:37:01)
[GCC 5.4.0 20160609] on linux

b'constant string'
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Did this answer your question?</span>
