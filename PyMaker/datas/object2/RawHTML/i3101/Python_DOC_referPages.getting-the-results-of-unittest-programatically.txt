<div class="post-text" itemprop="text">
<p>I wrote some unittest code, and it's great, I can see it on the CLI when I run it manually.</p>
<p>Now I want to hook it up to run automatically as part of a merge to master hook on my repo. I have everything set up with dummy code except for the part of grabbing the results of the unittest programatically.</p>
<p>When I call <code>unittest.main()</code> to run them all, it throws a SystemExit. I've tried catching it and re-routing the stdout, but I wasn't able to get it to work, and it also feels like I'm doing it wrong. Is there an easier way to get the results of the unittests, like in a python list of line strings, or even a more complicated result object?</p>
<p>Really for my purposes, I'm only interested in 100% pass or fail, then showing that visual in the repo on pull request to master, with a link to the full unittest result details.</p>
<p>I'm also not married to unittest if some other python unit test framework can be called and pass off results easily.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can pass <code>exit=False</code> to <a href="https://docs.python.org/3/library/unittest.html#unittest.main" rel="nofollow noreferrer"><code>unittest.main</code></a>, and capture the return value.  To run it from another script, or the interactive interpreter, you can specify a target <code>module</code> as well. </p>
<p>That gives us an instance of the <code>TestCase</code> or <code>TestSuite</code> class that was executed.  The internal <code>unittest</code> machinery will make a <a href="https://docs.python.org/3/library/unittest.html#unittest.TestResult" rel="nofollow noreferrer"><code>TestResult</code></a> object available in the <code>result</code> attribute of that object.</p>
<p>That object will have a <a href="https://docs.python.org/3/library/unittest.html#unittest.TestResult.wasSuccessful" rel="nofollow noreferrer"><code>TestResult.wasSuccessful</code></a> method that gives the result you're looking for.</p>
<p>Assuming you have some file <code>tests.py</code>:</p>
<pre><code>from unittest import main

test = main(module='tests', exit=False)
print(test.result.wasSuccessful())
</code></pre>
</div>
