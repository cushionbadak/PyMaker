<div class="post-text" itemprop="text">
<p>I just can not figure it out how to easily do it in python:</p>
<pre><code>myArray = ["this ","is ","a ","test.","this ","is ","another ","test."]
</code></pre>
<p>now I want the output to be</p>
<ol>
<li><code>print(myArray[0:3]) -&gt; "this is a test"</code></li>
<li><code>print(myArray[4:7]) -&gt; "this is another test"</code></li>
</ol>
<p>Is there a feature in python that allows this without iterating over the whole array within a for word in myArray ...</p>
<p>What I get is an index in a loop which only tells me up to which word I should "print" it.</p>
<p>I prefer a python "exclusive" variant, which is short and simple, best case a one liner and it should need as less memory as possible (fast even for thousands of attempts)</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems like what you actually want is to <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">join</a> together some sublist in your list of words.</p>
<pre><code>&gt;&gt;&gt; myArray = ["this ","is ","a ","test.","this ","is ","another ","test."]
&gt;&gt;&gt; print(''.join(myArray[0:4]))
this is a test.
&gt;&gt;&gt; print(''.join(myArray[4:8]))
this is another test.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try join(), I hope this is the solution you are looking for</p>
<pre><code>myArray = ["this ","is ","a ","test.","this ","is ","another ","test."]
print(' '.join(myArray[:4]))
print(' '.join(myArray[4:]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I guess you have to make it myArray[0:4] and join function... </p>
<pre><code>print("".join(myArray[0:4]))
print("".join(myArray[4:8]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use the string method <code>join()</code>. This method applies to a separator. For instance:</p>
<pre><code>"".join(myArray[0:4])
</code></pre>
<p>Will output:</p>
<pre><code>'this  is  a  test.'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You were close.</p>
<p>For python 2.7:</p>
<pre><code>print " ".join(test[0:3])
</code></pre>
<p>For python 3.x:</p>
<pre><code>print(*test[0:3])  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>just use the  join()</p>
<pre><code>first="".join(myArray[0:3])
second="".join(myArray[4:7])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As the other guys have said, you can always use join:</p>
<pre><code>//generate 10 letters
myArray = [chr(letter) for letter in range(97,107)]
//return letters from 0 to 5
"".join(myArray)[0:5]
</code></pre>
<p>However, I don't understand why you can't use this format</p>
<pre><code>print[0:5]
</code></pre>
<p>In terms of efficiency, the latter option is better, and it is just as pythonic as the former.
When you 'join' the array, you are implicitly interating over it, and when you finally display the necessary elements, you are iterating again.</p>
</div>
<div class="post-text" itemprop="text">
<p>as friends have told you can use <code>join</code> in python:</p>
<pre><code>print("".join(myArray[x:y]))
</code></pre>
<p>which puts what you call join on it (here <code>""</code>) between elements as seperator and returns as <strong>string</strong>.
one good way is just remove ending space from your array and do like this:</p>
<pre><code>print(" ".join(myArray[x:y]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://i.stack.imgur.com/PhodP.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/PhodP.png"/></a></p>
<pre><code>print(''.join(myArray[:4])) -&gt; "this is a test"

print(''.join(myArray[4:])) -&gt; "this is another test"
</code></pre>
</div>
<span class="comment-copy">Just join the list elements with a whitespace, i.e.: <code>" ".join(myArray[4:7])</code></span>
<span class="comment-copy">@brunodesthuilliers The strings already have spaces in them.</span>
<span class="comment-copy">oops my bad :facepalm: Time for coffee I guess &lt;g&gt;</span>
<span class="comment-copy">thx :) so fast and many answers haha ... guess you was the fastest ^^</span>
<span class="comment-copy">Thanks for correcting mistake  @Mohsen</span>
<span class="comment-copy">you'r welcome, this is better than you add more descriptions...</span>
