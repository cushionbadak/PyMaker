<div class="post-text" itemprop="text">
<p>I want to create a set of permutations of a given list , say <code>a = np.array([0,1,2])</code>. I am aware of <code>itertools.permutations</code>, but I need something that I can personalized so my permutations follows certain rules.</p>
<p>For instance such a rule could be that 1 cannot be the second element. Creating all permutations using itertools and test them all for the rule's compliance would take too much time.</p>
<p>So I think I need a function to create permutations by myself but I have no idea how to do that. Could you help me writing a function that take a list as parameter and return all possible permutations of that list ? Then I will be able to modify it so the permutations meet my rules.</p>
</div>
<div class="post-text" itemprop="text">
<p>Edit: As explained by @Mr.T, <code>itertools</code> is a C library. </p>
<p>This means that calling <code>itertools.permutations</code> first, then filtering may be faster than implementing your own "optimized" function in python.    </p>
<p>Ideally, you'd implement your "optimized" function in C, and call it from python.</p>
<p>For the sake of completeness, here's an equivalent source code from <code>itertools</code> that you can modify according to your needs :</p>
<pre><code>def permutations(iterable, r=None):
    # permutations('ABCD', 2) --&gt; AB AC AD BA BC BD CA CB CD DA DB DC
    # permutations(range(3)) --&gt; 012 021 102 120 201 210
    pool = tuple(iterable)
    n = len(pool)
    r = n if r is None else r
    if r &gt; n:
        return
    indices = list(range(n))
    cycles = list(range(n, n-r, -1))
    yield tuple(pool[i] for i in indices[:r])
    while n:
        for i in reversed(range(r)):
            cycles[i] -= 1
            if cycles[i] == 0:
                indices[i:] = indices[i+1:] + indices[i:i+1]
                cycles[i] = n - i
            else:
                j = cycles[i]
                indices[i], indices[-j] = indices[-j], indices[i]
                yield tuple(pool[i] for i in indices[:r])
                break
        else:
            return
</code></pre>
<p>Details : 
<a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html#itertools.permutations</a></p>
<p>If you feel like implementing C code and using it in python : </p>
<blockquote>
<p>Any code that we write using any compiled language like C, C++, or
  Java can be integrated or imported into Python. This code is
  considered as an “extension.” A Python extension module is nothing
  more than a normal C library. On Unix machines, these libraries
  usually end in .so (for shared object). On Windows machines, you
  typically see .dll (for dynamically linked library).</p>
<p>details : <a href="https://medium.com/practo-engineering/execute-python-code-at-the-speed-of-c-extending-python-93e081b53f04" rel="nofollow noreferrer">https://medium.com/practo-engineering/execute-python-code-at-the-speed-of-c-extending-python-93e081b53f04</a></p>
</blockquote>
</div>
<span class="comment-copy">What's the question here?  Right now it just seems to be a request for someone to write your code for you.</span>
