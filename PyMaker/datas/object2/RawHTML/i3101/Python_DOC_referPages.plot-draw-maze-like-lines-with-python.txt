<div class="post-text" itemprop="text">
<p>New to programming, I am trying to plot road boundary-like lines. Basically, I am creating something like a road map and I want a rectangle to always be moving through the trajectory (I mean, the x, y coordinates of the rectangle increase with relation to the lines).</p>
<p>The idea is like the image below.</p>
<p>Can anyone help me? How do I create and plot the red lines as well as the black rectangle which is moving in the direction of the arrows?</p>
<p>UPDATE: I need to check that the distance from the rectangle to the lines is under a certain threshold each time. I think I might need to use some kind of array/element. But I am not clear how to use it. Can anyone help me? Thanks.</p>
<p><a href="https://i.stack.imgur.com/logeq.png" rel="nofollow noreferrer"><img alt="the figure" src="https://i.stack.imgur.com/logeq.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use pygames and literally draw anything anyway. Since you have not started on it at all, try this tutorial <a href="https://www.pygame.org/docs/ref/draw.html" rel="nofollow noreferrer">here</a></p>
<p>Or you could try <a href="https://docs.python.org/3/library/turtle.html" rel="nofollow noreferrer">turtle.</a></p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Or you could try turtle.</p>
</blockquote>
<p>Below's a minimalist map follower I implemented in Python turtle.  (Not a maze follower as it doesn't do any backtracking.)  This should give you a rough idea how to plot a maze and an object moving through it using an array to contain the maze structure:</p>
<pre><code>from turtle import Turtle, Screen

MAP = '''
XXXXXXXXOX
XOOOOOOOOX
XOXXXXXXXX
XOOOOXXXXX
XXXXOXXXXX
XXXXOXXXXX
XXXXOOOOOX
XXXXXXXXOX
XOOOOOOOOX
XOXXXXXXXX
'''

MAP_ARRAY = [list(row) for row in MAP.strip().split('\n')]
MAP_ARRAY.reverse()  # put 0, 0 in lower left corner

ADJACENT = [
              (0,  1),
    (-1,  0),          (1,  0),
              (0, -1),
]

SCALE = 3

STAMP_SIZE = 20

WIDTH, HEIGHT = len(MAP_ARRAY[0]), len(MAP_ARRAY)

def any_adjacent(x, y):
    return [(x + dx, y + dy) for dx, dy in ADJACENT if 0 &lt;= x + dx &lt; WIDTH and 0 &lt;= y + dy &lt; HEIGHT and MAP_ARRAY[y + dy][x + dx] == 'O']

def move():  # slowly navigate the MAP, quit when no where new to go
    x, y = turtle.position()
    adjacent_squares = any_adjacent(int(x), int(y))

    # always moves to first valid adjacent square, need to consider
    # how to deal with forks in the road (e.g. shuffle adjacent_squares)
    for adjacent in adjacent_squares:
        if adjacent not in been_there:
            turtle.goto(adjacent)
            been_there.append(adjacent)
            screen.ontimer(move, 1000)  # one second per move, adjust as needed
            break

screen = Screen()  # recast the screen into MAP coordinates
screen.setup(WIDTH * STAMP_SIZE * SCALE, HEIGHT * STAMP_SIZE * SCALE)
screen.setworldcoordinates(-0.5, -0.5, WIDTH - 0.5, HEIGHT - 0.5)

turtle = Turtle('square', visible=False)
turtle.shapesize(SCALE)
turtle.speed('fastest')
turtle.penup()

for y, row in enumerate(MAP_ARRAY):  # draw the MAP
    for x, character in enumerate(row):
        if character == 'X':
            turtle.goto(x, y)
            turtle.stamp()

turtle.color('red')
turtle.shapesize(SCALE / 2)
turtle.goto(1, 0)  # should use unique character in MAP to indicate start &amp; end points
turtle.showturtle()

been_there = []  # prevent doubling back

move()

screen.mainloop()
</code></pre>
<p><a href="https://i.stack.imgur.com/pdwvD.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/pdwvD.png"/></a></p>
</div>
<span class="comment-copy">Python itself doesn't have any graphics capabilities; there are things like matplotlib which do, but your answer will depend on which you decide to use.</span>
