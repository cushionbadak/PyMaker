<div class="post-text" itemprop="text">
<p>I'm writing a python script to build a project with multiple technology stack. I need to check whether all prerequisites are ready and Maven is one of the prerequisite.</p>
<p>Normally, the Maven tutorial will ask the user to set an environment variable <code>M2_HOME</code> and add <code>%M2_HOME%/bin</code> to the path. </p>
<p>It's easy to check the environment variable with code below,</p>
<pre><code>if 'M2_HOME' not in os.environ:
    print('Install maven firstly')
</code></pre>
<p>However, if the user doesn't set <code>M2_HOME</code> as an environment variable but adds <code>pache-maven-x.x.x\bin</code> to the path, it can still be thought as Maven being installed successfully and I think the latter is more comprehensive. </p>
<p><strong>So, here comes the question</strong>: How can I use Python to check whether Maven is installed?</p>
<p>In my view, it's possible to launch <code>mvn</code> as a process from Python and check what the output is, for example by calling <code>mvn -v</code>. Any other suggestion? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/shutil.html#shutil.which" rel="nofollow noreferrer"><code>shutil.which</code></a> command</p>
<pre><code>import shutil
if not shutil.which("mvn"):
    print('Install maven firstly')
</code></pre>
<p>edit:
For python2.7 you can use <code>distutils.spawn.find_executable</code> instead:</p>
<pre><code>from distutils.spawn import find_executable
if not find_executable("mvn"):
    print('Install maven firstly')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code># tested on windows 7, python 2.7.13 
import subprocess
import os


def version_available(cmd):
    try:
        # prints version and returns 0 if successulf
        output = subprocess.call([cmd, "--version"])
        return output == 0
    except OSError as e:
        # handle file not found error.
        if e.errno == os.errno.ENOENT:
            print("error please install " + cmd)
            return False
        else:
          # Something else went wrong, raise the exception
          raise

version_available("mvn")    # returns False, prints error please install mvn
version_available("python") # returns True,  prints Python 2.7.13
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the terminal command <code>which mvn</code>, if the response is <code>mvn not found</code> then you should install it.</p>
<pre><code>p = subprocess.Popen(["which", "mvn"], stdout=subprocess.PIPE)
print p.communicate()
</code></pre>
<p>then compare the output</p>
</div>
<span class="comment-copy">does it have to be platform independent? i.e. run on any OS</span>
<span class="comment-copy">@con Only windows is OK to me</span>
<span class="comment-copy">Let me try it and give you feedback later</span>
<span class="comment-copy">It's required to use Python 2.7 and I don't find which method in shutil, I guess it's python 3.+ stuff. Right?</span>
<span class="comment-copy">For python2.7 you can use: from distutils.spawn import find_executable &gt;&gt;&gt; find_executable("mvn")</span>
<span class="comment-copy">The find_executable('mvn') is None even if 'mvn' is available with built-in command line.</span>
<span class="comment-copy">Although it doesn't solve my problem completely, it could still be a solution for most scenario, I'd like to accept this answer.</span>
<span class="comment-copy">Thanks for this wrapper but it still doesn't work for mvn. I have installed it and can get output when I type "mvn --version" manually on cmd.exe. I upvoted this answer cause it can be a solution for other exe in limited scenario.</span>
<span class="comment-copy">which isn't available on windows though. A better approach would be to check that mvn -v returns some version number (possibly compared by regex)</span>
<span class="comment-copy">Let me try it and give you feedback later</span>
<span class="comment-copy">As @con-- said, I'm using windows and <code>which</code> is available.</span>
<span class="comment-copy">Thanks, it wasn't specified in the question. Anyway, you can use the same approach with a different command, such as a simple <code>mvn</code> and check from the output if the command is found or not.</span>
