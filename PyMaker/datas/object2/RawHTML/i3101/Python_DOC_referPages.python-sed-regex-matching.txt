<div class="post-text" itemprop="text">
<p>I am trying to use <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">re.sub()</a> in my Python script to remove some String. </p>
<p>The <code>sed</code> command I used is (on Linux): </p>
<p><code>echo "helloworld-5b5cf484-g582f" | sed 's/-[a-z0-9]\{5\}$//' | sed 's/-[0-9]\{10\}$//' | sed 's/-[a-z0-9]\{8,10\}$//'</code> </p>
<p>Which would output <code>helloworld</code>. </p>
<p>Now, with Python, I tried to do this for the first <code>sed</code> group: </p>
<p><code>newstring = re.sub(r'(s/-[a-z0-9]\{5\}$//)', r'\1', 'helloworld-5b5cf484-g582f')</code></p>
<p>But it only outputs the copy, which is <code>helloworld-5b5cf484-g582f</code></p>
<p>How can I perform such <code>sed</code> command ? </p>
<p>Edit: </p>
<p>My question is not about my regex expression. The inputs String are more complex than the one I presented as an example. Question is about how to prorperly use re.sub() with the regex I used :) </p>
</div>
<div class="post-text" itemprop="text">
<p><code>sed</code> <code>s/-[a-z0-9]\{5\}$//</code> command is translated as <code>re.sub(r'-[a-z0-9]{5}$', '', s)</code>.</p>
<p>Note:</p>
<ul>
<li>BRE POSIX interval quantifier is written without escapes, <code>\{5\}</code> =&gt; <code>{5}</code></li>
<li><code>s/&lt;pattern&gt;/&lt;repl&gt;/</code> means <em>replace <code>&lt;pattern&gt;</code> with <code>&lt;repl&gt;</code></em>, and is equal to <code>re.sub('&lt;pattern&gt;', '&lt;repl&gt;', s, 1)</code> (as there is no <code>g</code> modifier in the sed command, <code>1</code> is passed to <code>re.sub</code> to only replace one, first, occurrence).</li>
</ul>
<p>Modifiers are passed as options, or <em>flags</em>, in the <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a>, e.g. <code>re.sub(r'-[a-z0-9]{5}$', '', s, flags=re.I)</code> (<code>re.I</code> is a case insensitive modifier). Mind there is no need using <code>g</code> modifier as <code>re.sub</code> replaces all occurrences by default.</p>
<p>You can learn more about Python regex syntax in the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Python <code>re</code> documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your regular expression does not match what you're trying to do.</p>
<p>Actualy your code is replacing a 5 char long alpha-numric char string that starts by an hyphen by the first match in 'helloworld-5b5cf484-g582f' (or something like this).</p>
<p>This case can not occur since your string does not begin by an hyphen.</p>
<p>If  I'm correct you want to remplace by an empty string any 5 char or 8 chars long lowercase alpha-numeric string that starts with an hyphen.</p>
<p>This could be achieved with this code:</p>

Code

<pre><code>newstring = re.sub("(-[a-z0-9]{8})?(-[a-z0-9]{5})?", '', 'helloworld-5b5cf484-g582f')
</code></pre>

Result

<pre><code>print newstring
helloworld
</code></pre>
<p>Here are pointers to re module doc:</p>
<ol>
<li>python2: <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">https://docs.python.org/2/library/re.html</a></li>
<li>python3: <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a></li>
</ol>
</div>
<span class="comment-copy">Are you trying to remove the last two hyphen-separated chunks? Try <code>re.sub(r'(?:-[^-]*){2}$', '', s)</code>. sed <code>s/-[a-z0-9]\{5\}$//</code> command is translated as <code>re.sub(r'-[a-z0-9]{5}$', '', s)</code></span>
<span class="comment-copy">Why don't use just search for everything before the first <code>-</code>? Else please explain when and where to split.</span>
<span class="comment-copy">Take out <code>s/</code> and <code>//</code>, those are not part of the regex.</span>
<span class="comment-copy">My question is not about my regex expression. The inputs String are more complexed than the one I presented as an example.  Question is about how to prorperly use <code>re.sub()</code> with the regex I used :)</span>
<span class="comment-copy">@TomZych Still gives me a copy of my inputs:  <code>newstring = re.sub('-[a-z0-9]\{5\}$', '', 'helloworld-5b5cf484-g582f')</code></span>
<span class="comment-copy">Just FYI, you may omit <code>1</code> count argument to <code>re.sub</code> when translating <code>s/-[a-z0-9]\{5\}$//</code> command, because <code>$</code> will only make the regex match once at the end of the string. If you plan to actually replace first occurrences, always pass <code>1</code> as the count (third) argument to <code>re.sub</code>.</span>
