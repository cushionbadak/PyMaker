<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/32684720/how-do-i-ensure-parameter-is-correct-type-in-python">How do I ensure parameter is correct type in Python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>How I fix parameter type in Python?</p>
<pre><code>def truncus(fill=int):
    return [i for i in range(fill)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def truncus(fill):
  if type(fill) != int:
    raise Exception("A non-integer value was passed to truncus.")
  return [i for i in range(fill)]
</code></pre>
</div>
<span class="comment-copy">You can give type <i>hints</i> using annotations, but python won't enforce them.  <code>def truncus(fill: int)</code></span>
<span class="comment-copy">By "fix" do you mean "repair" or "fasten securely in place"? In other words, are you asking "my code is broken, how do I make it do what I want?" or are you asking "how do I ensure that only integers may be passed to <code>truncus</code>, and nothing else?"?</span>
<span class="comment-copy">You are wasting your time, really. Just use whatever has been passed to <code>truncus</code>, and let the exception propagate - the result will be <b>EXACTLY</b> the same as if you typechecked <code>fill</code> : it will raise a <code>TypeError</code> at runtime.</span>
<span class="comment-copy">tanks, but have other way?</span>
<span class="comment-copy">I think <code>isinstance</code> rather than <code>type() ==</code>.  That would allow us to, for example, specify that we want an <a href="https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable" rel="nofollow noreferrer"><code>Iterable</code></a></span>
<span class="comment-copy">This should at least use <code>isinstance</code> and raise a <code>TypeError</code></span>
<span class="comment-copy">Python is dynamically typed. If you really want static typing, I'd look into a language that's statically typed.</span>
<span class="comment-copy">@Carcigenicate there are cases where typecheking (correctly done typecheking I mean) makes sense. But I agree that here it's just a waste of everyone's time.</span>
