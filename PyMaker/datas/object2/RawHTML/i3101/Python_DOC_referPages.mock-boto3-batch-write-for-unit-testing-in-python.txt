<div class="post-text" itemprop="text">
<p>I would like to test the batch_write method using unit test. </p>
<pre><code>class DataService:
    def __init__(self, table):
        dynamodb = boto3.resource('dynamodb', region_name='us-west-2')
        self.db = dynamodb.Table(self.table)


    def batch_write(self, items):
        with self.db.batch_writer() as batch:
            for item in items:
                batch.put_item(Item=item)
</code></pre>
<p>I want to mock the batch_writer(). I have seen usage of  mock_open used to mock file open methods. But I don't really understand can i mock this streaming batch_writer() call.</p>
</div>
<div class="post-text" itemprop="text">
<p>I came across this issue as well this is how i solved it.</p>
<pre><code>    from mock import MagicMock
    class TestClass():
        def __enter__(self, *args):
            return self
        def __exit__(self, *args):
            pass

    cls = TestClass()
    cls.put_item = MagicMock()

    repository.table.batch_writer = MagicMock()
    repository.table.batch_writer.return_value = cls

    print cls.put_item.call_args_list
</code></pre>
<p>Now i can pass my mock test class in place of the batch_writer to mock calls or check params. I know this is an old question but it is one that I struggled with and wished someone would have posted a code example if this is easy to do. If there is better easier way using patch that anyone has please post.</p>
</div>
<span class="comment-copy">What's your question? "How do I use mock?" This is a pretty basic use of mock.patch: <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">i want to mock the streaming method self.db.batch_writer() here.</span>
<span class="comment-copy">Yes, I see that. My comment is more saying: "Please read the docs and give it a try rather than just asking 'How do I do this?'"</span>
