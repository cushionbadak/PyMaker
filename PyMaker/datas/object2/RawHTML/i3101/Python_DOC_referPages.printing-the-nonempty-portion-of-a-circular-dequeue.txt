<div class="post-text" itemprop="text">
<p>Consider the dequeue=[2, 3, 4, None, None, None, 1]. It is circular and has suppose that 1 is the front of the dequeue and 4 is the back of the dequeue, knock on wood, we should have these indices stored under the variables front and back, their values being 6 and 2, respectively. </p>
<p>How can I print the values between the indices front and back, that is, [1, 2, 3, 4]. Better yet, and more specifically, I was hoping to find a way to make a string that would more specifically look like [ 1, 2, 3, 4]. My code is as follows, but I don't believe it is time efficient and, moreover, within the larger chunk of my code, I'm not sure this method is working. </p>
<p>def str(self):</p>
<pre><code>if self.size==0:       #my first thoughts are to simply catch an empty dequeue
    return "[ ]"

elif self.size==1:      #same for a dequeue of only one object.
    string = "[ "+str(self.__contents[0])+" ]"
    return string

else:
    string="[ "
    index=self.front
    while (index%self.capacity) != self.back:
        string = string + str(self.contents[index]) + ", "
        index+=1
    string=string+str(self.__contents[self.back]) + " ]"
    return string
</code></pre>
<p>Where self.size=the number of nonempty entries, self.capacity=the total number of cells in the array, self.contents representing the contents of the array, and self.front and self.back representing the indices of the front and back of the dequeue.</p>
</div>
<div class="post-text" itemprop="text">
<p>Do you want to use the built-in <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow noreferrer"><code>deque</code></a>? If so, it supports standard iteration making a list comprehension quite pythonic:</p>
<pre><code>'[{}]'.format(', '.join(x for x in my_deque if x is not None)
</code></pre>
<p>If it is not a built-in <code>deque</code>, why not add iteration support to your type to allow the above method (and probably many other methods).</p>
</div>
<span class="comment-copy">Generally, I don't like using built in features. Even though it helps a lot, I feel like it kind of cheats some of purpose of a project that I'm supposed to learn from. Anyhow, though, thanks for you answer. I actually solved my problem earlier this morning, in future I hope to make use out of the built in deque tho!</span>
