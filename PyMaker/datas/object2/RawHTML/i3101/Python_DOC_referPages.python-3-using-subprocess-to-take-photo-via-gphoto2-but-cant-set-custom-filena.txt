<div class="post-text" itemprop="text">
<p>everything works fine while I do it via  terminal but when I use python script it doesn't.</p>
<p>Command:
<code>gphoto2 --capture-image-and-download --filename test2.jpg</code></p>
<pre><code>New file is in location /capt0000.jpg on the camera                            
Saving file as test2.jpg
Deleting file /capt0000.jpg on the camera
</code></pre>
<p>I'ts all good.
But when I try to do it via python script and subprocess nothing happens. I tried to do it like:</p>
<pre><code>import subprocess
text1 = '--capture-image-and-download"' 
text2 = '--filename "test2.jpg"'
print(text1 +" "+ text2)
test = subprocess.Popen(["gphoto2", text1, text2], stdout=subprocess.PIPE)
output = test.communicate()[0]
print(output)
</code></pre>
<p>and:</p>
<pre><code>import subprocess
test = subprocess.Popen(["gphoto2", "--capture-image-and-download --filename'test2.jpg'"], stdout=subprocess.PIPE)
output = test.communicate()[0]
print(output)
</code></pre>
<p>While I use only  <code>--capture-image-and-download</code> it works fine, but I get filename that I don't want to. Can you tell me what I do wrong?!</p>
</div>
<div class="post-text" itemprop="text">
<p>On the command line, quotes and spaces are consumed by the shell; with <code>shell=False</code> you need to split up the tokens on whitespace yourself (and ideally understand how the shell processes quotes; or use <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer"><code>shlex</code></a> to do the work for you).</p>
<pre><code>import subprocess

test = subprocess.Popen([
        "gphoto2",
        "--capture-image-and-download",
        "--filename", "test2.jpg"],
    stdout=subprocess.PIPE)
output = test.communicate()[0]
print(output)
</code></pre>
<p>Unless you are stuck on a truly paleolithic Python version, you should avoid <code>supbrocess.Popen()</code> in favor of <code>subprocess.run()</code> (or, for slightly older Python versions, <code>subprocess.check_output()</code>). The lower-level <code>Popen()</code> interface is unwieldy, but gives you low-level access control for when the higher-level API doesn't do what you want.</p>
</div>
<span class="comment-copy">Have you tried : <code>test = subprocess.Popen(["gphoto2", text1, text2], stdout=subprocess.PIPE, shell=True)</code> ?</span>
<span class="comment-copy">For the second try, you have to put a comma between <code>--capture-image-and-download</code> and <code>--filename'test2.jpg'</code></span>
<span class="comment-copy">Sadly doesn't work. <code>b'For debugging messages, please use the --debug option.\nDebugging messages may help finding a solution to your problem.\nIf you intend to send any error or debug messages to the gphoto\ndeveloper mailing list &lt;gphoto-devel@lists.sourceforge.net&gt;, please run\ngphoto2 as follows:\n\n    env LANG=C gphoto2 --debug --debug-logfile=my-logfile.txt --capture-image-and-download --filename "test2.jpg"\n\nPlease make sure there is sufficient quoting around the arguments.\n\n'</code></span>
<span class="comment-copy">I don't have <code>gphoto2</code> so I can't really say wtat's wrong. Maybe do pass in <code>--debug</code> and maybe add <code>env=myenv</code> to the <code>subprocess</code> call where you override <code>LANG</code> (<code>import os; myenv = os.environ.copy(); myenv["LANG"] = "C"</code>)</span>
