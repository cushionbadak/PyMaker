<div class="post-text" itemprop="text">
<p>I'm very new to python so play nice, but I'm trying to write a program that helps me write a list of things to do in different countries. It is supposed to ask what country, what thing to do, and then put that activity under the country heading. the text document is set out as such:</p>
<pre><code>Bolivia:
- salt pans
Ecuador:
Peru:
Spain:
</code></pre>
<p>This code definitely works but I have a strong feeling there is a simple way to do this.</p>
<pre><code>f = open('travel.txt', 'r+')
contents = f.readlines()
contents = ''.join(contents)
country = input('Country: ')
length = len(cnty)+2
activity = input('Activity: ')
index = contents.find(country+':\n') + length
content = contents[:index] + '- ' + activity + '\n' + contents[index:]
g = open('travel.txt', 'w')
g.write(content)
</code></pre>
<p>I have tried appending the text document but from my understanding that always appends to the end. Also tried using <code>f.seek()</code> and writing at a certain index, but that seems to overwrite, and can't find a way to stop that. </p>
<p>Cheers for any help :) </p>
</div>
<div class="post-text" itemprop="text">
<p>What you could do is create a <code>dict of country</code> with <code>list of activities</code> like so -</p>
<pre><code>lines = f.readlines()

current_country = ''
countries = {}

for country in lines:
    if ":" in country:
        current_country = country.replace(":", "").replace("\n", "").strip()
        countries[current_country] = []
    else:
        countries[current_country].append(country.replace("-", "").strip())
</code></pre>
<p>And the data that you are going to have this way will be a dict. For example, if data was -</p>
<pre><code>Bolivia:
- salt pans
- black
Ecuador:
- green
- white
Peru:
- blue
- black
Spain:
- grey
</code></pre>
<p>You will have a dictionary as -</p>
<pre><code>{'Spain': ['grey'], 'Bolivia': ['salt pans', 'black'], 'Peru': ['blue', 'black'], 'Ecuador': ['green', 'white']}
</code></pre>
<p>Now to grab a country, all you need to do is -</p>
<pre><code>countries['Bolivia']
</code></pre>
<p>Will give you a list of activities for Spain</p>
<pre><code>['salt pans', 'black']
</code></pre>
<p>And since it's a dict, it only takes <code>O(1)</code> to retrieve a list of activities for a country</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of editing the file as a string, leave it as a list and edit it. When you go to write the file, convert it back to plain text. This way you will not have to work with string indexing, but a much more robust list indexing that is less susceptible to errors with calculating the exact index of the string.</p>
<p>Moreover, you should use <code>with</code> statements as shown below when you work with files. <code>with</code> statements will automatically open and close your files for you and make the code look cleaner.  </p>
<p>One last thing is to use the <code>.strip()</code> method to remove unnecessary newline characters. You can also do <code>.replace("\n", "")</code>.</p>
<pre><code>with open("travel.txt", "r") as travel_file:
    # read into list without newline characters
    file_contents = travel_file.read().splitlines()

# .strip() will remove whitespace and newline characters
country = input("Country: ").strip()
activity = input("Activity: ").strip()

country_index = file_contents.index(country)
file_contents[country_index] = country + " - " + activity

with open("travel.txt", "w") as outfile:
    outfile.write("\n".join(file_contents))
</code></pre>
</div>
<span class="comment-copy">Can you paste a snippet of <code>travel.txt</code>?</span>
<span class="comment-copy">Bolivia: - salt pans  Peru:  Chile:  same as layout as outlined in post</span>
<span class="comment-copy">You would probably find it easier to store the country/activity data in a data structure, rather than having a long string to represent it. Much easier to update! You also haven't added any activities to your sample text, which would be helpful in solving your problem.</span>
<span class="comment-copy">Also, use <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer"><code>with</code> statements</a> to work with text files. <a href="https://www.pythonforbeginners.com/files/with-statement-in-python" rel="nofollow noreferrer">pythonforbeginners.com/files/with-statement-in-python</a></span>
<span class="comment-copy">It'd be helpful if you post your text file in <code>code block</code> with more than 2 countries</span>
<span class="comment-copy">It's better to use <a href="https://pyyaml.org/wiki/PyYAMLDocumentation" rel="nofollow noreferrer">PyYAML</a> for parsing the input, given its structure.</span>
