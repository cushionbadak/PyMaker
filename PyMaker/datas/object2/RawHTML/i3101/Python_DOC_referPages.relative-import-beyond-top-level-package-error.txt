<div class="post-text" itemprop="text">
<p><a href="https://i.stack.imgur.com/EzpES.jpg" rel="nofollow noreferrer"><img alt="I have a project named &lt;code&gt;tweetme&lt;/code&gt; which has two apps &lt;code&gt;account&lt;/code&gt; and &lt;code&gt;tweets&lt;/code&gt;" src="https://i.stack.imgur.com/EzpES.jpg"/></a>
I have a project named <code>tweetme</code> which has two apps <code>account</code> and <code>tweets</code>,i have <code>serializers.py</code> file in both of the apps to serialize data. So when i try to relative import the serializer class from <code>account/api/serializers.py</code> to another app <code>tweets/api/serializers.py</code>, the relative import shows error.</p>
<p><a href="https://i.stack.imgur.com/Vb6qW.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Vb6qW.jpg"/></a></p>
<p>1- 1st i tried full path <code>from src.account.api.serializers import UserDisplaySerializer</code>, it gave error in console that <code>ModuleNotFoundError: No module named 'src'</code></p>
<p><a href="https://i.stack.imgur.com/9Nmfr.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/9Nmfr.jpg"/></a></p>
<p>2- Then i tried <code>from ...account.api.serializers import UserDisplaySerializer</code>,its showing error <code>ValueError: attempted relative import beyond top-level package</code>.</p>
<p>So what am i doing wrong? How to do relative import properly?</p>
<p>@edit</p>
<p>adding <strong>init</strong>.py in src</p>
<pre><code>    Directory: D:\django\tweetme\src


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----       26-07-2018     23:56                account
d-----       25-07-2018     13:56                static-storage
d-----       25-07-2018     19:06                template
d-----       26-07-2018     19:39                tweetme
d-----       26-07-2018     10:54                tweets
-a----       25-07-2018     20:17         143360 db.sqlite3
-a----       13-07-2018     22:40            554 manage.py
-a----       27-07-2018     08:34              0 __init__.py
</code></pre>
<p>Still same error persisting...</p>
<p>[![User Serializer class in <code>account</code> app][4]][4]</p>
</div>
<div class="post-text" itemprop="text">
<p>Seems you are missing <code>__init__.py</code> in <code>src</code> folder.<br/><br/>
<a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">From the python docs</a></p>
<blockquote>
<p>The <code>__init__.py</code> files are required to make Python treat the directories as containing packages; this is done to prevent directories with a common name, such as <code>string</code>, from unintentionally hiding valid modules that occur later (deeper) on the module search path. In the simplest case, <code>__init__.py</code> can just be an empty file, but it can also execute initialization code for the package or set the <code>__all__</code> variable, described later.</p>
</blockquote>
<p>Remove all <em>relative imports</em> used from your project/app and use <em>absolute import</em>, because
<strong>Absolute imports</strong> are recommended, as they are usually more readable and tend to be better behaved (or at least give better error messages) if the import system is incorrectly configured <br/><br/>
<strong>Update - 1</strong><br/><br/>
<strong>1.</strong> Change in <code>/tweetme/src/tweetme/urls.py</code><br/>
Commented out two lines, because of their <code>urls.py</code> doesn't have any <code>valid patterns</code></p>
<pre><code>urlpatterns = [
    path('admin/', admin.site.urls),
    path('',include('tweets.urls')),
    path('api',include('tweets.api.urls')),
    <b># path('',include('account.urls')),
    # path('api',include('account.api.urls'))</b>
]

if settings.DEBUG:
    urlpatterns += static(settings.STATIC_URL,document_root = settings.STATIC_ROOT)</code></pre>
<p><strong>2.</strong> Change in <code>/tweetme/src/tweets/api/serializers.py</code><br/>
Change <code>from src.account.api.serializers import UserDisplaySerializer</code> to <code>from account.api.serializers import UserDisplaySerializer</code><br/></p>
<pre><code>from rest_framework import serializers
from ..models import Tweet
<b>from account.api.serializers import UserDisplaySerializer</b>


class TweetModelSerializer(serializers.ModelSerializer):
    user = UserDisplaySerializer()

    class Meta:
        model = Tweet
        fields = ['user', 'content']</code></pre>
</div>
<span class="comment-copy">Try to add <code>__init__.py</code> in your <code>src</code> folder.</span>
<span class="comment-copy">@MadLee Sir, still its showing <code>ValueError: attempted relative import beyond top-level package</code></span>
<span class="comment-copy">What is the output of your <code>full path import</code> method now? Where do you run your project?</span>
<span class="comment-copy">@MadLee Its the same error ` from src.account.api.serializers import UserDisplaySerializer ModuleNotFoundError: No module named 'src' `</span>
<span class="comment-copy">did you added <code>__int__.py</code> to <code>src</code> folder?</span>
<span class="comment-copy">Yeah i added <code>__init__.py </code> in folder still its showing same error..</span>
<span class="comment-copy">Can you share your project? If so, I could look into the problem more deeply</span>
<span class="comment-copy">Sir, this is my project, please have a look..   <a href="https://github.com/ChidanandaNayak/tweetme/tree/master/src" rel="nofollow noreferrer">github.com/ChidanandaNayak/tweetme/tree/master/src</a></span>
<span class="comment-copy">I updated the answer..see my update</span>
<span class="comment-copy">This is because, you opened the <code>tweetme</code> directory from Pycharm. So Pycharm assumes it's the root directory of your project. But, Actually your root directory is (according to django peoject) <code>src</code></span>
