<div class="post-text" itemprop="text">
<p>I have tried numerous ways but how do I input a matrix something like this</p>
<pre><code>2,3;2,4;2,1;3,5;3,4;4,2
4,2;4,1;3,1;3,6;4,4;1,4
1,2;1,3;4,5;5,5;2,1;1,5
6,2;6,1;2,2;5,6;2,6;2,5
3,2;3,3;6,5;6,6;6,3;6,4
5,3;5,4;5,1;5,2;4,6;1,6
</code></pre>
<p>my approach is as shown below:</p>
<pre><code>matrix=[[j for j in input().split(';')]for i in range(n)] 
</code></pre>
<p>Where n is the order of matrix of size n by n .I need to input coordinates of another cell in each cell .Eg: At (1,1) we have (2,3) then it should redirect me to the cell row=2 and column =3 where the coordinates are (3,1) and so on until an ending condition is met.I am using 1 based indexing here. When I do as above it takes '2,3' as a string and when I use <code>int(j)</code> it gives an error showing that 2,3 cannot be an integer. Can anyone come up with an approach ?  </p>
</div>
<div class="post-text" itemprop="text">
<p>As @RafaelC mentioned, it's unclear what you want int("2,3") to return. I think though you want to do something like the following:</p>
<p><code>matrix=[[j.split(',') for j in input().split(';')]for i in range(2)]</code></p>
<p>If you do want each of the pairs to be a tuple, you can just wrap <code>j.split(',')</code> in <code>tuple</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>My example will make a matrix 6x6 from the data. Each cell contains a pair of numbers:</p>
<pre><code>data = """
2,3;2,4;2,1;3,5;3,4;4,2
4,2;4,1;3,1;3,6;4,4;1,4
1,2;1,3;4,5;5,5;2,1;1,5
6,2;6,1;2,2;5,6;2,6;2,5
3,2;3,3;6,5;6,6;6,3;6,4
5,3;5,4;5,1;5,2;4,6;1,6"""

import re
from pprint import pprint
groups = re.findall(r'(\d+),(\d+)', data)
pprint([[tuple(map(int, groups[j*6 + i])) for i in range(6)] for j in range(6)])
</code></pre>
<p>Prints:</p>
<pre><code>[[(2, 3), (2, 4), (2, 1), (3, 5), (3, 4), (4, 2)],
 [(4, 2), (4, 1), (3, 1), (3, 6), (4, 4), (1, 4)],
 [(1, 2), (1, 3), (4, 5), (5, 5), (2, 1), (1, 5)],
 [(6, 2), (6, 1), (2, 2), (5, 6), (2, 6), (2, 5)],
 [(3, 2), (3, 3), (6, 5), (6, 6), (6, 3), (6, 4)],
 [(5, 3), (5, 4), (5, 1), (5, 2), (4, 6), (1, 6)]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From what I understand, you want to fill the matrix starting from (1,1) and jumping to the next position written on this location. This should do it:</p>
<pre><code>import re
from pprint import pprint

data = """
        2,3;2,4;2,1;3,5;3,4;4,2
        4,2;4,1;3,1;3,6;4,4;1,4
        1,2;1,3;4,5;5,5;2,1;1,5
        6,2;6,1;2,2;5,6;2,6;2,5
        3,2;3,3;6,5;6,6;6,3;6,4
        5,3;5,4;5,1;5,2;4,6;1,6
       """

jumps = [(int(i)-1, int(j)-1) for i, j in re.findall(r'(\d+),(\d+)', data)]
array = [ [0]*6 for _ in range(6)]

i = j = 0
for _ in range(100):  # There is no end condition define, will do 100 iterations.
    array[j][i] = input()
    i, j = jumps[j*6+i]
</code></pre>
<p>If you only enter the index for 36 iteration, you will get something like this:    </p>
<pre><code>[[ 1, 20,  0, 28, 25, 22],
 [ 4, 27,  0, 23,  0,  0],
 [ 3,  2, 33,  0, 19,  0],
 [ 0, 21, 26,  0,  0, 31],
 [ 0, 32, 29, 34,  0, 30],
 [36,  0, 24,  0,  0, 35]]
</code></pre>
<p>You can see there is the following loop:</p>
<pre><code>(3, 5) -&gt; (6, 5) -&gt; (6, 4) -&gt; (2, 5) -&gt; 
(3, 3) -&gt; (4, 5) -&gt; (6, 6) -&gt; (1, 6) -&gt; 
(5, 3) -&gt; (2, 1) -&gt; (2, 4) -&gt; (6, 1) -&gt; 
(4, 2) -&gt; (3, 6) -&gt; (5, 1) -&gt; (3, 4) -&gt; 
(2, 2) -&gt; (4, 1) -&gt; (3, 5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer">ast</a> module seems to be relatively unknown, but may give you what you're looking for. Admittedly, I'm not 100% sure I understand what you want, but the following code might provide a solution, or at least be helpful.</p>
<pre><code>import ast
def main():
    inp_matrix = \
"""2,3;2,4;2,1;3,5;3,4;4,2
4,2;4,1;3,1;3,6;4,4;1,4
1,2;1,3;4,5;5,5;2,1;1,5
6,2;6,1;2,2;5,6;2,6;2,5
3,2;3,3;6,5;6,6;6,3;6,4
5,3;5,4;5,1;5,2;4,6;1,6"""    
    lines = inp_matrix.split('\n')
    out_matrix = []
    for ln in lines:
        matrix_line = [ast.literal_eval(e) for e in ln.split(';')]
        out_matrix.append(matrix_line)
    for el in out_matrix:
        print el
    return 0

if __name__ == "__main__":
    exit(main())
</code></pre>
<p>The output was:</p>
<blockquote>
<p>[(2, 3), (2, 4), (2, 1), (3, 5), (3, 4), (4, 2)]<br/>
  [(4, 2), (4, 1), (3, 1), (3, 6), (4, 4), (1, 4)]<br/>
  [(1, 2), (1, 3), (4, 5), (5, 5), (2, 1), (1, 5)]<br/>
  [(6, 2), (6, 1), (2, 2), (5, 6), (2, 6), (2, 5)]<br/>
  [(3, 2), (3, 3), (6, 5), (6, 6), (6, 3), (6, 4)]<br/>
  [(5, 3), (5, 4), (5, 1), (5, 2), (4, 6), (1, 6)]  </p>
</blockquote>
</div>
<span class="comment-copy">What do you expect <code>int(2,3)</code>to be?</span>
<span class="comment-copy">int(2,3) will be the index for the block i=2 , j=3 i.e., row 2 and column 3  . I am using 1-based index here . that means all the blocks range from (1,1) to (6,6)</span>
<span class="comment-copy">I'm sure I could come up with multiple approaches, but I'm not writing your code for you. You might split on the semicolons and then split on the commas. Or maybe use the CSV module, but use the semicolon as your separator. And, as RafaelC's comment implies, of course taking the <code>int</code> of a string like '(2,3)' is going to give an error. You need to get just the strings '2' and '3' if you want to get an int.</span>
<span class="comment-copy">@SRK post the expected output for that input matrix ;)</span>
<span class="comment-copy">Then redo your question since what you are inputing is not the values of the matrix but the starting coordinate of your path, which is a completely different problem. But basically if your matrix doesn't have an end node your code will be jumping forever</span>
<span class="comment-copy">Although you really shouldn't put <code>input</code> inside of a list...</span>
<span class="comment-copy">thanks for the answer . But how should I post the whole problem , you know , for better understanding ?</span>
<span class="comment-copy">@SRK You should clearly post what's your input, which is the desired output and what you have tried so far, including the code. You can just post a toy example with a 2x2 matrix. It will also help you debugging and better understanding what the problem is.</span>
<span class="comment-copy">Not sure that's what OP wants; OP implied to need <code>int</code>s for starters</span>
<span class="comment-copy">Nobody's sure about what OP wants.</span>
<span class="comment-copy">@RafaelC I agree with you, it's a little bit unclear what he wants exactly.</span>
<span class="comment-copy">For completeness, since the number inside the tuples seem to be matrix indexes I would map them into integers instead of leaving them as strings.</span>
<span class="comment-copy">@SembeiNorimaki yeah, true. I converted it.</span>
<span class="comment-copy">thanks @TwistedSim for that</span>
