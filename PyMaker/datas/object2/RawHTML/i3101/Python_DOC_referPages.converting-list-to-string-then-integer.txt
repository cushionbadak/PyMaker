<div class="post-text" itemprop="text">
<p>I have a list with 1550500 numbers, and all of them with quotes.
Example: list('100', '150', '200', '250') etc...
I need to sum all the numbers, but before that I need to convert it to INT.</p>
<p>List Name: trip_list</p>
<p>My code:</p>
<pre><code>mean_tripstr = str(trip_list)
mean_trip = [int(x) for x in mean_tripstr]
print(type(mean_trip))
</code></pre>
<p>Error message:</p>
<pre><code>Traceback (most recent call last):
  File "projeto1.py", line 235, in &lt;module&gt;
    mean_trip = [int(x) for x in mean_tripstr]
  File "projeto1.py", line 235, in &lt;listcomp&gt;
    mean_trip = [int(x) for x in mean_tripstr]
ValueError: invalid literal for int() with base 10: '['
</code></pre>
<p>What am I doing wrong? I am new to coding...</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has a <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a> function, this takes a function and an iterable. There is also the <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">sum</a> function, which returns the sum of an iterable.</p>
<p>You can use this:</p>
<pre><code>sum(map(int(trip_list))
</code></pre>
<p>Note that the map function does not return a list, it returns a generator. To convert it to a list, use </p>
<pre><code>list(sum(map(int, trip_list)))
</code></pre>
<p>(this may take a while as it requires iterating over the entire list, and yours is quite long).</p>
<p>The error with your code is converting your list to a string, that is, </p>
<pre><code>&gt;&gt;&gt; my_list = ["5", "6"]
&gt;&gt;&gt; my_list_str = str(my_list)
&gt;&gt;&gt; my_list_str
"['5', '6']"
&gt;&gt;&gt; type(my_list_str)
&lt;class 'str'&gt;
&gt;&gt;&gt; type(my_list)
&lt;class 'list'&gt;
</code></pre>
<p>So when you try to iterate over the string, the first <code>x</code> is <code>[</code> which is not a number (thus the exception).</p>
<p>As a sidenote, using <code>list(map(int, a_list))</code> is faster than <code>[int(i) for i in a_list]</code></p>
<pre><code>&gt;&gt;&gt; c1 = "list(map(int, a_list))"
&gt;&gt;&gt; c2 = "[int(i) for i in a_list]"
&gt;&gt;&gt; s = "a_list = [str(i) for i in range(1000)]"
&gt;&gt;&gt; import timeit
&gt;&gt;&gt; timeit.timeit(c1, setup=s, number=10000)
1.9165708439999918
&gt;&gt;&gt; &gt;&gt;&gt; timeit.timeit(c2, setup=s, number=10000)
2.470973639999997
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to convert each element to <code>int</code>:</p>
<pre><code>mean_tripstr = map(str,trip_list)
mean_trip = list(map(int,mean_tripstr))
</code></pre>
<p>The code above uses a <code>generator</code>, what is more efficient in cases when you just have to iterate in a list. The last line convert to a list again properly.</p>
<p>But, as you said, if you already have a list of strings, you can just do:</p>
<pre><code>mean_trip = list(map(int,trip_list))
</code></pre>
<p>If you know <code>numpy</code>, you can do too:</p>
<pre><code>import numpy as np

trip_list = np.array(trip_list)

mean_trip = trip_list.astype(np.int)
</code></pre>
</div>
<span class="comment-copy">Remove <code>str(trip_list)</code>. It converts the list to a string.</span>
<span class="comment-copy">thank you very much for explanation. Now I know exactly what I did wrong and understood the logic behind the map function!</span>
<span class="comment-copy">That's okay, helping people is fun!</span>
<span class="comment-copy">thanks! this worked:    mean_tripstr = map(str,trip_list) mean_trip = list(map(int,mean_tripstr))</span>
