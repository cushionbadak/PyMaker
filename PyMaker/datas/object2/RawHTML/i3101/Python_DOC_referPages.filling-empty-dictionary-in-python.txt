<div class="post-text" itemprop="text">
<p>I have trouble filling an empty dictionary in Python</p>
<p>I declare the dictionary as follow :</p>
<pre><code>my_dict = {}
</code></pre>
<p>I want to fill it with different key and differents values one at a time. 
I would like to have at the end something like :</p>
<pre><code>{"1":(1,2,3,4),"2":(4,5,6,7),"3":(8,9,10,11),"4":(12,13,14,15)}
</code></pre>
<p>Therefore I tried to do it as follow : </p>
<pre><code>for i in range(4):
    for j in range(4):
         my_dict[str(i)].append(j)
</code></pre>
<p>But I have the following error at the first loop : </p>
<blockquote>
<p>KeyError Traceback (most recent call last)
       in ()
      2 for i in range(4):
      3     for j in range(4):
      ----&gt; 4          my_dict[str(i)].append(j)<br/>
      KeyError: '0'</p>
</blockquote>
<p>I have a much more complicated for loop in my code but I tried to be the more general as possible to help other who might have a similar problem.
At the end I would like to have different size's value for each key.</p>
<p>If you have any idea why it does not work and how to fix it please feel free to answer.</p>
<p><strong>EDIT</strong> </p>
<p>Sorry for the confusion, I wanted something like the following :</p>
<pre><code>{'1': [1, 2, 3, 4],
             '2': [5, 6, 7, 8],
             '3': [9, 10, 11, 12],
             '4': [13, 14, 15, 16]})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are 2 issues:</p>
<ol>
<li>You cannot append to a tuple. Tuples are immutable.</li>
<li>You cannot append to a dictionary value which has not yet been defined for a specific key. This is the cause of your <code>KeyError</code>.</li>
</ol>
<p>These issues can be alleviated by using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> with <code>list</code>:</p>
<pre><code>from collections import defaultdict

my_dict = defaultdict(list)

for i in range(4):
    for j in range(4):
         my_dict[str(i)].append(j)

print(my_dict)

defaultdict(list,
            {'0': [0, 1, 2, 3],
             '1': [0, 1, 2, 3],
             '2': [0, 1, 2, 3],
             '3': [0, 1, 2, 3]})
</code></pre>
<p>Closer to your desired output, you will need to redefine your <code>range</code> objects:</p>
<pre><code>my_dict = defaultdict(list)

for i in range(1, 5):
    for j in range((i-1)*4+1, i*4+1):
         my_dict[str(i)].append(j)

print(my_dict)

defaultdict(list,
            {'1': [1, 2, 3, 4],
             '2': [5, 6, 7, 8],
             '3': [9, 10, 11, 12],
             '4': [13, 14, 15, 16]})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create this <code>dict</code>, with a list as values, using a little dict comprehension:</p>
<pre><code>my_dict = {str(i+1): [j for j in range((i*4)+1, (i+1)*4+1)] for i in range(4)}
</code></pre>
<p>EDIT: OP realized he wanted a list, not a tuple.</p>
</div>
<span class="comment-copy">First thing, dictionary does not have append() method. And, you have to assign the value to a corresponding key as: my_dict[key] = value.</span>
<span class="comment-copy"><code>"1":(1,2,3,4),"2":(4,5,6,7)</code> should be <code>"1":(1,2,3,4),"2":(5,6,7,8)</code> and so on</span>
<span class="comment-copy">Thank you. That is exactly what I was trying to do !</span>
