<div class="post-text" itemprop="text">
<p>My Python app contains a subfolder called Tests which I use to run unit tests. All of my files are in the parent folder, which I will call App. The Tests folder contains, say, a test.py file. The App folder contains an app.py file and a file.txt text file.</p>
<p>In my test.py file, I can make my imports like this:</p>
<pre><code>import sys
sys.path.append("PATH_TO_PARENT_DIR")
</code></pre>
<p>Say my app.py file contains the following:</p>
<pre><code>class Stuff():
    def do_stuff():
        with open("file.txt") as f:
            pass
</code></pre>
<p>Now if I run test.py, I get the following error:</p>
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: 'file.txt'
</code></pre>
<p>How can I fix this? Many thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the file is located in the same folder as your script:</p>
<pre><code>import os
parent_dir = os.path.abspath(os.path.dirname(__file__))
class Stuff():
    def do_stuff():
        with open(os.path.join(parent_dir, "file.txt")) as f:
            pass
</code></pre>
<p>Explanation:</p>
<p><code>__file__</code> is the path to your script</p>
<p><code>os.path.dirname</code> get's the directory in which your script sits</p>
<p><code>os.path.abspath</code> makes that path absolute instead of relative (just in case relative paths mess your script up, it's good practice)</p>
<p>Then all we need to do is combine your <code>parent_dir</code> with the file, we do that using <code>os.path.join</code>.</p>
<p>Read the docs on <code>os.path</code> methods here: <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer">https://docs.python.org/3/library/os.path.html</a></p>
<p>A more explicit version of this code can be written like this, if that helps:</p>
<pre><code>import os
script_path = __file__
parent_dir = os.path.dirname(script_path)
parent_dir_absolute = os.path.abspath(parent_dir)
path_to_txt = os.path.join(parent_dir_absolute, 'file.txt')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>open</code> function looks for the file in the <em>same folder as the script</em> that calls the <code>open</code> function. So, your <code>test.py</code> looks in the tests folder, not the app folder. You need to add the full path to the file.</p>
<pre><code>open('app_folder' + 'text.txt')
</code></pre>
<p>or move the <code>test.py</code> file in the same folder as <code>text.txt</code></p>
</div>
<span class="comment-copy">give full path of your text file ...eg : C//user/full_path//file.txt</span>
<span class="comment-copy">@sachindubey Why doesn't the relative path work ?</span>
<span class="comment-copy">Sorry I'm a little tired. I just understood the comment. What do you mean by "give the full path"? Do I have to add it to my path manually, similarly to adding the path to the parent folder?</span>
<span class="comment-copy">Thanks Ofer, I used the following solution found somewhere else: <code>MAIN_DIR = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))</code></span>
<span class="comment-copy">Thank you. Could you give me a way to do this without explicitly giving the parent folder's path? Using sys functions, I mean. I need this to work in production too and it doesn't sound like a great idea to start defining explicit paths.</span>
<span class="comment-copy">You could use <code>os.path.join(path, file)</code> instead, but the fact remains that you somehow <i>have to</i> define the folder the files are in. If it is the parent folder, you could use <code>..</code> as the path, but the best way would be to define that path in a configuration file, and create a function that wraps <code>open</code></span>
