<div class="post-text" itemprop="text">
<p>I have a list of phones dicts, and I want to break it into 2 columns. I have some solution but it looks dirty. What's the right and simplest way to do it?</p>
<p>My solution is here:</p>
<p>myphones dict is here:</p>
<pre><code>    myphones = [
{'number':'13888888881',
'fee' = '1'},


{'number':'13888888882',
'fee' = '1'},

{'number':'13888888883',
'fee' = '1'},

{'number':'13888888884',
'fee' = '1'},

{'number':'13888888885',
'fee' = '1'},

{'number':'13888888886',
'fee' = '1'},
]
</code></pre>
<p>in the templates:
I write:</p>
<pre><code>&lt;pre&gt;

{% for phone in myphones %}
&lt;tr&gt;
  &lt;td&gt;
    {{phone.number}}
  &lt;/td&gt;
  &lt;td&gt;
    {{phone.fee}}
  &lt;/td&gt;

  &lt;td&gt;
    {{phone.number}}
  &lt;/td&gt;
  &lt;td&gt;
    {{phone.fee}}
  &lt;/td&gt;
&lt;/tr&gt;
{% endfor %}
&lt;/pre&gt;
</code></pre>
<p>It like this:</p>
<p><a href="https://i.stack.imgur.com/L2NGG.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/L2NGG.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>{% for i in range(0, ((myphones|length)/2)|int, 2) %}
    &lt;tr&gt;
      &lt;td&gt;
        {{myphone[i].number}}
      &lt;/td&gt;
      &lt;td&gt;
        {{myphone[i].fee}}
      &lt;/td&gt;
      {% if (i+1) &lt;= (myphone|length-1)%}
      &lt;td&gt;
        {{myphone[i+1].number}}
      &lt;/td&gt;
      &lt;td&gt;
        {{myphone[i+1].fee}}
      &lt;/td&gt;
      {% endif %}
    &lt;/tr&gt;
 {% endfor %}
</code></pre>
</div>
<span class="comment-copy">You can also use a namedtuple to store the data.</span>
<span class="comment-copy">Can you give me an example? Thank you</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a> You can read about them here. It basically allows you to create a class. With increasing code complexity, this dict notation of storing data might become a bit messy, I personally think a namedtuple would make the code cleaner. It's certainly something you might wanna look into, if not for this case but you might find use for it later. If it's just a key value pair of data like in this one, dict is great!</span>
<span class="comment-copy">It will raise <code>OutOfIndex</code> if <code>len(myphtones)</code> is an odd number.</span>
<span class="comment-copy">myphones|length)/2|round  is float type TypeError: 'float' object cannot be interpreted as an integer</span>
<span class="comment-copy">@Theodoros Vasileiadis,In python3,<code>{% for i in range((myphones|length)/2|round) %}</code> has  TypeError.Like this:  'float' object cannot be interpreted as an integer</span>
<span class="comment-copy">See my updated answer. Maybe casting to int will do it.</span>
<span class="comment-copy">Great, mark it as the answer of this question then. Glad I helped.</span>
