<div class="post-text" itemprop="text">
<p>I want to print a list using logging in only one line in Python 3.6. Currently my code looks like this.</p>
<pre><code>logger = logging.getLogger()
logger.setLevel(log_level)
ch = logging.StreamHandler(sys.stdout)
ch.setLevel(log_level)
formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
ch.setFormatter(formatter)
logger.addHandler(ch)

# some codes in-between

num_list = [1, 2, 3, 4, 5]
logger.info("Numbers in num_list are: ")
for item in num_list:
    logger.info(item)
</code></pre>
<p>What I want to get is</p>
<pre><code>2018-07-23 17:29:30,200 - root - INFO - Numbers in num_list are: 1 2 3 4 5
</code></pre>
<p>However, I would get </p>
<pre><code>2018-07-23 17:29:30,200 - root - INFO - Numbers in num_list are:
2018-07-23 17:29:30,200 - root - INFO - 1
2018-07-23 17:29:30,200 - root - INFO - 2
2018-07-23 17:29:30,200 - root - INFO - 3
2018-07-23 17:29:30,200 - root - INFO - 4
2018-07-23 17:29:30,200 - root - INFO - 5
</code></pre>
<p>I know if I used <code>print</code> to output, I could have use <code>print(item, end=" ")</code> to explicitly change what follows the output. However, it seems that the logging won't accept <code>end</code> as an input parameter.</p>
<p>Does anyone have any ideas how I could get the desired output? Many thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using a for loop which iterates over all of your list and logs it one by one try: <code>logger.info("Numbers in num_list are: {}".format(' '.join(map(str, num_list))))</code> to post them all in once</p>
<p>See: <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str#str.join" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html?highlight=str#str.join</a></p>
</div>
<div class="post-text" itemprop="text">
<p>There is a strong difference between an output stream (used by <code>print</code>) and a message log. The stream is a sequence of characters (or bytes for binary strings) that may happen to contain newline characters. Those newlines characters are then interpreted when you display them on a terminal (or when you print them).</p>
<p>A log is a sequence of <em>messages</em>, and each message is supposed to be atomic. Once a message has been logged, you cannot add anything to it but can only log new messages.</p>
<p>So you have to first fully build your message and then log it:</p>
<pre><code>num_list = [1, 2, 3, 4, 5]
msg = "Numbers in num_list are: " + " ".join(num_list)      # fully build the message
logger.info(msg)                                            #  and then log it
</code></pre>
</div>
<span class="comment-copy">Why aren't you passing the list? as in <code>logger.info(num_list)</code>?</span>
<span class="comment-copy">Thanks for the insightful comments. I guess the lesson here is that I try too hard on finding the connection between logging and print to forget that I could actually concatenate the string before output it. I have been trying to change the logging.config but ignore the simpler way</span>
