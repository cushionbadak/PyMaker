<div class="post-text" itemprop="text">
<p>On Linux there's a command called "find" where you can search for specific filenames. Is there any way I can search for a specific method when using dir()? </p>
<p>For example, when I do:</p>
<pre><code>a = ["hey", "bro", "you're", "awesome"]
dir(a)
</code></pre>
<p>The result is:</p>
<pre><code>['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
</code></pre>
<p>Can I do a <strong>dir(a) | find iter</strong> to get the result ____iter____? 
Is there any quick way to do a search in this way in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>dir(a)</code> returns a list of names in <code>a</code>, so you can use a list comprehension to print out only the ones you care about:</p>
<pre><code>print([s for s in dir(a) if 'iter' in s])
</code></pre>
<p>You can make this a function if you want to search easily:</p>
<pre><code>def find_dir(search_string, a):
    return [s for s in dir(a) if search-string in s]
find_dir('iter', a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have a look at the <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob" rel="nofollow noreferrer"><code>glob()</code></a> function in the python pathlib. It select files based on a pattern. </p>
</div>
<span class="comment-copy">Perhaps: <code>[x for x in dir(a) if x == '__iter__']</code>? Or <code>filter(lambda x: x == '__iter__', dir(a))</code></span>
<span class="comment-copy"><code>if "__iter__" in dir(a):</code>? Or just try to get it directly (i.e. <code>a.__iter__</code>) and capture the <code>AttributeError</code> if it doesn't exist? Or <code>getattr(a, "__iter__", None)</code> (replace <code>None</code> with whatever default you might want). Or...</span>
<span class="comment-copy">Err, the Python equivalent to <code>find</code> would be a thing that looks for files, such as <code>os.walk()</code>. If you're looking not for files but for method names, that's something <i>very</i> different.</span>
<span class="comment-copy">That works. I was just wondering whether there was a quicker way without list comprehensions. It gets tedious when I'm using the interpreter to make that list comprehension every time. Looks like i'll just make my own custom import.</span>
