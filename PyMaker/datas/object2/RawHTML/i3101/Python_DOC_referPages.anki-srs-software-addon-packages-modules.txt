<div class="post-text" itemprop="text">
<p>I am writing my own add on for the SRS Anki (2.1x).</p>
<p>My script works outside of Anki, but I want to run it from the toolbar in Anki to act on cards called by Anki.</p>
<p>I keep getting errors saying that the modules I am importing (such as pygame) are missing.</p>
<p>I have done as Giorgan Borca-Tasciuc suggests <a href="https://stackoverflow.com/questions/44556065/shipping-part-of-python-standard-library">here</a></p>
<p>and included the folders with the module files and <strong>init</strong>.py files to scan the folders. So for example, I have the folder 'pygame' inside the same folder as the folder that represents the addon script. Both have <strong>init</strong>.py files in.</p>
<p>However, it always seems to find some module that isn't imported. For example, now it can't find the built-in Python package 'array'.</p>
<p>I have also tried to hack this with lines in my addon script such as:</p>
<pre><code>sys.path.append('/Users/user/AnacondaProjects/Anki/')
sys.path.append('/Users/user/Library/Application%20Support/Anki2/addons21/playback/')
sys.path.append('/Users/user/Library/Application%20Support/Anki2/addons21/playback/pygame')
sys.path.append('/anaconda3/lib/python3.6/site-packages')
</code></pre>
<p>Surely I don't have to include every possible module that every sub file uses. </p>
<p>What am I doing wrong?</p>
<p>Help much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://apps.ankiweb.net/docs/addons.html#standard-modules" rel="nofollow noreferrer">the documentation</a>:</p>
<blockquote>
<h2>Standard Modules</h2>
<p>Anki ships with only the standard modules necessary to run the program - a full copy of Python is not included. For that reason, if you need to use a standard module that is not included with Anki, you’ll need to bundle it with your add-on.</p>
</blockquote>
<p>Now, how do you bundle add-ons? <a href="https://apps.ankiweb.net/docs/addons.html#sharing-add-ons" rel="nofollow noreferrer">The documentation</a> says:</p>
<blockquote>
<h2>Sharing Add-ons</h2>
<p>For a simple one-file add-on, you can upload the .py file. For multi-file add-ons, please create a subfolder that acts as a Python package, and create a small .py file that imports that package. Using the Japanese support add-on as an example, the structure looks like:</p>
<pre><code>japanese/file1.py
japanese/file2.py
japanese/__init__.py # can be empty; marks the folder as a package
japanese/&lt;binary support files&gt;
jp.py
</code></pre>
<p>To upload a multi-file add-on, please zip up the folder and the loader .py file and upload the zip.</p>
</blockquote>
<p>So you should place the modules you require in a support folder, and import them from there. Something like:</p>
<pre><code>myaddon/pygame.zip
myaddon/__init__.py
ma.py
</code></pre>
<p><code>ma.py</code> can be a sort of configure-and-load-<code>myaddon</code> file, and <code>__init__.py</code> (<code>myaddon</code> proper) can <code>from . import pygame</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Share an experience that imports BeautifulSoup from bs4. Hope to help you.</p>
<p>Downloading beautifulsoup4 source code, unzip the code and copy the "bs4" folder to Anki Add-On folder <code>C:\Users\Admin\AppData\Roaming\Anki2\addons\</code>. Then restart Anki. My akPlugin.py script can find BeautifulSoup from bs4.</p>
<pre><code>λ ls -al addons
total 56
drwxr-xr-x 1 Admin 197121     0 Aug 30 09:12 ./
drwxr-xr-x 1 Admin 197121     0 Oct 22 18:28 ../
-rw-r--r-- 1 Admin 197121 37794 Jul 18 10:11 akPlugin.py
drwxr-xr-x 1 Admin 197121     0 Sep 29  2015 bs4/
</code></pre>
</div>
<span class="comment-copy">Hello, I followed the Anki support and still had the error listed above.  I don't really understand what you mean by:        ma.py can be a sort of configure-and-load-myaddon file, and <b>init</b>.py (myaddon proper) can from . import pygame.</span>
<span class="comment-copy">@SebSilas Make the modules you need submodules of your addon package. Read <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">the Python tutorial page on modules</a> to understand.</span>
<span class="comment-copy">I've done all this but couldn't get it to work. I'll paste my code soon</span>
