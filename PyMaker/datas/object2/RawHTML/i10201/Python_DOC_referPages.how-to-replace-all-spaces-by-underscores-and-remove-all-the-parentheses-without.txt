<div class="post-text" itemprop="text">
<p>Here is what I did. I know this is definitely wrong. I'd like to know how to make this one work? Thx!</p>
<pre><code>import re
def demicrosoft (fn):

"""Clean up a file name.

Remove all parentheses and replace all spaces by underscores.

Params: fn (string): 
Returns: (string) clean version of fn
"""

fn = re.sub('[()]', '', fn)
for ch in ['']:
    fn = fn.translate(ch, "_")
return fn

print(demicrosoft('Quercus stellata (26).jpg'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>join</code></a> combined with a generator that iterates over the characters in your string while handling the logic for filtering out parentheses and replacing spaces with underscores:</p>
<pre><code>PARENS = {'(', ')'}

def demicrosoft(string):
    return ''.join('_' if c == ' ' else c for c in string if c not in PARENS)

print(demicrosoft('Quercus stellata (26).jpg'))  # Quercus_stellata_26.jpg
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
def demicrosoft (fn):
  return '_'.join((''.join(re.split(r'[()]', fn)).split()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From Zen of Python: Readability counts!</p>
<pre><code>def demicrosoft (fn):
    dest = ""
    for char in fn:
        if char == ' ':
            dest += '_'
        elif char not in '()':
            dest += char
    return dest
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>newString = re.sub("([\s\(\)])",lambda m:"_" if b.group(0) not in "()" else "",targetString)
</code></pre>
<p>im guessing its for a performance reasons and they want <code>O(N)</code>  the generator expression should work ... here is an <code>re</code> solution</p>
</div>
<span class="comment-copy">What exactly is not working the way you expect?</span>
<span class="comment-copy">It says there is a TypeError: translate() takes exactly one argument (2 given)</span>
<span class="comment-copy">That should be added to your question since that is really the thing you are asking about. Also, explain what is confusing you about "it takes 1 argument but you gave 2".</span>
<span class="comment-copy">what a silly requirement ... if this is for a class GL on the test ... if this is for a job GL in the interview ... in either case the correct answer is <code>"why the hell would i choose not to use .replace"</code></span>
<span class="comment-copy">this is the best version imho</span>
