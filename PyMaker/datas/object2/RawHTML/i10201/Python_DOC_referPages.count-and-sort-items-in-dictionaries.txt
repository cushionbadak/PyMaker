<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/613183/how-do-i-sort-a-dictionary-by-value">How do I sort a dictionary by value?</a>
<span class="question-originals-answer-count">
                    42 answers
                </span>
</li>
</ul>
</div>
<p>When the user gives input it puts it in a dictionary. When nothing or blanc is filled in it code should stop and give all the inputs + occurences in the dictionary.</p>
<pre><code>nummer = 1
def namen(namen):
    var = 1

    key = {}

    while var == 1:
        invoer = input('Volgende naam: ')
        if invoer != '':
            global nummer
            key[nummer] = invoer
            nummer +=1
        else:

            return key
            break

hey = (namen(5))
</code></pre>
<p>I tried <code>counter</code> and a <code>for</code> loop but that doesn't work.
So for instance if input = `h, d, d, hh, a, s</p>
<pre><code>`it should give `
h=1
d=2
hh=1
a=1
s=1`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This looks working..</p>
<pre><code>key = {}

while True:
    uinp = raw_input('Write something: ')
    print uinp
    if len(uinp) == 0:
        break

    try:
        key[uinp] += 1
    except:
        key[uinp] = 1

print key
</code></pre>
<p>is this what you wanted?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a reworking of your code that does what I think you are trying to achieve. It takes advantage of <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>Counter</code></a> from the standard  <code>collections</code> module.</p>
<pre><code>from collections import Counter

def namen():

    bedragen = Counter()

    while True:
        invoer = input('Volgende naam: ')
        if invoer == '':
            break
        bedragen[invoer] += 1
    return bedragen


hey = namen()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the input is guaranteed to be separated by <code>,</code> (comma-space), you can use the following snippet with <code>collections.Counter</code>:</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; input = 'h, d, d, hh, a, s'
&gt;&gt;&gt; collections.Counter(input.split(', '))
Counter({'d': 2, 'a': 1, 'hh': 1, 's': 1, 'h': 1})
</code></pre>
<p>To get your specific formatting, you can do the following:</p>
<pre><code>&gt;&gt;&gt; for k, v in collections.Counter(input.split(', ')).items():
...     print ('{}={}'.format(k, v))
...
a=1
hh=1
s=1
d=2
h=1
</code></pre>
<p>If you just want to delimit with commas and ignore other whitespace, you can replace <code>input.split(', ')</code> in any of the above snippets with <code>[i.strip() for i in input.split(',')]</code>.</p>
</div>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/2.7/library/collections.html?#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a></span>
<span class="comment-copy">Thank you! Really nice with the try and except.</span>
<span class="comment-copy">The try/except must be used with care... But often is faster and clearer than a more complicated code.. Happy to be helpful</span>
<span class="comment-copy">Thank you very much. Exactly what I needed in very beginner friendly python!</span>
