<div class="post-text" itemprop="text">
<p>I just took a Data Analysis course on Udacity.
My code is:</p>
<pre><code>enrollments_filename= '/Users/abc/Desktop/Udacity - Intro to Data Analysis/enrollments.csv'

def open_file(filename):
    with open(filename, 'rb') as f:
        reader = unicodecsv.DictReader(f)
        return list(reader)

enrollments = open_file(enrollments_filename)

# Takes a date as a string, and returns a Python datetime object. 
# If there is no date given, returns None

from datetime import datetime as dt    
def parse_date(date):
    if date == '':
        return None
    else:
        return dt.strptime(date, '%Y-%m-%d')

# Takes a string which is either an empty string or represents an integer,
# and returns an int or None.

def parse_maybe_int(i):
    if i == '':
        return None
    else:
        return int(i)

for enrollment in enrollments:
    enrollment['cancel_date'] = parse_date(enrollment['cancel_date'])
    enrollment['days_to_cancel'] = parse_maybe_int(enrollment['days_to_cancel'])
    enrollment['is_canceled'] = enrollment['is_canceled'] == 'True'
    enrollment['is_udacity'] = enrollment['is_udacity'] == 'True'
    enrollment['join_date'] = parse_date(enrollment['join_date'])

enrollments[0]    
</code></pre>
<p>Here is the error I got:</p>
<pre><code>TypeError: strptime() argument 1 must be string, not datetime.datetime
</code></pre>
<p>Can anyone explain to me why? When I change <code>date</code> to <code>str(date)</code>, here is the error I got:</p>
<pre><code>//anaconda/lib/python2.7/_strptime.pyc in _strptime(data_string, format)
    333     if len(data_string) != found.end():
    334         raise ValueError("unconverted data remains: %s" %
--&gt; 335                           data_string[found.end():])
    336 
    337     year = None


ValueError: unconverted data remains:  00:00:00
</code></pre>
<p>The weird thing is, when I first ran the code, it works. But then I re-pressed the second time and it returned the error! Thanks very much!</p>
</div>
<div class="post-text" itemprop="text">
<p>I bet you ran this line twice in your shell/session:</p>
<pre><code>enrollment['cancel_date'] = parse_date(enrollment['cancel_date'])
</code></pre>
<p>The first time works, but now enrollment['cancel_date'] is a date, not a string. Second time you ran it - error.</p>
</div>
<span class="comment-copy">Initially you were getting the error because you were passing a datetime object as the str part of the strptime (as in take a <code>string</code> and parse it as a <code>time</code> object. Your string should also be in the same format as your format string. <code>dt.strptime("2016-10-4",'%Y-%m-%d')</code> will work where as <code>dt.strptime("16-10-4",'%Y-%m-%d')</code> will not. Look for examples online and review <a href="https://docs.python.org/3/library/datetime.html#module-datetime" rel="nofollow noreferrer">docs.python.org/3/library/datetime.html#module-datetime</a></span>
<span class="comment-copy">Remember to look at the documentation before posting your issues. You should print output when you encounter errors. The section of code causing issues you should at least know how it should work in a hello world scenario. Print output in your perfect hello world and then compare the arguments you are passing in your failing code. Most of the time the difference will stick out and tell you what you are doing wrong.</span>
<span class="comment-copy">Thank you! Now I understand why this code doesn't work second time, because this feature is run in iPython! I check the result and found out that data types in enrollments have been fixed. However, how can I return the data as original?</span>
<span class="comment-copy">make dict, results = {}, and put your return values in that instead</span>
