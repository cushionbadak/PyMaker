<div class="post-text" itemprop="text">
<pre><code>print('2**', n, ' + ', sep='', end='')
</code></pre>
<p>Hi the print statement above is in a loop so the output ends up being </p>
<pre><code>2 ** 10 + 2 ** 7 + 2 ** 6 + 2 ** 4 + 2 ** 1 +
</code></pre>
<p>I need to get rid of the last plus in the statement but have no idea how to go about doing so.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you separate the exponents, as you have probably done, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>str.join()</code></a>:</p>
<pre><code>&gt;&gt;&gt; exponents = (10, 7, 6, 4, 1)
&gt;&gt;&gt; print(' + '.join('2**{}'.format(n) for n in exponents))
2**10 + 2**7 + 2**6 + 2**4 + 2**1
</code></pre>
<p>That will work in both Python 2 &amp; 3. You can also use the <code>print()</code> function with the <code>sep</code> argument:</p>
<pre><code>&gt;&gt;&gt; print(*('2**{}'.format(n) for n in exponents), sep=' + ')
2**10 + 2**7 + 2**6 + 2**4 + 2**1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is pretty 'common' 'problem', and it is often solved by using ''.join method. I assume that you've a list of integers, so all you need to do is:</p>
<pre><code>powers = [10, 7, 6, 4]
print(' + '.join(['2 ** {n}'.format(n= n) for n in powers]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can store the string to be printed in a variable in the loop and then after the loop ends, remove the extra plus by slicing using <code>to_print[:len(to_print)-1]</code>
And then print to_print.
Here to_print is the text you need to store in the loop Instead of printing it and then print it at the end after slicing it as I showed above.</p>
</div>
<div class="post-text" itemprop="text">
<p>Either check if you're at the last element and use a different print statement (without the final <code>'+'</code>), or construct your output in a list first and join the list before printing.</p>
<pre><code>output = []
some_loop:
    output.append('2**%i' % n)

print(' + '.join(output))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do the following, and adapting it to your loop length</p>
<pre><code>n = 1
for i in range(0,10):
    if i &lt; 9:
        print('2**', n, ' + ', sep='', end = '')
    else:
        print('2**', n, sep='', end = '')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://www.tutorialspoint.com/python/string_join.htm" rel="nofollow">join()</a> helps a lot in this case:</p>
<pre><code>exponents = [10, 7, 6, 4, 1]
out = []
for n in exponents:
   out.append('2 ** %d' % n)
print ' + '.join(out)
</code></pre>
</div>
<span class="comment-copy">Preparing a string list containing all the elements and then call <code>' + '.join(elements)</code> on it will do the trick.</span>
<span class="comment-copy">For example <code>print(' + '.join(['2 ** %s' % n for n in somelist]))</code>. <code>.join</code> will only add its string between adjecent elements.</span>
<span class="comment-copy">No need for <code>str(n)</code> here - <code>str.format</code> will use <code>str</code> by default for its inputs....</span>
<span class="comment-copy">Right. My bad, edited.</span>
