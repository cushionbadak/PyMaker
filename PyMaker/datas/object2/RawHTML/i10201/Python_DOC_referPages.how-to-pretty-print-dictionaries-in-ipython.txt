<div class="post-text" itemprop="text">
<p>I'm currently using RethinkDB, which has a nice web UI with a Data Explorer which allows the user to print out the contents of the database like this:</p>
<p><a href="https://i.stack.imgur.com/bKKgU.png" rel="nofollow"><img alt="enter image description here" src="https://i.stack.imgur.com/bKKgU.png"/></a></p>
<p>Note that each key-value pair starts on a new line, and the keys and values (mostly) have different colors. By contrast, if I print out the same using iPython, I get an almost illegible result:</p>
<p><a href="https://i.stack.imgur.com/4jLcS.png" rel="nofollow"><img alt="enter image description here" src="https://i.stack.imgur.com/4jLcS.png"/></a></p>
<p>This is slightly ameliorated if I iterate over the cursor and <code>print</code> each item, like so:</p>
<p><a href="https://i.stack.imgur.com/VegvQ.png" rel="nofollow"><img alt="enter image description here" src="https://i.stack.imgur.com/VegvQ.png"/></a></p>
<p>However, this requires more typing and still doesn't look as good as the RethinkDB web UI. Is there perhaps an iPython plugin that I can install to improve the appearance of the printed output?</p>
<p>(I had a look at <a href="https://docs.python.org/2/library/pprint.html" rel="nofollow">pprint</a>, but this seems to control only the positioning of the text and not its color).</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow"><code>json.dumps()</code></a>:</p>
<pre><code>import json 

for row in r.db(....).run(conn):
    print(json.dumps(row, indent=4))
</code></pre>
<p>Although this does not display the keys in sorted order, as appears to be the case in the example, it might be sufficient for your needs. As pointed out by @coder, you <code>json.dumps()</code> can sort the keys by specifying the <code>sort_keys=True</code> parameter.</p>
<pre><code>for row in r.db(....).run(conn):
    print(json.dumps(row, indent=4, sort_keys=True))
</code></pre>
<p>It might also be possible to print the object directly (haven't tested this):</p>
<pre><code>print(json.dumps(r.db(....).run(conn), indent=4, sort_keys=True)
</code></pre>
<p>which might also print out the surrounding "list" object.</p>
<hr/>
<p>To handle objects that do not support serialisation to JSON you can use a custom <a href="https://docs.python.org/3/library/json.html#json.JSONEncoder" rel="nofollow"><code>JSONEncoder</code></a>. Here is an example which handles <code>datetime.datetime</code> objects:</p>
<pre><code>from datetime import datetime

class DateTimeAwareJSONEncoder(json.JSONEncoder):
    def default(self, obj):
        if isinstance(obj, datetime):
            tz = obj.tzname()
            return obj.ctime() + (' {}'.format(tz) if tz else '')
        return super(DateTimeAwareJSONEncoder, self).default(obj)

for row in r.db(....).run(conn):
    print(json.dumps(row, indent=4, sort_keys=True, cls=DateTimeAwareJSONEncoder))
</code></pre>
<p>You can use <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow"><code>datetime.strftime()</code></a> to format the date time string as required.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/users/21945/mhawke">mhawke</a>'s answer works if one adds the keyword argument <code>time_format="raw"</code> to RethinkDB's <code>run()</code> command. (Otherwise, you get a <code>TypeError</code> because RethinkDB's object containing the time zone is not JSON serializable). The result looks like this:</p>
<p><a href="https://i.stack.imgur.com/xFINb.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/xFINb.png"/></a></p>
<p>which is much more legible. A slight drawback is that the <code>epoch_time</code> is more difficult to interpret than the original time format.</p>
</div>
<span class="comment-copy">At your comment regarding PPrint: is indentation of pprint not sufficient? Removing the unicode of a string is also hard: <a href="http://stackoverflow.com/questions/761361/suppress-the-uprefix-indicating-unicode-in-python-strings" title="suppress the uprefix indicating unicode in python strings">stackoverflow.com/questions/761361/â€¦</a></span>
<span class="comment-copy">if needed you can sort the keys using <code>json.dumps</code> with the parameter <code>sort_keys=True</code> ...</span>
<span class="comment-copy">@coder: so you can. Thanks I'll update the answer.</span>
<span class="comment-copy">This does not work for dicts with non-JSON-serializable objects, e.g. <code>Decimal</code>.</span>
<span class="comment-copy">@ChrisAnderson: so write a custom JSON encoder for <code>Decimal</code> as I've shown for <code>datetime</code> objects.</span>
<span class="comment-copy">You can use a custom <code>JSONEncoder</code> to handle the <code>datetime</code> objects. See my updated answer.</span>
