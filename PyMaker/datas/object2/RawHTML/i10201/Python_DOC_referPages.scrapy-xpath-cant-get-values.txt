<div class="post-text" itemprop="text">
<p>I have a website and i would like to save two span element value.</p>
<p>This is the relevant part of my html code:</p>
<pre class="lang-html prettyprint-override"><code>&lt;div class="box-search-product-filter-row"&gt;

    &lt;span class="result-numbers" sth-bind="model.navigationSettings.showFilter"&gt;

    &lt;span class="number" sth-bind="span1"&gt;&lt;/span&gt;

    &lt;span class="result" sth-bind="span2"&gt;&lt;/span&gt;

    &lt;/span&gt;

&lt;/div&gt;
</code></pre>
<p>I create a spider:</p>
<pre><code>from scrapy.spiders import Spider
from scrapy.selector import Selector

class MySpdier(Spider):

    name = "list"
    allowed_domains = ["example.com"]
    start_urls = [
        "https://www.example.com"]

    def parse(self, response):
        sel = Selector(response)
        divs = sel.xpath("//div[@class='box-search-product-filter-row']")


        for div in divs:
            sth = div.xpath("/span[class='result']/text()").extract()

            print sth
</code></pre>
<p>When I crawl the spider, it prints only this:</p>
<p><code>[]</code></p>
<p>Can anybody help me how can I get the values from my two (class number, and class result) span element?</p>
</div>
<div class="post-text" itemprop="text">
<p>You forgot <code>@</code> in your xpath <code>"/span[class='result']/text()"</code>. Furthermore the span you are looking for is not a 1st level child so you need to use <code>.//</code> instead of <code>/</code>. See:
<a href="https://i.stack.imgur.com/xPxff.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/xPxff.png"/></a>
Source: <a href="http://www.w3schools.com/xsl/xpath_syntax.asp" rel="nofollow noreferrer">http://www.w3schools.com/xsl/xpath_syntax.asp</a></p>
<p>Complete and correct xpath would be: <code>".//span[@class='result']"</code> + '/text()' if you want to select only the text, but the nodes in your example have no text so it wouldn't work here.</p>
</div>
<div class="post-text" itemprop="text">
<p>This will work for you    </p>
<p><strong>EDIT:</strong></p>
<pre><code>from scrapy.spiders import Spider
from scrapy.selector import Selector

class MySpdier(Spider):

    name = "list"
    allowed_domains = ["example.com"]
    start_urls = [
        "https://www.example.com"]

    def parse(self, response):
        sel = Selector(response)
        divs = sel.xpath("//div[@class='box-search-product-filter-row']")    

        for div in divs:
            sth = div.xpath(".//span[@class='result']/text()").extract()    
            print sth
</code></pre>
</div>
<span class="comment-copy">sth = div.xpath(".//span[@class='result']/text()").extract() it's works.. :) thank you.. but as you mentioned, my span is empty.. there is dynamically generated text in it.. :( is this possible to get that?</span>
<span class="comment-copy">this is what it's printing now : [u'&lt;span class="result" sth-bind-bind="count"&gt;&lt;/span&gt;']</span>
<span class="comment-copy">Depends on what you mean by "dynamically generated", if it's in the html body your requests has then sure, if it's generated by javascript then you need to figure out how javascript does that and recreate it in your spider. Would be useful if you could provide the website you are crawling.</span>
<span class="comment-copy">I can't show you the website because it's and intranet page. If i check the source of the rendeder page there is a javascript varriable: var count= 85; and i think [u'&lt;span class="result" sth-bind="count"&gt;&lt;/span&gt;'] my span use this varriable.. so definitely i think i have to get this js varriable value.. is it possible? :)</span>
<span class="comment-copy">of course, try <code>import re; count = re.findall('var count.+?(\d+)',response.body)[0]</code>. This is called regular expressions which is a huge topic by itself so it's a bit out of scope of this question. Related python docs page: <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a></span>
<span class="comment-copy">sth = div.xpath(".//span[@class='result']/text()").extract() it's works.. :)</span>
