<div class="post-text" itemprop="text">
<p>I'm new to python.
I know how to detect which os is installed but I'm trying to find a quick way to get the windows path rather then go a-z (c:\windows...x:\windows...).
Is there any quick way?</p>
<p>Edit:
Something like %systemroot% in windows (gives you full path).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/os.html#os.environ" rel="nofollow"><code>os.environ</code></a></p>
<pre><code>import os
win_path = os.environ['WINDIR']
</code></pre>
<p><code>WINDIR</code> is an environment variable set by windows that will point to <code>%SystemRoot%</code></p>
</div>
<span class="comment-copy">Does <code>import os; os.getcwd()</code> give you what you want?</span>
<span class="comment-copy">I edited my question.</span>
<span class="comment-copy">And that <code>%variable%</code> notation is how you read envirnonment variables in DOS command parser; turns out environment variables WINDIR and SYSTEMROOT hold the same value.</span>
<span class="comment-copy">Correct. Just to be clear the variable will be evaluated by the <code>os.environ</code> call so it will return something like <code>C:\\Windows</code>, not a variable in the form <code>%SystemRoot%</code>.</span>
<span class="comment-copy"><code>SystemRoot</code> is more reliable than <code>windir</code>, since many programs won't even run if it's not valid. It gets set by the session manager early in the boot process, whereas <code>windir</code> is contingent on a registry setting. It's better still to use the API for this: <code>import ctypes;</code> <code>kernel32 = ctypes.WinDLL('kernel32');</code> <code>n = kernel32.GetWindowsDirectoryW(None, 0);</code> <code>buf = (ctypes.c_wchar * n)();</code> <code>kernel32.GetWindowsDirectoryW(buf, n);</code> <code>windir = buf.value</code>.</span>
