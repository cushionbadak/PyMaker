<div class="post-text" itemprop="text">
<pre><code>class Person:
  def __init__(self, name):
    self.name = name

  def greet(name, other_name):
    return "Hi {0}, my name is {1}".format(other_name, name)
</code></pre>
<p>Why doesn't this work? I am trying to access my name in the class and say hi my name is [myname] [yourname]</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to pass <code>self</code> to the method </p>
<p><a href="https://stackoverflow.com/questions/68282/why-do-you-need-explicitly-have-the-self-argument-into-a-python-method">Why do you need explicitly have the "self" argument into a Python method?</a></p>
<p>so </p>
<pre><code> def greet(self, name, other_name):
    return "Hi {0}, my name is {1}".format(other_name, name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your actual problem is that you are defining your instance method <code>greet</code> as:</p>
<pre><code>def greet(name, other_name):
</code></pre>
<p>Instance methods in Python take the <code>instance</code> as first argument in your method definitions. What you are doing here now, is calling that instance <code>name</code>. However, in your class's <code>__init__</code>, you are using <code>self</code> to refer to your instance object. This is where your main problem is coming up. </p>
<p>So, when you actually try to call your method, you are most likely getting something like this: </p>
<pre><code>Hi bob, my name is &lt;__main__.Person object at 0x1018ff2b0&gt;
</code></pre>
<p>So, you are actually printing out your instance object of your <code>Person</code> class. Again, you named this <code>name</code>. It's like printing out <code>self</code>. </p>
<p>There are two things you need to correct here. The first, you need to properly define your instance <code>greet</code> method keeping your instance object name consistent.</p>
<pre><code>def greet(self, other_name):
</code></pre>
<p>Then, you need to refer to your instance attributes referring to your instance and accessing the attributes from that object: </p>
<p>So, you want to access <code>name</code> in your <code>greet</code> method, it has to be as <code>self.name</code>.</p>
<p>So:</p>
<pre><code>"Hi {0}, my name is {1}".format(other_name, self.name)
</code></pre>
<p>To have a better grasp on all this, you should read more on how classes work in Python. Here is the tutorial section on it:</p>
<p><a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow">https://docs.python.org/3/tutorial/classes.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>use <code>self.name</code> instead of <code>name</code>:</p>
<pre><code>def greet(other_name):
    return "Hi {0}, my name is {1}".format(other_name, self.name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are two possibilities:</p>
<p>1) You want <code>greet()</code> method to be an instance method, then you lack the <code>self</code> parameter:</p>
<pre><code>def greet(self, other_name):
    return "Hi {0}, my name is {1}".format(other_name, self.name),
</code></pre>
<p>Then you can invoke it like this:</p>
<pre><code>adam = Person("Adam")
adam.greet("John")
</code></pre>
<p>2) You want it to be a static method:</p>
<pre><code>@staticmethod
def greet(name, other_name):
    return "Hi {0}, my name is {1}".format(other_name, name)
</code></pre>
<p>Then you can invoke it like this:</p>
<pre><code>Person.greet("Adam", "John")
</code></pre>
</div>
<span class="comment-copy">What exactly does not work? Provide us a sample usage</span>
<span class="comment-copy">Asking <i>Why doesn't this work</i> is not very helpful to the reader. You need to explain what does not work exactly. What you expect should happen, that isn't.</span>
<span class="comment-copy">This is strange. Why would this be the accepted solution, when <code>self.name</code> is defined in the <code>init</code> and then passing it as an argument to the  <code>greet</code> method. This doesn't make much sense.</span>
