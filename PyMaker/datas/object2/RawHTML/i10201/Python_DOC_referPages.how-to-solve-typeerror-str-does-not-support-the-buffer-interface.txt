<div class="post-text" itemprop="text">
<p>My code:</p>
<pre><code>big_int = 536870912
f = open('sample.txt', 'wb')

for item in range(0, 10):
   y = bytearray.fromhex('{:0192x}'.format(big_int))
   f.write("%s" %y)
f.close()
</code></pre>
<p>I want to convert a long int to bytes. But I am getting <code>TypeError: 'str' does not support the buffer interface</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, strings are implicitly Unicode and are therefore detached from a specific binary representation (which depends on the encoding that is used).  Therefore, the string <code>"%s" % y</code> cannot be written to a file that is opened in binary mode.</p>
<p>Instead, you can just write <code>y</code> directly to the file:</p>
<pre><code>y = bytearray.fromhex('{:0192x}'.format(big_int))
f.write(y)
</code></pre>
<p>Moreover, your code (<code>"%s" % y</code>) in fact creates a Unicode string containing the <em>string representation</em> of <code>y</code> (i.e., <code>str(y)</code>), which isn't what you think it is.  For example:</p>
<pre><code>&gt;&gt;&gt; '%s' % bytearray()
"bytearray(b'')"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In addition to @Will answer, it is better to use <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow"><code>with</code></a> statement in to open your files. Also, if you using python 3.2 and later, you can use <a href="https://docs.python.org/3/library/stdtypes.html#int.to_bytes" rel="nofollow"><code>int.to_bytes</code></a> or <a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="nofollow"><code>int.from_bytes</code></a> to reverse the process.</p>
<p>Sample of what I said:</p>
<pre><code>big_int=536870912

with open('sample.txt', 'wb') as f:
    y = big_int.to_bytes((big_int.bit_length() // 8) + 1, byteorder='big')
    f.write(y)
    print(int.from_bytes(y, byteorder='big'))
</code></pre>
<p>The last <code>print</code> is to show you how to reverse it.</p>
</div>
<span class="comment-copy">just try doing <code>f.write(y)</code></span>
<span class="comment-copy">thank you, it worked</span>
<span class="comment-copy">Just to add: the reason why <code>with</code> is "better" is because it automatically closes the file when the scope is ended, even when an exception is raised in the middle.</span>
