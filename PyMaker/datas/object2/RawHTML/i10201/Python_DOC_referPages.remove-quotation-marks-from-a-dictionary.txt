<div class="post-text" itemprop="text">
<p>I have a dictionary of bigrams, obtained by importing a csv and transforming it to a dictionary:</p>
<pre><code>bigram_dict = {"('key1', 'key2')": 'meaning', "('key22', 'key13')": 'mean2'}
</code></pre>
<p>I want keys' dictionary to be without quotation marks, i.e.:</p>
<pre><code>desired_bigram_dict={('key1', 'key2'): 'meaning', ('key22', 'key13'): 'mean2'}
</code></pre>
<p>Would you please suggest me how to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done using a dictionary comprehension, where you call <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="noreferrer">literal_eval</a> on the key:</p>
<pre><code>from ast import literal_eval
bigram_dict = {"('key1', 'key2')": 'meaning', "('key22', 'key13')": 'mean2'}

res = {literal_eval(k): v for k,v in bigram_dict.items()}
</code></pre>
<p>Result:</p>
<pre><code>{('key22', 'key13'): 'mean2', ('key1', 'key2'): 'meaning'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow"><em>literal_eval</em></a> each key and reassign:</p>
<pre><code>from ast import literal_eval

bigram_dict = {"('key1', 'key2')": 'meaning', "('key22', 'key13')": 'mean2'}


for k,v in bigram_dict.items():
    bigram_dict[literal_eval(k)] = v
</code></pre>
<p>Or to create a new dict, just use the same logic with a <em>dict comprehension</em>:</p>
<pre><code>{literal_eval(k):v for k,v in bigram_dict.items()}
</code></pre>
<p>Both will give you:</p>
<pre><code>{('key1', 'key2'): 'meaning', ('key22', 'key13'): 'mean2'}
</code></pre>
</div>
<span class="comment-copy">You need to parse the string as a tuple.</span>
<span class="comment-copy">Related post <a href="http://stackoverflow.com/questions/1894269/convert-string-representation-of-list-to-list-in-python" title="convert string representation of list to list in python">stackoverflow.com/questions/1894269/â€¦</a></span>
