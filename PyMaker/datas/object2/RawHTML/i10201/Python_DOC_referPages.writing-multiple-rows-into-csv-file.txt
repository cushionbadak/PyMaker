<div class="post-text" itemprop="text">
<p>I'm trying to write multiple rows in to a CSV file using python and I've been working on this code for a while to piece together how to do this. My goal here is simply to use the oxford dictionary website, and web-scrape the year and words created for each year into a csv file. I want each row to start with the year I'm searching for and then list all the words across horizontally. Then, I want to be able to repeat this for multiple years.</p>
<p>Here's my code so far:</p>
<pre><code>import requests
import re 
import urllib2
import os
import csv

year_search = 1550
subject_search = ['Law'] 

path = '/Applications/Python 3.5/Economic'
opener = urllib2.build_opener(urllib2.HTTPCookieProcessor())
urllib2.install_opener(opener)

user_agent = 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'
header = {'User-Agent':user_agent}
request = urllib2.Request('http://www.oed.com/', None, header)
f = opener.open(request)  
data = f.read()
f.close()
print 'database first access was successful'

resultPath = os.path.join(path, 'OED_table.csv')
htmlPath = os.path.join(path, 'OED.html')
outputw = open(resultPath, 'w')
outputh = open(htmlPath, 'w')
request = urllib2.Request('http://www.oed.com/search?browseType=sortAlpha&amp;case-insensitive=true&amp;dateFilter='+str(year_search)+'&amp;nearDistance=1&amp;ordered=false&amp;page=1&amp;pageSize=100&amp;scope=ENTRY&amp;sort=entry&amp;subjectClass='+str(subject_search)+'&amp;type=dictionarysearch', None, header)
page = opener.open(request)
urlpage = page.read()
outputh.write(urlpage)
new_word = re.findall(r'&lt;span class=\"hwSect\"&gt;&lt;span class=\"hw\"&gt;(.*?)&lt;/span&gt;', urlpage)
print str(new_word)
outputw.write(str(new_word))
page.close()
outputw.close()
</code></pre>
<p>This outputs my string of words that were identified for the year 1550. Then I tried to make code write to a csv file on my computer, which it does, but I want to do two things that I'm messing up here:</p>
<ol>
<li>I want to be able to insert multiple rows into this
and </li>
<li>I want to have the year show up in the first spot</li>
</ol>
<p>Next part of my code:</p>
<pre><code>with open('OED_table.csv', 'w') as csvfile:
    fieldnames = ['year_search']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    writer.writeheader()
    writer.writerow({'year_search': new_word})
</code></pre>
<p>I was using the <code>csv</code> module's <a href="https://docs.python.org/3/library/csv.html" rel="nofollow">online documentation</a> as a reference for the second part of the code. </p>
<p>And just to clarify, I included the first part of the code in order to give perspective.</p>
</div>
<div class="post-text" itemprop="text">
<p>You really shouldn't parse html with a regex. That said, here's how to modify your code to produce a csv file of all the words found. </p>
<p>Note: for unknown reasons the list of result word varies in length from one execution to the next.</p>
<pre><code>import csv
import os
import re
import requests
import urllib2

year_search = 1550
subject_search = ['Law']

path = '/Applications/Python 3.5/Economic'
opener = urllib2.build_opener(urllib2.HTTPCookieProcessor())
urllib2.install_opener(opener)

user_agent = 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'
header = {'User-Agent':user_agent}

# commented out because not used
#request = urllib2.Request('http://www.oed.com/', None, header)
#f = opener.open(request)
#data = f.read()
#f.close()
#print 'database first access was successful'

resultPath = os.path.join(path, 'OED_table.csv')
htmlPath = os.path.join(path, 'OED.html')
request = urllib2.Request(
    'http://www.oed.com/search?browseType=sortAlpha&amp;case-insensitive=true&amp;dateFilter='
    + str(year_search)
    + '&amp;nearDistance=1&amp;ordered=false&amp;page=1&amp;pageSize=100&amp;scope=ENTRY&amp;sort=entry&amp;subjectClass='
    + str(subject_search)
    + '&amp;type=dictionarysearch', None, header)
page = opener.open(request)

with open(resultPath, 'wb') as outputw, open(htmlPath, 'w') as outputh:
    urlpage = page.read()
    outputh.write(urlpage)

    new_words = re.findall(
        r'&lt;span class=\"hwSect\"&gt;&lt;span class=\"hw\"&gt;(.*?)&lt;/span&gt;', urlpage)
    print new_words
    csv_writer = csv.writer(outputw)
    for word in new_words:
        csv_writer.writerow([year_search, word])
</code></pre>
<p>Here's the contents of the <code>OED_table.csv</code> file when it works:</p>
<pre class="lang-none prettyprint-override"><code>1550,above bounden
1550,accomplice
1550,baton
1550,civilist
1550,garnishment
1550,heredity
1550,maritime
1550,municipal
1550,nil
1550,nuncupate
1550,perjuriously
1550,rank
1550,semi-
1550,torture
1550,unplace
</code></pre>
</div>
<span class="comment-copy">Ok, I've probably spent more time on this than I should to try understand where the dictionary was coming from (a Python dictionary, not OED) and what needed to be written. As far as I can tell, your expected output is just a list of <code>1550 | accomplice</code> as a row i.e. just a year in column A and a word in column B, for every word in 1550?</span>
<span class="comment-copy">And do you want to do this for all years in a range? If I understand your request properly, it would be easier to build that into an answer. A lot of your code is unnecessary and you're <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454">using regex to parse html</a>. However, it appears to work in this case, so I'll formulate an answer now trying to use your approach</span>
<span class="comment-copy">You should probably use the <a href="https://docs.python.org/2/library/csv.html#module-csv" rel="nofollow noreferrer">Python 2 documentation</a> for the <code>csv</code> module as a reference.</span>
<span class="comment-copy">@roganjosh: No you're not crazy. I, too, was getting multiple results for a while but now only one, <code>['leggiero']</code>.</span>
<span class="comment-copy">@martineau thanks for the confirmation, I've spent ages debugging thinking I did something silly. OP: I don't think this is possible without an account, they appear to require a login after so many requests from the same IP</span>
<span class="comment-copy">"leggiero" appears to be the word of the day. If you load the url in a browser, you're met with a login screen. While I don't doubt this is a decent approach written by you, I think OP will hit a roadblock after just a few requests. I don't think they allow scraping at all.</span>
<span class="comment-copy">@roganjosh: All part of the reason I started my answer with a caveat.</span>
<span class="comment-copy">True, the only reason I commented is because we both get the same word and OP needs to abandon this approach unless there is a login mechanism that is accessible (I didn't check to see if it was a paid subscription). We both ended up pulling a word from the login screen. Upvote anyway since you technically answer the question about writing to csv :)</span>
<span class="comment-copy">@roganjosh: Thanks. If nothing else, the OP can see how to write multiple rows into a cvs file, regardless of the source of the data for them. I too was wondering how it was possible to do queries like this without some sort of oed account and related authorization.</span>
<span class="comment-copy">Kainesplain: You could write them all as one row (without the year) by removing the <code>for word in new_words:</code> and making a single call to <code>csv_writer.writerow(new_words)</code>. You might need to make it conditional by using <code>if new_words: csv_writer.writerow(new_words)</code>. If you want to add the year at the beginning, use <code>csv_writer.writerow([year_search] + new_words)</code>.</span>
