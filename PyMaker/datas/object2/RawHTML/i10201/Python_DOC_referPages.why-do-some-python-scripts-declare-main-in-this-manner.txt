<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/419163/what-does-if-name-main-do">What does if __name__ == “__main__”: do?</a>
<span class="question-originals-answer-count">
                    27 answers
                </span>
</li>
</ul>
</div>
<p>In some python scripts, I see this format;</p>
<pre><code>def main():
    #run code

if __name__ == "__main__":
    main()  
</code></pre>
<p>In other python scripts, the line <code>if __name__ == "__main__":</code> is not present but the code runs normally. Why have this extra redundant line when the code can run normally even without it? What is the advantage of using <code>if __name__ == "__main__":</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>This line allows you to make some functionality run by default only when you run the script as the main script (e.g. <code>python my_script.py</code>).</p>
<p>This is useful when the script may be used either as a main program or to be imported in another python module, or python shell. In the latter case you would almost certainly not want main (or other module functionality) to run on import, which is what happens by default when the interpreter loads a script.</p>
<p>If you'll never import this script in other code, or in a python shell then you don't need this line. However, it's good to design your code to be modular &amp; import friendly; even what may appear as throw away scripts (e.g. plotting some numbers, parsing some logs etc.) may be useful in a larger context. Particularly in an interactive shell session, e.g. using  <code>ipython</code>. And the cost is small: encapsulate statements in functions and add <code>ifmain</code>.  </p>
</div>
<div class="post-text" itemprop="text">
<p>That is usefull when you are making a module or in general if you intend to import your scipt when running an other script. <code>__name__ == "__main__"</code> is true only when that script is the <em>main</em> script that is executed , so it avoids running subsequent code when it is ran at an import statement.</p>
</div>
<span class="comment-copy">When I googled the line, <a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer">this was the first result</a>. <a href="http://stackoverflow.com/questions/419163/what-does-if-name-main-do">This was the second</a>. Please try to research a question on your own before asking it here.</span>
<span class="comment-copy">@juanpa.arrivillaga. I did google but I cannot understand what I read. The direct answers that just appeared on this question are easier to understand, thanks to SO community.</span>
<span class="comment-copy"><i>This was already answered on SO</i>. Please do not post duplicate questions if you know they are duplicates.</span>
<span class="comment-copy">Sounds like this line is necessary only for code that will be imported. Correct?</span>
<span class="comment-copy">@user91579631 yep, though in my personal experience, it's always good to design your code to be modular &amp; import friendly, even what may appear as throw away scripts (e.g. plotting some numbers, parsing some logs etc.) may be useful in a larger context</span>
<span class="comment-copy">Thanks. Seems like it is good practice to always use <code>if __name__ == "__main__":</code></span>
