<div class="post-text" itemprop="text">
<p>I checked the Python style guide, and I found no specific references to having instance variable names with reserved words e.g. <code>self.type</code>, <code>self.class</code>, etc.</p>
<p>What's the best practice for this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Avoid it if possible.</p>
<p>You can get and set such attributes via <code>getattr</code> and <code>setattr</code>, but they can't be accessed with ordinary dot syntax (something like <code>obj.class</code> is a syntax error), so they're a pain to use.</p>
<p>As Aurora0001 mentioned in a comment, a convention if you "need" to use them is to append an underscore.  The most common reason to "need" to have such attributes is that they're generated programatically from an external data source.</p>
<p>(Note that <code>type</code> is not a keyword, so you can do <code>self.type</code> just fine.)</p>
</div>
<span class="comment-copy">The discussion in the comments of <a href="http://stackoverflow.com/questions/9746838/why-cant-attribute-names-be-python-keywords">Why can't attribute names be Python keywords?</a> suggests that you should <a href="http://stackoverflow.com/questions/9746838/why-cant-attribute-names-be-python-keywords#comment12398462_9746838">append an underscore</a>.</span>
<span class="comment-copy"><code>class</code> is a keyword. You cannot use it. <code>type</code> is not a keyword, so you can. <code>self.type = something</code> is actually not even a problem, but a variable <code>type = x</code> is a bigger probem because it hides the built-in <code>type</code></span>
<span class="comment-copy">I see. Thanks a lot!</span>
<span class="comment-copy">BTW, here's the list of all keywords: <a href="https://docs.python.org/3/reference/lexical_analysis.html#keywords" rel="nofollow noreferrer">docs.python.org/3/reference/lexical_analysis.html#keywords</a></span>
