<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/493386/how-to-print-without-newline-or-space">How to print without newline or space?</a>
<span class="question-originals-answer-count">
                    26 answers
                </span>
</li>
</ul>
</div>
<p>I have code like this:</p>
<pre><code>def reverse(text):
    l=len(text)
    while ((l-1)!=0):
        print (str(text[l-1]))

        l=l-1
    print (str(text[0]))   

a=reverse("abc!de@fg")
</code></pre>
<p>The output is:</p>
<pre><code>g
f
@
e
d
!
c
b
a
</code></pre>
<p>but I want to combine these individual characters and want out put like this:</p>
<pre><code>gf@ed!cba 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def reverse(text):
    if len(text) &lt;= 1:
        return text
    return reverse(text[1:]) + text[0]
print (reverse('abc!de@fg'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To print without the newline at the end of each line do:</p>
<pre><code>print('text', end='')
</code></pre>
<p>To take a list of characters and make them one string, do:</p>
<pre><code>''.join(list_of_characters)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way to reverse a string:</p>
<pre><code>In [1]: a = "abc!de@fg"

In [2]: print(a[::-1])
gf@ed!cba
</code></pre>
<p>The python <code>print</code> statement adds a newline by default. An easy way to print without newlines is </p>
<pre><code>sys.stdout.write('some text')
# or
print('some text', end='')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You will need to concatenate them and then print the string result.</p>
<p>This is because the function <code>print</code> automatically does a break line.</p>
<p>A fix would be:</p>
<pre><code>def reverse(text):
       l = len(text)
       aux = ''

       while l-1 != 0:
           aux += str(text[l-1])
           l = l - 1

       print (aux)   
       a = reverse("abc!de@fg")`
</code></pre>
<p>P.S: Try to avoid redundant parenthesis =)</p>
</div>
<div class="post-text" itemprop="text">
<p>Hey try to put the print value in variable and print that at the end. Like this.</p>
<pre><code>def reverse(text):
    l=len(text)
    output = ""
    while ((l-1)!=0):
        output += (str(text[l-1]))

        l=l-1
    output +=(str(text[0]))

    print output
a=reverse("abc!de@fg")
</code></pre>
<p>Hope this helps</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, the simplest way to reverse a <a href="https://docs.python.org/3/library/stdtypes.html#immutable-sequence-types" rel="nofollow"><code>Sequence</code></a> is with a slice:</p>
<pre><code>&gt;&gt;&gt; string="abc!de@fg"
&gt;&gt;&gt; print(string[::-1])
gf@ed!cba
</code></pre>
<p>Slicing will give you a copy of the sequence in reverse order.</p>
<p>In general, you want a function to do one thing. Returning a value and printing some output are separate concerns, so they should not be conflated in the same function. If you have a function that returns a reversed string, you can simply print the function:</p>
<pre><code>print(reverse("abc"))
</code></pre>
<p>Then, you can see that your actual algorithm is fine, if not entirely Pythonic:</p>
<pre><code>def reverse(text):
    l=len(text)
    output = ""
    while ((l-1)!=0):
        output += (str(text[l-1]))
        l=l-1
    output +=(str(text[0]))
    return output
</code></pre>
<p>You can clearly see now that it's the print function in your way.</p>
</div>
<span class="comment-copy">It is easier to simply <code>return text[::-1]</code> as your <code>reverse</code> function, unless this is a homework assignment or something</span>
<span class="comment-copy">A function which is designed to <code>return</code> something typically wouldn't contain <code>print</code> statements. Return a string. Let the user of the function decide if they want to print the return value.</span>
<span class="comment-copy">you need to concatenate each character.</span>
<span class="comment-copy">additional to @Wrong answer, If there is no return , just call it out and no assignment is needed</span>
