<div class="post-text" itemprop="text">
<p>These days I am learning SQLAlchemy. When I want to load an object from json and save it to MySQL, things get difficult because the fields in my model are more that 20 and I wonder whether there're better ways to do this.</p>
<p>My original code follows as an example:</p>
<pre><code>class User(Base):
    __tablename__ = 'parent'
    id = Column(Integer, primary_key=True)
    name = Column(String)

json_str = """{"id": 1, "name": "yetship"}"""
obj = json.loads(json_str)
user = User(id=obj.get("id"), name=obj.get("name"))
</code></pre>
<p>It can work but as I add more fields, it gets awful.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have in your json file only fields that you can initialize your <code>User</code> from. Then you simply can do.</p>
<pre><code>user = User(**obj)
</code></pre>
<p><code>**obj</code> will unpack your <code>dict</code> object, so if have <code>obj = {'id': 1, 'name': 'Awesome'}</code>, <code>User(**obj)</code> will do like <code>User(id=1, name='Awesome')</code></p>
<p>You can see <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">the docs</a></p>
<p>NOTE: it's better to avoid using <code>id</code> as a variable|field, because <code>'id' in dir(__builtin__)</code>, so <code>id</code> in bultins</p>
<p><strong>UPD</strong></p>
<p>If you have in your json fields that don't belong to that model you can filter them out with dict comprehension</p>
<pre><code>user = User(**{k:v for k, v in obj.items() if k in {'id', 'name'}})
</code></pre>
<p><strong>UPD for UPD</strong></p>
<p>It depends on the size of you <code>obj</code>, in most of the cases it's probably better (<em>performance and clarity</em>) to iterate over <code>('id', 'name')</code> rather than <code>obj.items()</code>:</p>
<pre><code>user = User(**{k: obj[k] for k in ('id', 'name') if k in obj})
</code></pre>
</div>
<span class="comment-copy">Why not use a database that natively supports json documents?</span>
<span class="comment-copy">it's only a dump and load feature, no need for this and use nosql dbs...</span>
<span class="comment-copy">i make a silly here and ask a bad question, thanks for you remind..</span>
