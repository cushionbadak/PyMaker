<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15479928/why-is-the-order-in-dictionaries-and-sets-arbitrary">Why is the order in dictionaries and sets arbitrary?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I found out something weird and I was wondering if it was a known thing. 
This is my code: -Python 3.5.2-</p>
<pre><code>numbers = [9,4,6,7,1]
setlist = set()
for item in numbers:
    setlist.add(item)
print(setlist)
numbers = [9,4,6,7,1,5]
setlist = set()
for item in numbers:
    setlist.add(item)
print(setlist)
</code></pre>
<p>And this is my output (it never changes):</p>
<p><code>{9, 4, 1, 6, 7}
{1, 4, 5, 6, 7, 9}
Process finished with exit code 0</code></p>
<p>If you run it you will see that the first output isn't in order but the second one is. It seems to only gets in order for some reason if the set has more then 5 objects. Wiki.python.com also says that sets dont get sorted at al. This all is really weird to me so i hoped i could get some more explanation.</p>
</div>
<div class="post-text" itemprop="text">
<p>sets are unordered collections by design. If you want a collection of items that retain order, consider using a list, instead. Lists have <code>insert</code> and <code>append</code> methods available to you.</p>
<pre><code>my_list = []
for item in some_iterable:
    my_list.append(item)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>It seems to only gets in order for some reason if the set has more then 5 objects</p>
</blockquote>
<p>There is nothing to really explain, it is <strong>a random observation</strong>. Append more stuff, and it will not be sorted</p>
<pre><code>numbers = [9,4,6,7,1,"a"]
print(set(numbers)) # sorted
print(set(numbers + [-1])) # not anymore
</code></pre>
<p>There is also nothing magical about 5, try out</p>
<pre><code>print(set([1, 2, -2])) # not sorted either
</code></pre>
<p>When documentation says that something <strong>is not</strong> sorted/ordered (or that the ordering is not guaranteed), this does not mean "for every single input, items will not ever be sorted" but rather "you cannot rely on things being sorted here, it is a completely random thing".</p>
</div>
<span class="comment-copy">Because <code>set</code> is unordered. "A set is an unordered collection with no duplicate elements." from <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">docs</a></span>
