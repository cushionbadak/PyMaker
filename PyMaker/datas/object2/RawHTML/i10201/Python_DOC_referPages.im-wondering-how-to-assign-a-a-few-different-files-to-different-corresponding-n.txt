<div class="post-text" itemprop="text">
<p>I'm wondering how a assign the file to just one of the numbers in the list, and if they make another file it will assign it to the next corresponding number.</p>
<pre><code>number = [1, 2, 3, 4, 5]

while True:
    with open(number, "w") as w:
        number.write(input(""))
    user_answer = input("1 to start another file, 2 to save and exit. -")
    if user_answer == ("1"):
        True
    elif user_answer == ("2"):
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's take your program line by line.</p>
<pre><code>number = [1, 2, 3, 4, 5]
</code></pre>
<p>The only problem here is that <code>number</code> is not quite the right name for your variable.</p>
<p><code>[1, 2, 3, 4, 5]</code> isn't a single number, but a list of five numbers. Choosing good names for variables is an important (and sometimes tricky) skill for a programmer, because if your names are confusing, well, you'll get confused. Let's call it <code>number_list</code> instead.</p>
<pre><code>number_list = [1, 2, 3, 4, 5]
</code></pre>
<p>Ok, what's next?</p>
<pre><code>while True:
</code></pre>
<p>This is the standard way to repeat forever (or until told to stop) in Python. I think what you really want to do is go through each of the numbers in <code>number_list</code> in turn, though, and for that, we use a <code>for</code> loop:</p>
<pre><code>for number in number_list:
</code></pre>
<p>On the next line you're trying to open the file for writing:</p>
<pre><code>    with open(number, "w") as w:
</code></pre>
<p>There's a problem here though, because <code>number</code> is an <a href="https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex" rel="nofollow">integer</a>, and filenames have to be <a href="https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str" rel="nofollow">strings</a>. We can fix that by converting <code>number</code> to a string using <code>str()</code>.</p>
<p>Also, <code>w</code> is a slightly confusing name for your file variable, because it's similar to the <code>"w"</code> you used to say that you're writing to the file â€“ traditionally files are called <code>f</code> when we open them like this.</p>
<p>Let's make both those changes:</p>
<pre><code>    with open(str(number), "w") as f:
</code></pre>
<p>Next line:</p>
<pre><code>        number.write(input(""))
</code></pre>
<p>The problem here is that you're trying to write to your integer <code>number</code>, when you really want to write to the file you just opened, <code>f</code>. That's an easy fix though:</p>
<pre><code>        f.write(input(""))
</code></pre>
<p>Your next two lines are perfect:</p>
<pre><code>    user_answer = input("1 to start another file, 2 to save and exit. -")
    if user_answer == ("1"):
</code></pre>
<p>... but the one after isn't quite right:</p>
<pre><code>        True
</code></pre>
<p>The way we actually tell Python to go back to the top of the loop with the next value is like this:</p>
<pre><code>        continue
</code></pre>
<p>Your last two lines are also perfect:</p>
<pre><code>    elif user_answer == ("2"):
        break
</code></pre>
<p>Putting the changes together, we get:</p>
<pre><code>number_list = [1, 2, 3, 4, 5]

for number in number_list:
    with open(str(number), "w") as f:
        f.write(input(""))
    user_answer = input("1 to start another file, 2 to save and exit. -")
    if user_answer == ("1"):
        continue
    elif user_answer == ("2"):
        break
</code></pre>
<p>Quick question though: what happens if the user doesn't enter either '1' or '2'? Something to think about ...</p>
</div>
<div class="post-text" itemprop="text">
<pre><code># An integer denoting the name of the file to be generated.
# The name of the first file generated would be "1" (excluding the extension format)
i = 0
while True:
    # Create the path of the file to be generated
    file_path = str(i) + ".txt"
    with open(file_path, "w") as my_file_handle:
        print("Writing in file - '" + file_path + "'")
        my_file_handle.write(input(""))
    user_answer = input("1 to start another file, 2 to save and exit. - ")
    if user_answer == ("1"):
        # Increment the filename.
        i += 1
    elif user_answer == ("2"):
        break
</code></pre>
</div>
<span class="comment-copy">Thank you this is really helpful!</span>
<span class="comment-copy">It looks like Colton is a beginner, so some explanation of this code would be helpful. Also, it's standard to use <code>underscore_separated</code> variable names in Python, not <code>camelCase</code> ... and since files are being opened using the <code>with</code> construct, your <code>myFileHandle.close()</code> line is unnecessary.</span>
<span class="comment-copy">Thanks! Done those edits. Also, added a few comments.</span>
<span class="comment-copy">Thank you and yes i'm a beginner if been programming for only a few months now, but i do get what the code above does and it would come in handy if i wanted the user to assign a file name.</span>
