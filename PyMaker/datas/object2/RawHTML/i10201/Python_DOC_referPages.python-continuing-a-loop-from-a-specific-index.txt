<div class="post-text" itemprop="text">
<p>I wrote some code that uses enumerate to loop through a list.</p>
<pre><code>for index, item in enumerate(list[start_idx:end_idx])
     print('index [%d] item [%s]'%(str(index), item))
</code></pre>
<p>the item in the list are just strings. Sometimes I do not want to enumerate for the whole list, sometimes I'll slice up the list do do different things.</p>
<p>The part that I am having trouble with is python's enumerate function.</p>
<p>The docs say you can do:</p>
<pre><code>for index, item in enumerate(list, start_index):
    print(str(index))
</code></pre>
<p>the above code doesn't do what I expected. I though enumerate would start at the start position and stop at the end, but it doesn't.</p>
<p>I wrote a small program and it does indeed act wonky.</p>
<pre><code>&gt;&gt;&gt; for i, x in enumerate(range(0,20),start=4):
...      print(str(i)+'\t'+str(x))
... 
4   0
5   1
6   2
7   3
8   4
9   5
10  6
11  7
12  8
13  9
14  10
15  11
16  12
17  13
18  14
19  15
20  16
21  17
22  18
23  19
</code></pre>
<p>I would expect enumerate to start at index 4 and loop to the end. So it would get the range of 4-19 but it seems to just start the index but still iterates from 0-19..</p>
<p>Question, is there a way to do a iteration loop starting at a specific index in python?</p>
<p>My expected outcome would be</p>
<pre><code>&gt;&gt;&gt; for i, x in enumerate(range(0,20),start=4):
...      print(str(i)+'\t'+str(x))
... 
4   0 # skip
5   1 # until
6   2 # this
7   3 # item
8   4
9   5
10  6
11  7
12  8
13  9
14  10
15  11
16  12
17  13
18  14
19  15
20  16
21  17
22  18
23  19
</code></pre>
<p>instead of starting the index at the start position provide.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually if you got <code>range</code> object it's not a big deal to make a slice from it, because <code>range(n)[:4]</code> is still <code>range</code> object(<em>as @MosesKoledoye mentioned it's Python 3 feature</em>). But if you got a list, for the sake of not creating new list you can choose <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow"><code>itertools.islice</code></a>, it will return iterator.</p>
<pre><code>from itertools import islice
for index, item in enumerate(islice(range(20), 4, None)):
    print(index, item)
</code></pre>
<p>Output</p>
<pre><code>0 4
1 5
2 6
3 7
4 8
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>start</code> parameter of <code>enumerate</code> doesn't have anything to do with what elements of the iterable get selected. It just tells enumerate what number to start with.</p>
<pre><code>&gt;&gt;&gt; list(enumerate(range(3)))
[(0, 0), (1, 1), (2, 2)]
&gt;&gt;&gt; list(enumerate(range(3), 1))
[(1, 0), (2, 1), (3, 2)]
</code></pre>
<p>If you want to start at a specific index, you need to provide the start argument <em>and</em> a <a href="https://docs.python.org/dev/library/functions.html#slice" rel="nofollow">slice</a>:</p>
<pre><code>for i, v in enumerate(alist[4:], 4):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do:</p>
<pre><code>for index, item in enumerate(list[4:]):
    print(str(index))
</code></pre>
</div>
<span class="comment-copy">The <code>start</code> argument is, I would say, cosmetic. Usually useful when you want to start counting from 1, instead of the default 0</span>
<span class="comment-copy">By the way: I get the sense there's a bit of a code smell to what you're doing here. You shouldn't need <code>enumerate</code>, because that implies you are modifying members of the list and the setting them back in place. If you deal with the list statically, you don't need to manage the indices at all, and can simply iterate over the slices.</span>
<span class="comment-copy"><i><code>range(n)[:4]</code> is still range object</i> only applies to Python 3</span>
<span class="comment-copy">@MosesKoledoye you're right, i will mention that in answer.</span>
<span class="comment-copy">I edited this a bit; for index, item in enumerate(islice(range(20), 4, None), 4); that will make bot the index start at 4 as well as the</span>
<span class="comment-copy">@user1610950 that will do, glad that helped you!</span>
<span class="comment-copy">If you do this, the list indices won't align with the enumerate output.</span>
<span class="comment-copy">@kojiro then you can do <code>for index, item in enumerate(list[4:],4):</code></span>
