<div class="post-text" itemprop="text">
<p>I have a function guess which is supposed to return the key of the set of animal values (arg2) that matches the set of observations (arg1). For instance, if the set of observations = {'pet,' 'fluffy'} and the dictionary of animals = {'cat': {'pet,' 'fluffy', 'cute'}, 'dog': {'pet'}} then the function should return the key of cat because cat has all of the values and set elements that the set of observations has. Notice that cat also has extra values/elements that observations does not. Also notice that dog has one of the values that the set observations has - "pet" - however, dog doesn't have all of the values that the observations set has, and therefore, it isn't returned. </p>
<p>This is my function so far:</p>
<pre><code>def guess(observations, animals):

    for key, value in animals.items():
        if observations in value:
                 return key
</code></pre>
<p>This is a test:</p>
<pre><code>guess({'pet', 'fluffy'}, {'cat': {'pet', 'fluffy', 'cute'}, 'dog': {'pet'}})
</code></pre>
<p>So far, my function returns None when I want it to return cat. How do I see if my set of observations matches a set and/or subset of a set of animal values? My mind wants me to incorrectly believe that checking if the set of observations is in the set of values is the best way to compare sets. I've also tried iterating through my observations to see if they're in the set of values. This method works to an extent. However, when I try:</p>
<pre><code>for key, value in animals.items():
    for obs in observations:
        if obs in value:
            return key
</code></pre>
<p>It returns dog. I'd appreciate any help. Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Idea is to iterate over all potential animals and see if the observed values are a subset of their respective attributes). I'm assuming there could be multiple animals satisfying the observations.</p>
<pre><code>observations = {'pet,' 'fluffy'}
animals = {'cat': {'pet,' 'fluffy', 'cute'}, 'dog': {'pet'}}

def guess(obs, anim):
    ret = []
    for animal, attributes in anim.iteritems():
        if obs &lt;= attributes: # Subset or equality implies this animal qualifies
            ret.append(animal)
    return ret


&gt;&gt;&gt; print guess(observations, animals)
['cat']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you want to know is whether the value of each item in <code>animals</code> is a superset of <code>observations</code>. Thankfully, <code>set</code> has a <a href="https://docs.python.org/3/library/stdtypes.html#set.issuperset" rel="nofollow">method</a> to test exactly that, so your function is straightforward:</p>
<pre><code>def guess(observations, animals):
    return {k for k, v in animals.items() if v.issuperset(observations)}
</code></pre>
<p>Note that <code>guess()</code> returns a set, because there may be more than one item in <code>animals</code> that matches the criteria:</p>
<pre><code>&gt;&gt;&gt; animals = {'cat': {'pet,' 'fluffy', 'cute'}, 'dog': {'pet'}}
&gt;&gt;&gt; observations = {'pet,' 'fluffy'}
&gt;&gt;&gt; guess(observations, animals)
{'cat'}
</code></pre>
<p>It's also possible to use the <code>&gt;=</code> and <code>&lt;=</code> operators as synonyms of <code>issuperset</code> and <code>issubset</code> (not <code>&gt;</code> and <code>&lt;</code>, which are synonyms for <em>proper</em> supersets and subsets respectively).</p>
</div>
<div class="post-text" itemprop="text">
<p>It appears to me that you're looking for the <em>best</em> match (most matched attributes), so I'd propose this:</p>
<pre><code>def guess(observations, animals):
    return max(list((len(observations &amp; value), key)   # most matches
                    for key, value in animals.items()
                    if observations &amp; value            # if this item had matches
                   ) or                                # if _nothing_ matched
                   [(0, None)]                         # use this
              )[1]                                     # strip off the count
</code></pre>
</div>
<span class="comment-copy">Ah, yes. I forgot about the <code>subset</code> operation. That's better.</span>
<span class="comment-copy">You should probably use <code>&lt;=</code></span>
<span class="comment-copy">Thanks! I didn't know how to compare observations as a subset!</span>
<span class="comment-copy">This is very informative and helpful. Thanks!</span>
