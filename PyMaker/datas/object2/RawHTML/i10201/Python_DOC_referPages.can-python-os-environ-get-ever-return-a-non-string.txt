<div class="post-text" itemprop="text">
<p>In this code <a href="https://github.com/chimpler/pyhocon/blob/master/pyhocon/config_parser.py#L291" rel="nofollow">here</a>, they use <code>os.environ</code> to get the value of an environment variable, and then immediately check to see if it is an instance of their custom classes.</p>
<pre><code>value = os.environ.get(variable)
...
elif isinstance(value, ConfigList) or isinstance(value, ConfigTree):
</code></pre>
<p>Is it actually possible that the <code>value</code> will be an instance of their custom classes? Is this dead code?</p>
</div>
<div class="post-text" itemprop="text">
<p>Anything that comes from the <em>outside</em> will be just a string, I guess.</p>
<p>On the other hand if you are adding something to the environment from the Python code, then you have just a bit more freedom.</p>
<p>Adding anything but a string still fails:</p>
<pre><code>&gt;&gt;&gt; os.environ['a'] = 89
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "C:\Program Files\Python27\lib\os.py", line 420, in __setitem__
    putenv(key, item)
TypeError: must be string, not int
</code></pre>
<p>However, you could make your own class inherited from str:</p>
<pre><code>class C(str):
    pass

os.environ['a'] = C()
</code></pre>
<p>In Python2 this seems to do the trick:</p>
<pre><code>&gt;&gt;&gt; type(os.environ['a'])
&lt;class '__main__.C'&gt;
</code></pre>
<p>However, in Python 3 it does not. It looks like it just saves a string:</p>
<pre><code>&gt;&gt;&gt; type(os.environ['a'])
&lt;class 'str'&gt;
</code></pre>
<hr/>
<p>Still, that does not explain the code from <a href="https://github.com/chimpler/pyhocon/blob/master/pyhocon/config_parser.py#L291" rel="nofollow">pyhocon</a>. I don't see how that object could be pushed into <code>os.environ</code>.</p>
<p>Unless they monkeypatched <code>os.environ</code>... In that case, anything would be possible.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>os.environ</code> is just a simple mapping of <code>name: value</code>. It just adds some flavour on top of a dict to interact with the environment. Environment variables do not have type - their plain strings.</p>
<p>You can set variable types in bash, but this is not passed on to other programs.</p>
<pre><code>$ declare -xi FOO=2
$ python -c 'import os;print(type(os.environ["FOO"]))'
</code></pre>
<p>Even when you call a process from inside of python, you cannot pass other types than <code>str</code> or <code>bytes</code>.</p>
<pre><code>In [4]: subprocess.check_output(['python', '-c', 'import os;print(os.environ["FOO"])'], env={"FOO": 2})
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-4-94f33d136e8f&gt; in &lt;module&gt;()
----&gt; 1 subprocess.check_output(['python', '-c', 'import os;print(os.environ["FOO"])'], env={"FOO": 2})
</code></pre>
</div>
<span class="comment-copy">Well, the <a href="https://docs.python.org/3/library/os.html#os.environ" rel="nofollow noreferrer">documentation states</a> "A mapping object representing the string environment.". That rules out pretty much anything else. Python 3 has <code>os.environb</code> if you want bytes instead of <code>str</code>s. I have <i>no clue</i> how an environment variable would be a <code>ConfigList</code> or <code>ConfigTree</code>, unless those are defined as <code>str</code> (or <code>NoneType</code>).</span>
<span class="comment-copy">Is there any evidence that code works? All of that is in an exception handler and it won't really crash if <code>isinstance</code> always fails. It is possible that it is just dead code and no one noticed before you did ;)</span>
<span class="comment-copy">@zvone: I actually found it while looking at the lines not covered by their test cases. I couldn't figure out how this code could be executed. The odd part is that this code has been there since the beginning. This code is not a result of a refactor. Oh well, it happens to all of us sometimes.</span>
<span class="comment-copy">Did you see the <code>Configtree</code> and <code>ConfigList</code> classes? Subclasses of <code>OrderDict</code> and <code>list</code></span>
<span class="comment-copy">@MosesKoledoye Yes, I was just writing the addition to my answer.</span>
<span class="comment-copy">&gt; "However, in Python 3 it does not. It looks like it just saves a string".   Here's the line that does that <a href="https://github.com/python/cpython/blob/6844dd01dd857ba8e606b5cf4a27cc37b8e2bece/Lib/os.py#L743" rel="nofollow noreferrer">github.com/python/cpython/blob/â€¦</a></span>
