<div class="post-text" itemprop="text">
<p>I have date in string:</p>
<pre><code>Tue Oct 04 2016 12:13:00 GMT+0200 (CEST)
</code></pre>
<p>and I use (according to <a href="https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior" rel="nofollow">https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior</a>):</p>
<pre><code>datetime.strptime(datetime_string, '%a %b %m %Y %H:%M:%S %z %Z')
</code></pre>
<p>but I get error:</p>
<pre><code>ValueError: 'z' is a bad directive in format '%a %b %m %Y %H:%M:%S %z %Z'
</code></pre>
<p>How to do it correctly?</p>
</div>
<div class="post-text" itemprop="text">
<p>python datetime can't parse the <code>GMT</code> part (You might want to specify it manually in your format). You can use <code>dateutil</code> instead:</p>
<pre><code>In [16]: s = 'Tue Oct 04 2016 12:13:00 GMT+0200 (CEST)'

In [17]: from dateutil import parser

In [18]: parser.parse(s)
Out[18]: d = datetime.datetime(2016, 10, 4, 12, 13, tzinfo=tzoffset(u'CEST', -7200))
In [30]: d.utcoffset()
Out[30]: datetime.timedelta(-1, 79200)

In [31]: d.tzname()
Out[31]: 'CEST'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>%z is the <code>+0200</code>, <code>%Z</code> is <code>CEST</code>. Therefore:</p>
<pre><code>&gt;&gt;&gt; s = "Tue Oct 04 2016 12:13:00 GMT+0200 (CEST)"
&gt;&gt;&gt; datetime.strptime(s, '%a %b %d %Y %H:%M:%S GMT%z (%Z)')
datetime.datetime(2016, 10, 4, 12, 13, tzinfo=datetime.timezone(datetime.timedelta(0, 7200), 'CEST'))
</code></pre>
<p>I also replaced your <code>%m</code> with <code>%d</code>; <code>%m</code> is the month, numerically, so in your case <code>04</code> would be parsed as April.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simpler way to achieve this without taking care of <code>datetime</code> formatting identifiers will be the usage of <a href="http://dateutil.readthedocs.io/en/latest/parser.html" rel="nofollow"><code>dateutil.parser()</code></a>. For example:</p>
<pre><code>&gt;&gt;&gt; import dateutil.parser 
&gt;&gt;&gt; date_string = 'Tue Oct 04 2016 12:13:00 GMT+0200 (CEST)'
&gt;&gt;&gt; dateutil.parser.parse(date_string)
datetime.datetime(2016, 10, 4, 12, 13, tzinfo=tzoffset(u'CEST', -7200))
</code></pre>
</div>
<span class="comment-copy">Have a look at <a href="http://stackoverflow.com/questions/7992459/parse-cest-cet-time-in-python" title="parse cest cet time in python">stackoverflow.com/questions/7992459/…</a></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/30160143/how-to-convert-string-with-utc-offset">How to convert string with UTC offset</a></span>
<span class="comment-copy">Getting OP's error with Python 2.7, it works with Python 3.5. Do you know why?</span>
<span class="comment-copy">Weird. I don't understand why, seeing as the documentation OP linked to is for Python 2..</span>
<span class="comment-copy">This does not work on Python 2.7</span>
<span class="comment-copy"><code>datetime.timezone</code> is apparently <a href="https://docs.python.org/3/library/datetime.html#available-types" rel="nofollow noreferrer">only available in Python 3.2+</a>. If you're stuck with Python 2, <code>dateutil</code> might be the better choice.</span>
<span class="comment-copy">Whoa, Python 2.7 documentation seems to claim a feature it doesn't have.. <a href="http://stackoverflow.com/questions/30160143/how-to-convert-string-with-utc-offset" title="how to convert string with utc offset">stackoverflow.com/questions/30160143/…</a></span>
