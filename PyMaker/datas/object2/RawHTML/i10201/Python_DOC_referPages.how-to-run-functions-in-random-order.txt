<div class="post-text" itemprop="text">
<p>I want to run functions with random order. It looks like "shuffle" function which shuffle a variables list.</p>
<p>Input:</p>
<pre><code>def a():
    print('a')

def b():
    print('b')

def c():
    print('c')

shuffle([a,b,c])
</code></pre>
<p>This is output what I want:</p>
<pre><code>a
b
c
</code></pre>
<p>or</p>
<pre><code>a
c
b
</code></pre>
<p>or </p>
<pre><code>c
b
a
</code></pre>
<p>or etc
How to run functions with random order?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow"><code>random.shuffle</code></a> is an in-place operation. So you need to keep the list separately and shuffle it.</p>
<pre><code>functions = [a, b, c]
shuffle(functions)
</code></pre>
<p>Now, the functions are shuffled and you just have to execute them</p>
<pre><code>for func in functions:
    func()
</code></pre>
<hr/>
<p>You can probably store this in a function and do it like this</p>
<pre><code>def run_functions_in_random_order(*funcs):
    functions = list(funcs)
    shuffle(functions)
    for func in functions:
        func()

run_functions_in_random_order(a, b, c)
</code></pre>
<hr/>
<p>Or you can simply use the functions in closures, like this</p>
<pre><code>def run_functions_in_random_order(*funcs):
    def run():
        functions = list(funcs)
        shuffle(functions)
        for func in functions:
            func()
    return run

random_exec = run_functions_in_random_order(a, b, c)

random_exec()
random_exec()
random_exec()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or make a list and take random: </p>
<pre><code>import random  

def a():
    print('a')

def b():
    print('b')

def c():
    print('c')  

my_list = [a, b, c] 
random.choice(my_list)()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is how I would do. Basically what <strong>thefourtheye</strong> has suggested. <a href="https://repl.it/DsMk/0" rel="nofollow">Run this Code</a></p>
<pre><code>from random import shuffle

def a():
    print('a')

def b():
    print('b')

def c():
    print('c')

def main():
    lis = [a,b,c]

    shuffle(lis)

    for i in lis:
        i()
</code></pre>
</div>
<span class="comment-copy"><code>from random import shuffle</code> ... Seems like you're practically there.</span>
<span class="comment-copy">Have you tried writing any code yet? You should post that too.  I'm thinking make a dictionary with the keys being integers and the values being function references, then look up a function in the dictionary using a random integer.</span>
<span class="comment-copy">When in a loop, this might(*) call the same function multiple times. (*) The chance that each one is called only once 3 times in a row is actually too small (2 out of 9 if I'm right) to call it "might".</span>
