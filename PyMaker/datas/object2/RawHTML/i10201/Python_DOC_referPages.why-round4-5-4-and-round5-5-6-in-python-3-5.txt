<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10825926/python-3-x-rounding-behavior">Python 3.x rounding behavior</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>Looks like both 4.5 and 5.5 have exact float representations in Python 3.5:</p>
<pre><code>&gt;&gt;&gt; from decimal import Decimal
&gt;&gt;&gt; Decimal(4.5)
Decimal('4.5')
&gt;&gt;&gt; Decimal(5.5)
Decimal('5.5')
</code></pre>
<p>If this is the case, then why</p>
<pre><code>&gt;&gt;&gt; round(4.5)
4
&gt;&gt;&gt; round(5.5)
6
</code></pre>
<p>?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, exact half way numbers are rounded to the nearest even result. This <a href="https://docs.python.org/3/whatsnew/3.0.html#builtins">behavior changed in Python 3</a></p>
<blockquote>
<p>The <a href="https://docs.python.org/3/library/functions.html#round"><code>round()</code></a> function rounding strategy and return type have changed. Exact halfway cases are now rounded to the nearest even result instead of away from zero. (For example, round(2.5) now returns 2 rather than 3.) round(x[, n]) now delegates to x.<strong>round</strong>([n]) instead of always returning a float. It generally returns an integer when called with a single argument and a value of the same type as x when called with two arguments.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 uses Bankers Rounding, which rounds <code>.5</code> values to the closest even number.</p>
</div>
<span class="comment-copy">Banker's rounding. You round to the nearest even number</span>
