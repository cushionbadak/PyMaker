<div class="post-text" itemprop="text">
<p>I want to be able to classify an unknown function/builtin/callable based on its number of arguments.</p>
<p>I may write a piece of code like that:</p>
<pre><code>if numberOfParameters(f) == 0:
    noParameters.append(f)
elif numberOfParameters(f) == 1:
    oneParameter.append(f)
else:
    manyParameters.append(f)
</code></pre>
<p>but I have no idea how to implement <code>numberOfParameters()</code>.  <code>inspect.getargspec</code> does not work with builtins. I can not use exceptions, since it is potentially expensive to call the function.</p>
<p>It would be great if the solution work with both Python 2.7 and Python 3.3+</p>
</div>
<div class="post-text" itemprop="text">
<p>From Python 3.3</p>
<blockquote>
<p>New in version 3.3.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/inspect.html#introspecting-callables-with-the-signature-object" rel="nofollow"><strong>Introspecting callables with the Signature object</strong></a></p>
<pre><code>&gt;&gt;&gt; import inspect
&gt;&gt;&gt; inspect.signature(sorted).parameters
mappingproxy(OrderedDict([('iterable', &lt;Parameter "iterable"&gt;), ('key', &lt;Parameter "key=None"&gt;), ('reverse', &lt;Parameter "reverse=False"&gt;)]))
</code></pre>
<p>And then you can count them, and do whatever you like.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can somewhat do this, but only in Python 3. This is when <code>ArgumentClinic</code> made information about the signature of objects available.</p>
<p>Take note, not all built-ins are actually available as of right now, currently:</p>
<pre><code>__import__ vars max print dir __build_class__ min iter round getattr next 
</code></pre>
<p>do not expose information about their signature. For the rest <code>getargspec</code> (a thin wrapper around <code>getfullargspec</code>) and <code>Signature</code> would do.</p>
<p>In Python 2, you only have the option of <code>getargspec</code> which doesn't do the trick for built-ins and probably never will. So, there's no solution that spans across python versions. For the most compatible solution, I'd use <code>getargspec</code> as of right now.</p>
<p>As for the most simplistic way to check, just count the <code>args</code> from the <code>NamedTuple</code> returned:</p>
<pre><code>def NumberOfParameters(f):
    try:
        r = getargspec(f)
        return len(r.args)  # if it has kwargs, what do you do?
    except TypeError as e:
        print("Function {0} cannot be inspected".format(f.__name__))
</code></pre>
</div>
<span class="comment-copy">Did you try <code>help(...)</code>? E.g. for <code>sorted</code>, it contains: <code>sorted(iterable, cmp=None, key=None, reverse=False)</code>.</span>
<span class="comment-copy">@jbndlr That would require parsing the docstring... I'm not sure if you would want to go down that rabbithole.</span>
<span class="comment-copy">@jbndlr I need to do it programatically. Updated the question.</span>
<span class="comment-copy">@juanpa.arrivillaga he didn't mention to do it programmatically (before his edit), I didn't think one would want to do this for builtins from the code.</span>
<span class="comment-copy">Bite the bullet and assemble a dictionary keyed by builtins (at least those which you care about) and whose values is the information that you want? It shouldn't take all that long. <code>[b for b in dir(__builtins__) if b == b.lower() and not b.startswith('_')]</code> contains just a few dozen entries, not all of which are functions.</span>
<span class="comment-copy">This isn't available in python 2.</span>
<span class="comment-copy">@JimFasarakis-Hilliard i mentioned it in answer. OP said: "It would be great if the solution work with both Python 2.7 and Python 3.3+", currently solution only for python 3.3+, which is ok, i think.</span>
