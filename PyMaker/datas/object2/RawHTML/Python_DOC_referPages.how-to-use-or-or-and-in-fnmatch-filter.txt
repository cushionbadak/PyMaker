<div class="post-text" itemprop="text">
<p>How do you apply OR or AND in the fnmatch filter?</p>
<pre><code>pattern = "*2006*|*2005*"
fnmatch.filter(list,pattern)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>fnmatch</code> does not support that (in the general case), the syntax is quite limited - same as shell-style wildcards. You'll have to use <a href="https://docs.python.org/3/library/re.html#module-re" rel="nofollow noreferrer">regular expressions</a>, or call filter twice and union the results (for OR) or intersect the results (for AND).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can enclose <code>5</code> and <code>6</code> in square brackets to denote a character set:</p>
<pre><code>pattern = "*200[56]*"
fnmatch.filter(list,pattern)
</code></pre>
<p>Please refer to <code>fnmatch</code>'s <a href="https://docs.python.org/3.4/library/fnmatch.html" rel="nofollow noreferrer">documentation</a> for details on the supported patterns.</p>
</div>
<span class="comment-copy">I called the filter twice. Thx</span>
<span class="comment-copy">This is OR. AND isn't possible.</span>
<span class="comment-copy">I'm implementing what the OP's code intends to do, which is clearly meant to be an OR operation.</span>
<span class="comment-copy">Right, and well done :) The question asks how to implement OR and AND, so I thought it was pertinent to point out that this is "OR", and "AND" can't be done :)</span>
<span class="comment-copy">If it goes to year 2009 or year 2010.We won't be able to use the <code>[910]</code></span>
<span class="comment-copy">No, the OP asks for how to implement OR <i>or</i> AND, not OR <i>and</i> AND. So I answered by picking the OR part.</span>
