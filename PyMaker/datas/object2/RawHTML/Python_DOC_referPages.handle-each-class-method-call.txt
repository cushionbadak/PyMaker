<div class="post-text" itemprop="text">
<p>Have the following class:</p>
<pre><code>class Human:

    def __init__(self):
        self.age = 0


human = Human()
print(human.age)  # 0
</code></pre>
<p>Want something like the following magic method. This magic method will give me an opportunity to handle the called variable before its returning.</p>
<pre><code>class Human:

    def __init__(self):
        self.age = 0

    def __variable_handler__(self, attribute_name):
        print(self, attribute_name) # Human instance, 'age'

human = Human()
print(human.age)  # 0
</code></pre>
<p>Could you help me and prompt the in Python how I can implement it?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you may implement by using <code>__getattribute__</code> method.</p>
<p>Code would be like:</p>
<pre><code>class Human:

    def __init__(self):
        self.age = 0

    def __getattribute__(self, attribute_name):
        print(self, attribute_name)
        try:
            return super(Human, self).__getattribute__(attribute_name)
        except AttributeError:
            return None
</code></pre>
<pre><code>human = Human()
print(human.age)
</code></pre>
<p>Outputs would be:</p>
<pre><code>&lt;__main__.Human object at 0x11bfa0ef0&gt; age
0
</code></pre>
</div>
<span class="comment-copy">do you mean like a <a href="https://wiki.python.org/moin/PythonDecorators" rel="nofollow noreferrer">decorator</a> but for an attribute?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/23537646/python-decorator-for-attribute-and-method" title="python decorator for attribute and method">stackoverflow.com/questions/23537646/â€¦</a></span>
<span class="comment-copy">You looking for <code>@property</code>?</span>
