<div class="post-text" itemprop="text">
<p>I am wanting to calculate a simple momentum signal. The method I am following is 1 month lagged <code>cumret</code> divided by 12 month lagged <code>cumret</code> minus 1. </p>
<p><code>date</code> starts at <code>1/5/14</code> and ends at <code>1/5/16</code>. As a 12 month lag is required, the first <code>mom</code> signal has to start 12 months after the start of <code>date</code>. Hence, why the first <code>mom</code> signal starts at <code>1/5/15</code>.</p>
<p>Here is the data utilized:</p>
<pre><code>import pandas as pd

data = {'date':['1/5/14','1/6/14','1/7/14','1/8/14','1/9/14','1/10/14','1/11/14','1/12/14' .,'1/1/15','1/2/15','1/3/15','1/4/15','1/5/15','1/6/15','1/7/15','1/8/15','1/9/15','1/10/15','1/11/15','1/12/15','1/1/16','1/2/16','1/3/16','1/4/16','1/5/16'],
'id': ['a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a' ],
'ret':[0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.10, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25],
'cumret':[1.01,1.03,    1.06,1.1    ,1.15,1.21,1.28,    1.36,1.45,1.55,1.66,    1.78,1.91,2.05,2.2,2.36,    2.53,2.71,2.9,3.1,3.31,3.53,    3.76,4,4.25]}

df = pd.DataFrame(data).set_index(['date', 'id'])
</code></pre>
<p>Desired output</p>
<pre><code>           ret  cumret  mom
date    id          
1/5/14  a   .01 1.01    
1/6/14  a   .02 1.03    
1/7/14  a   .03 1.06    
1/8/14  a   .04 1.1 
1/9/14  a   .05 1.15    
1/10/14 a   .06 1.21    
1/11/14 a   .07 1.28    
1/12/14 a   .08 1.36    
1/1/15  a   .09 1.45    
1/2/15  a   .1  1.55    
1/3/15  a   .11 1.66    
1/4/15  a   .12 1.78    
1/5/15  a   .13 1.91    .8
1/6/15  a   .14 2.05    .9
1/7/15  a   .15 2.2     .9
1/8/15  a   .16 2.36    1
1/9/15  a   .17 2.53    1.1
1/10/15 a   .18 2.71    1.1
1/11/15 a   .19 2.9     1.1
1/12/15 a   .2  3.1     1.1
1/1/16  a   .21 3.31    1.1
1/2/16  a   .22 3.53    1.1
1/3/16  a   .23 3.76    1.1
1/4/16  a   .24 4       1.1
1/5/16  a   .25 4.25    1.1
</code></pre>
<p>This is the code tried to calculate <code>mom</code></p>
<pre><code>df['mom'] = ((df['cumret'].shift(-1) / (df['cumret'].shift(-12))) - 1).groupby(level = ['id'])
</code></pre>
<p>Entire dataset has more <code>id</code> e.g. a, b, c. Just included 1 variable for this example.</p>
<p>Any help would be awesome! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>As far as I know, momentum is simply rate of change. Pandas has a built-in method for this:</p>
<pre><code>df['mom'] = df['ret'].pct_change(12) # 12 month change
</code></pre>
<p>Also, I am not sure why you are using cumret instead of ret to calculate momentum.</p>
<p>Update: If you have multiple IDs that you need to go through, I'd recommend:</p>
<pre><code>for i in df.index.levels[1]:
    temp = df.loc[(slice(None), i), "ret"].pct_change(11) 
    df.loc[(slice(None), i), "mom"] = temp
    # or df.loc[(slice(None), i), "mom"] = df.loc[(slice(None), i), "ret"].pct_change(11) for short
</code></pre>
<p>Output:</p>
<pre><code>             ret    cumret  mom
date    id          
1/5/14  a   0.01    1.01    NaN
1/6/14  a   0.02    1.03    NaN
1/7/14  a   0.03    1.06    NaN
1/8/14  a   0.04    1.10    NaN
1/9/14  a   0.05    1.15    NaN
1/10/14 a   0.06    1.21    NaN
1/11/14 a   0.07    1.28    NaN
1/12/14 a   0.08    1.36    NaN
1/1/15  a   0.09    1.45    NaN
1/2/15  a   0.10    1.55    NaN
1/3/15  a   0.11    1.66    NaN
1/4/15  a   0.12    1.78    11.000000
1/5/15  a   0.13    1.91    5.500000
1/6/15  a   0.14    2.05    3.666667
1/7/15  a   0.15    2.20    2.750000
1/8/15  a   0.16    2.36    2.200000
1/9/15  a   0.17    2.53    1.833333
1/10/15 a   0.18    2.71    1.571429
1/11/15 a   0.19    2.90    1.375000
1/12/15 a   0.20    3.10    1.222222
1/1/16  a   0.21    3.31    1.100000
1/2/16  a   0.22    3.53    1.000000
1/3/16  a   0.23    3.76    0.916667
1/4/16  a   0.24    4.00    0.846154
1/5/16  a   0.25    4.25    0.785714
1/5/14  b   0.01    1.01    NaN
1/6/14  b   0.02    1.03    NaN
1/7/14  b   0.03    1.06    NaN
1/8/14  b   0.04    1.10    NaN
1/9/14  b   0.05    1.15    NaN
1/10/14 b   0.06    1.21    NaN
1/11/14 b   0.07    1.28    NaN
1/12/14 b   0.08    1.36    NaN
1/1/15  b   0.09    1.45    NaN
1/2/15  b   0.10    1.55    NaN
1/3/15  b   0.11    1.66    NaN
1/4/15  b   0.12    1.78    11.000000
1/5/15  b   0.13    1.91    5.500000
1/6/15  b   0.14    2.05    3.666667
1/7/15  b   0.15    2.20    2.750000
1/8/15  b   0.16    2.36    2.200000
1/9/15  b   0.17    2.53    1.833333
1/10/15 b   0.18    2.71    1.571429
1/11/15 b   0.19    2.90    1.375000
1/12/15 b   0.20    3.10    1.222222
1/1/16  b   0.21    3.31    1.100000
1/2/16  b   0.22    3.53    1.000000
1/3/16  b   0.23    3.76    0.916667
1/4/16  b   0.24    4.00    0.846154
1/5/16  b   0.25    4.25    0.785714
</code></pre>
</div>
<span class="comment-copy">just to clarify,, what do you mean by 1st and 12th month lagged? You want to use 1st and 12th month to calculate momentum?</span>
<span class="comment-copy">If you simply mean "n-month-lagged percentage gain", it's better to say that than something deeply ambiguous like "momentum"?</span>
<span class="comment-copy">@smci , I find "n-month-lagged percentage gain" confusing. Momentum is a well defined term. From investopedia, "Momentum is the rate of acceleration of a security's price or volume â€“ that is, the speed at which the price is changing. Simply put, it refers to the rate of change on price movements for a particular asset and is usually defined as a rate"</span>
<span class="comment-copy">@Biarys: ok but that doesn't tell us over how many months it was calculated, and it doesn't tell us if it was backward-looking, centered or forward-looking (like any other moving- or sliding-window type quantity).</span>
<span class="comment-copy">@smci, I am not sure what you mean by backward-looking, centered or forward-looking. Momentum is just a change between 2 points (PriceNew - PriceOld)/PriceOld. In case of MAs, we can put more weights on the oldest, mid, recent data, but I doubt that its possible with ROC. If I am wrong, please share where I can learn more about it as I am interested in the subject.</span>
<span class="comment-copy">The code works, have to make the .pct_change(11) instead of 12 inside the brackets. Only issue is it does not work correct for every <code>id</code> after the first. The <code>mom</code> factor created for b, for example, uses the data from a. So at say 1/5/14 until 1/4/15, there should be NaN for all <code>id</code> a,b,c,d etc. However, for b, it is using, the previous 12 month change of a from 1/5/15 to 1/4/16 to work out 1/4/14 for b. Hope that makes sense. That's why I think it needs <code>groupby</code> in there but I am not too sure</span>
<span class="comment-copy">@oceanbeach96, please see updated answer</span>
<span class="comment-copy">thanks for the help.   I think you can also do it this way, without having to write a loop: <code>df['mom'] = df.groupby(level = ['id'])['ret'].apply(lambda x: x.pct_change(11))</code></span>
