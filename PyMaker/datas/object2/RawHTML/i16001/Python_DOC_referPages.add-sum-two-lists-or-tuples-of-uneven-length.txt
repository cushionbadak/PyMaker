<div class="post-text" itemprop="text">
<p>In Python, is there a good way to add/sum (or otherwise combine) two lists of uneven length?</p>
<p>e.g. given some lists:</p>
<pre><code>a = [1,2,3]
b = [1,2,3,4]
</code></pre>
<p>produce list <code>c</code>:</p>
<pre><code>c = [2,4,6,4]
</code></pre>
<p>where each element is the sum of <code>a</code> and <code>b</code>, taking a missing element as zero?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>itertools.zip_longest()</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import zip_longest
&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = [1, 2, 3, 4]
&gt;&gt;&gt; [x + y for x, y in zip_longest(a, b, fillvalue=0)]
[2, 4, 6, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's what I landed up using:</p>
<pre><code>[ (ax or 0) + (bx or 0) for (ax, bx) in map(None, a, b) ]
</code></pre>
<p>where <a href="https://stackoverflow.com/a/4978745/398670"><code>n or 0</code> is used to coalesce <code>None</code> to zero</a>, and <a href="https://stackoverflow.com/a/1277311/398670"><code>map(None, a, b)</code> is used as a null-expanding version of <code>zip</code></a>.</p>
<p>Problems? Better answers?</p>
</div>
<div class="post-text" itemprop="text">
<p>Another option:</p>
<pre><code>In [1]: a = [1, 2, 3]
In [2]: b = [1, 2, 3, 4]
In [3]: [i+ii if i and ii else i or ii for (i,ii) in map(lambda x,y: (x,y),a,b)]
Out[3]: [2, 4, 6, 4]
</code></pre>
</div>
<span class="comment-copy">Thanks! This is why self-answers are still useful.</span>
<span class="comment-copy">Just note that the <code>map(None)</code> trick only works in Python 2.x; for 3.x, you should use <code>itertools.zip_longest</code> as in @ZeroPiraeus's answer.</span>
