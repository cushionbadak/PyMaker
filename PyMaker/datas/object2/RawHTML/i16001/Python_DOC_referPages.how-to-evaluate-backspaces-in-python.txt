<div class="post-text" itemprop="text">
<p>I have <code>bytes</code>like <code>'foo\x20\x20\x08\x08bar'</code></p>
<p>I need have the backspaces (<code>'\x08'</code>) evaluated when <em>and only when</em> they are lead by identical number of spaces (<code>'\x20'</code>).</p>
<p><code>x = re.sub('\x20+\x08+', '', t)</code> is the naive way of doing this, but fails to produce correct output when <code>t = 'foo\x20\x20\x08'</code></p>
<p>Is there a way to define a regular expression that takes the length of a previous group in to account when matching the second group or do I need do this manually with <code>re.finditer</code> &amp; <code>re.span()</code> and then manually re-checking the preceding blocks?</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative is to pass a <code>lambda</code> to <code>re.sub</code>:</p>
<pre><code>&gt;&gt;&gt; pat ='(\x20+)(\x08+)' 
&gt;&gt;&gt; repl = lambda m: m.group(1)[:-len(m.group(2))]
</code></pre>
<p>now:</p>
<pre><code>&gt;&gt;&gt; re.sub(pat, repl, 'foo\x20\x20\x08bar')
'foo bar'
&gt;&gt;&gt; re.sub(pat, repl, 'foo\x20\x20\x08\x08bar')
'foobar'
&gt;&gt;&gt; re.sub(pat, repl, 'foo\x20\x20\x08\x08\x08bar')
'foobar'
</code></pre>
</div>
<span class="comment-copy">Can you explain your code a bit.</span>
<span class="comment-copy">@vks see <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a> and the 2nd example there. The <code>repl</code> argument can be a function which receives a <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">match object</a> and returns a string.</span>
<span class="comment-copy">that i know.I have  used it before.the use of lambda is somewhat confusing.Also when exactly the space has to be put?</span>
