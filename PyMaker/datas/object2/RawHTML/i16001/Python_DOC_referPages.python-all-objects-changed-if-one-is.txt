<div class="post-text" itemprop="text">
<p>I'm having a peculiar problem with values inside an object being set to whatever I set that variable to in later new instances. Let me try to explain first with an example of the kind of results I'm getting given doc.python.org's example on how to use class objects.</p>
<pre><code>b = Dog("Buddy")
e = Dog("Spot")
b.Name
e.Name
</code></pre>
<p>for me gives an output of</p>
<pre><code>Spot
Spot
</code></pre>
<p>With the help of some debug lines, I've found that this phenomenon occurs when coming out of for loop. So here is my actual code and it's results:</p>
<pre><code>tempTray = Tray("{0}:{1}".format(UnitName, TrayName))
for eachDish in range(len(tempTray.GridSizes)):
  if Row1.find("[") &gt; -1:
    Parse = Row1[Row1.find("[")+1:Row1.find("]")]
    Row1 = Row1[Row1.find("]")+1:]
  elif Row2.find("[") &gt; -1:
    Parse = Row2[Row2.find("[")+1:Row2.find("]")]
    Row2 = Row2[Row2.find("]")+1:]
  elif Row3.find("[") &gt; -1:
    Parse = Row3[Row3.find("[")+1:Row3.find("]")]
    Row3 = Row3[Row3.find("]")+1:]

  if Parse != "Empty":        
    tempTray.GridSizes[eachDish]  = Parse[:Parse.find(" ")]
    tempTray.GridColors[eachDish] = self.Colors[Parse[Parse.find(" ")+1:]]
    # Check point 1
self.AllTrays.append(tempTray)
# Check point 2
</code></pre>
<p>At # Check point 1 I have a debug print test that writes the contents of tempTray's 2 values, and the contain the correct information at this point, but if I check the same thing again at # Check point 2, now they become set to whatever is in the last tray loaded by the xml file (and I've tried looking at all 4 trays, not just self.AllTrays[0], they all have the same values) I've also ruled out that my xml file is saved with changes current.</p>
<p>Any solutions or workarounds? I've come across this before but without consistency (a card game where the card data loaded from a file correctly but each player was being set to the name "Player 2" and their score values both went up and down if I changed either one of their scores)</p>
</div>
<div class="post-text" itemprop="text">
<p>It'd be good to see the actual code for your <code>Dog</code> class's definition. Chances are you have made <code>Name</code> a <a href="https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables" rel="nofollow">class variable as opposed to an instance variable</a> (the Python documentation actually uses a <code>Dog</code> class to show the difference).</p>
<p>The Python documentation actually has a great short and sweet explanation of <a href="https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables" rel="nofollow">Class and Instance Variables</a>; so, I suggest you read it and ask more questions if need be.</p>
</div>
<span class="comment-copy">You need to show us the definition of your <code>Dog</code> class. Most likely you're setting <code>Dog.Name</code> as a class-level attribute instead of an instance attribute.</span>
<span class="comment-copy">Rather than transforming the problem, can you show your actual minimum python code that can help us reproduce the issue?</span>
<span class="comment-copy">Move the <code>name</code> attribute of <code>Dog</code> into the <code>__init__</code></span>
<span class="comment-copy">Not related to your problem, but your code is very hard to read: please observe PEP8, and use <code>lower_case_with_underscore</code> for variables and attributes, and reserve <code>CamelCase</code> for classes.</span>
<span class="comment-copy">The "actual code" is incomplete if it isn't <b>sufficient</b> to reproduce. See <a href="http://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a> or <a href="http://sscce.org/" rel="nofollow noreferrer">sscce.org</a> for guidelines on writing reproducers sufficient to allow others to diagnose your problem.</span>
<span class="comment-copy">Thank you. By you'r response I guess you didn't read or make sense of why I included the Dog class. I did because I was exampling from the example in the link. However this is correct, that I was using a class variable when instead I wanted an instance variable.</span>
