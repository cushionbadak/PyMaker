<div class="post-text" itemprop="text">
<p>I have started coding in python again, and I stumbled upon a strange behaviour: I have two strings which are exactly the same (see code below), but one of these strings is stored in a file, the other one is hardcoded. Now my program is running, but the string from the file looks completely different in the output compared to the hardcoded string. Why?</p>
<pre><code>import sys

message = ''
message2 = 'MSH|^~\&amp;|GHH LAB|ELAB-3|GHH OE|BLDG4|200202150930||ORU^R01|CNTRL-3456|P|2.4\r'
message2 += 'PID|||555-44-4444||EVERYWOMAN^EVE^E^^^^L|JONES|196203520|F|||153 FERNWOOD DR.^^STATESVILLE^OH^35292||(206)3345232|(206)752-121||||AC555444444||67-A4335^OH^20030520\r'
message2 += 'OBR|1|845439^GHH OE|1045813^GHH LAB|1554-5^GLUCOSE|||200202150730||||||||555-55-5555^PRIMARY^PATRICIA P^^^^MD^^LEVEL SEVEN HEALTHCARE, INC.|||||||||F||||||444-44-4444^HIPPOCRATES^HOWARD H^^^^MD\r'
message2 += 'OBX|1|SN|1554-5^GLUCOSE^POST 12H CFST:MCNC:PT:SER/PLAS:QN||^182|mg/dl|70_105|H|||F'
for line in sys.stdin:
    message += line[:-1]

print message
print '\n\n'
print "New message:\n\n"
print message2
</code></pre>
<p>Output:</p>
<pre><code>MSH|^~\&amp;|GHH LAB|ELAB-3|GHH OE|BLDG4|200202150930||ORU^R01|CNTRL-3456|P|2.4
PID|||555-44-4444||EVERYWOMAN^EVE^E^^^^L|JONES|196203520|F|||153 FERNWOOD DR.^^STATESVILLE^OH^35292||(206)3345232|(206)752-121||||AC555444444||67-A4335^OH^20030520
OBR|1|845439^GHH OE|1045813^GHH LAB|1554-5^GLUCOSE|||200202150730||||||||555-55-5555^PRIMARY^PATRICIA P^^^^MD^^LEVEL SEVEN HEALTHCARE, INC.|||||||||F||||||444-44-4444^HIPPOCRATES^HOWARD H^^^^MD
OBX|1|SN|1554-5^GLUCOSE^POST 12H CFST:MCNC:PT:SER/PLAS:QN||^182|mg/dl|70_105|H|||F




New message:


OBX|1|SN|1554-5^GLUCOSE^POST 12H CFST:MCNC:PT:SER/PLAS:QN||^182|mg/dl|70_105|H|||F55^PRIMARY^PATRICIA P^^^^MD^^LEVEL SEVEN HEALTHCARE, INC.|||||||||F||||||444-44-4444^HIPPOCRATES^HOWARD H^^^^MD
</code></pre>
<p>My file looks like:</p>
<pre><code>MSH|^~\&amp;|GHH LAB|ELAB-3|GHH OE|BLDG4|200202150930||ORU^R01|CNTRL-3456|P|2.4
PID|||555-44-4444||EVERYWOMAN^EVE^E^^^^L|JONES|196203520|F|||153 FERNWOOD DR.^^STATESVILLE^OH^35292||(206)3345232|(206)752-121||||AC555444444||67-A4335^OH^20030520
OBR|1|845439^GHH OE|1045813^GHH LAB|1554-5^GLUCOSE|||200202150730||||||||555-55-5555^PRIMARY^PATRICIA P^^^^MD^^LEVEL SEVEN HEALTHCARE, INC.|||||||||F||||||444-44-4444^HIPPOCRATES^HOWARD H^^^^MD
OBX|1|SN|1554-5^GLUCOSE^POST 12H CFST:MCNC:PT:SER/PLAS:QN||^182|mg/dl|70_105|H|||F
</code></pre>
<p>Edit: Solution to my problem was: Either remove '\r' in the hardcoded message or add them in my file. But after I need them for further processing, I simply added them in my file which solved my problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>When Python reads a text file, line separators are translated from the platform default to <code>\n</code>. On Windows lines are separated with <code>\r\n</code>, but in <em>Python</em> your lines will end with <code>\n</code>.</p>
<p>Your hardcoded string, however, contains <code>\r</code> carriage return characters, the lines read from the file won't. </p>
<p>And if the last line doesn't have a line separator, you'll end up removing the last character anyway, unconditionally. Use <code>line.rstrip('\n')</code> to remove newlines, but only if present.</p>
<p>Whenever you think you have the same string but Python tells you something different, take a look at the output of the <a href="https://docs.python.org/2/library/functions.html#repr" rel="nofollow"><code>repr()</code> function</a> for those strings (use <a href="https://docs.python.org/3/library/functions.html#ascii" rel="nofollow"><code>ascii()</code></a> on Python 3). You can also use the <a href="https://docs.python.org/2/library/difflib.html#difflib.ndiff" rel="nofollow"><code>difflib.ndiff()</code> function</a> to get a quick indication of what might be different.</p>
<p>In your case, it <em>appears</em> that you are not removing (enough) newline characters, and your test message contains <code>\r</code> characters instead. That means the <code>message2</code> text will <em>replace itself</em> line by line as it won't advance to the next line. Use <code>\n</code> instead; you could even use a triple-quoted string to preserve newlines:</p>
<pre><code>message2 = '''\
MSH|^~\&amp;|GHH LAB|ELAB-3|GHH OE|BLDG4|200202150930||ORU^R01|CNTRL-3456|P|2.4
PID|||555-44-4444||EVERYWOMAN^EVE^E^^^^L|JONES|196203520|F|||153 FERNWOOD DR.^^STATESVILLE^OH^35292||(206)3345232|(206)752-121||||AC555444444||67-A4335^OH^20030520
OBR|1|845439^GHH OE|1045813^GHH LAB|1554-5^GLUCOSE|||200202150730||||||||555-55-5555^PRIMARY^PATRICIA P^^^^MD^^LEVEL SEVEN HEALTHCARE, INC.|||||||||F||||||444-44-4444^HIPPOCRATES^HOWARD H^^^^MD
OBX|1|SN|1554-5^GLUCOSE^POST 12H CFST:MCNC:PT:SER/PLAS:QN||^182|mg/dl|70_105|H|||F'''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try reading the file properly, not via stdin, to avoid control-characters messing with it:</p>
<pre><code>import sys

message = ''
message2 = 'MSH|^~\&amp;|GHH LAB|ELAB-3|GHH OE|BLDG4|200202150930||ORU^R01|CNTRL-3456|P|2.4\r'
message2 += 'PID|||555-44-4444||EVERYWOMAN^EVE^E^^^^L|JONES|196203520|F|||153 FERNWOOD DR.^^STATESVILLE^OH^35292||(206)3345232|(206)752-121||||AC555444444||67-A4335^OH^20030520\r'
message2 += 'OBR|1|845439^GHH OE|1045813^GHH LAB|1554-5^GLUCOSE|||200202150730||||||||555-55-5555^PRIMARY^PATRICIA P^^^^MD^^LEVEL SEVEN HEALTHCARE, INC.|||||||||F||||||444-44-4444^HIPPOCRATES^HOWARD H^^^^MD\r'
message2 += 'OBX|1|SN|1554-5^GLUCOSE^POST 12H CFST:MCNC:PT:SER/PLAS:QN||^182|mg/dl|70_105|H|||F'

with open("my_file.txt","r") as my_file:
  for line in my_file:
    message += line

print message
print '\n\n'
print "New message:\n\n"
print message2
</code></pre>
</div>
<span class="comment-copy">The strings are <b>not</b> the same because your hardcoded string contains <code>\r</code> carriage returns.</span>
<span class="comment-copy">In this case I want to keep the '\r' for further handling, but I did not see that in message2 there were '\r', too. But with adding '\r' in my text file everything works, thanks!</span>
