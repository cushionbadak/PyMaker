<div class="post-text" itemprop="text">
<p>I'm looking for some help comprehending why this won't work. It seems like python won't create keys in an existing dict in a dictionary comprehension, but that sounds like a bad joke.. more likely, I'm just missing something.</p>
<p>So here I am. Stuck with this:</p>
<pre><code>## let's say, for the sake of argument: len(bigstr.split('\n')) &lt; 1000 
indexed = {1000:'stuff', 1001:'in here', 1002:'lots', 1003:'of it'}
{indexed[idx]:item.strip() for idx, item in enumerate(bigstr.split('\n'))}
</code></pre>
<p>Which would work (as opposed to firing a <code>KeyError: 0</code>, if it were written like:</p>
<pre><code>indexed = {1000:'stuff', 1001:'in here', 1002:'lots', 1003:'of it'}
for idx, item in enumerate(bigstr.split('\n')):
    indexed[idx] = item.strip()
</code></pre>
<p>In fact, so well would the previous snippet work, that it makes the first one work. Amazing!</p>
<p>So I thought I'd get smart and do something (in a fresh session) like:</p>
<pre><code>indexed = {1000:'stuff', 1001:'in here', 1002:'lots', 1003:'of it'}
new_items_only = {indices[idx]:item.strip() for idx, item in enumerate(bigstr.split('\n'))}
</code></pre>
<p>Expecting it to work, because perhaps it just wouldn't work with an existing dict (which is kinda what I'm going for here)?</p>
<p>Alas, no dice.</p>
<p>Now, I should mention that I know that if I do this:</p>
<pre><code>indices = {indices:item.strip() for idx, item in enumerate(bigstr.split('\n'))}
</code></pre>
<p>I can get that dict to happen, but I would like to add the keys into an existing dict, you know? .. Actually, do you know? Can you help me comprehend this?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#dict.update" rel="nofollow"><code>dict.update</code></a>:</p>
<pre><code>&gt;&gt;&gt; indexed = {1000:'stuff', 1001:'in here', 1002:'lots', 1003:'of it'}
&gt;&gt;&gt; bigstr = 'x\ny\nz'
&gt;&gt;&gt; indexed.update({idx:item.strip() for idx, item in enumerate(bigstr.split('\n'))})
&gt;&gt;&gt; indexed
{0: 'x', 1: 'y', 2: 'z', 1000: 'stuff', 1001: 'in here', 1002: 'lots', 1003: 'of it'}
</code></pre>
</div>
<span class="comment-copy">Oh nice.. That'll do it. Definitely what I was missing. Thanks</span>
<span class="comment-copy">Thanks again for pointing me at update, definitely did the trick.</span>
<span class="comment-copy">@Inversus, You,re welcome. Glad to help you.</span>
