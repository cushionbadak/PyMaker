<div class="post-text" itemprop="text">
<p>I'm new to Python and was trying to figure out how to code a script that will download the contents of HTML pages. I was thinking of doing something like:</p>
<pre><code>Y = 0
X = "example.com/example/" + Y
While Y != 500:
(code to download file), Y++
if Y == 500:
break
</code></pre>
<p>so the (<code>Y</code>) is the file name and I need to download files from <code>example.com/example/1</code> all the way till file number <code>500</code>, regardless of the file type.</p>
</div>
<div class="post-text" itemprop="text">
<p>Read this <a href="https://docs.python.org/2/library/urllib.html" rel="nofollow">official docs page</a>:</p>
<blockquote>
<p>This module provides a high-level interface for fetching data across the World Wide Web.</p>
<p>In particular, the <code>urlopen()</code> function is similar to the built-in function <code>open()</code>, but accepts Universal Resource Locators (URLs) instead of filenames.</p>
<p>Some restrictions apply — it can only open URLs for reading, and no seek operations are available.</p>
</blockquote>
<p>So you have code like this:</p>
<pre><code>import urllib
content = urllib.urlopen("http://www.google.com").read()
#urllib.request.urlopen(...).read() in python 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following code should meet your need. It will download 500 web contents and save them to disk. </p>
<pre><code>import urllib2

def grab_html(url):
    response = urllib2.urlopen(url)
    mimetype = response.info().getheader('Content-Type')
    return response.read(), mimetype

for i in range(500):
    filename = str(i)  # Use digit as filename
    url = "http://example.com/example/{0}".format(filename)
    contents, _ = grab_html(url)
    with open(filename, "w") as fp:
        fp.write(contents)
</code></pre>
<p>Notes: </p>
<ul>
<li>If you need parallel fetching, here is a great example <a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow">https://docs.python.org/3/library/concurrent.futures.html</a></li>
</ul>
</div>
<span class="comment-copy">Very little of your code so far is valid Python - indentation is important, Python doesn't have the <code>++</code> increment and you can't concatenate strings and integers, for example. You need to clarify what you're trying to do - download files, scrape HTML, or something else?</span>
<span class="comment-copy">I'm trying to download several files from a website. They are a mix of videos/Audios/pictures/Word files sent to me by my boss. I was learning programming and I asked myself: why not write a code that will download all of the files and hit 2 birds with one stone. I'm using python 3.4</span>
<span class="comment-copy">Perhaps you should take this in smaller steps: 1. How can you download one file, given a URL. 2. How can you create a range of URLs. 3. How can you iterate over 2. and pass them to 1.</span>
<span class="comment-copy">thanks for the tips. I hope they will keep me busy and thinking <i>brofist</i></span>
<span class="comment-copy">@jonrsharpe ty :D did not know how to indent the doc like you did.</span>
<span class="comment-copy">No problem - it's the quote (<code>“</code>) rather than the braces (<code>{}</code>) button in the edit view.</span>
<span class="comment-copy">@LuisMasuelli you can explore the community help to see more formatting syntax. Really interesting.</span>
<span class="comment-copy">This will not work - <code>TypeError</code> on the attempts to concatenate <code>i</code>, which is an integer, with various strings.</span>
<span class="comment-copy">Wouldn't the <code>url = "http://example.com/example/" + i</code> still be concatenating a string and and integer?</span>
