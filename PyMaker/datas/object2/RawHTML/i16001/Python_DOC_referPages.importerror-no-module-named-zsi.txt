<div class="post-text" itemprop="text">
<p>When I run some test script, I saw this error on my windows machine. I have downloaded ZSI-2.0-rc3 from website. But I don't know where to put these files and how to put these files. Does anyone know about this. My environment is Windows 7. Thanks a lot!</p>
</div>
<div class="post-text" itemprop="text">
<p>You almost always need to <em>install</em> a package before you can use it. (There are a few exceptions, where you can just copy the package's code into the same directory as your own source, but in general, you need to install.)</p>
<p><a href="https://docs.python.org/3/installing/index.html" rel="nofollow">Installing Python Modules</a> in the official documentation, and the <a href="https://packaging.python.org/en/latest/" rel="nofollow">Python Packaging User Guide</a>, together provide a complete guide to everything, but here are the basics.</p>
<hr/>
<p>First, some packages come with Windows installers—either official ones available on the project's web page, or in <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" rel="nofollow">Christoph Gohlke's list</a>. When these exist, it's often easier to just download and run the installer. Just make sure to get the version that goes with your Python—packages for Python 3.4 won't work with 2.7; 64-bit packages won't work with 32-bit Python; etc.</p>
<hr/>
<p>Next, you almost certainly want to install <a href="https://packaging.python.org/en/latest/projects.html#pip" rel="nofollow"><code>pip</code></a>, then use it to install everything else.</p>
<p>In fact, most packages have an entry on <a href="http://pypi.python.org/" rel="nofollow">PyPI</a>, which means you don't even have to download them: just type this on a command line:</p>
<pre><code>pip install ZSI
</code></pre>
<p>And it will usually find the <code>ZSI</code> entry on PyPI, download the appropriate version, and install it for you.</p>
<hr/>
<p>But a few packages aren't on PyPI, or don't have installable entries, or sometimes you need a newer version than the official release</p>
<p>In that case, you do have to download them, and then <code>cd</code> into their directory, and then do this:</p>
<pre><code>pip install .
</code></pre>
<hr/>
<p>A few packages don't work with <code>pip</code>, for various reasons. (A handful <em>do</em> work with <code>easy_install</code>, but that's pretty rare nowadays, except maybe for Mac users using Apple's pre-installed Python, so let's ignore that.) In that case, you have to do the installation manually. That should always use a script named <code>setup.py</code>, so you can just do this:</p>
<pre><code>C:\Path\to\download&gt; python setup.py install
</code></pre>
<p>If not, there should be installation instructions either inside the package (e.g., a file named INSTALL) or on the web page.</p>
<hr/>
<p>Sometimes you'll get an error about not being able to find a C compiler. (If Gohlke or the upstream maintainer has an installer package that's already been compiled, or if PyPI has a wheel file, this isn't an issue.) Some packages have C extension modules, and you need a C compiler to install those, unless you can find a Windows binary. This is too much to explain here, but the PyPA guide has the basics, and there are multiple questions on StackOverflow that cover details like how to configure the setup if you get stuck.</p>
</div>
<div class="post-text" itemprop="text">
<p>it needs to appear anywhere on your <code>PYTHONPATH</code>. Check your environment variables to know exactly where that is.</p>
<pre><code>My Computer -&gt; Properties -&gt; Advanced system settings -&gt; Environment Variables...
</code></pre>
<p>You're looking for <code>PYTHONPATH</code>. Put the <code>ZSI</code> folder anywhere in there.</p>
<p>If that variable does not exist, you'll want to put it in <code>path/to/your/python/installation/Lib</code></p>
<p>e.g. <code>C:\python33\Lib</code></p>
</div>
<span class="comment-copy">Clear and excellent!</span>
<span class="comment-copy">Hi, I copy the folder ZSI-2.0-rc3 to C:\Python27\Lib\ZSI-2.0-rc3, but it still occurs. When I run some test scripts to use command python xxxx.py, this error is still returned.</span>
<span class="comment-copy">This is a bad idea. Many packages aren't laid out the same way in source as they are in installation.</span>
