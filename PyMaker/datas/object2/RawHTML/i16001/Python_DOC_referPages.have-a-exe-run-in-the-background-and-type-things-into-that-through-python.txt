<div class="post-text" itemprop="text">
<p>I have a program, myshell.exe, that i need to interact with through python (send commands to it and read results back).</p>
<p>The catch is that i can only run <code>myshell.exe</code> once (cannot enclose popen and communicate in a loop)</p>
<p>I have tried <code>popen</code> and <code>popen.communicate()</code> but that seems to run <code>myshell.exe</code>, send my commands and then exits the process.</p>
<pre><code># settin up the command
p = Popen("myshell.exe", stdout=PIPE, stdin=PIPE, stderr=PIPE, shell=True)

# sending something (and getting output)
print p.communicate("run");
</code></pre>
<p>At this point, from the print output i can see that my <code>myshell.exe</code> has exited (i have a goodbye message that is printed).</p>
<p>Any ideas if there is any way around it ? 
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>As you can read in <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow"><code>Popen.communicate</code></a> docs, it will wait until <code>myshell.exe</code> exits before returning.</p>
<p>Use <code>p.stdout</code> and <code>p.stdin</code> to communicate with the process instead:</p>
<pre><code>p.stdin.write("run")
print p.stdout.read(1024)
</code></pre>
<p><code>p.stdin</code> and <code>p.stdout</code> are regular file objects. You can read and write to them in a loop, just leave the <code>p = Popen(...)</code> part outside:</p>
<pre><code>p = Popen("myshell.exe", stdout=PIPE, stdin=PIPE, stderr=PIPE, shell=True)
for i in range(3):
    p.stdin.write("run")
    print p.stdout.read(16)
p.terminate()
</code></pre>
<p>This assuming that <code>myshell.exe</code> is behaving as you expect (e.g. does not exit after first command is sent).</p>
</div>
<span class="comment-copy">Well, simply leave the <code>Popen</code> part outside the loop: open the communication once, interact as many times as needed.</span>
<span class="comment-copy">myshell.exe behaves OK if i run it from a windows terminal, i.e. if i type in the following sequence <code>run\n</code> it will execute run and then wait for the next command. I think communicate() sends EOF or something like that that screws up myshell.exe</span>
<span class="comment-copy">You might have to add a trailing <code>\n</code> or <code>\r\n</code> after the command, e.g. <code>p.stdin.write("run\n")</code> if <code>myshell.exe</code> expects a &lt;kbd&gt;Return&lt;/kbd&gt; after the command (as any interactive shell does).</span>
<span class="comment-copy">I think this was it. When using <code>p.stdin.write("run")</code>, <code>myshell.exe</code> would exit. But if i send <code>p.stdin.write("run\r\n")</code> then i can keep sending things to it.</span>
