<div class="post-text" itemprop="text">
<p>Is there a way to persist instances of a class in memory or file system in Python? Can I do this with <code>shelve</code>?</p>
<p>The following line is part of <a href="http://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html#training-a-classifier" rel="nofollow">this tutorial</a> which takes a long time to execute, and I need to cache it for next program executions. </p>
<pre><code>clf = MultinomialNB().fit(X_train_counts, training_data['targets'])
</code></pre>
<p>Type of <code>clf</code>:</p>
<pre><code>&gt;&gt;&gt; type(clf)
&lt;class 'sklearn.naive_bayes.MultinomialNB'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can use <code>shelve</code> to persist instances of a class. <code>shelve</code> gives you a dictionary interface, making the process relatively transparent.</p>
<p>Underneath, <code>shelve</code> uses the <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow"><code>pickle</code> library</a>; if the <code>shelve</code> API doesn't fit your needs, you can go straight to that module.</p>
<p><code>scikit-learn</code> explicitly support <code>pickle</code>, see <a href="http://scikit-learn.org/stable/modules/model_persistence.html" rel="nofollow"><em>Model persistence</em></a>:</p>
<blockquote>
<p>After training a scikit-learn model, it is desirable to have a way to persist the model for future use without having to retrain. The following section gives you an example of how to persist a model with pickle.</p>
</blockquote>
</div>
<span class="comment-copy">Doesn't pickle have issues with some user defined objects?</span>
<span class="comment-copy">@JakobBowyer: no, not really. Pickle may have issues with certain types of objects, but it is not specific to user defined objects.</span>
<span class="comment-copy">@MartijnPieters: Thanks. I use <code>os.path.isfile</code> to check whether the dump file exist to load or not. Is this the right way? I use joblib which is mentioned in the link.</span>
<span class="comment-copy">@hpn: you can use <code>os.path.isfile</code> or use exception handling (<code>try:</code>, <code>open(...)</code>, <code>except IOError: # handle file not being there</code>).</span>
