<div class="post-text" itemprop="text">
<p>I want to call python argument inside string. Is that possible?
Suppose I have declared variable mypath as</p>
<pre><code>mypath = os.path.abspath('1.jpg')
</code></pre>
<p>and I need to call it inside another variable that is string like following</p>
<pre><code>cmd0 = 'gimp-console-2.8 -b -idf --batch-interpreter python-fu-eval -b "import sys,os;sys.path=[\'.\']+sys.path;import mycode;'
cmd1 = 'mycode.doit('THIS VARIABLE MYPATH SHOULD GO HERE')"'
cmd2 = '-b "pdb.gimp_quit(0)"'
cmdfinal = cmd0 + cmd1 + cmd2
os.system(cmdfinal)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like what you want to do is insert a variable into the middle of a string.</p>
<p>This is done with string formatting. Python has a couple different ways of doing it, but the simplest is the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format</code></a> method, as explained in the tutorial section <a href="https://docs.python.org/3/tutorial/inputoutput.html#fancier-output-formatting" rel="nofollow">Fancier Output Formatting</a>:</p>
<pre><code>cmd1 = 'mycode.doit({0})'.format(mypath)
</code></pre>
<p>if <code>mypath</code> is, say, the string <code>/Users/me/Documents/1.jpg</code>, then <code>cmd1</code> will be the string <code>mycode.doit(/Users/me/Documents/1.jpg)</code>.</p>
<p>But that's not quite right, because you're trying to format a command that can be run by another Python interpreter. So, you want not just the contents of the string, but a Python literal for the string. How do you do that?</p>
<p>The <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow"><code>repr</code></a> of a string is the string in quotes, with proper escaping to make sure it can be used directly in Python code. (This isn't true for all objects; for example, some will return something like <code>&lt;Spam object at 0x12345678&gt;</code>, which isn't particularly useful; it's generally only true for objects where typing the output into Python code would make sense, and get you an exactly equivalent object.)</p>
<p>So, how do you get that? As explained in <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow">Format String Syntax</a>, you use the <code>r</code> conversion specifier:</p>
<pre><code>cmd1 = 'mycode.doit({0!r})'.format(mypath)
</code></pre>
<p>Now, <code>cmd</code> will be the string <code>mycode.doit('/Users/me/Documents/1.jpg')</code></p>
<p>And that's exactly what you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>You do use a tuple </p>
<pre><code>mypath = os.path.abspath('1.jpg')
cmd = 'gimp-console-2.8 -b -idf --batch-interpreter python-fu-eval -b "import sys,os;sys.path=[\'.\']+sys.path;import mycode;mycode.doit(\'%s\')" -b "pdb.gimp_quit(0)"' % (mypath)
os.system(cmd)
</code></pre>
<p>Or using a format string </p>
<pre><code>mypath = os.path.abspath('1.jpg')
cmd = 'gimp-console-2.8 -b -idf --batch-interpreter python-fu-eval -b "import sys,os;sys.path=[\'.\']+sys.path;import mycode;mycode.doit(\'{0}\') -b "pdb.gimp_quit(0)"'.format(mypath)
os.system(cmd)
</code></pre>
</div>
<span class="comment-copy">Not sure what you mean... you can use the value in a number of ways, including <code>"using file %s" % mypath</code>.</span>
<span class="comment-copy">What do you mean by "call it"? Or by "argument"? While it's possible to pass a function or other callable object as an argument, your example isn't doing anything remotely similar. Show us the code that you want to write (with a <code># I'm stuck here</code> line) and explain what it shoul ddo.</span>
<span class="comment-copy">Explained a little better now.</span>
<span class="comment-copy">OK, better. Are you just trying to insert the string into <code>cmd1</code>? If so, the simplest way is <code>cmd1 = 'mycode.doit({0})'.format(mypath)</code>.</span>
<span class="comment-copy">WOW! You are awesome! :))</span>
<span class="comment-copy">Nice example! :)</span>
