<div class="post-text" itemprop="text">
<p>I need to execute a Javascript function from Python 3 (pass a few variables into it's environment and collect the result). I found pyv8 and python-spidermonkey, but neither supports Python 3.</p>
<p>Is there a library for that job?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you can always do:</p>
<ul>
<li><p>Install Node.Js binaries on the server-side</p></li>
<li><p>Write a script as standalone .js file</p></li>
<li><p>Pass input as command-line arguments, pipes (stdin) or files</p></li>
<li><p>Execute the script using <a href="https://docs.python.org/3/library/subprocess.html?highlight=subprocess" rel="nofollow">subprocess</a></p></li>
<li><p>Collect the result from a named pipe or file output</p></li>
</ul>
<p>.js scripts can be executed in similar fashion as .sh and .py scripts.</p>
</div>
<span class="comment-copy">Are you sure you don't want to expose the JS function as a "web service method"? Probably a lot cleaner than "embedding a JS exe env" =&gt; expose your functions as NodeJS HTTP endpoints.</span>
<span class="comment-copy">ok, this is a total hack, but you could use mongodb to do that. it supports native js evaluation and its bindings are up to date.</span>
