<div class="post-text" itemprop="text">
<p><a href="http://man7.org/linux/man-pages/man7/unix.7.html" rel="nofollow">Like this</a></p>
<blockquote>
<p>abstract: an abstract socket address is distinguished by the fact
            that sun_path[0] is a null byte ('\0').  The socket's address in
            this namespace is given by the additional bytes in sun_path that
            are covered by the specified length of the address structure.
            (Null bytes in the name have no special significance.)  The name
            has no connection with filesystem pathnames.  When the address of
            an abstract socket is returned by getsockname(2), getpeername(2),
            and accept(2), the returned addrlen is greater than
            sizeof(sa_family_t) (i.e., greater than 2), and the name of the
            socket is contained in the first (addrlen - sizeof(sa_family_t))
            bytes of sun_path.  The abstract socket namespace is a nonportable
            Linux extension.</p>
</blockquote>
<p>I want to connect the socket which has been create in abstract namespace(@xxx or \0xxx).</p>
</div>
<div class="post-text" itemprop="text">
<p>Support for "Linux abstract socket namespace" has been in Python since version 2.5 2006.</p>
<p>That's according to the source and changelog.
<a href="https://raw.githubusercontent.com/python/cpython/master/Misc/HISTORY" rel="nofollow">Misc/HISTORY</a> (note: big file)</p>
<blockquote>
<p>Patch #1062014: AF_UNIX sockets under Linux have a special
   abstract namespace that is now fully supported.</p>
</blockquote>
<p>It's not mentioned in the Python2 docs but <em>is</em> explicitly mentioned in the latest
<a href="https://docs.python.org/3/library/socket.html#socket-families" rel="nofollow">Python 3 socket docs</a></p>
<p>Have you tried it under Python2?</p>
<p>As for Java, it doesn't even support AF_UNIX sockets directly; it requires JNI.
There are many implementations (search around) but you will almost certainly need to do some C development to get Linux abstract namespace support.</p>
<p>You might try <a href="http://www.basepath.com/aup/jtux/" rel="nofollow">Jtux</a>  It's a complete UNIX api library for Java and of course includes AF_UNIX sockets.</p>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/170600/unix-socket-implementation-for-java">UNIX socket implementation for Java?</a></span>
<span class="comment-copy">you can always use <code>ctypes</code>; if there's a libc function or in fact a syscall that supports it, you can surely call it with correct arguments.</span>
