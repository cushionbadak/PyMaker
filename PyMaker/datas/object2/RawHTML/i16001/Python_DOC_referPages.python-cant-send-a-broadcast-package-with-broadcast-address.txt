<div class="post-text" itemprop="text">
<p>The next code sends broadcast package (checked in local Wireshark):</p>
<pre><code>s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
reqdata = struct.pack('&lt;l', 0x01)
s.sendto( reqdata, ( '192.168.1.255', port ))
</code></pre>
<p>But when I write "broadcast" in angle brackets instead of constant subnet broadcast, the package is not being sent:</p>
<pre><code>s.sendto( reqdata, ( '&lt;broadcast&gt;', port ))
</code></pre>
<p>Environment:</p>
<blockquote>
<p>ActivePython 2.7.5.6 (ActiveState Software Inc.)<br/>
  based on Python 2.7.5 (default, Sep 16 2013, 23:16:52)<br/>
  [MSC v.1500 32 bit (Intel)] on win32"</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Python supports <code>'&lt;broadcast&gt;'</code>, see <a href="https://docs.python.org/3/library/socket.html" rel="nofollow noreferrer">socket â€” Low-level networking interface</a></p>
<p>However, you can get broadcast mask of your network device using <strong>ipaddress</strong> package</p>
<pre><code>import ipaddress
import socket

netmask = '255.255.255.0'  # Netmask is to decode network and host addresses

ip  = socket.gethostbyname(socket.gethostname())  # Obtain your IP address
net = ipaddress.IPv4Network(ip + '/' + netmask, False)
broadcast = str(net.broadcast_address)

print('My broadcast address =', broadcast)
</code></pre>
</div>
<span class="comment-copy">Why are you trying to use that syntax?</span>
<span class="comment-copy">Becouse I want to use universal broadcast. In case I don't know subnet mask and subnet address. For example in my case mask is 255.255.255.0 and subnet is 192.168.1.0. But if mask is 255.255.0.0, and subnet is 192.168.0.0, broadcast should be 192.168.255.255. This syntax described in documentation, so I think it should work. Or no?</span>
<span class="comment-copy">I think that's just a placeholder meaning it's an exercise for the user. I don't remember how to get the bit mask off hand, but when you get it, you bit wise invert it and or it into the host IP address.</span>
