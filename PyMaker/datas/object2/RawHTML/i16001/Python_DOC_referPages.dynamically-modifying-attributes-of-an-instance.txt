<div class="post-text" itemprop="text">
<p>I have my problem solved, but I would like to know why. </p>
<p>My situation is as following:</p>
<p>I defined the class Vector as:</p>
<pre><code>class Vector:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y
</code></pre>
<p>And the following instance created:</p>
<pre><code>v1 = Vector(1,1)
</code></pre>
<p>Why the following code doesn't work</p>
<pre><code>def plus_one_A(thing):
    attrs = vars(thing)
    for attr_name, value in attrs.items():
        if type(value) == int or type(value) == float:                
            eval('thing.'+ attr_name + ' += 1')
    return thing

v2 = plus_one_A(v1)

thing.x += 1 
         ^
SyntaxError: invalid syntax
</code></pre>
<p>But the following does?</p>
<pre><code>def plus_one_B(thing):
    attrs = vars(thing)
    for attr_name, value in attrs.items():
        if type(value) == int or type(value) == float:                
            setattr(thing, attr_name, value + 1)
    return thing

v2 = plus_one_B(v1)
</code></pre>
<p>Isn't supposed those codes to be equivalent?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow"><code>exec</code></a> instead of <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow"><code>eval</code></a>. <code>eval</code> can be used only for a <a href="https://docs.python.org/3/reference/expressions.html" rel="nofollow"><strong>expression</strong></a>, not <code>statement</code>.</p>
<pre><code>&gt;&gt;&gt; eval('1 + 2')
3
&gt;&gt;&gt; eval('x = 1 + 2')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;string&gt;", line 1
    x = 1 + 2
      ^
SyntaxError: invalid syntax
&gt;&gt;&gt;
&gt;&gt;&gt; exec('x = 1 + 2')
&gt;&gt;&gt; x
3
</code></pre>
<p>BTW, <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow"><code>isinstance</code></a> not only accept a type object, but also accept a tuple of types for the second parameter.</p>
<pre><code>&gt;&gt;&gt; isinstance(1, (int, float))
True
&gt;&gt;&gt; isinstance(1.0, (int, float))
True
&gt;&gt;&gt; isinstance('1', (int, float))
False
</code></pre>
</div>
<span class="comment-copy">Hey, great answer!. That was what I was missing, now I know the difference between <code>exec()</code> and <code>eval()</code> (I thought they were the same, but I should have supposed that in Python <code>There should be one-- and preferably only one --obvious way to do it</code>). Great tip about <code>isinstance()</code> BTW</span>
