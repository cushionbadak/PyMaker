<div class="post-text" itemprop="text">
<p>I have a simple windows executable that asks for user input and I'm trying to make a python script to automate the input. 
What I've done:</p>
<pre><code>from subprocess import Popen, PIPE
p = Popen([r'myprgm.exe'], stdin=PIPE)
p.communicate(input=bytes(input("Test Input"), 'UTF-8'))
</code></pre>
<p>Now, normally when the program runs, it outputs to the command prompt "give me input:" then expects input from the user.</p>
<p>If I use Popen with the <code>stdin=PIPE</code> option, nothing is written to the command prompt at all - it just sits there blank.</p>
<p>Then, when I use communicate, "Test Input" ends up on the python console, and not to the process.</p>
<p>Is it possible to automate something like this? Or am I missing something fundamental here..</p>
</div>
<div class="post-text" itemprop="text">
<p>You can give <code>input</code> to <a href="https://docs.python.org/2/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow"><code>communicate</code></a> function.</p>
<p>like </p>
<pre><code>p1 = Popen(["mycmd"], stdin=PIPE, stdout=PIPE)
output = p1.communicate(input="my input")[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>"Test Input" ends up on the python console</p>
</blockquote>
<p>You see the output because <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input(prompt)</code> function</a> prints it. If you want to pass <code>Test Input</code> literally to the subprocess then drop <code>input()</code> call:</p>
<pre><code>#!/usr/bin/env python
from subprocess import Popen, PIPE

p = Popen('myprgm.exe', stdin=PIPE)
p.communicate(input=b"Test Input")
</code></pre>
<p>It is not guaranteed that <code>myprgm.exe</code> accepts utf-8 input on Windows (it might accept input encoded using Windows console OEM encoding such as <code>cp437</code> or Windows ANSI encoding such as <code>cp1252</code> instead) and therefore <code>bytes(unicode_string, 'utf-8')</code> input may be wrong. It should be ok to pass a bytestring with bytes in ascii range (created using <code>b''</code> bytes literal)).</p>
</div>
<span class="comment-copy">You have to give input before calling <code>communicate</code></span>
<span class="comment-copy">You need stdin=PIPE also.</span>
<span class="comment-copy">Sorry copy paste mistake :)</span>
<span class="comment-copy">OP uses Python 3 and where you must pass <code>bytes</code> as <code>input</code> value unless the text mode is enabled.</span>
