<div class="post-text" itemprop="text">
<p>So I've been practicing with functions but it just occurred to me now: </p>
<p>When you type in <code>float(3.14)</code>, you are simply calling the <code>float</code> function that has already been defined by the almighty built in Python. It works similarly to user defined functions like this one:</p>
<pre><code>def power (x):
    for i in range(x):
        x2=i**2
        print(x2)

power(4)
</code></pre>
<p>I mean float is also a data type so its probably not <strong>exactly</strong> the same, but is my logic sound?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow"><code>float</code></a> is a type. At the same time, it is callable like a function:</p>
<pre><code>&gt;&gt;&gt; type(float)
&lt;class 'type'&gt;
&gt;&gt;&gt; callable(float)
True


&gt;&gt;&gt; def power (x):
...     for i in range(x):
...         x2=i**2
...         print(x2)
...
&gt;&gt;&gt; type(power)
&lt;class 'function'&gt;
&gt;&gt;&gt; callable(power)
True
</code></pre>
<p>In python, types, classes, objects with <code>__call__</code> methods beside functions, methods are callable.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are correct that you're calling a float() function, yes.</p>
<p>On a different note:</p>
<p>The power function that you've defined probably doesn't behave like you want it to.  </p>
<p>You're shadowing your <code>x</code> parameter in the function with your <code>x</code> variable in the for loop.</p>
<p>No matter what you input, you're getting the same result because your x is instantly overwritten.</p>
<pre><code>def power (x):
    for x in range(6):
        x = x ** 2
        print(x)

&gt;&gt;&gt; power(1)
0
1
4
9
16
25
&gt;&gt;&gt; power(10)
0
1
4
9
16
25
</code></pre>
</div>
<span class="comment-copy">ah, I quickly wrote that up without double checking. Thanks for pointing that out.</span>
