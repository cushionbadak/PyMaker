<div class="post-text" itemprop="text">
<p>I would like to duplicate the items of a list into a new list, for example</p>
<pre><code>a=[1,2]
b=[[i,i] for i in a]
</code></pre>
<p>gives <code>[[1, 1], [2, 2]]</code>, whereas I would like to have <code>[1, 1, 2, 2]</code>.</p>
<p>I also found that I could use:</p>
<pre><code>b=[i for i in a for j in a]
</code></pre>
<p>but it seemed like overkill to use two <code>for</code> loops. Is it possible to do this using a single <code>for</code> loop? </p>
</div>
<div class="post-text" itemprop="text">
<p>You want <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow"><code>itertools.chain.from_iterable()</code></a>, which takes an iterable of iterables and returns a single iterable with all the elements of the sub-iterables (flattening by one level):</p>
<pre><code>b = itertools.chain.from_iterable((i, i) for i in a)
</code></pre>
<p>Combined with a generator expression, you get the result you want. Obviously, if you <em>need</em> a list, just call <code>list()</code> on the iterator, but in most cases that isn't needed (and is less efficient).</p>
<p>If, as Ashwini suggests, you want each item <code>len(a)</code> times, it's simple to do that as well:</p>
<pre><code>duplicates = len(a)
b = itertools.chain.from_iterable([i] * duplicates for i in a)
</code></pre>
<p>Note that any of these solutions do not copy <code>i</code>, they give you multiple references to the same element. Most of the time, that should be fine.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your two-loop code does not actually do what you want, because the inner loop is evaluated for every step of the outer loop. Here is an easy solution:</p>
<pre><code>b = [j for i in a for j in (i, i)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>xrange</code> and using a generator expression or a list comprehension</p>
<pre><code>b = (x for x in a for _ in xrange(2))

b = [x for x in a for _ in xrange(2)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you do not mind the order:</p>
<pre><code>&gt;&gt;&gt; a = [1,2]
&gt;&gt;&gt; a * 2

[1, 2, 1, 2]
</code></pre>
</div>
<span class="comment-copy">Do you want to repeat each item <b>2</b> times or <code>len(a)</code> times?</span>
<span class="comment-copy">Note that these are not just <code>for</code> loops, they are <a href="https://www.youtube.com/watch?v=pShL9DCSIUw" rel="nofollow noreferrer">list comprehensions</a>. It's worth knowing the mechanics of how they work, not least because there are a number of sibling constructs (generator expressions, set comprehensions, etc...) that have different behaviour.</span>
<span class="comment-copy">@AshwiniChaudhary I want to repeat each item 2 times, so <code>[1,2,3]</code> would become <code>[1,1,2,2,3,3]</code></span>
<span class="comment-copy">@HåkonHægland Then your list comprehension based code is actually wrong.</span>
<span class="comment-copy">@AshwiniChaudhary Thanks, I realized that now.</span>
<span class="comment-copy">Thanks for pointing this out!</span>
<span class="comment-copy">what is wrong with the answer ? doesnt not duplicate the items of the list as the OP is asking ?</span>
<span class="comment-copy">He wants [1, 1, 2, 2]. (I didn't downvote.)</span>
<span class="comment-copy">This definitely doesn't deserve a downvote - it may not be suitable for the OP's case, but it's a potential solution. The OP never said for sure order was required, and your answer notes that the order won't be as given. This is a good answer for cases where someone doesn't care - which may well be the case if someone comes to this question.</span>
