<div class="post-text" itemprop="text">
<p>What does the <code>:=</code> operand mean, more specifically for Python?</p>
<p>Can someone explain how to read this snippet of code?</p>
<pre><code>node := root, cost = 0
frontier := priority queue containing node only
explored := empty set
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you have found is <strong>pseudocode</strong></p>
<p><a href="http://en.wikipedia.org/wiki/Pseudocode">http://en.wikipedia.org/wiki/Pseudocode</a></p>
<blockquote>
<p><strong>Pseudocode</strong> is an informal high-level description of the operating
  principle of a computer program or other algorithm.</p>
</blockquote>
<p>the <code>:=</code> operator is actually the assignment operator. In python this is simply the <code>=</code> operator. </p>
<p>To translate this pseudocode into Python you would need to know the data structures being referenced, and a bit more of the algorithm implementation.  </p>
<p>Some notes about psuedocode </p>
<p><code>:=</code> is the assignment operator or <code>=</code> in python</p>
<p><code>=</code> is the equality operator or <code>==</code> in python </p>
<p>Note that there are certain styles of pseudocode and your mileage may vary:</p>
<h2>Pascal Style PseudoCode</h2>
<pre><code>procedure fizzbuzz
For i := 1 to 100 do
    set print_number to true;
    If i is divisible by 3 then
        print "Fizz";
        set print_number to false;
    If i is divisible by 5 then
        print "Buzz";
        set print_number to false;
    If print_number, print i;
    print a newline;
end
</code></pre>
<h2>C-Style Pseudocode</h2>
<pre><code>void function fizzbuzz
For (i = 1; i &lt;= 100; i++) {
    set print_number to true;
    If i is divisible by 3
        print "Fizz";
        set print_number to false;
    If i is divisible by 5
        print "Buzz";
        set print_number to false;
    If print_number, print i;
    print a newline;
}
</code></pre>
<p>Note the differences in brace usage and assignment operator. </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://www.python.org/dev/peps/pep-0572/" rel="noreferrer">PEP572</a> proposed support for the <code>:=</code> operator in Python to allow variable assignments within expressions.</p>
<p>This syntax will be available in Python 3.8.</p>
</div>
<div class="post-text" itemprop="text">
<p>The code in the question is pseudo-code; there, <code>:=</code> represents assignment.</p>
<p>For future visitors, though, the following might be more relevant: the next version of Python (3.8) will gain a new operator, <code>:=</code>, allowing <em>assignment expressions</em> (details, motivating examples, and discussion can be found in <a href="https://www.python.org/dev/peps/pep-0572/" rel="nofollow noreferrer">PEP 572</a>, which was provisionally accepted in late June 2018).</p>
<p>With this new operator, you can write things like these:</p>
<pre><code>if (m := re.search(pat, s)):
    print m.span()
else if (m := re.search(pat2, s):
    …

while len(bytes := x.read()) &gt; 0:
    … do something with `bytes`

[stripped for l in lines if len(stripped := l.strip()) &gt; 0]
</code></pre>
<p>instead of these:</p>
<pre><code>m = re.search(pat, s)
if m:
    print m.span()
else:
    m = re.search(pat2, s)
    if m:
        …

while True:
    bytes = x.read()
    if len(bytes) &lt;= 0:
        return
    … do something with `bytes`

[l for l in (l.stripped() for l in lines) if len(l) &gt; 0]
</code></pre>
</div>
<span class="comment-copy">This is not Python code; this is more a (formal) syntax declaration, e.g. of some configuration file. Compare <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow noreferrer">docs.python.org/3/library/string.html#formatstrings</a> for example.</span>
<span class="comment-copy"><code>:=</code> means <i>Syntax Error</i> in Python, e.g. it is not valid syntax when used in Python code.</span>
<span class="comment-copy">Or pseudocode. <code>:=</code> usually means assignment, though.</span>
<span class="comment-copy">this is a pretty valid question from someone who is just learning python and just found some (and didn't realize it) pseudocode.  I don't think this needs downvotes, just a straight forward answer.</span>
<span class="comment-copy">Yeah, sorry, I'm really new to python and was trying to make sense of some random code I found. Thanks for the clarification on it being pseudo code.</span>
<span class="comment-copy">Hi @MikeMcMahon, just a heads up -- as of the introduction of assignment operator syntax, which uses <code>:=</code>, in PEP572 (due to be implemented for Python 3.8), this answer is out-of-date.</span>
<span class="comment-copy">@Jules in the context of the question it is very accurate as <code>:=</code> would bomb out on the examples, but a link to the relevant PEP is likely in order.</span>
<span class="comment-copy">PEP 577 is withdrawn</span>
<span class="comment-copy"><a href="https://www.python.org/dev/peps/pep-0577/" rel="nofollow noreferrer">PEP 577</a> is in competition with PEP 572.</span>
<span class="comment-copy">It was; it was withdrawn by its author.</span>
<span class="comment-copy">Oh, you're right. That's too bad. I liked 577 better.</span>
