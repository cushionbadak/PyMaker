<div class="post-text" itemprop="text">
<p><strong>My objective:</strong> In the current working directory, if a folder called <code>temp</code> exists then delete it and create a new one, else simply create the folder <code>temp</code>.Then copy a user entered <code>filename</code> from the current working directory to the newly created <code>temp</code> folder.</p>
<p><strong>Problem:</strong> I'm getting <code>WindowsError at line 8(shutil.rmtree(temp_path))</code> stating <code>The directory name is invalid</code></p>
<pre><code>user_file_name = raw_input('Enter the file name:')

cwd = os.getcwd()

temp_path = cwd + r'\temp'

if os.path.exists(temp_path):
   shutil.rmtree(temp_path)
   os.makedirs(temp_path) 
else:
   os.makedirs(temp_path)

temp_xml_path = temp_path + "\\" + user_file_name
xml_path = cwd + "\\" + user_file_name

shutil.copyfile(xml_path, temp_xml_path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can avoid a lot of potential issues by using <a href="https://docs.python.org/2/library/os.path.html" rel="nofollow"><code>os.path.join()</code></a> to create your paths.  What the function does is automatically insert the OS's path delimiter between the args.  Since the delimeter is <code>\</code> on Windows, you can make your life much easier by using it instead of manual string concatenation.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Problem with backslash escaping. Try doing </p>
<pre><code>xml_path.encode("string-escape")
</code></pre>
<p>and the same for temp_xml_path before passing it to copyfile.</p>
</div>
<div class="post-text" itemprop="text">
<p>temp_path is with only one \, but it is better to use os.path.join</p>
<pre><code>temp_path = cwd + r'\\temp'
</code></pre>
</div>
<span class="comment-copy">When creating the path, try using <code>os.path.join(temp_path, user_file_name)</code>.</span>
<span class="comment-copy">Agree with @wnnmaw it is safer to use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join</code></a> to create paths than trying to append strings. This is also true of other path manipulation, e.g. getting relative paths, traversing directories, etc.</span>
<span class="comment-copy">How about a more descriptive title?</span>
<span class="comment-copy">The other key point about using <code>os.path.join</code> is that it's a portable method that will work for all OSes so it gets around the various different path conventions</span>
<span class="comment-copy">@AndyG You can suggest a better title if you want</span>
<span class="comment-copy"><code>r'\temp'</code> works just fine</span>
<span class="comment-copy">indeed I was wrong r'' is a raw string so no need to escape it.</span>
