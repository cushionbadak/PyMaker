<div class="post-text" itemprop="text">
<p>Should be quick, but I can't for the life of me figure this one out.</p>
<p>I'm given the following strings:</p>
<ul>
<li>201408110000</li>
<li>201408120001</li>
<li>201408130002</li>
</ul>
<p>Which I loaded as a date(?) time object via the following:</p>
<pre><code>dt = time.strptime(datestring, '%Y%m%d%H%M%S')
</code></pre>
<p>Where datestring is the string.</p>
<p>From there, how do I output the following:</p>
<ul>
<li>11-Aug-14</li>
<li>12-Aug-14</li>
<li>13-Aug-14</li>
</ul>
<p>I tried <code>str(dt)</code> but all it gave me was this weird thing:</p>
<blockquote>
<p>time.struct_time(tm_year=2014, tm_mon=8, tm_mday=11, tm_hour=12,
  tm_min=1, tm_sec=5, tm_wday=0, tm_yday=223, tm_isdst=-1)</p>
</blockquote>
<p>What am I doing wrong? Anything I add so far to <code>dt</code> gives me <code>attribute does not exist</code> or something.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <strong>strftime</strong></p>
<pre><code>&gt;&gt; dt = time.strftime('%d-%b-%Y', dt)
&gt;&gt; print dt
11-Aug-2014
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you use <code>time</code> module it return a time struct type. Using <code>datetime</code> returns a datetime type.</p>
<pre><code>from datetime import datetime

datestring = '201408110000'

dt = datetime.strptime(datestring, '%Y%m%d%H%M%S')

print dt
2014-08-11 00:00:00

print dt.strftime("%d-%b-%Y")
11-Aug-2014

print dt.strftime("%d-%b-%y")
11-Aug-14
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime
datestring = "201408110000"
print datetime.strptime(datestring, '%Y%m%d%H%M%S').strftime("%d-%b-%Y")
11-Aug-2014
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're doing a lot of parsing of variety of input time formats, consider also installing and using the <code>dateutil</code> package.  The <code>parser</code> module will eat a variety of time formats without specification, such as this concise "one-liner":</p>
<pre><code>from dateutil import parser
datestring = '201408110000'
print parser.parse(datestring).strftime("%d-%b-%Y")
</code></pre>
<p>This uses <code>parser</code> to eat the datestring into a <code>datetime</code>, which is then reformatted using <code>datetime.strftime()</code>, not to be confused with <code>time.strftime()</code>, used in a different answer.</p>
<p>See more at <a href="https://pypi.python.org/pypi/python-dateutil" rel="nofollow">https://pypi.python.org/pypi/python-dateutil</a> or the <a class="post-tag" href="/questions/tagged/python-dateutil" rel="tag" title="show questions tagged 'python-dateutil'">python-dateutil</a> tag.</p>
</div>
<span class="comment-copy">Have you tried <code>strftime</code>?</span>
<span class="comment-copy">Yes, but I'm probably not doing it right. I keep getting <code>attribute does not exist</code>.</span>
<span class="comment-copy">This did the trick, thanks.</span>
<span class="comment-copy">Is datetime built-in to Python? I just used <code>import time</code>. I recall having to install a plug-in or something on my local computer (can't remember if it's datetime or dateutil or something else), which is something I can't do once I migrate this to a server.</span>
<span class="comment-copy"><code>datetime</code> is standard. See list of formatting otions for <code>strftime</code> <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">in the docs</a>.</span>
<span class="comment-copy"><code>datetime</code> is builtin. You should have installed <a href="https://labix.org/python-dateutil" rel="nofollow noreferrer">dateutil</a></span>
