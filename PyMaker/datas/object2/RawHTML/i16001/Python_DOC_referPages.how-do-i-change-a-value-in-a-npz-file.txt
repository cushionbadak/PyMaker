<div class="post-text" itemprop="text">
<p>I want to change one value in an <strong><code>npz</code></strong> file.</p>
<p>The <code>npz</code> file contains several <code>npy</code>'s, I want all but one ( '<code>run_param</code>' ) to remain unchanged and I want to save over the original file.</p>
<p>This is my working code:</p>
<pre><code>DATA_DIR = 'C:\\Projects\\Test\\data\\'
ass_file = np.load( DATA_DIR + 'assumption.npz' )
run_param = ass_file['run_param']

print ass_file['run_param'][0]['RUN_MODE']
ass_file['run_param'][0]['RUN_MODE'] = 1        (has no effect)
print ass_file['run_param'][0]['RUN_MODE']

print run_param[0]['RUN_MODE']
run_param[0]['RUN_MODE'] = 1
print run_param[0]['RUN_MODE']
</code></pre>
<p>This produces:</p>
<pre><code>0
0
0
1
</code></pre>
<p>I can't seem to change the value in the original <code>npy</code>.</p>
<p>My code to save afterward is:</p>
<pre><code>np.savez( DATA_DIR + 'assumption.npz', **ass_file )   #
ass_file.close()
</code></pre>
<p><strong>How to make this work?</strong></p>
</div>
<div class="post-text" itemprop="text">
<h2>Why your code did not work</h2>
<p>What you get from <code>np.load</code> is a <a href="https://github.com/numpy/numpy/blob/5ac270b06e411dd0e13108ed5dafad31d5ab589d/numpy/lib/npyio.py#L104" rel="noreferrer"><code>NpzFile</code></a>, which may look like a dictionary but isn't. Every time you access one if its items, it reads the array from file, and returns a new object. To demonstrate:</p>
<pre><code>&gt;&gt;&gt; import io
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; tfile = io.BytesIO()  # create an in-memory tempfile
&gt;&gt;&gt; np.savez(tfile, test_data=np.eye(3))  # save an array to it
&gt;&gt;&gt; tfile.seek(0)  # to read the file from the start
0
&gt;&gt;&gt; npzfile = np.load(tfile)
&gt;&gt;&gt; npzfile['test_data']
array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]])
&gt;&gt;&gt; id(npzfile['test_data'])
65236224
&gt;&gt;&gt; id(npzfile['test_data'])
65236384
&gt;&gt;&gt; id(npzfile['test_data'])
65236704
</code></pre>
<p>The <code>id</code> function for the same object is always the same. From the <a href="https://docs.python.org/3/library/functions.html#id" rel="noreferrer">Python 3 Manual</a>:</p>
<blockquote>
<p><strong>id</strong>(<em>object</em>) 
   Return the “identity” of an object. This is an integer which is guaranteed to be unique and constant for this object during its lifetime. ...</p>
</blockquote>
<p>This means that in our case, each time we call <code>npz['test_data']</code> we get a new object. This "lazy reading" is done to preserve memory and to read only the required arrays. In your code, you modified this object, but then discarded it and read a new one later.</p>
<hr/>
<h2>So what can we do?</h2>
<p>If the <code>npzfile</code> is this weird <code>NpzFile</code> instead of a dictionary, we can simply convert it to a dictionary:</p>
<pre><code>&gt;&gt;&gt; mutable_file = dict(npzfile)
&gt;&gt;&gt; mutable_file['test_data'][0,0] = 42
&gt;&gt;&gt; mutable_file
{'test_data': array([[ 42.,   0.,   0.],
                     [  0.,   1.,   0.],
                     [  0.,   0.,   1.]])}
</code></pre>
<p>You can edit the dictionary at will and save it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>numpy.savez</code> with <strong>**kwds</strong>, the arrays are <strong>saved <em>with</em> the keyword names</strong>.</p>
<pre><code>   &gt;&gt;&gt; outfile = TemporaryFile()
   &gt;&gt;&gt; np.savez(outfile, x=x, y=y)
   &gt;&gt;&gt; outfile.seek(0)
   &gt;&gt;&gt; npzfile = np.load(outfile)
   &gt;&gt;&gt; npzfile.files
   ['y', 'x']
   &gt;&gt;&gt; npzfile['x']
   array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<p>while
using <code>savez</code> with "just" <strong><code>*args</code></strong>, the <strong>arrays are saved with default names</strong>.</p>
<pre><code> &gt;&gt;&gt; np.savez(outfile, x, y)
 &gt;&gt;&gt; outfile.seek(0) # Only needed here to simulate closing &amp; reopening file
 &gt;&gt;&gt; npzfile = np.load(outfile)
 &gt;&gt;&gt; npzfile.files
 ['arr_1', 'arr_0']
 &gt;&gt;&gt; npzfile['arr_0']
 array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<p>Re-read at least the docstring numpy help and use the proposed syntax.</p>
<pre><code>   print numpy.savez.__doc__
</code></pre>
</div>
<span class="comment-copy"><i>"I'm not sure if this will work either"</i> - haven't you tested it?</span>
<span class="comment-copy">I maybe should not have included the section about saving after in my question as I really have not spent enough time trying it myself.  My main problem is changing the value in 'ass_file'. @jonrshape</span>
