<div class="post-text" itemprop="text">
<p>I've created a GUI using wxFormBuilder that should allow a user to enter the names of "visitors to a business" into a list and then click one of two buttons to return the most frequent and least frequent visitors to the business. </p>
<p>I created an earlier version that, unfortunately, gave me the range of visitors, rather than the name of the most/least frequent visitor. I've attached a screenshot of the GUI I've created to help add a little clarity to the issue ( <a href="http://imgur.com/XJnvo0U">http://imgur.com/XJnvo0U</a> ). </p>
<p>A new code version takes a different tack than the earlier version, and I can't get it to throw anything. Instead, I keep receiving this error:  </p>
<p><strong>ValueError: max() arg is an empty sequence</strong></p>
<p>In relation to this line: </p>
<p><strong>self.txtResults.Value = k.index(max(v))</strong></p>
<pre><code>import wx
import myLoopGUI
import commands

class MyLoopFrame(myLoopGUI.MyFrame1):
    def __init__(self, parent):
        myLoopGUI.MyFrame1.__init__(self, parent)

    def clkAddData(self,parent):
        if len(self.txtAddData.Value) != 0:
            try:
                myname = str(self.txtAddData.Value)
                self.listMyData.Append(str(myname))
            except:
                wx.MessageBox("This has to be a name!")            
        else:
            wx.MessageBox("This can't be empty")




    def clkFindMost(self, parent):
        self.listMyData = []
        unique_names = set(self.listMyData)
        frequencies = {}
        for name in unique_names:
            if frequencies.get[name]:
                frequencies[name] += 1
            else:
                frequencies[name] = 0

        v = list(frequencies.values())
        k = list(frequencies.keys())
        self.txtResults.Value = k.index(max(v))


    def clkFindLeast(self, parent):
        unique_names = set(self.listMyData)
        frequencies = {}
        for name in unique_names:
            if frequencies.get(name):
                frequencies[name] += 1
            else:
                frequencies[name] = 0

        v = list(frequencies.values())
        k = list(frequencies.keys())
        self.txtResults.Value = k.index(min(v))

myApp = wx.App(False)
myFrame = MyLoopFrame(None)
myFrame.Show()
myApp.MainLoop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you are always initialising <code>self.listMyData</code> to an empty list in <code>clkFindMost</code> your code will always lead to this error* because after that both <code>unique_names</code> and <code>frequencies</code> are empty iterables, so fix this.</p>
<p>Another thing is that since you're iterating over a set in that method then calculating frequency makes no sense as set contain only unique items, so frequency of each item is always going to be 1.</p>
<p>Lastly <code>dict.get</code> is a method not a list or dictionary so you can't use <code>[]</code> with it:</p>
<p>Correct way is:</p>
<pre><code>if frequencies.get(name):
</code></pre>
<p>And Pythonic way is:</p>
<pre><code>if name in frequencies:
</code></pre>
<p>The Pythonic way to get the frequency of items is to use <a href="https://docs.python.org/2/library/collections.html#collections.Counter" rel="noreferrer"><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter   #Add this at the top of file.

def clkFindMost(self, parent):

        #self.listMyData = []   
        if self.listMyData:
           frequencies = Counter(self.listMyData)
           self.txtResults.Value = max(frequencies, key=frequencies.get)
        else:
           self.txtResults.Value = '' 
</code></pre>
<hr/>
<p><code>max()</code> and <code>min()</code> throw such error when an empty iterable is passed to them. You can check the length of <code>v</code> before calling <code>max()</code> on it.</p>
<pre><code>&gt;&gt;&gt; lst = []
&gt;&gt;&gt; max(lst)

Traceback (most recent call last):
  File "&lt;pyshell#2&gt;", line 1, in &lt;module&gt;
    max(lst)
ValueError: max() arg is an empty sequence
&gt;&gt;&gt; if lst:
    mx = max(lst)
else:
    #Handle this here
</code></pre>
<p>If you are using it with an iterator then you need to consume the iterator first before calling <code>max()</code> on it because boolean value of iterator is always <code>True</code>, so we can't use <code>if</code> on them directly:</p>
<pre><code>&gt;&gt;&gt; it = iter([])
&gt;&gt;&gt; bool(it)
True
&gt;&gt;&gt; lst = list(it)
&gt;&gt;&gt; if lst:
       mx = max(lst)
    else:
      #Handle this here   
</code></pre>
<p>Good news is starting from Python 3.4 you will be able to <a href="https://docs.python.org/3/whatsnew/3.4.html#other-language-changes" rel="noreferrer">specify an optional return value</a> for <code>min()</code> and <code>max()</code> in case of empty iterable.</p>
</div>
<div class="post-text" itemprop="text">
<p>When the length of v will be zero, it'll give you the value error. </p>
<p>You should check the length or you should check the list first whether it is none or not.</p>
<pre><code>if list:
    k.index(max(list))
</code></pre>
<p>or </p>
<pre><code>len(list)== 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>in one line,</p>
<p><code>v = max(v) if v else None</code></p>
<pre><code>&gt;&gt;&gt; v = []
&gt;&gt;&gt; max(v)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: max() arg is an empty sequence
&gt;&gt;&gt; v = max(v) if v else None
&gt;&gt;&gt; v
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">When <code>len(v) == 0</code>, in <code>clkFindMost</code>, <code>max(v)</code> raises <code>ValueError</code>.</span>
<span class="comment-copy">this type of error comes when you pass empty list in max(). So check if list is available than pass it into the max</span>
<span class="comment-copy">Thanks for the explanation. Had a similar issue when I closed my PyQt application and max was called on an empty list.</span>
