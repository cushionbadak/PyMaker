<div class="post-text" itemprop="text">
<p>I would like to check programmatically if print is a built-in Python funcion.</p>
<p>Using Python 3.4.x when querying <code>dir(__builtins__)</code> from the Python command line I get what I'm looking for:</p>
<pre><code>['ArithmeticError', 'AssertionError', ..... , 'pow', 'print' ... ]
</code></pre>
<p>But when using it in a .py file:</p>
<pre><code>import sys

def foo:
   print(dir(__builtins__))
</code></pre>
<p>The call returns:</p>
<pre><code> ['__class__', '__contains__', '__delattr__', '__delitem__', '__dir__',
 '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__',
 '__getitem__', '__gt__', '__hash__', '__init__', '__iter__', '__le__',
 '__len__', '__lt__', '__ne__', '__new__', '__reduce__',
 '__reduce_ex__', '__repr__', '__setattr__', '__setitem__',
 '__sizeof__', '__str__', '__subclasshook__', 'clear', 'copy',
 'fromkeys', 'get', 'items', 'keys', 'pop', 'popitem', 'setdefault',
 'update', 'values']
</code></pre>
<p>I haven't redefined <code>__builtins__</code> at any point.</p>
</div>
<div class="post-text" itemprop="text">
<p>Quoting the <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow"><code>builtins</code> module documentation</a>:</p>
<blockquote>
<p>As an implementation detail, most modules have the name <code>__builtins__</code> made available as part of their globals. The value of <code>__builtins__</code> is normally either this module or the value of this moduleâ€™s <code>__dict__</code> attribute. Since this is an implementation detail, it may not be used by alternate implementations of Python.</p>
</blockquote>
<p>In the command prompt, you are looking at the module object, vs. the <code>__dict__</code> object when running the code in a python file. The <code>dir()</code> of a dictionary is rather different from <code>dir()</code> on a module object.</p>
<p>Rather than look at <code>__builtins__</code>, use the <code>builtins</code> module:</p>
<pre><code>import builtins

hasattr(builtins, 'print')
</code></pre>
</div>
<span class="comment-copy">Works for me! Thank you for the great explanation.</span>
