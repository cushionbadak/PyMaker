<div class="post-text" itemprop="text">
<p>I have a Enum.</p>
<pre><code>   from enum import Enum

   class AuthMixin(Enum):                                                                        
      if 'Production' in utils.whichBranch():
  #PRODUCTION             
         mongoport = os.environ.get("MONGO_PORT")

   ......  
</code></pre>
<p>I'm trying to call it in another script.</p>
<pre><code>    ....

    import mylib.python.auth as a
    import redis

    auth = a.AuthMixin()                                         

    ....    
</code></pre>
<p>It's a No Go... Here's my error:</p>
<pre><code>    Traceback (most recent call last):
    ......
    auth = a.AuthMixin()
    TypeError: __call__() takes at least 2 arguments (1 given)
</code></pre>
<p>I don't understand what else I must add.
School me on the understanding.</p>
<p>Edit:</p>
<p>I think im on to the understanding....</p>
<pre><code>   "Even though we use the class syntax to create Enums, 
   Enums are not normal Python classes. See How are Enums different? 
   for more details." - [https://pypi.python.org/pypi/enum34][1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Note, Enum's can be instantiated, but you actually instantiate an Enum object to create a single instance of an Enum Member. In order to do so, you need to pass the index of the member within the Enum.</p>
<p>Refer <a href="https://docs.python.org/3/library/enum.html#programmatic-access-to-enumeration-members-and-their-attributes" rel="nofollow">Programmatic access to enumeration members and their attributes</a></p>
<p>Moreover, it is odd, the way you are trying to use the Enum. <strong>Enumerators, are there, to enumerate a set of unique names bound to a constant value.</strong></p>
<p>Based on your usage, I apprehend, you actually never intended to instantiate <code>AuthMixin</code>, but rather want an alias for the enum, and as a particular example and use case for your exampe would be somewhat like this</p>
<pre><code>auth = a.AuthMixin
print auth.mongoport #Access the Enumerator
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the enum class has a "_ <em>init</em> _(param)" function with param.</p>
</div>
<span class="comment-copy">Remove the <code>()</code>s from <code>auth = a.AuthMixin</code>.</span>
<span class="comment-copy">exactly, I intend to use the enum as such.... mongoport = auth.mongoport.value</span>
<span class="comment-copy">I just took this opportunity to learn more about enums in general but a standard class would suffice, I take it.</span>
<span class="comment-copy">it's odd that I had this working previous days ago but forgot to document the usage. dang!</span>
