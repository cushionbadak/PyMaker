<div class="post-text" itemprop="text">
<p>Right now, my Counter looks like this:</p>
<pre><code>(('you', 'call'), 3.2875047316896584): 1, 
(('bonus', 'offer'), 5.880001319229578): 1, 
(('without', 'warranty'), 10.11244740522995): 1
</code></pre>
<p>I am trying to pass these values into a Pandas DF with Three columns, Bigrams, Score, and Frequency</p>
<p>So for example, using the first value above, my expected DF looks like</p>
<pre><code> Bigrams        Score                   Frequency
 you call       3.2875047316896584         1
</code></pre>
<p>I am trying to use this bit of code to do so, but it keeps giving me an error</p>
<pre><code> c = Counter()
 frequencies = [[" ".join(k),v,d] for k,v,d in c]
 frame = pd.DataFrame(frequencies, columns=['Bigrams','Score','Frequency'])
</code></pre>
<p>However, this keeps saying: Value Error: need more than 2 values to unpack.  What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using both keys and values.  Iterating a dictionary (mapping) yields keys only. Use <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow"><code>dict.items</code></a> to make it yields both.</p>
<p>And, use tuple unpacking correctly. It should match items yielded.</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt;
&gt;&gt;&gt; c = Counter({
...     (('you', 'call'), 3.2875047316896584): 1,
...     (('bonus', 'offer'), 5.880001319229578): 1,
...     (('without', 'warranty'), 10.11244740522995): 1
... })
&gt;&gt;&gt; frequencies = [[" ".join(k),v,d] for (k, v), d in c.items()]
&gt;&gt;&gt; frame = pd.DataFrame(frequencies, columns=['Bigrams','Score','Frequency'])
&gt;&gt;&gt; print(frame)
            Bigrams      Score  Frequency
0       bonus offer   5.880001          1
1  without warranty  10.112447          1
2          you call   3.287505          1
</code></pre>
</div>
