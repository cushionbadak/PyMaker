<div class="post-text" itemprop="text">
<p>How would I check to see if a list contains other lists? 
I need it so that </p>
<p><code>[['cow'], 12, 3, [[4]]]</code></p>
<p>would output <code>True</code>, while something like</p>
<p><code>['cow', 12, 3, 4]</code></p>
<p>would output <code>False</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you also want to find subclasses of lists then you should use <a href="https://docs.python.org/library/functions.html#isinstance" rel="nofollow noreferrer"><code>isinstance</code></a>:</p>
<pre><code>def any_list_in(obj):
    return any(isinstance(item, list) for item in obj)
</code></pre>
<p><a href="https://docs.python.org/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a> stops as soon as the condition is <code>True</code> so this only needs to check only as many items as necessary.</p>
<pre><code>&gt;&gt;&gt; any_list_in([['cow'], 12, 3, [[4]]])
True

&gt;&gt;&gt; any_list_in(['cow', 12, 3, 4])
False
</code></pre>
<p>The <code>isinstance(item, list) for item in obj</code> is a <a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">generator expression</a> that works similar to a <code>for</code>-loop or a list-comprehension. It could also be written as (longer and slightly slower but maybe that's better to comprehend):</p>
<pre><code>def any_list_in(obj):
    for item in obj:
        if isinstance(item, list):
            return True
    return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this method if your list does not contain some string with '[' int it .</p>
<pre><code>def check(a):
   a=str(a)
   if a.count('[')==1:  # or a.count(']')==1;
      return False
   return True
</code></pre>
<p>In python 2.7 we have a module for this work:( I don't know about any such module in python 3.x )</p>
<pre><code>from compiler.ast import flatten    
def check(a):
    if flatten(a)==a:
        return False
    return True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a neat solution using a list comprehension.</p>
<p>Given <code>obj = [['cow'], 12, 3, [[4]]]</code>, we'll first use a list comprehension to get a list of <em>types</em> in <code>obj</code>:</p>
<pre><code>&gt;&gt;&gt; [type(x) for x in obj]
[&lt;type 'list'&gt;, &lt;type 'int'&gt;, &lt;type 'int'&gt;, &lt;type 'list'&gt;]
</code></pre>
<p>Now, we simply check if <code>list</code> is in the list of types we created. Let's revisit our list comprehension and turn it into a boolean expression:</p>
<pre><code>&gt;&gt;&gt; list in [type(x) for x in obj]
</code></pre>
<p>There, that's nice and short. So does it work?</p>
<pre><code>&gt;&gt;&gt; obj = [['cow'], 12, 3, [[4]]]
&gt;&gt;&gt; list in [type(x) for x in obj]
True
&gt;&gt;&gt; obj = ['cow', 12, 3, 4]
&gt;&gt;&gt; list in [type(x) for x in obj]
False
</code></pre>
</div>
<span class="comment-copy"><code>['cow'] in lst</code> is all you need</span>
<span class="comment-copy">Do you need to check for specific inner lists, or check if there are any inner lists at all?</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/2225038/determine-the-type-of-a-python-object" title="determine the type of a python object">stackoverflow.com/questions/2225038/â€¦</a></span>
<span class="comment-copy">@WilliamStern Please don't forget to mark an answer as <a href="http://stackoverflow.com/help/accepted-answer">accepted</a>. <a href="http://stackoverflow.com/questions/42195831">It seems you are using the code from my answer already</a> :)</span>
<span class="comment-copy"><i>longer and slightly slower</i> Why would it be slower?</span>
<span class="comment-copy">@Gabriel Because the builtin-<code>any</code> is written in C (at least if we're talking about CPython), while the loop+<code>if</code> is "only" Python.</span>
<span class="comment-copy">Don't call the list <code>input</code> and <code>type(list())</code> literally <i>is</i> <code>list</code>.</span>
<span class="comment-copy">@Wombatz thanks for the pointer on the redundancy of <code>type(list())</code>, I updated my answer. What's the concern with the use of <code>input</code> on a code example?</span>
<span class="comment-copy">It's a <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">built-in function</a> in both python2 and python3</span>
<span class="comment-copy">@Wombatz Thanks for your corrections, much appreciated. I'll update the answer again :)</span>
