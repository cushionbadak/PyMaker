<div class="post-text" itemprop="text">
<p>I found some code in the <code>shutil</code> module in the standard library that I do not understand.</p>
<p><code>_use_fd_functions</code> ends up holding a truthy/falsy value, and it's initialized like this:</p>
<pre><code>_use_fd_functions = ({os.open, os.stat, os.unlink, os.rmdir} &lt;=
                     os.supports_dir_fd and
                     os.listdir in os.supports_fd and
                     os.stat in os.supports_follow_symlinks)
</code></pre>
<p><code>{os.open, os.stat, os.unlink, os.rmdir}</code> are all functions, and the right argument to <code>&lt;=</code> looks like a boolean, but according to the source, they're functions and sets of functions.</p>
<p>I was not able to recreate this behavior in the Python 3.5.2 repl: (tracebacks removed)</p>
<pre><code>&gt;&gt;&gt; {lambda x: x} &lt;= True
TypeError: unorderable types: set() &lt;= bool()
&gt;&gt;&gt; {True} &lt;= True
TypeError: unorderable types: set() &lt;= bool()
&gt;&gt;&gt; {lambda x: x} &lt;= (lambda x: x+1)
TypeError: unorderable types: set() &lt;= function()
&gt;&gt;&gt; {lambda x: x} &lt;= (lambda x: x+1) in {lambda x: x+1}
TypeError: unorderable types: set() &lt;= function()
</code></pre>
<p>Of course, since an experienced developer was not able to decipher the code in a few seconds, the code is being too smart. But how does it work, and what does it do?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your answer is found in the <a href="https://github.com/python/cpython/blob/f15fa87e5a66c0000f63be5065ddee4a52d5660f/Lib/os.py#L104-L121" rel="nofollow noreferrer">os module</a>:</p>
<pre><code>_set = set()
_add("HAVE_FACCESSAT",  "access")
_add("HAVE_FCHMODAT",   "chmod")
_add("HAVE_FCHOWNAT",   "chown")
_add("HAVE_FSTATAT",    "stat")
_add("HAVE_FUTIMESAT",  "utime")
_add("HAVE_LINKAT",     "link")
_add("HAVE_MKDIRAT",    "mkdir")
_add("HAVE_MKFIFOAT",   "mkfifo")
_add("HAVE_MKNODAT",    "mknod")
_add("HAVE_OPENAT",     "open")
_add("HAVE_READLINKAT", "readlink")
_add("HAVE_RENAMEAT",   "rename")
_add("HAVE_SYMLINKAT",  "symlink")
_add("HAVE_UNLINKAT",   "unlink")
_add("HAVE_UNLINKAT",   "rmdir")
_add("HAVE_UTIMENSAT",  "utime")
supports_dir_fd = _set
</code></pre>
<p><code>os.supports_dir_fd</code> is a set of functions.</p>
<p>In Python <code>and</code> have <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">lower precedence</a> than <code>&lt;=</code> so your set comparison is evaluated first. For <code>set</code> this operator checks if the first set <a href="https://docs.python.org/3/library/stdtypes.html#set.issubset" rel="nofollow noreferrer">is a subset</a> of the second set.</p>
<p><code>os.supports_dir_fd</code> lists the kind of file operations you can do. This can differ between operating systems, so the <code>os</code> module takes different code paths depending on the current environment. For each function, <code>_add</code> will check if it is allowed on the current OS. So the intent of the code snippet you are asking about is to see if the operations <code>open</code>, <code>stat</code>, <code>unlink</code> and <code>rmdir</code> are supported, and then it does some more checks for specific behaviours that <code>shutil</code> wants to use. In the end, <code>_use_fd_functions</code> will tell if <code>shutil</code> should use file descriptor functions ("fd") at all, depending on what you can do in the current environment.</p>
</div>
<span class="comment-copy">Is the source code in Python 2? There, comparing a <code>set</code> to a <code>boolean</code> does not throw a <code>TypeError</code>. I don't remember the rule (which is part of the reason such a behavior was removed), but something clever is going on here.</span>
<span class="comment-copy">I don't really understand what this does but <code>{lambda x: x} &lt;= (lambda x: x+1) in {lambda x: x+1}</code> returns <code>False</code> in Python 2.7 btw.</span>
<span class="comment-copy">@juanpa.arrivillaga The path to the <code>shutil</code> I read is <code>C:\Python35\Lib\shutil.py</code>. I expect it to be Python 3.5.</span>
<span class="comment-copy">Maybe I'm being slow but I'm struggling to piece together the intent of the original code from this. Are you able to state it on a high level?</span>
<span class="comment-copy">I tried to explain that too.</span>
<span class="comment-copy">Appreciated, it makes a lot more sense to me now</span>
