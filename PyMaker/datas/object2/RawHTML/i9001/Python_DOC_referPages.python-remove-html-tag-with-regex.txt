<div class="post-text" itemprop="text">
<p>This usually is no hard task, but today I can't seem to remove a simple javascript tag..</p>
<p>The example I'm working with <em>(formated)</em>:</p>
<pre><code>&lt;section class="realestate oca"&gt;&lt;/section&gt;
&lt;script type="text/javascript" data-type="ad"&gt;
    window.addEventListener('DOMContentLoaded', function(){
        window.postscribe &amp;&amp; postscribe(document.querySelector(".realestate"),
        '&lt;script src="https://ocacache-front.schibsted.tech/public/dist/oca-loader/js/ocaloader.js?type=re&amp;w=100%&amp;h=300"&gt;&lt;\/script&gt;');
    });
&lt;/script&gt;
</code></pre>
<p>The example I'm working with <em>(raw)</em></p>
<pre><code>&lt;section class="realestate oca"&gt;&lt;/section&gt;\n&lt;script type="text/javascript" data-type="ad"&gt;\n\twindow.addEventListener(\'DOMContentLoaded\', function(){\n\t\twindow.postscribe &amp;&amp; postscribe(document.querySelector(".realestate"),\n\t\t\'&lt;script src="https://ocacache-front.schibsted.tech/public/dist/oca-loader/js/ocaloader.js?type=re&amp;w=100%&amp;h=300"&gt;&lt;\\/script&gt;\');\n\t});\n&lt;/script&gt;
</code></pre>
<p>I would like to remove everything from <code>&lt;script</code>(beginning of second line) to <code>&lt;/script&gt;</code>(last line). This will output only the first line, <code>&lt;section..&gt;</code>.</p>
<p>Here's my line of code:</p>
<pre><code>re.sub(r'&lt;script[^&lt;/script&gt;]+&lt;/script&gt;', '', text)
#or
re.sub(r'&lt;script.+?&lt;/script&gt;', '', text)
</code></pre>
<p>I'm clearly missing something, but I can't see what.<br/>
<strong>Note:</strong> The document I'm working with contains mainly plain text so no parsing with lxml or similar is needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your first regex didn't work because character classes (<code>[...]</code>) are a <em>collection of characters</em>, not a string. So it will only match if it finds <code>&lt;script</code> separated from <code>&lt;/script&gt;</code> by a string of characters that doesn't include <em>any</em> of <code>&lt;</code>, <code>/</code>, <code>s</code>, <code>c</code>, etc.</p>
<p>Your second regex is better, and the only reason it's not working is because by default, the <code>.</code> wildcard does not match newlines. To tell it you want it to, you'll need to add the <a href="https://docs.python.org/3/library/re.html#re.DOTALL" rel="nofollow noreferrer"><code>DOTALL</code></a> flag:</p>
<pre><code>re.sub(r'&lt;script.+?&lt;/script&gt;', '', text, flags=re.DOTALL)
</code></pre>
</div>
<span class="comment-copy">You should know this <code>[^&lt;/script&gt;]</code> doesn't mean anything except a closing script tag.</span>
<span class="comment-copy">@glibdud I agree, I was only trying to flag it. <a href="http://meta.stackoverflow.com/q/343643/1561176">meta.stackoverflow.com/q/343643/1561176</a></span>
<span class="comment-copy">I think that you should take a look at this answer to using regex to parse "html" <a href="http://stackoverflow.com/a/1732454/1561176">stackoverflow.com/a/1732454/1561176</a> . Instead you should be using the correct parser, such as BeautifulSoup. <a href="https://www.crummy.com/software/BeautifulSoup/" rel="nofollow noreferrer">crummy.com/software/BeautifulSoup</a></span>
<span class="comment-copy">@revo Well, if I knew, I wouldn't be asking. Either way, I read somewhere it ment "anything except this" and I'm using it a lot like this ´&lt;[^&gt;]+&gt;´ .</span>
<span class="comment-copy">@InbarRose That made an impression I won't forget. I don't think my document will be able to be parsed, I see it more fit to manually index the tags, group them and then delete everything inbetween.</span>
<span class="comment-copy">Amazing. Thanks for giving an explanation to why it didn't work!</span>
