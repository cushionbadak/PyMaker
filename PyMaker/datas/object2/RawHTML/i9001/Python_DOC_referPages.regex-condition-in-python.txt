<div class="post-text" itemprop="text">
<p>I am working with the regex library in Python. I'm currently creating a condition which I want to bypass below sample string because I read a file line by line.</p>
<p>I would like to bypass the string if I found a format like:</p>
<blockquote>
<p>03/27/2016 07:58:17.442</p>
</blockquote>
<p>Sample string to bypass:</p>
<pre><code>03/27/2016 07:58:17.442   U:Event:   Current Process Recipe Name = PFCA-800Pulse.prc [LLA_01] [2016-03-27_003_A1B]
</code></pre>
<p>My current code:</p>
<pre><code>    self.matchObj = re.match( r'([0-9])\w+', l)
    if not self.matchObj:
       #do the following code here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this: </p>
<pre><code>    self.matchObj = re.match( r'^[0-9/]{10}.+$', l)
</code></pre>
<p><a href="https://regex101.com/r/kAsQUn/1" rel="nofollow noreferrer">https://regex101.com/r/kAsQUn/1</a></p>
<p><strong>EDIT</strong> Based on comments:</p>
<pre><code>    self.matchObj = re.match( r'\d\d/\d\d/\d\d\d\d \d\d:\d\d:\d\d\.\d\d\d', l)
</code></pre>
<p><a href="https://regex101.com/r/kAsQUn/2" rel="nofollow noreferrer">https://regex101.com/r/kAsQUn/2</a></p>
</div>
<span class="comment-copy">It seems you forgot to include a question in your question.</span>
<span class="comment-copy">Can you give a better idea of the strings that you're trying to skip. Which parts of that string are common? Which parts are unique? Are there any other strings that look similar to that one, but that you don't want to bypass.</span>
<span class="comment-copy">What part of that string is supposed to be matching the regex? Because as written, it will match (<code>03</code> is a digit followed by a word-like character, since word-like characters include letters and digits), but if all your lines are date stamped like that, it would skip all of them. You need to specify what you want to skip, and what you want to keep. Without a set of things to keep, you could just use the the regex <code>r''</code> and you'd skip everything, which meets your specs as given.</span>
<span class="comment-copy">You may try building the regex using <a href="https://regex101.com/" rel="nofollow noreferrer">regex101.com</a> It has all the help that you may need as a begineer</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/4736/learning-regular-expressions">Learning Regular Expressions</a></span>
<span class="comment-copy">That doesn't check for the timestamp, just the date, and it doesn't actually check for a date, just a run of digits and slashes (<code>1234567890abc</code> would match, as would <code>///////////</code>). Side-note: You don't need <code>^</code> when using <code>re.match</code> (<code>^</code> is implicit for <code>match</code>, it's the only real difference between <code>match</code> and <code>re.search</code>, <a href="https://docs.python.org/3/library/re.html#search-vs-match" rel="nofollow noreferrer">with some special behaviors in multiline mode</a>) and <code>.*$</code> can be omitted if you're just testing, not capturing (<code>.+$</code> is different, but I don't see why it's needed).</span>
<span class="comment-copy">@ShadowRanger You are right just following OP's lead. It seems to me that that's what s/he was trying to do. But good comment.</span>
<span class="comment-copy">@MotKohn Hi Sir yes i just want only to check the string if has a format similar to this 03/27/2016 07:58:17.442</span>
<span class="comment-copy">@iamcoder OK I added to my answer</span>
