<div class="post-text" itemprop="text">
<p>I am coping with the formatting of numbers. I assumed that the <code>.format</code> allows to use multiple arguments:</p>
<pre><code>a = 1.11111111111
b = 0.9
s = '({0:.2f}, {0:.2f})'.format(a, b)
print(s)
</code></pre>
<p>Returns:</p>
<pre><code>'(1.11, 1.11)'
</code></pre>
<p>Instead of:</p>
<pre><code>'(1.11, 0.90)'
</code></pre>
<p>On the other hand, this works fine:</p>
<pre><code>'({}, {})'.format(a, b)
</code></pre>
<p>Returns:</p>
<pre><code>'(1.11111111111111, 0.9)'
</code></pre>
<p>Any idea where is the problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>You used for both of the the parameters the value a (0), you should call in the second param to value b (1).</p>
<p>the value before the <code>:</code> is for giving placeholders an explicit positional index.</p>
<p>This allows for re-arranging the order of display without changing the arguments.</p>
<p>Change</p>
<pre><code>s = '({0:.2f}, {0:.2f})'.format(a, b)
</code></pre>
<p>To:</p>
<pre><code>s = '({0:.2f}, {1:.2f})'.format(a, b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Values before the <code>:</code> character specify either a field name or a conversion; by using <code>0</code> in both cases you're essentially telling <code>.format</code>, via the element index, to use <code>a</code> in both cases.</p>
<p>In your second case, <code>'({}, {})'.format(a, b)</code>, by <em>not</em> specifying a position, <code>.format</code> replaces each empty pair of <code>{}</code> with the elements supplied in increasing order of position.</p>
<p>A simple replacement, as suggested, is to use <code>1</code> to indicate that you want to use <code>b</code> instead of <code>a</code>. Alternatively, simply omit them:</p>
<pre><code>s = '({:.2f}, {:.2f})'.format(a, b)
</code></pre>
<p>to get a similar effect.</p>
<hr/>
<p>You should skim through the <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">Syntax for the format strings</a> to get an idea of the rules used when formatting.</p>
</div>
<span class="comment-copy">Use <code>s = '({0:.2f}, {1:.2f})'.format(a, b)</code>, else the <code>a</code> value is used since you explicitly indicated to use <code>a</code> value the second time.</span>
<span class="comment-copy">As @WiktorStribi≈ºew suggest, you have a wrong identifier for your formatting. The number in front of the colon <code>:</code> is the index of the argument of the format function to put in.</span>
