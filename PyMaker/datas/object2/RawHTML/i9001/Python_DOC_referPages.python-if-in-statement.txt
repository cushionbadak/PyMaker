<div class="post-text" itemprop="text">
<p>I'm just starting out with Python and am following an online tutorial but am a little confused as to why the below code isn't working. I've looked at other examples on this site of where <code>if ... in</code> is used, but they all look to be structured the same so it doesn't really make sense to me why the <code>if</code> is failing. </p>
<p>I do notice though that in the tutorial <code>in</code> shows in purple but in my notebook it is showing as green ... not sure if that has anything to do with it. Although it does show as purple on the printout.</p>
<p>Thanks in advance.</p>
<pre><code>In [53]:dictVar = {}
In [54]:dictVar[25] = "Square of 5" 
In [55]:dictVar["Vitthal"] = "Some dude's name"
In [56]:dictVar[3.14] = "Pi"
In [57]:dictVar.keys()
Out[57]:dict_keys([25, 'Vitthal', 3.14])
In [58]:dictVar.values()
Out[58]:dict_values(['Square of 5', "Some dude's name", 'Pi'])
In [59]:len(dictVar.keys())
Out[59]: 3
In [60]:inputKeyToDelete = input("Please enter key to delete ")
Please enter key to delete 25
In [61]:
 if inputKeyToDelete in dictVar:
    dictVar.pop(inputKeyToDelete)
    print("OK, zapped the key-value pair for key = " + inputKeyToDelete)
In [62]:print(dictVar)
{25: 'Square of 5', 'Vitthal': "Some dude's name", 3.14: 'Pi'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Short version: It's because the string <code>"25"</code>, which you entered, does
not equal the integer <code>25</code>, which is a key in the dictionary.</p>
<p>Long version:</p>
<p><code>input</code> returns a string, type <code>str</code>. To convert that string to an
integer, type <code>int</code>, do something like this:</p>
<pre><code>intkey = int(inputKeyToDelete)
</code></pre>
<p>Of course, if <code>inputKeyToDelete</code> is something like <code>"foo"</code>, this will
raise an exception:</p>
<pre><code>&gt;&gt;&gt; int('foo')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: invalid literal for int() with base 10: 'foo'
</code></pre>
<p>You can safeguard against this by catching the exception:</p>
<pre><code>try:
    x = int(s)
except ValueError:
    print("That's not a number")
</code></pre>
</div>
<span class="comment-copy">Try <code>if inputKeyToDelete in dictVar.keys():</code> or <code>if int(inputKeyToDelete) in dictVar:</code></span>
<span class="comment-copy">what's with all the IN/OUTs. Why not post your code and console output separately?</span>
<span class="comment-copy">@bluesummers: <code>if inputKeyToDelete in dictVar.keys():</code> is pointless; it just makes an unnecessary keys view, but is otherwise identical. The <code>int</code> conversion is what is necessary.</span>
<span class="comment-copy">@Edward That's just an iPython session.</span>
<span class="comment-copy">I thought this too, but he is uing <code>input</code> which does an <code>eval</code> on the input string. Won't that cause it to be an int?</span>
<span class="comment-copy">Um, no ... that's true in Python 2, but the tags indicate this person is using Python 3.</span>
<span class="comment-copy">@JonathonReinhart <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#input</a></span>
<span class="comment-copy">Ahh, I missed that it was Python 3. Then my answer was right before I deleted it, oops!</span>
<span class="comment-copy">Sorry yes I am using Python 3. Your answer makes sense, but what I'm not sure about is how this will allow me to switch between an int and a str. I.E this is a dictionary with numeric and text strings as keys (as per my lecture example)... if I implemented the above code to catch any key entered that isn't a number I wouldn't be able to pop the second key in the dictionary I don't think. - Does this mean that dictionary keys all have to be one data type?</span>
