<div class="post-text" itemprop="text">
<p>Let's say that I am writing a Python program on Linux. And I want to run a binary manually-installed command called "foo" using its path. Usually this is in <code>/usr/bin/foo</code>. But on some distributions it's <code>/usr/local/bin/foo</code>. Some other distributions may change it too.</p>
<p>So my question is how to get something like <code>$BINARY_FOLDER_PATH</code> or <code>$LIBRARY_FOLDER_PATH</code> which would instantly give me whether it is "/usr/bin" or "/usr/local/bin/" or something else (PATH gives a lot of paths, I am looking for a single output option if it's there)? Also for libraries folder. How to know if it was <code>/usr/lib</code> or something else? In Python for sure.</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, you cannot. If you want to find a particular binary, your best bet is going to be searching the PATH variable. There is some <a href="http://code.activestate.com/recipes/52224-find-a-file-given-a-search-path/" rel="nofollow noreferrer">code on activestate</a> that does what you want.</p>
</div>
<span class="comment-copy">Then how do people install their software? I have a Python binary file for example and I want to put it in /usr/bin when installing it. How do people do that? (of course I can use the absolute path, but I am talking about relative)</span>
<span class="comment-copy">Most people install their software using a package manager of some sort. If you're on a linux box, that package manager might put your file into /bin or /usr/bin. If you're on a MacOS box, then <i>brew</i> might put it in one location, while <i>port</i> puts it in a different location. If you're on a network, an admin might put it on a shared volume.</span>
<span class="comment-copy">Yes but I am talking about a Python script which has some data files. I have a glade file (interface builder <code>.ui</code> file) and I need to refer to it and include it relatively. How is that possible?</span>
<span class="comment-copy">If you need a relative reference, try using the <a href="https://docs.python.org/3/reference/import.html?highlight=__file__#__file__" rel="nofollow noreferrer"><code>__file__</code></a> predefined variable.</span>
