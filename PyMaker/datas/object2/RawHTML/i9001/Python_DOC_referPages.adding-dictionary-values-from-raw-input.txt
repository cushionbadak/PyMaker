<div class="post-text" itemprop="text">
<p>I just made up a dictionary with each letter of the alphabet having a number value. I tried a few things and kept getting errors. I can add all the values of the dictionary with sum(alphaDict.values()) but cannot add separate values together with user input. Now if I use the code as I have below what is returned is type 'str' values so those cannot be added as numbers. By the way I know the dictionary came out funny looking in this post but don't worry about that. ^^</p>
<pre><code>alphaDict = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h':      8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, \
'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21,     'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}


print 'sum(alphaDict.values()) =', sum(alphaDict.values())


def letter2Num(word = raw_input('Enter a word &gt; ')):
    for char in word:
        print alphaDict[char]



letter2Num()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply do this :</p>
<pre><code>def letter2Num(word) :
    add = 0
    for char in word :
        add += alphaDict[char]
    return add

print 'Sum :', letter2Num(raw_input('Enter a word &gt; '))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to go through the whole input character by character and then get the sum of that. I guess the most Pythonic way would be:</p>
<pre><code>def letter2Num(word):
    return sum([alphaDict[alpha] for alpha in word])

print("Value: {}".format(letter2Num(raw_input("Enter a word &gt; "))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work with both Python 2.7 and 3.*:</p>
<pre><code>from sys import exit


alphaDict = {'a': 1,
             'b': 2,
             'c': 3,
             'd': 4,
             'e': 5,
             'f': 6,
             'g': 7,
             'h': 8,
             'i': 9,
             'j': 10,
             'k': 11,
             'l': 12,
             'm': 13,
             'n': 14,
             'o': 15,
             'p': 16,
             'q': 17,
             'r': 18,
             's': 19,
             't': 20,
             'u': 21,
             'v': 22,
             'w': 23,
             'x': 24,
             'y': 25,
             'z': 26}

def letter2Num(word):
    total = 0
    try:
        for char in word:
            total += int(alphaDict[char])
    except KeyError as char:
        print("Invalid char {}".format(char))
        exit(1)
    else:
        print("Total {}".format(total))

letter2Num(word = raw_input('Enter a word &gt; '))
</code></pre>
<p>Also, i added a try-except block to avoid invalid characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try something like this utilizing the default value of <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dictionary.get()</code></a> if the key entered by the user is invalid the value returned is <code>-1</code> rather than <code>None</code> :</p>
<pre><code>alpha_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}
print "The dictionary is: %s" % alpha_dict
print "The total of all the values in the dictionary is: %d" % sum(alpha_dict.values())
val_1 = raw_input("Please enter the key for value 1 you want to add? ")
val_2 = raw_input("Please enter the key for value 2 you want to add? ")
print "The sum = %d" % (alpha_dict.get(val_1, -1) + alpha_dict.get(val_2, -1))
</code></pre>
<p><strong>Example Usage:</strong></p>
<pre><code>The dictionary is: {'e': 5, 'n': 14, 'i': 9, 'z': 26, 'o': 15, 'j': 10, 's': 19, 'f': 6, 'r': 18, 'x': 24, 't': 20, 'l': 12, 'a': 1, 'c': 3, 'u': 21, 'b': 2, 'k': 11, 'm': 13, 'p': 16, 'w': 23, 'd': 4, 'q': 17, 'v': 22, 'h': 8, 'g': 7, 'y': 25}
The total of all the values in the dictionary is: 351
Please enter the key for value 1 you want to add?  y
Please enter the key for value 2 you want to add?  t
The sum = 45
</code></pre>
<p>Try it <a href="https://repl.it/FjuL/0" rel="nofollow noreferrer">here!</a></p>
</div>
<div class="post-text" itemprop="text">
<p>your function simply print each number, and there's no return type.
if you want summation, return a summation.</p>
<pre><code>import string
// zip function is useful to combine same length sequence
alphaDict = dict(zip(string.ascii_lowercase, range(1,27)))

def letter2Num(word):
''' sum numbers according to alphaDict from word'''
    sum = 0
    for char in word:
        if char not in string.ascii_lowercase:
            continue
        sum += alphaDict[char]
    return sum
</code></pre>
<p>python doesn't support implicit '+' operator with 'int' and 'str'.
if you want, you need to change str to int.
simply use int() built-in function.</p>
<pre><code>temp ='12345' // which is str type
print type(temp)
temp = int(temp)
print type(int(temp)) // now int type
</code></pre>
</div>
<span class="comment-copy">You say "I tried a few things and kept getting errors", but you don't tell us what you tried or what errors you got. We can't help you with a problem you haven't shown. Please show the code that's causing you problems, and show the full traceback of the exceptions it's raising. Otherwise we'll just be guessing at what you were doing wrong.</span>
