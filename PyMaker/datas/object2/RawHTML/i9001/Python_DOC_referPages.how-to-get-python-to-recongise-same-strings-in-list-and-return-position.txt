<div class="post-text" itemprop="text">
<p>I have a sentence words and When a word in that sentence is inputted as a sort of "find this word" feature, the program identifies all of the positions where the word occurs in the sentence and return the result</p>
<p>if the sentence was:</p>
<pre><code>I wish upon a star and the star wishes upon me
</code></pre>
<p>And I wanted to find the word upon, the outcome would be</p>
<pre><code>the word "upon" is in position: 1 and 9
</code></pre>
<p>the sentence isn't case sensitive so Upon and UpoN are treated the same. Also the sentence would be inputted by the user.</p>
<p>Any ideas on how to code this?</p>
</div>
<div class="post-text" itemprop="text">
<p>One way is to <code>enumerate</code> the list. Check value against keyword then keep index.</p>
<pre><code>import re

def find_dup(sentence, keyword):
    keyword = keyword.lower()
    words = re.sub('[^\w]', ' ', sentence.lower()).split()
    return [index for index, value in enumerate(words) if value == keyword]

sentence = 'I wish upon a star and the star wishes upon me. Upon capital.'
keyword = 'upon'
positions = find_dup(sentence, keyword)
print positions
print 'the word "{}" is in position: {}'.format(keyword, ' '.join([str(p) for p in positions]))
</code></pre>
<p>Output:</p>
<pre><code>[2, 9, 11]
the word "upon" is in position: 2 9 11
</code></pre>
</div>
<span class="comment-copy">maybe <code>2 and 9</code> instead of <code>1 and 9</code>? What have you tried so far? And how you display the output if key word happens more than twice?</span>
<span class="comment-copy">Here is a function for this task: <code>find_word = lambda sentence, needle: [index for index, word in enumerate(map(str.lower, sentence.split())) if word == needle.lower()]</code>.  Now go and explain that to your teacher.</span>
<span class="comment-copy">@XinHuang if the key word happens more than twice it supposedly just prints out the positions, so If I had a 1000 word sentence and the key word came out more than once it would return the word's position how ever many times the word appears. also I've tried using the "list.index" but that doesn't return the word correctly when the key word comes up more than once. any ideas?</span>
<span class="comment-copy">@D.Forrester, list.index only returns the first occurrence.</span>
<span class="comment-copy">The code I posted works, but apparently you're Python knowledge still is at the beginner level. Do you know how to split the string into different words? If not, please read the <a href="https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str" rel="nofollow noreferrer">documentation of the string type</a> and you'll find a method for that.</span>
<span class="comment-copy">thanks! your a great help!</span>
