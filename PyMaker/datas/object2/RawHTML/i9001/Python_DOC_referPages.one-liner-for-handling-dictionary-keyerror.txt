<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6130768/return-none-if-dictionary-key-is-not-available">Return None if Dictionary key is not available</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I am new to Python and still learning the tricks.</p>
<p>How can i convert the following code to a single liner, is it possible in Python? There has to be a neat way of doing this.</p>
<pre><code>try:
    image_file = self.request.files['image_path']
except:
    image_file = None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a dictionary, use the <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get()</code> method</a> to return a default value for missing keys:</p>
<pre><code>image_file = self.request.files.get('image_path')
</code></pre>
<p>Also, do <em>not</em> use pokemon exception handling. You really don't need to catch them all here; if a key is missing, <code>KeyError</code> is raised, if you must use <code>try..except</code> should catch <em>just</em> that one exception with <code>except KeyError:</code>.</p>
</div>
<span class="comment-copy">There isn't such a thing as a single-line-try in Python. If the exception you're guarding against is a <code>KeyError</code> from a <code>dict</code>, then you could use <a href="https://docs.python.org/2/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>get</code></a></span>
<span class="comment-copy">what is self.request.files - is it a dictionary ?</span>
<span class="comment-copy">BTW, using a naked <code>except</code> is generally not a good idea (unless it's at the end of a chain of named except clauses, and even then you probably want to re-raise the exception after printing a warning or performing some other processing). Always specify the exception(s) that you want to catch.</span>
<span class="comment-copy">@PM2Ring thanks for the tip</span>
<span class="comment-copy">@Tarptaeya i am using Tornado request handler</span>
<span class="comment-copy">can you please elaborate, still in the phase of trying to wrap my head around python</span>
<span class="comment-copy">I love the phrase "pokemon exception handling". :)</span>
<span class="comment-copy">@Baig: I've linked to the appropriate documentation for dictionaries. You didn't tell us more about where <code>self.request</code> comes from, is this code from  a Tornado request handler perhaps?</span>
<span class="comment-copy">@MartijnPieters yes it is from Tornado request handler</span>
<span class="comment-copy">@Baig: that's a standard Python dictionary, so any of the standard dictionary operations apply there.</span>
