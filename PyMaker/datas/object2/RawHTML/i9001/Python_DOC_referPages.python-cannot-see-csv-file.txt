<div class="post-text" itemprop="text">
<p>I went through couple answers on forum already but without any success.
I am using Linux mint, Python 3.6.0 and i am trying to open CSV in Python but then error occurs:</p>
<pre><code>  file = open("~/Desktop/xyz/city.csv", "rb")
FileNotFoundError: [Errno 2] No such file or directory: '~/Desktop/xyz/city.csv'
</code></pre>
<p>My code:</p>
<pre><code>import csv

file = open("~/Desktop/xyz/city.csv", "rb")
reader =csv.reader(file)
</code></pre>
<p>I also tried to move the file to desktop as in some answers i found, instead of path i used "city.csv". Still doesn't work.</p>
<p>Completely new to Linux and just can't find why this isn't working.</p>
<p>Each reply appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>You should'nt use '~' to specify the path of your directory but the full path instead. E.g. :</p>
<pre><code>import csv

file = open("/home/user/Desktop/xyz/city.csv", "rb")
reader =csv.reader(file)
</code></pre>
<p>If you need to use the tilde, you should then use <a href="https://docs.python.org/3/library/os.path.html#os.path.expanduser" rel="nofollow noreferrer"><code>os.path.expanduser('~/Desktop/xyz/city.csv')</code></a>. E. g. :</p>
<pre><code>import csv

file = open(os.path.expanduser("~/Desktop/xyz/city.csv"), "rb")
reader =csv.reader(file)
</code></pre>
<p>The reason for that is that the "tilde expansion" is a user interface feature that is not recognized by the file system: <a href="http://www.gnu.org/software/bash/manual/bashref.html#Tilde-Expansion" rel="nofollow noreferrer">http://www.gnu.org/software/bash/manual/bashref.html#Tilde-Expansion</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try using the full file path, something like this:</p>
<pre><code>file = open("/home/[username]/Desktop/xyz/city.csv", "rb")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Usually <code>~</code> does not expand properly. I have found that when it is needed, put <code>$HOME</code> environment variable value into a python variable and then use join to attach it as a prefix to the file name relative position. This also allows you to move the file to a different location and create a function that will allow you to redefine the prefix.</p>
</div>
<span class="comment-copy">How are you running the command?  Just form the terminal or from something like cron?  Possibly "~" is not expanding the way you think it should.</span>
<span class="comment-copy">I am using Pycharm for running all code.</span>
<span class="comment-copy">As you can see by the other answers, everyone thinks its the ~.  Try something like:  import os print os.path.abspath("~")   and see if thats what you expect</span>
<span class="comment-copy">Thanks also, i will keep that in mind</span>
<span class="comment-copy">I've seen your comment for the other answer but I'm not allowed to type there atm. If you want to know the full path to access a directory under linux, use the command <code>pwd</code> which will print the full path to the current directory :)</span>
<span class="comment-copy">It did the work, crap, i also tried /home/desktop but didn't thought of adding username there. Thanks mate!</span>
