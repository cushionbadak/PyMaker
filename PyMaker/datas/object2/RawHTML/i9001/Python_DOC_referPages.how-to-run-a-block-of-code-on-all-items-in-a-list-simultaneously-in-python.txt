<div class="post-text" itemprop="text">
<p>I have a list I want to run a block of code on, but the list is a couple thousand items long, and it takes way too long to iterate over them.</p>
<p>Is there a way I could have my script run a check on every item in that list simultaneously?</p>
<p>My code looks like this:</p>
<pre><code>def check_url(url_loc):
   response1 = requests.get(url_loc)
   time.sleep(10)
   response2 = requests.get(url_loc)
   if response1 != response2:
       print(url_loc + "has changed go check now:" + url_loc)
   else:
       pass

while True:
   all(check_url(loc) for loc in sitelocations)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Consider the <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">multiprocessing</a> or <a href="https://docs.python.org/3.4/library/threading.html" rel="nofollow noreferrer">threading</a> libraries</p>
</div>
<div class="post-text" itemprop="text">
<p>If you really really want to do it simultaneously you can use threads. 
Here is a website about threading: <a href="https://docs.python.org/3.4/library/threading.html" rel="nofollow noreferrer">https://docs.python.org/3.4/library/threading.html</a>
But I am sure there is a simpler way. Threading is like doing a little bit of everything over and over until everything is done and it is really complex. 
I think you could just try to speed up your code. If you are using IDLE it will always be slow and the time you get isn't actually correct. It can actually go way faster.
I hope this helps. </p>
</div>
<span class="comment-copy">Why do you have a <code>time.sleep</code> in your function? That would slow things down. What is that function supposed to do?</span>
<span class="comment-copy">@qxz This code seems to compare urls 10 seconds apart, hence the sleep.</span>
<span class="comment-copy">Threads in Python are not executing simultaneously, they are scheduled through GIL. Threads can help with I/O calls, tho, when there is a lot of pushing and waiting for data, but will actually hurt performance for computing tasks.</span>
