<div class="post-text" itemprop="text">
<p>I want to print out the contents of a list in a specific format: </p>
<p>Here's what I want it to look like: </p>
<pre><code>        [
            "Zara",
            3.2
        ],
        [
            "Maxwell",
            3.3
        ],
        [
            "Norman",
            3.1
        ]
</code></pre>
<p>I'm confused how to achieve this output.  Right now, I have the individual elements in the list as strings that are of the format ("\"" + name + ""\" + ",\n" + grade).  However, I don't know how to achieve the proper indentation and bracketing for printing out the list.  Should I just manually print a [ and ], every time or is there a way to compile all the elements into one list, where a call to print list would result in the output above?  I could manually format the brackets, but that would leave the last bracket with a comma after it, which I do not want.  Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>json.dumps()</code></a>. Assuming that you have a list of lists like this:</p>
<pre><code>&gt;&gt;&gt; import json 
&gt;&gt;&gt; grades = [['Zara', 3.2], ['Maxwell', 3.3], ['Norman', 3.1]]
&gt;&gt;&gt; print(json.dumps(grades, indent=4))
[
    [
        "Zara", 
        3.2
    ], 
    [
        "Maxwell", 
        3.3
    ], 
    [
        "Norman", 
        3.1
    ]
]
</code></pre>
<p>This is pretty close to what you are after, with no coding effort, and no escaped quotes in the strings themselves. If you don't like the outer brackets, then you can print each list individually:</p>
<pre><code>&gt;&gt;&gt; print(*(json.dumps(grade, indent=4) for grade in grades), sep=',\n')
[
    "Zara", 
    3.2
],
[
    "Maxwell", 
    3.3
],
[
    "Norman", 
    3.1
]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just to clarify, you have a list with list elements? And the interior elements are always a string you want printed in quotes followed by a number?
You could just define a sub function </p>
<pre><code>    def print_list_item(item, last_item):
        print "["
        print '    "' + item[0] + '",'
        print '    ' + str(item[1]) + ','
        if last_item:
            print "]"
        else:
            print "],"
</code></pre>
<p>(Note that I'm using single quotes to effectively "escape" the double quote character)
You can then print the list like this:</p>
<pre><code>    for i, item in enumerate(my_list):
        print_list_item(item, i == len(my_list)-1)
</code></pre>
<p>You could probably clean that up with printf as well. </p>
</div>
<div class="post-text" itemprop="text">
<p>The json.dumps() method has parameters to make it easier to read the result:</p>
<pre><code>    import json

    # some JSON:
    x =  [['Zara', 3.2], ['Maxwell', 3.3], ['Norman', 3.1]]

    # parse x:
    y = json.loads(x, indent=4)
</code></pre>
<p>the indent parameter to define the numbers of indents.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/38533282/python-pretty-print-dictionary-of-lists-abbreviate-long-lists">Python pretty print dictionary of lists, abbreviate long lists</a></span>
<span class="comment-copy"><code>print('[\n  "{}",\n  {}\n]'.format(name, grade))</code></span>
<span class="comment-copy">If it was a good question and it was answered, it should remain here for others to find the answer. If it was a bad question, it should be deleted. There is no situation in which changing the question contents to "answered" is acceptable.</span>
<span class="comment-copy">Thanks for the help! The first call does not register the newline characters in my string.  The list contains strings that are formatted like:  ("\"" + name + ""\" + ",\n" + grade).  The first call that you recommended prints the strings like:    "\"Zara\",\n3.2n"</span>
<span class="comment-copy">@ReefRashid: if you paste the code that I show into a Python interpreter you will see that the output that I show above matches your desired output. Is the input the same, i.e. are you using a list of lists?</span>
