<div class="post-text" itemprop="text">
<p>I need to extract some values out of a file, i wrote the following code.</p>
<pre><code>import os
import sys
rootdir='/home/nsingh/ansible-environments/aws'
for root, subdirs, files in os.walk(rootdir):
  for j in subdirs:
    print j
    mypath=rootdir+'/'+j+'/inventory/group_vars/all'
    #print mypath
    fo=open(mypath,'r')
    f=fo.readlines()
    for line in f:
            if ('isv_alias' in line or 'LMID' in line or 'products' in line):
                         path='/home/nsingh/krikCSV_fun.csv'
                         if('isv_alias' in line):
                            line=line.strip('isv_alias=')
                            line= line.strip('"')
                         elif('LMID'  in line):
                            line=line.strip('LMID=')
                         else:
                            line=line.strip('products=')

                         fi= open(path,'a+')
                         fi.write(line)
                         fi.close()
    fo.close()
</code></pre>
<p>the os.walk method somehow finds a hidden directory as well which is not actually present</p>
<pre><code>loadgen
crapcity
rmstest2
suricatatest
.git
Traceback (most recent call last):
  File "testme.py", line 9, in &lt;module&gt;
    fo=open(mypath,'r')
IOError: [Errno 2] No such file or directory: '/home/nsingh/ansible-environments/aws/.git/inventory/group_vars/all'
</code></pre>
<p><strong>OUTPUT</strong>:</p>
<pre><code>: "suricatatest"^M
: suricatatest
: rms_ems_hosted
: 26
: rmstest2
: rms_scl
: 80
: suricatatest
: rms_ems_hosted
: 26
: "suricatatest"^M
: suricatatest
: rms_ems_hosted
: 26
</code></pre>
<p>I need the output as &amp; also remove the semicolon:</p>
<pre><code>suricatatest rms_ems_hosted 26
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What makes you think that <code>/.git</code> doesn't exist?</p>
<p>Try this:</p>
<pre><code>import os

rootdir = '/home/nsingh/ansible-environments/aws'
for root, subdirs, files in os.walk(rootdir):
    for j in subdirs:
        print(j)
        my_path = rootdir + '/' + j + '/inventory/group_vars/all'
        if os.path.isfile(my_path):
            with open(my_path, 'r') as fo:
                for line in fo.readlines():
                    if 'isv_alias' in line or 'LMID' in line or 'products' in line:
                        path = '/home/nsingh/krikCSV_fun.csv'
                        if 'isv_alias' in line:
                            line = line.strip('isv_alias=')
                            line = line.strip('"')
                        elif 'LMID' in line:
                            line = line.strip('LMID=')
                        else:
                            line = line.strip('products=')

                        with open(path, 'a+') as fi:
                            fi.write(line.lstrip(": "))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer">os.path</a> to make the file paths.  os.walk will visit all the directories in the tree under the top directory - you are only interested in directories that end with <code>'inventory/group_vars'</code>, so check for that and take action.  If you want to write the values as a <em>group</em>, you need to collect them in something.</p>
<pre><code>import os, os.path, collections
rootdir = '/home/nsingh/ansible-environments/aws'
sub_folder = 'inventory/group_vars'
out_path = '/home/nsingh/krikCSV_fun.csv'
for dirpath, dirnames, filenames in os.walk(rootdir):
    if dirpath.endswith(sub_folder):
        data = collections.defaultdict(list)
        with open(os.join(dirpath, 'all')) as f, open(out_path, 'a+') as out:
            for line in f:
                if 'isv_alias' in line:
                    line = line.strip('isv_alias=')
                    line = line.strip('"')
                    data['isv_alias'].append(line)
                elif 'LMID'  in line:
                    line = line.strip('LMID=')
                    data['LMID'].append(line)
                elif 'products' in line:
                    line = line.strip('products=')
                    data['products'].append(line)
            for a, b, c in zip(*data.values()):
                out.write('{},{},{}\n'format(a, b, c))
</code></pre>
<p>I used a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a> to store multiple items of interest from a single file.  If there is only one <code>'isv_alias', 'LMID', 'products'</code> <em>group</em> in each file then you could just as easily store the information in a list or namedtuple.</p>
<hr/>
<p>You didn't provide an example of the file(s) so it's not clear what the line structure is.  If it looks like this:</p>
<pre><code>isv_alias="foo"
LMID=bar
products=26
</code></pre>
<p>It can be simplified to </p>
<pre><code>keys = {'isv_alias', 'LMID', 'products'}
for dirpath, dirnames, filenames in os.walk(rootdir):
    if dirpath.endswith(sub_folder):
        data = collections.defaultdict(list)
        with open(os.join(dirpath, 'all')) as f, open(out_path, 'a+') as out:
            for line in f:
                line = line.strip()
                key, value = line.split('=')
                if key in keys:
                    value = value.strip('"')
                    data[key].append(value)
            for a, b, c in zip(*data.values()):
                out.write('{},{},{}\n'format(a, b, c))
</code></pre>
<hr/>
<p>As long as you are accumulating the information in <code>data</code>, you can just open the output file once</p>
<pre><code>data = collections.defaultdict(list)
keys = {'isv_alias', 'LMID', 'products'}
for dirpath, dirnames, filenames in os.walk(rootdir):
    if dirpath.endswith(sub_folder):
        with open(os.join(dirpath, 'all')) as f:
            for line in f:
                line = line.strip()
                key, value = line.split('=')
                if key in keys:
                    value = value.strip('"')
                    data[key].append(value)

with open(out_path, 'a+') as out:
    for a, b, c in zip(*data.values()):
        out.write('{},{},{}\n'format(a, b, c))
</code></pre>
<hr/>
<p>If using Python 3.6 or an <a href="https://stackoverflow.com/a/35968897/2823755">ordered defaultdict</a> then the solution above assumes the order of appearance of each <em>key</em> in the file is the order you want them written out.</p>
<p>If the file structure isn't <em>ordered</em> or the dictionary used isn't ordered, write to the file like this:</p>
<pre><code>            for a, b, c in zip(data['isv_alias'], data['LMID'], data['products']):
                out.write('{},{},{}\n'format(a, b, c))
</code></pre>
</div>
<span class="comment-copy">The files you are interested in are all named <code>'all'</code> with no extension?</span>
<span class="comment-copy">yes , it has no extension</span>
<span class="comment-copy">Please add a few lines of one of the files as an example.</span>
<span class="comment-copy">i have checked that there is no hidden dir wih ls-la</span>
<span class="comment-copy">Fair enough. That's weird then.</span>
<span class="comment-copy">this is wrong.. it goes inside that directory, it is creating the .git</span>
<span class="comment-copy">loadgen crapcity rmstest2 suricatatest .git inventory Traceback (most recent call last):   File "testme.py", line 10, in &lt;module&gt;     fo=open(mypath,'r') IOError: [Errno 2] No such file or directory: '/home/nsingh/ansible-environments/aws/inventory/inventory/group_vars/all' nsingh@syd01-devops-ansible02:~/kriko_test$ cd /home/nsingh/ansible-environments/aws/</span>
<span class="comment-copy">Try the edited version.</span>
<span class="comment-copy">caveat emptor -<a href="http://stackoverflow.com/a/39980548/2823755">stackoverflow.com/a/39980548/2823755</a></span>
