<div class="post-text" itemprop="text">
<p>The documentation for <code>__init__.py</code> is quite hard to find. I can't find a place that explains all the things you can do in this file. The Python module documentation barely even mentions <code>__init__.py</code> nor that you can use <code>__all__</code> for <code>from module import *</code></p>
<p>What I want is for my module to be callable like:</p>
<p>main.py</p>
<pre><code>import module

module()
</code></pre>
<p>module/__ init __.py</p>
<pre><code>def __call__(self):    # self here cause modules are loaded as objects?
    print 'callable'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe silly answer but you can add method into <code>__init__.py</code> file like</p>
<p><strong>__init__.py</strong></p>
<pre><code>def module():
    # what functions do you need to run into __init__ file
</code></pre>
<p>and then </p>
<p><strong>main.py</strong></p>
<pre><code>from module import module
module()
</code></pre>
<p>also, you just can write some operations into <strong>init</strong> and then it will be calling after import </p>
<p>example:</p>
<p><strong>__init__.py</strong></p>
<pre><code>print('1')
print('2')
print('3')
</code></pre>
<p><strong>main.py</strong></p>
<pre><code>import module
</code></pre>
<p>after run <strong>main.py</strong>
the output will be </p>
<pre><code>1
2
3
</code></pre>
<hr/>
<p>but actually, it's not good practice. Try to write code without "calling" modules because a module is a file containing Python definitions and statements, not the function that needs to call.</p>
</div>
<span class="comment-copy">Hmmm, you're treating a module like a package?</span>
<span class="comment-copy">basically i just dont want a ton of pyc files in my main folder or to do things like import module.module :p</span>
<span class="comment-copy">Here's your doc for <code>__init__.py</code>: <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html#packages</a></span>
<span class="comment-copy">I don't think there is any way to make a module callable.</span>
<span class="comment-copy">This is what Python says when you try to call a module: <code>'module' object is not callable</code>. This means that anything that is a <code>'module'</code> <i>cannot be called</i> in any circumstances.</span>
<span class="comment-copy">yea thanks i am aware of this, there plenty of functions in my <code>module</code>, but for esthetic purposes i wanted my module to be callable like a bunch of other objects my code deal with</span>
<span class="comment-copy">did you see this <a href="http://stackoverflow.com/questions/1060796/callable-modules">question</a> maybe will be useful for you.</span>
<span class="comment-copy">OH MY BOY, you mah boy artem, thanks so much. wish i have enough rep to give you an up too &lt;3</span>
<span class="comment-copy">@WobbaFetttttt thx, was pleasant help you :)</span>
