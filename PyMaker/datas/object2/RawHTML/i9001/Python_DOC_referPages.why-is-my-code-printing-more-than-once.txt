<div class="post-text" itemprop="text">
<pre><code>number = raw_input("Please enter the fixture number: ")
    myfile = open('file.txt')
    for line in myfile:
        item = line.split(',')
        if item[0] == number:
            title = '{0:20} {1:20} {2:20} {3:20} {4:20} {5:20}'.format('Fixture number', 'date', 'nickname1', 'nickname2', 'Fixture Played', 'Winning Nickname')
            print(title)
            result = '{0:20} {1:20} {2:20} {3:20} {4:20} {5:20}'.format(item[0],item[1],item[3],item[4],item[5],item[6])
            print(result)
        elif item[0] != number:
            print("not exist")
</code></pre>
<p>Hi there I am new with python, so recently I encountered a problem my </p>
<pre><code>elif item[0] != number:
</code></pre>
<p>is printing "not exist" for the amount of lines in my file
how do I get it to print only once if it is wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Set a flag when <code>item[0] == number</code> is <code>True</code>. Check this flag after the loop terminates, and print <code>"not exist"</code> if the flag is set:</p>
<pre><code>myfile = open('file.txt')
found = False
for line in myfile:
    item = line.split(',')
    if item[0] == number:
        found = True
        title = '{0:20} {1:20} {2:20} {3:20} {4:20} {5:20}'.format('Fixture number', 'date', 'nickname1', 'nickname2', 'Fixture Played', 'Winning Nickname')
        print(title)
        result = '{0:20} {1:20} {2:20} {3:20} {4:20} {5:20}'.format(item[0],item[1],item[3],item[4],item[5],item[6])
        print(result)

if not found:
    print("not exist")
</code></pre>
<p>An alternative is to use the <code>else</code> option with the for loop, however, that requires that you want to print only the first time that <code>item[0] == number</code> is <code>True</code> (because you would need to <code>break</code> out of the loop to prevent the <code>else</code> clause triggering).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can attach an <code>else</code> clause to the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-for-statement" rel="nofollow noreferrer">for loop</a> like this:</p>
<pre><code>number = raw_input("Please enter the fixture number: ")
myfile = open('file.txt')
for line in myfile:
    item = line.split(',')
    if item[0] == number:
        title = '{0:20} {1:20} {2:20} {3:20} {4:20} {5:20}'.format('Fixture number', 'date', 'nickname1', 'nickname2', 'Fixture Played', 'Winning Nickname')
        print(title)
        result = '{0:20} {1:20} {2:20} {3:20} {4:20} {5:20}'.format(item[0],item[1],item[3],item[4],item[5],item[6])
        print(result)
        break
else:
    print("not exist")
</code></pre>
<p>Notice the <code>break</code>. The for loop will exit after the first match (via the <code>break</code>). If the for loop terminates normally (ie. no match), the else block will run</p>
</div>
<span class="comment-copy">If you don't mind your for loop exiting after <code>item[0] != number</code>, you can just add <code>break</code> after the print function</span>
<span class="comment-copy">@JGut, that would exit the loop after the first non-match. It's probably the intent to scan the entire file for a match</span>
<span class="comment-copy">what would be a good replacement for .rstrip()</span>
