<div class="post-text" itemprop="text">
<p>I want to make a simple code that takes one piece of text, scans for the keyword and prints the keyword along with the next 5 characters. Note, the keyword can appear more than one time in the text. </p>
<pre><code>  string = 'my name is luka 90/91, I live on the second floor'
    keyword = 'luka'

    if key in string:
        print (key + key[0:5])
</code></pre>
<p>the output should be luka 90\91</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer"><code>str.find</code></a>, you can get the index of the matching string:</p>
<pre><code>&gt;&gt;&gt; string = 'my name is luka 90/91, I live on the second floor'
&gt;&gt;&gt; keyword = 'luka'
&gt;&gt;&gt; string.find(keyword)
11
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; i = string.find(keyword)
&gt;&gt;&gt; string[i:i+len(keyword)+5]
'luka 90/9'
&gt;&gt;&gt; string[i:i+len(keyword)+5+1]  # +1 (count space in between)
'luka 90/91'
</code></pre>
<hr/>
<p><strong>UPDATE</strong> To get all occurrences, you need to find the substring in a loop.</p>
<pre><code>string = 'my name is luka 90/91, I live on the second floor luka 12345'
keyword = 'luka'

i = 0
while True:
    i = string.find(keyword, i)  # `i` define from where the find start.
    if i &lt; 0:
        break
    j = i + len(keyword) + 5 + 1
    print(string[i:j])
    i = j
</code></pre>
<hr/>
<p><strong>UPDATE</strong> solution using <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a>:</p>
<pre><code>&gt;&gt;&gt; string = 'my name is luka 90/91, I live on the second floor luka 12345'
&gt;&gt;&gt; keyword = 'luka'
&gt;&gt;&gt; import re
&gt;&gt;&gt; re.findall(re.escape(keyword) + '.{5}', string)
['luka 90/9', 'luka 1234']
&gt;&gt;&gt; re.findall(re.escape(keyword) + '.{6}', string)
['luka 90/91', 'luka 12345']
</code></pre>
<ul>
<li><code>luka</code> matches literally. <code>.{5}</code> matches any 5 characters following.</li>
<li>If you want to match characters even though they are less than 5 character. Use <code>.{1,5}</code> instead.</li>
<li><a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer"><code>re.escape</code></a> is not necessary for <code>luka</code>. It is required if there's special characters that has special meaning in regular expression.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

string = 'my name is luka 90/91, I luka onthe second floor'
keyword = 'luka'

i = [m.start() for m in re.finditer(keyword, string)]
K = [[keyword + ' '+ string[len(keyword)+1+j:len(keyword)+j+5+1]] for j in i]
</code></pre>
<p>Or a better solution:
<code>L = re.findall(keyword + ' .{5}', string)</code></p>
<p><code>print(K)</code></p>
<p><strong>OUTPUT:</strong></p>
<pre><code>[['luka 90/91'], ['luka onthe']]
</code></pre>
<p><code>print(L)</code></p>
<p><strong>OUTPUT:</strong></p>
<p><code>['luka 90/91', 'luka onthe']</code></p>
<p>I added an additional 1 for the space, and assumed keyword after <code>keyword</code> is big enough. Otherwise spaces will occur. If this is unwanted it can be fixed. But such behavior is not defined by you how should be.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>string = 'my name is luka 90/91, I live on the second floor. luka means nothing'
keyword = 'luka'
split_array = string.split(keyword)
for x in split_array[1:]: # If keyword is found split array would contain more than one element
   print keyword, x.strip()[:5]
</code></pre>
<p><strong>OUTPUT</strong></p>
<pre><code>luka 90/91
luka means
</code></pre>
</div>
<span class="comment-copy">The keyword along with the next five characters would actually be <code>'luka 90/9'</code>.</span>
<span class="comment-copy">Would you like to print all the next 5 characters when <code>keyword</code> appear ? or only first appearance ?</span>
<span class="comment-copy">Output should include the keyword apparently...</span>
<span class="comment-copy">@JonClements, Thank you for the comment. I updated the answer accordingly.</span>
<span class="comment-copy">OP also mentioned the substring can appear more than once. You might want to mention <code>str.index</code>'s second argument.</span>
<span class="comment-copy">@dabadaba, Thank you for pointing it out. I updated the answer.</span>
<span class="comment-copy">@TonyTannous, You're right. I updated answer with a regular expression alternative.</span>
<span class="comment-copy">Any reason you wouldn't just use: <code>re.findall('luka .{5}', string)</code> ?</span>
<span class="comment-copy">@JonClements nope. I just gave him a solution I know. I will try this and re-edit if needed. Thanks for note.</span>
<span class="comment-copy">Might want <code>{,5}</code> if up to but necessarily 5 or more letters follows the keyword</span>
<span class="comment-copy">or more generally <code>re.findall(keyword+' .{5}', string)</code></span>
<span class="comment-copy">@Copperfield true... I assumed user knows what to change. Changed it my self. Thanks for advice!</span>
