<div class="post-text" itemprop="text">
<p>I am trying to go through different image files in a directory. I am using Jupyter to run my python code as well. However I keep getting this error. Below is my code and the error I receive.</p>
<p>CODE:</p>
<pre><code>import os
import os.path
for img in os.listdir('test_images'):
    if img.endswith("jpg"):
        scriptpath = os.path.dirname(img)
        print(os.path.join('test_images', img))
        # Read in the image
        image = os.path.join(scriptpath, img)
        image = mpimg.imread(image)
        # Grab the x and y size and make a copy of the image
        ysize = image.shape[0]
        xsize = image.shape[1]
        color_select = np.copy(image)
        # Define color selection criteria 
        red_threshold = 200
        green_threshold = 200
        blue_threshold = 200

        rgb_threshold = [red_threshold, green_threshold, blue_threshold]

        # Do a boolean or with the "|" character to identify
        # pixels below the thresholds
        thresholds = (image[:,:,0] &lt; rgb_threshold[0]) \
                    | (image[:,:,1] &lt; rgb_threshold[1]) \
                    | (image[:,:,2] &lt; rgb_threshold[2])
        color_select[thresholds] = [red_threshold,green_threshold,blue_threshold]
        plt.imshow(color_select)
        # Display the image                 
        plt.imshow(color_select)
        continue
    else:
        continue
</code></pre>
<p>OUTPUT:</p>
<pre><code>test_images/solidWhiteCurve.jpg
</code></pre>
<p>ERROR:</p>
<pre class="lang-none prettyprint-override"><code>FileNotFoundError                         Traceback (most recent call last)
&lt;ipython-input-3-6edf7c0860b7&gt; in &lt;module&gt;()
      7         # Read in the image
      8         image = os.path.join(scriptpath, img)
----&gt; 9         image = mpimg.imread(image)
     10         # Grab the x and y size and make a copy of the image
     11         ysize = image.shape[0]

/Users/steveburgos/anaconda/envs/carnd-term1/lib/python3.5/site-packages/matplotlib/image.py in imread(fname, format)
   1225 
   1226     if ext not in handlers:
-&gt; 1227         im = pilread(fname)
   1228         if im is None:
   1229             raise ValueError('Only know how to handle extensions: %s; '

/Users/steveburgos/anaconda/envs/carnd-term1/lib/python3.5/site-packages/matplotlib/image.py in pilread(fname)
   1203         except ImportError:
   1204             return None
-&gt; 1205         with Image.open(fname) as image:
   1206             return pil_to_array(image)
   1207 

/Users/steveburgos/anaconda/envs/carnd-term1/lib/python3.5/site-packages/PIL/Image.py in open(fp, mode)
   2310 
   2311     if filename:
-&gt; 2312         fp = builtins.open(filename, "rb")
   2313 
   2314     try:

FileNotFoundError: [Errno 2] No such file or directory: 'solidWhiteCurve.jpg'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a path mismatch in your code, and your error is clearly showing it (file not found). When you do:</p>
<pre><code>for img in os.listdir('test_images'):
</code></pre>
<p>You're listing the <code>test_images</code> directory in your current directory. The <code>img</code> will contain values in the form of <code>file1.ext</code>, <code>file2.ext</code> etc. as <code>os.listdir()</code> lists only the names of files and directories in it, so when you call:</p>
<pre><code>scriptpath = os.path.dirname(img)
</code></pre>
<p>you'll essentially ges nothing because the <code>img</code> doesn't contain any path information. So, finally, when you do: </p>
<pre><code>image = os.path.join(scriptpath, img)
</code></pre>
<p>You technically pass only the file name as <code>scriptpath</code> is empty. Since your image is in the <code>test_images</code> subdirectory and not in your working directory, you'll normally get file not found.</p>
<p>There are a several ways to solve this issue, the easiest would be to just declare a lookup directory in a variable and use it when needed, e.g.:</p>
<pre><code>target_path = "test_images"
# ...
for img in os.listdir(target_path):
# ...
    image = os.path.join(target_path, img)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In my opinion I prefer using the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a> library to return a list of files in a directory. 
<code>
import glob
print (glob.glob("/home/peter/pictures/*.png")
</code></p>
<p>returns:
<code>
['/home/peter/pictures/pic1.png', '/home/peter/pictures/pic2.png', '/home/peter/pictures/pic3.png', ...ect]
</code></p>
<p>If you want to continue with your approach, I am sure that you are not giving a correct path to the folder directory. 
Think about it, how does the program know where <code>test_images</code> is located. </p>
</div>
<span class="comment-copy"><code>scriptpath</code> will always be an empty string because <code>os.listdir</code> returns bare filenames. Try printing <code>os.path.join(scriptpath, img)</code> (the path you are opening) instead of <code>os.path.join('test_images', img)</code>.</span>
<span class="comment-copy">@unutbu You are awesome! That worked perfectly! Thank you so much!</span>
<span class="comment-copy">I would suggest using <a href="https://docs.python.org/3/library/glob.html#glob.glob" rel="nofollow noreferrer"><code>glob.glob</code></a> with a <i>pathname</i> argument ending with <code>*.jpg</code>.</span>
