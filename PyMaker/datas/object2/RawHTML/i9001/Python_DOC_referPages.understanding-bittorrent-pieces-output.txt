<div class="post-text" itemprop="text">
<p>After using <a href="https://github.com/utdemir/bencoder" rel="nofollow noreferrer">https://github.com/utdemir/bencoder</a> to extract the metainfo from a single file torrent I am seeing the following text under the "pieces" section of the output-</p>
<p><code>This is an abbreviated portion of the output-
'pieces':'\x8f1g\xdb\x1e\x17\n(\xf9\xbb\xb0&amp;\xa0\xadT9N\xa8L\x89\x97\xf79\x15\x07N</code></p>
<p>And after looking at <a href="https://wiki.theory.org/BitTorrentSpecification" rel="nofollow noreferrer">https://wiki.theory.org/BitTorrentSpecification</a> I am under the understanding that this output is-</p>
<blockquote>
<p>[a] string consisting of the concatenation of all 20-byte SHA1 hash values, one per piece (byte string, i.e. not urlencoded)</p>
</blockquote>
<p>However I am seeing the constant backslashes "\" and am wondering if this is something like hexadecimal codes since SHA-1 commonly outputs to hexadecimal?</p>
</div>
<div class="post-text" itemprop="text">
<p>The output you see from the program is encoded as a <a href="https://docs.python.org/3/reference/lexical_analysis.html#strings" rel="nofollow noreferrer">Python bytesliteral</a>,<br/>
were non printable bytes and ASCII is escaped. </p>
<p><code>\x8f1g\xdb\x1e\x17\n(\xf9\xbb\xb0&amp;\xa0\xadT9N\xa8L\x89\x97\xf79\x15\x07N</code> </p>
<p><code>\x8f</code> =&gt; hexadecimal 0x8F<br/>
<code>1g</code> =&gt; ASCII "1g"<br/>
<code>\xdb\x1e\x17</code> =&gt; hexadecimal 0xDB1E17<br/>
<code>\n</code> =&gt; Escape Sequence meaning ASCII Linefeed (LF)  (hexadecimal 0x0A)<br/>
<code>(</code> =&gt; ASCII "("<br/>
<code>\xf9\xbb\xb0</code> =&gt; hexadecimal 0xF9BBB0<br/>
etc.</p>
</div>
<span class="comment-copy">yup, bytes represented as hexa when ascii isn't possible</span>
<span class="comment-copy">Yes, those are bytes in their hex representation. Try putting '\x68\x65\x6c\x6c\x6f' in a Python shell (or b'\x68\x65\x6c\x6c\x6f' if you're using Python3.)</span>
<span class="comment-copy">@kirbuchi if the letter "g" is included in these representations wouldn't that be outside the scope of hex since hex ends at "f" in letter representations</span>
<span class="comment-copy">@CJCahala you can mix the ascii letter and hex representation in a Python bytestring (e.g. <code>b'\x68ello'</code>) the \ escapes the next two characters and considers them to be the the hex representation of the next byte.</span>
<span class="comment-copy"><i>"SHA-1 commonly outputs to hexadecimal"</i> how many characters does a hex sha1 output have? And how many bytes per hash does the spec say?</span>
