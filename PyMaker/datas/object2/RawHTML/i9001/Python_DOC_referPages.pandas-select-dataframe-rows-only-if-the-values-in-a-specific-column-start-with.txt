<div class="post-text" itemprop="text">
<p>I have the following dataframe <code>df1</code>:</p>
<pre><code>    X           Y           A       B
0   484         408         10      3360
1   478         415         24      3365
2   504         452         31      yes
3   613         551         33      maybe
4   663         665         39      no
</code></pre>
<p>I know how to select the row for which column <code>B</code> is <code>yes</code> or any other specific value:</p>
<pre><code>df1.loc[df1['B'] == 'yes']
</code></pre>
<p>But how can I select all the rows that <strong>do not start</strong> with <code>336</code>?</p>
<p>PS: in my case, <code>3360</code> and <code>3365</code> are strings.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would use something like <code>df[~df.B.str.startswith('336')]</code>, using the <code>str</code> accessor. For instance, </p>
<pre><code>&gt;&gt;&gt; df = pd.DataFrame({'B': ['3360', '3365', 'yes', 'maybe', 'no']})
&gt;&gt;&gt; df[~df.B.str.startswith('336')]
       B
2    yes
3  maybe
4     no
</code></pre>
<p>And if you have multiple strings to check, <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>startswith</code></a> accepts a tuple of prefixes. </p>
<pre><code>&gt;&gt;&gt; df[~df.B.str.startswith(('112', '336', 'n'))]
       B
2    yes
3  maybe
</code></pre>
</div>
<span class="comment-copy">Forgot to mention. How would you combine two or more conditions, such as <code>336</code> and <code>545</code>? Can you use an <code>or</code> inside the accessor?</span>
<span class="comment-copy">@CF84 You can supply a tuple to <code>startswith</code>. For instance, <code>df[~df.B.str.startswith(('112', '336', '556'))]</code>.</span>
