<div class="post-text" itemprop="text">
<p>I have a list of strings as the following one:</p>
<pre><code>a = ['aaa-t1', 'aaa-t2', 'aab-t1', 'aab-t2', 'aab-t3', 'abc-t2']
</code></pre>
<p>I would like to cluster those strings by similarity. As you may note, <code>a[0]</code>, and <code>a[1]</code> share the same root: <code>aaa</code>. I would like to produce a new list of lists that looks like this:</p>
<pre><code>b = [['aaa-t1', 'aaa-t2'], ['aab-t1', 'aab-t2', 'aab-t3'], ['abc-t2']]
</code></pre>
<p>What would be a way to do so?. So far I have not succeeded and I don't have any decent code to show. I was trying comparing strings with <code>fuzzywuzzy</code> but doing so requires creating possible combinations of strings and that scales badly with list's length. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>groupby</code></a> to group the strings by key generated with <code>str.split</code>:</p>
<pre><code>&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; a = ['aaa-t1', 'aaa-t2', 'aab-t1', 'aab-t2', 'aab-t3', 'abc-t2']
&gt;&gt;&gt; [list(g) for k, g in groupby(sorted(a), lambda x: x.split('-', 1)[0])]
[['aaa-t1', 'aaa-t2'], ['aab-t1', 'aab-t2', 'aab-t3'], ['abc-t2']]
</code></pre>
<p><code>groupby</code> returns an iterable of tuples <code>(key, group)</code> where <code>key</code> is a key used for grouping and <code>group</code> is iterable of items in the group. First parameter given to <code>groupby</code> is the iterable to produce groups from and optional second parameter is a key function that is called to produce a key. Since <code>groupby</code> only groups the consecutive elements <code>a</code> needs to be sorted first.</p>
</div>
<span class="comment-copy">What are the rules for "similarity"?  Is this something that is as simple as "take everything before the first <code>-</code> and use that for binning", or do you need to do more complex similarities (a la <code>word2vec</code> kind of stuff?)</span>
<span class="comment-copy">@mgilson I think that "take everything before the first <code>-</code>" would do the job. I had no idea about <code>word2vec</code> but that would be amazing to see as well!.</span>
<span class="comment-copy">Note that for <code>groupby</code> to work, you need to <i>sort</i> the input by the same key that you're grouping by.  In this case, sorting lexicographically is good enough (since the key is just looking at the first couple characters), but in many cases it isn't.</span>
<span class="comment-copy">@mgilson True, that's why <code>sorted</code> is being called. Since in this case there's no need to specify key for sorted I went with shortest &amp; simplest answer.</span>
<span class="comment-copy">@niemmi Holy s!!!! it works!. I had no idea about the <code>groupby</code> function. I really thank you a lot about this, I was gonna kill myself...</span>
