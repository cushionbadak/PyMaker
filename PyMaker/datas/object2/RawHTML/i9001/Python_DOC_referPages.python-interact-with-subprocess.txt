<div class="post-text" itemprop="text">
<p>I want to interact with a process.
I can start the process and print out the first two lines (something like 'process successfully started').
Now I want to send a new command to the process which should return again something like 'command done' but nothing happens.</p>
<p>Please help me.</p>
<pre><code>import subprocess

def PrintAndPraseOutput(output, p):
    print(output)
    if 'sucessfully' in output:
        p.stdin.write('command')

cmd = ["./programm"]
p = subprocess.Popen(cmd, universal_newlines=True, shell=False, stdout=subprocess.PIPE, stdin=subprocess.PIPE)
while p.poll() is None:
    output = p.stdout.readline()
    PrintAndPraseOutput(output, p)
</code></pre>
<p>Update:
same problem, no output after 'process successfully started'</p>
<pre><code>import subprocess

def print_and_parse_output(output, p):
    print(output)
    if 'successfully' in output:
        p.stdin.write('command\n')


with subprocess.Popen(["./programm"], universal_newlines=True, shell=False, stdout=subprocess.PIPE, stdin=subprocess.PIPE) as proc:
    while proc.poll() is None:
        output = proc.stdout.readline()
        print_and_parse_output(output, proc)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your I/O should be line buffered, so <code>PrintAndPraseOutput</code> should send a <code>'\n'</code> at the end of the string. </p>
<p>BTW, you have a couple of spelling errors. That function should be named <code>print_and_parse_output</code> to conform to <a href="https://www.python.org/dev/peps/pep-0008" rel="nofollow noreferrer">PEP-0008</a>, and "successfully" has 2 c's.</p>
<pre><code>def print_and_parse_output(output, p):
    print(output)
    if 'successfully' in output:
        p.stdin.write('command\n')
</code></pre>
<p>When using <code>subprocess</code> like this it's a good idea to put it in a <code>with</code> statement. From <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">the subprocess.Popen` docs</a>:</p>
<blockquote>
<p>Popen objects are supported as context managers via the <code>with</code>
  statement: on exit, standard file descriptors are closed, and the
  process is waited for.</p>
<pre><code>with Popen(["ifconfig"], stdout=PIPE) as proc:
    log.write(proc.stdout.read())
</code></pre>
</blockquote>
</div>
<span class="comment-copy">It's a bit hard to debug this without knowing what the <code>programm</code> command does. Did you write it, or can you modify it? Maybe it's not adding newlines to the end of its output, or flushing <code>stdout</code>.</span>
<span class="comment-copy">thank you for your response, I updated my question. But still the same problem</span>
