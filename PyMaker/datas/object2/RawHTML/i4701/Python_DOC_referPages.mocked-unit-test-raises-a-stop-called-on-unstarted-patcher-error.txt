<div class="post-text" itemprop="text">
<p>When running the test bellow, I got a <code>stop called on unstarted patcher</code>.</p>
<pre><code>def test_get_subvention_internal_no_triggered_admission(self):
    billing_cluster = BillingClusterFactory()
    subvention = SubventionFactory(billing_cluster=billing_cluster)
    convive_sub = ConviveFactory(subvention=subvention, billing_cluster=billing_cluster)
    order_5 = OrderFactory(beneficiary=convive_sub)
    order_operation_5 = CreationOrderOperationFactory(order=order_5)

    with patch('orders.models.Order.subvention_triggered_same_day', return_value=True):
        with patch('builtins.hasattr', return_value=False):
            self.assertIsNone(order_operation_5._get_subvention())
</code></pre>
<p>I read stuff about this error on stack overflow, and concluded that I should avoid mocking the same stuff (stacked mocks). But it's not what I'm doing here. I'm nesting mocks, and <a href="https://docs.python.org/3/library/unittest.mock-examples.html#nesting-patches" rel="nofollow noreferrer">it seems to be ok</a>.</p>
<p>If I invert the return values (first mock returns False, second returns True), the test works well. </p>
<p>Any idea?
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>In short, you cannot <code>patch</code> the <code>builtins</code> func <code>hasattr</code></p>
<pre><code>patch('builtins.hasattr', return_value=False)
</code></pre>
<p>reason: used by <code>mock.py</code></p>
<pre><code>if not _is_started(self):
    raise RuntimeError('stop called on unstarted patcher')

def _is_started(patcher):
    # XXXX horrible
    return hasattr(patcher, 'is_local')
</code></pre>
<p>to repeat the error:</p>
<pre><code>@mock.patch('__builtin__.hasattr')
def test_mock_hasattr(self, mocked_hasattr):
    # as long as it is set to False, it will trigger
    mocked_hasattr.return_value = False
</code></pre>
<p>to mock a <code>builtins</code> func inside <code>models.py</code>:</p>
<pre><code># narrow the mock scope
@mock.patch('orders.models.hasattr')
</code></pre>
</div>
<span class="comment-copy">Thanks for the explanation. How come it's not specified in <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">Python mock doc</a>? Side question: any idea for a workaround?</span>
<span class="comment-copy">@DavidD. eg <a href="https://stackoverflow.com/questions/30313134/write-test-for-views-containing-os-remove-in-django" title="write test for views containing os remove in django">stackoverflow.com/questions/30313134/â€¦</a></span>
<span class="comment-copy">Ahh I misunderstood your answer the first time. Makes more sense now. Thanks a lot ;)</span>
