<div class="post-text" itemprop="text">
<p>I'm trying to pass a parameter which is a list of values:</p>
<pre><code>import argparse
parser = argparse.ArgumentParser()
parser.add_argument('--cb_ticks', required=False, default='')              
args = vars(parser.parse_args())
print(args['cb_ticks'])
</code></pre>
<p>For most cases, this code works as expected:</p>
<ul>
<li>python test.py --cb_ticks "1"  -&gt;  1 </li>
<li>python test.py --cb_ticks "1,2" -&gt; 1,2 </li>
<li>python test.py --cb_ticks "-1" -&gt;  -1</li>
</ul>
<p>But when I'm trying to pass more than one value, where the first is negative:</p>
<ul>
<li>python test.py --cb_ticks "-1,2"</li>
</ul>
<p>I'm getting the following error:
test.py:</p>
<blockquote>
<p>error: argument --cb_ticks: expected one argument</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The <code>add_argument</code> method allows you to tell the argument parser to expect multiple (or no) values:</p>
<pre><code>import argparse
parser = argparse.ArgumentParser()
parser.add_argument('--cb_ticks', nargs='*')  

args = vars(parser.parse_args())
print(args['cb_ticks'])
</code></pre>
<p>but the values are expected to be space separated, so you'll have to execute your script as:</p>
<pre><code>python test.py --cb_ticks -1 2
</code></pre>
<p>See <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">reference</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>-1,2</code> is allowed as a optionals flag:</p>
<pre><code>In [39]: parser.add_argument('-1,2')
...
In [40]: parser.print_help()
usage: ipython3 [-h] [--cb_ticks CB_TICKS] [-1,2 1,2]

optional arguments:
  -h, --help           show this help message and exit
  --cb_ticks CB_TICKS
  -1,2 1,2

In [44]: args=parser.parse_args(['--cb_ticks','foo','-1,2','bar'])
In [45]: args
Out[45]: Namespace(cb_ticks='foo', **{'1,2': 'bar'}) # curious display
In [46]: vars(args)
Out[46]: {'1,2': 'bar', 'cb_ticks': 'foo'}
In [47]: getattr(args, '1,2')
Out[47]: 'bar'
</code></pre>
<p>This is an edge case, a consequence of code that tries not to constrain what flags (and/or <code>dest</code>) the user can define.</p>
</div>
<span class="comment-copy">Remove the comma and separate each argument with a space(s) between them. Try this <code>python test.py --cb_ticks "-1 2"</code></span>
<span class="comment-copy">I think <code>argparse</code> is confusing this <code>-1,2</code> with a optionals flag.  <code>-1</code> can be a short optional, and the code to distinguish that from real numeric negatives is not robust.  `--cb_ticks=1,2' should work.</span>
<span class="comment-copy">Related, but not an answer: <a href="https://docs.python.org/3/library/argparse.html#arguments-containing" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#arguments-containing</a> For positional arguments, the rule is expressed "<i>positional arguments may only begin with - if they look like negative numbers and there are no options in the parser that look like negative numbers</i>". I wonder if the same rule applies to parameters to optional arguments.</span>
<span class="comment-copy">Like @Doug suggested, --cb_ticks "-1 2" does work. Thanks!</span>
<span class="comment-copy">@Robáµ©, yes the code that identifies tries to identify negative numbers operates early in the parsing, when it is distinguishing between flags and values.</span>
