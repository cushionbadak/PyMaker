<div class="post-text" itemprop="text">
<p>When using raw_input in python, a user has to put an input and then press enter.
Is there a way for me to code something, where the code will prompt several user inputs at the same time and THEN press enter for the code to run?</p>
<p>For example:
instead of ...</p>
<pre><code>&gt;&gt;&gt; Name: &lt;prompt&gt; &lt;enter&gt;
&gt;&gt;&gt; Age: &lt;prompt&gt; &lt;enter&gt;
&gt;&gt;&gt; Gender: &lt;prompt&gt; &lt;enter&gt;
</code></pre>
<p>it'll have ...</p>
<pre><code>&gt;&gt;&gt;
Name: &lt;prompt&gt;
Age: &lt;prompt&gt;
Gender: &lt;prompt&gt;
&lt;enter&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input()</code></a> only allows one string input to be supplied.</p>
<p>What you can do is this:</p>
<pre><code>name, age, gender = input('Enter Name|Age|Gender:').split('|')

# user inputs "ABC|30|M"

print(name, age, gender)
# ABC 30 M
</code></pre>
<p>Now you just rely on user not having a <code>|</code> character in their name.</p>
<p>Or, of course, you can ask separate questions.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way is to  do like this:</p>
<pre><code>x=raw_input("Enter values: ")
a=x.split(' ')
</code></pre>
<p>And now you have the separate values in <code>a</code>.</p>
<p>Demonstration:</p>
<pre><code>&gt;&gt;&gt; x=raw_input("Enter values: ")
Enter values: 12 65 hello
&gt;&gt;&gt; a=x.split(' ')
&gt;&gt;&gt; a
['12', '65', 'hello']
</code></pre>
<p>Then you could do <code>age=a[0]</code> and so forth.</p>
<p>You could use the split directly like this:</p>
<pre><code>a,b,c=raw_input("Enter values: ").split(' ')
</code></pre>
<p>One downside is that if the user does not give three values, you will get an error. If you split afterwards you can perform controls on the input first.</p>
<p>Note:</p>
<p>This method may cause problem if you want spaces in data, since space is used as a delimiter. Switch to another token in <code>split()</code> to allow spaces if needed.</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>name</code> will always be letters, <code>age</code> will always be numbers and <code>gender</code> will always be letters, and they are in that order, this should work:</p>
<pre><code>info=input("what is your name, age and gender?")
name=""
age=""
gender=""
var="n"
for i in info:
    if var=="n":
        try:
            int(i)
            var="a"
        except:
            name+=i
    if var=="a":
        try:
            int(i)
            age+=i
        except:
            var="g"
    if var=="g":
        gender+=i
print(name, age, gender)
</code></pre>
<p>It means that you won't have to worry about the user inputing a seperator. </p>
</div>
<span class="comment-copy">You may want to alter the way you ingest data entirely if you're running a script with multiple parameters or options. The <a href="https://docs.python.org/3.6/howto/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> package is good for passing options to a script using command line flags. You could also leverage something like the <a href="https://docs.python.org/3.6/library/json.html?highlight=json" rel="nofollow noreferrer"><code>json</code></a> or <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer"><code>configparser</code></a> modules to ingest these paramters from a file.</span>
<span class="comment-copy"><code>input</code> is meant to be very simple and minimal. If you want more advanced user interaction, there are many ways to create a user interface, depending on your target environment. Do you want a text terminal application, a graphical user interface or maybe a web application?</span>
<span class="comment-copy">@PedroSerrano, if one of the below solutions helped, consider accepting it (green tick on left).</span>
