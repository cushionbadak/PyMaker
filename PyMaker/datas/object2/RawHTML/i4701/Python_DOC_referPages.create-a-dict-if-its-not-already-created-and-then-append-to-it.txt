<div class="post-text" itemprop="text">
<p>I have a list of files in which I need to select few lines which has CommonChar in them and work on creating a dictionary. 
The lines in a file which I am interested in look like these: </p>
<pre><code>CommonChar uniqueName field value 

CommonChar uniqueName field1 value1

CommonChar uniqueName1 field value

CommonChar uniqueName1 field1 value1 
</code></pre>
<p>So with this I would want a final dictionary which will store internal dictionaries named on uniqueName and key value pairs as (field: value, field1:value1)</p>
<p>This way I will have a main dict with internal dict based on uniqueName and key value pairs. </p>
<p>Final output should look like this: </p>
<pre><code>mainDic={'uniqueName': {'field':'value', 'field1':value1, 'field2':value2},
          'uniqueName1':{'field':'value', 'field1':value1, 'field2':value2} }
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check out defaultdict! Import with <code>from collections import defaultdict</code>. If you start with <code>mainDict = defaultdict(dict)</code> it will automatically create the dictionary if you try to assign a key. <code>mainDict['Apple']['American'] = '16'</code> will work like magic.</p>
<p>If you need to increment new keys in the sub dictionaries, <a href="https://stackoverflow.com/questions/5029934/python-defaultdict-of-defaultdict">you can also put a defaultdict in a defaultdict</a></p>
<p>documentation: <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">https://docs.python.org/3/library/collections.html#collections.defaultdict</a></p>
</div>
<div class="post-text" itemprop="text">
<p>'Apple' and 'Grapes' can't be created as dictionaries since they are strings. I'm assuming you have a flow in your program that goes something 
like this:</p>
<ol>
<li>create a dictionary containing information about apples</li>
<li>assign that dictionary to the variable apple</li>
<li>check if this just created dictionary is already in mainDict</li>
<li><p>if not, add it to the values of mainDict under the key 'Apple'</p>
<pre><code>mainDict= {'Grapes':{'Arabian':'25','Indian':'20'} }
apple = {'American':'16', 'Mexican':10, 'Chinese':5}

if apple not in mainDict.values():
    mainDict['Apple'] = apple

mainDict
</code></pre></li>
</ol>
<p>output:</p>
<pre><code>{'Apple': {'American': '16', 'Chinese': 5, 'Mexican': 10},
 'Grapes': {'Arabian': '25', 'Indian': '20'}}
</code></pre>
<p>The problem I think you have, is that there's no general way to get the name 
of an object as a string. Dicts don't have a <strong>name</strong> attribute. Refer to these answers: <a href="https://stackoverflow.com/questions/1538342/how-can-i-get-the-name-of-an-object-in-python">How can I get the name of an object in Python?</a></p>
</div>
<span class="comment-copy"><code>'Apple' in mainDict</code>...<code>mainDict['Apple']={}</code>......<code>mainDict['Apple']['American']=33</code></span>
<span class="comment-copy">people have mentioned membership checks, but setdefault is really the way to go here.</span>
<span class="comment-copy">I have updated my question to make it more clear ....</span>
<span class="comment-copy">If you want to use <code>dict</code> and manually check, it looks like there are plenty of threads on that (e.g. the possible duplicates).</span>
<span class="comment-copy">I have updated my question to make it more clear .</span>
<span class="comment-copy">I have updated my question to make it more clear .</span>
