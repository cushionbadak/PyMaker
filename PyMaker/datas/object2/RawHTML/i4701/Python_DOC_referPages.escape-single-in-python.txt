<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5466451/how-can-i-print-literal-curly-brace-characters-in-python-string-and-also-use-fo">How can I print literal curly-brace characters in python string and also use .format on it?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I am using python for C code generation, I want to have a function that prints the following:</p>
<pre><code>{
.data1="egg",
.data2="dog",
},
</code></pre>
<p>I tried this function:</p>
<pre><code>def funky(data1,data2):
    return """\
    {
    .data1="egg",
    .data2="dog",
    },""".format(data1,data2)
</code></pre>
<p>Calling "<code>funky("egg","dog")</code>" results in a KeyError. Relating to the unpaired curly braces.</p>
<p>How can I print these braces?</p>
</div>
<div class="post-text" itemprop="text">
<p>You would need to:</p>
<ol>
<li>Use two <code>{</code>s and two <code>}</code>s.</li>
<li>Escape the double quotes inside the string.</li>
<li>Use <code>{0}</code> and <code>{1}</code> instead of <code>{egg}</code> and <code>{dog}</code>.</li>
</ol>
<hr/>
<pre><code>def funky(data1,data2):
    return """\
    {{
    .data1=\"{0}\",
    .data2=\"{1}\",
    }},""".format(data1,data2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have no variables in your string literal, you didn't escape the <code>{</code> and <code>}</code>, and you broke the indentation. Try this:</p>
<pre><code>def stripMargin(txt):
  return '\n'.join([r.split('|', 1)[1] for r in txt.split('\n')])

def funky(data1,data2):
  return stripMargin("""|{{
  |.data1="{0}",
  |.data2="{1}",
  |}},""".format(data1,data2))

print(funky("egg", "dog"))
</code></pre>
<p>The <code>|</code>-part combined with <code>stripMargin</code> ensures that the indentation of the generated code (the object language) does not interfere with the indentation of python (the metalanguage).</p>
<p>I would actually indent the generated code differently:</p>
<pre><code>def funky(data1,data2):
  return stripMargin("""|{{
  |  .data1="{0}",
  |  .data2="{1}",
  |}},""".format(data1,data2))
</code></pre>
<hr/>
<p>Since you don't need any common indentation in the final output, you can also use <code>dedent</code>:</p>
<pre><code>from textwrap import dedent

def funky2(data1,data2):
    return dedent("""\
    {{
    .data1="{0}",
    .data2="{1}",
    }},""").format(data1,data2)
</code></pre>
<p>(Thanks @user2357112 for pointing it out)</p>
</div>
<span class="comment-copy">Why are you using <code>format</code> at all when your format string is completely hardcoded, with no format placeholders?</span>
<span class="comment-copy">escape single <code>{</code> with double <code>{{</code>.</span>
<span class="comment-copy">Seems to me, like this question has already been answered <a href="https://stackoverflow.com/questions/5466451/how-can-i-print-literal-curly-brace-characters-in-python-string-and-also-use-fo">here</a>.</span>
<span class="comment-copy">Thank you @Daniel , that solved it!</span>
<span class="comment-copy">The closest thing to Scala's <code>stripMargin</code> in Python is <a href="https://docs.python.org/3/library/textwrap.html#textwrap.dedent" rel="nofollow noreferrer"><code>textwrap.dedent</code></a>.</span>
<span class="comment-copy">@user2357112 Thanks for the hint! Added a variation with <code>dedent</code>.</span>
