<div class="post-text" itemprop="text">
<p>I am trying to replace a selected text with a single word from that selected text using regex. I tried re.sub() but it seems that it takes the second argument "The word that I want to replace it with the text" as a string, not as regex. </p>
<p>Here is my string: </p>
<pre><code>I go to Bridgebrook i go out &lt;ERR targ=sometimes&gt; some times &lt;/ERR&gt; on Tuesday night i go to Youth &lt;ERR targ=club&gt; clob &lt;/ERR&gt; .
</code></pre>
<p>And here is my code:</p>
<pre><code># The regex of the form &lt;ERR targ=...&gt; .. &lt;/ERR&gt;
select_text_regex = r"&lt;ERR[^&lt;]+&lt;\/ERR&gt;"

# The regex of the correct word that will replace the selected text of teh form &lt;ERR targ=...&gt; .. &lt;/ERR&gt;
correct_word_regex = r"targ=([^&gt;]+)&gt;"
line = re.sub(select_text_regex, correct_word_regex, line.rstrip())
</code></pre>
<p>I get:</p>
<pre><code>I go to Bridgebrook i go out targ=([^&gt;]+)&gt; on Tuesday night i go to
Youth targ=([^&gt;]+)&gt; .
</code></pre>
<p>My goal is: </p>
<pre><code>I go to Bridgebrook i go out sometimes on Tuesday night i go to
Youth club .
</code></pre>
<p>Does Python support replacing two strings using Regex?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's another solution (I also rewrote the regex using "non-greedy" modifiers by putting <code>?</code> after <code>*</code> because I find it more readable).</p>
<p>The group referenced by <code>r"\1"</code> is done with parenthises as an unnamed group. Also used <code>re.compile</code> as a style preference to reduce the number of args:</p>
<pre><code>line = "I go to Bridgebrook i go out &lt;ERR targ=sometimes&gt; some times &lt;/ERR&gt; on Tuesday night i go to Youth &lt;ERR targ=club&gt; clob &lt;/ERR&gt; ."
select_text_regex = re.compile(r"&lt;ERR targ=(.*?)&gt;.*?&lt;\/ERR&gt;")
select_text_regex.sub(r"\1", line)
</code></pre>
<p>Named group alternative:</p>
<pre><code>line = "I go to Bridgebrook i go out &lt;ERR targ=sometimes&gt; some times &lt;/ERR&gt; on Tuesday night i go to Youth &lt;ERR targ=club&gt; clob &lt;/ERR&gt; ."
select_text_regex = re.compile(r"&lt;ERR targ=(?P&lt;to_replace&gt;.*?)&gt;.*?&lt;\/ERR&gt;")
select_text_regex.sub(r"\g&lt;to_replace&gt;", line)
</code></pre>
<p>You can find some docs on group referencing here:</p>
<p><a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#regular-expression-syntax</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You would need to match the target word in the pattern, as a capturing group - you can't start an entirely new search in the replacement string!</p>
<p>Not tested, but this should do the job:</p>
<p>Replace <code>r"&lt;ERR targ=(.*?)&gt;.*?&lt;/ERR&gt;"</code></p>
<p>With <code>r"\1"</code></p>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is regex capture groups. Instead of selecting the regex and then trying to replace it with another regex, put the part of your regex you want to match inside parenthesis in your select statement, then get it back in the replacement with \1. (the number being the group you included)</p>
<pre><code>line = "I go to Bridgebrook i go out &lt;ERR targ=sometimes&gt; some times &lt;/ERR&gt; on Tuesday night i go to Youth &lt;ERR targ=club&gt; clob &lt;/ERR&gt; ."

select_text_regex = r"&lt;ERR targ=([^&lt;]+)&gt;[^&lt;]+&lt;\/ERR&gt;" #Correct Here.
correct_word_regex = r"\1" #And here.

line = re.sub(select_text_regex, correct_word_regex, line.rstrip())

print(line)
</code></pre>
</div>
<span class="comment-copy">Keep in mind that this is just a regex solution! A lot of people will recommend that you use a proper parser and a library like beautifulsoup if your use case can be more complicated: <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">crummy.com/software/BeautifulSoup/bs4/doc</a></span>
<span class="comment-copy">Is it possible to convert the replaced text to upper letters with re.sub()?</span>
<span class="comment-copy">This solution works - replace <code>"r\1"</code> with a function: <a href="https://stackoverflow.com/questions/8934477/making-letters-uppercase-using-re-sub-in-python" title="making letters uppercase using re sub in python">stackoverflow.com/questions/8934477/â€¦</a></span>
<span class="comment-copy">I used your second implementation:  <code>line = select_text_regex.sub(r"\g&lt;to_replace&gt;\1",lambda m: m.group('first').upper(), line)</code> It says: <code>TypeError: 'str' object cannot be interpreted as an integer</code></span>
