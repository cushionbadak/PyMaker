<div class="post-text" itemprop="text">
<p>I'm processing some semi-structured documents in Python and I have some code that reads the file into a tuple and loops through each line and performs a function. Is there a way of finding the exact line in the processed file where an error is encountered?</p>
<pre><code>c = tuple(open("file", 'r'))

for element in c:
    if (condition is met):
        do something
    else:
        do something else
</code></pre>
<p>The result should be:</p>
<pre class="lang-none prettyprint-override"><code>Error: in line # of "file"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> should help:</p>
<pre><code>for line, element in enumerate(c):
    try:
        if (condition is met):
            do something
        else:
            do something else
    except Exception as e:
        print('got error {!r} on line {}'.format(e, line))
</code></pre>
<p>The above would give an error like: </p>
<pre><code>got error OSError('oops!',) on line 4
</code></pre>
<p>Although as good practice you'd generally replace <code>Exception</code> with whatever error you're expecting to catch.</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, it is good practice to use the <code>with</code> keyword when you are reading from a file, especially if you expect an Exception to occur. You can also <code>enumerate</code> to count the lines:</p>
<p><code>
with open(filename) as f:
        for line_num, line in enumerate(f):
            try:
                if (condition is met):
                    do something
                else:
                    do something else
             except Exception:
                 print('Error: in line {:d} of file'.format(line_num))
</code>
It's best to not use <code>Exception</code> if you know the specific Exception you are expecting because it will catch all Exceptions, even those you don't expect.</p>
</div>
<span class="comment-copy">Well, you're looping over lines of the file so you could do <code>for line_number, line in enumerate(c, start=1):</code></span>
<span class="comment-copy">The exception doesn't carry local variables, much less other state like the internals of the <code>TextIOWrapper</code>, much less internal state that doesn't even exist like a line number. But you can easily add it yourself.</span>
<span class="comment-copy">I'd either use <code>{!r}</code> or throw the exception type into the error manually. It's frustrating when you get a log message about an exception and have to guess what type it was. (But otherwise, great answer.)</span>
<span class="comment-copy">Nice, thanks, didn't know that neat string format trick.</span>
