<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/42082607/iterate-over-numpy-with-index-numpy-equivalent-of-python-enumerate">Iterate over numpy with index (numpy equivalent of python enumerate)</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>For python <code>dict</code>, I could use <code>iteritems()</code> to loop through key and value at the same time. But I cannot find such functionality for NumPy array. I have to manually track <code>idx</code> like this:</p>
<pre><code>idx = 0 
for j in theta:
   some_function(idx,j,theta)
   idx += 1
</code></pre>
<p>Is there a better way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are a few alternatives. The below assumes you are iterating over a 1d NumPy array.</p>
<h3>Iterate with <a href="https://docs.python.org/3/library/functions.html#func-range" rel="noreferrer"><code>range</code></a></h3>
<pre><code>for j in range(theta.shape[0]):  # or range(len(theta))
   some_function(j, theta[j], theta)
</code></pre>
<p>Note this is <a href="https://github.com/numba/numba/issues/3111" rel="noreferrer">the only</a> of the 3 solutions which will work with <a href="http://numba.pydata.org/" rel="noreferrer"><code>numba</code></a>. This is noteworthy since iterating over a NumPy array explicitly is usually only efficient when combined with <code>numba</code> or another means of pre-compilation.</p>
<h3>Iterate with <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="noreferrer"><code>enumerate</code></a></h3>
<pre><code>for idx, j in enumerate(theta):
   some_function(idx, j, theta)
</code></pre>
<p>The most efficient of the 3 solutions for 1d arrays. See benchmarking below.</p>
<h3>Iterate with <a href="https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.ndenumerate.html" rel="noreferrer"><code>np.ndenumerate</code></a></h3>
<pre><code>for idx, j in np.ndenumerate(theta):
   some_function(idx[0], j, theta)
</code></pre>
<p>Notice the additional indexing step in <code>idx[0]</code>. This is necessary since the index (like <code>shape</code>) of a 1d NumPy array is given as a singleton tuple. For a 1d array, <code>np.ndenumerate</code> is inefficient; its benefits only show for multi-dimensional arrays.</p>
<h3>Performance benchmarking</h3>
<pre><code># Python 3.7, NumPy 1.14.3

np.random.seed(0)

arr = np.random.random(10**6)

def enumerater(arr):
    for index, value in enumerate(arr):
        index, value
        pass

def ranger(arr):
    for index in range(len(arr)):
        index, arr[index]
        pass

def ndenumerater(arr):
    for index, value in np.ndenumerate(arr):
        index[0], value
        pass

%timeit enumerater(arr)    # 131 ms
%timeit ranger(arr)        # 171 ms
%timeit ndenumerater(arr)  # 579 ms
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>numpy.ndenumerate</code> for example</p>
<pre><code>import numpy as np
test_array = np.arange(2, 3, 0.1)
for index,value in np.ndenumerate(test_array):
    print(index[0],value)
</code></pre>
<p>for more information refer to <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndenumerate.html" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndenumerate.html</a></p>
</div>
<span class="comment-copy">You can use <code>enumerate</code> for this.. <a href="https://stackoverflow.com/questions/22171558/what-does-enumerate-mean" title="what does enumerate mean">stackoverflow.com/questions/22171558/what-does-enumerate-mean</a>. Or iterate <code>range(len(theta))</code>.</span>
<span class="comment-copy">Or better, <code>ndenumerate</code>  if you are dealing with NDarrays.</span>
