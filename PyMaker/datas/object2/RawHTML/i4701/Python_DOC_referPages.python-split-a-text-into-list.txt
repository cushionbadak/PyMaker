<div class="post-text" itemprop="text">
<p>I want to convert this</p>
<pre><code>1:a,b,c
2:d,e,f
</code></pre>
<p>into this</p>
<pre><code>[[1, ['a', 'b', 'c']],[2, ['d', 'e', 'f']]]
</code></pre>
<p>My code </p>
<pre><code>letters = open("letters.txt")
alist = []
for line in favmovies:
    line = line.strip().split(":")
    line[0] = int(line[0])
    alist.append(line)
</code></pre>
<p>but it gives this instead</p>
<pre><code>[[1, 'a,b,c'], [2, 'd,e,f']]
</code></pre>
<p>Can anyone please offer a solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just split the second part of the array by ",".</p>
<pre><code>letters = open("letters.txt")
alist = []
for line in favmovies:
    line = line.strip().split(":")
    line[0] = int(line[0])
    line[1] = line[1].split(',')
    list.append(line)
</code></pre>
<p>This gives me, with your example:</p>
<pre><code>[1, ['a', 'b', 'c']] 
[2, ['d', 'e', 'f']]
</code></pre>
<p>And it preserves the overarching format of your original code.</p>
</div>
<div class="post-text" itemprop="text">
<p>That can be done with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> like:</p>
<h3>Code:</h3>
<pre><code>data = [[int(x[0]), [y.strip() for y in x[1].split(',')]]
        for x in (line.split(':') for line in letters)]
</code></pre>
<h3>Test Code:</h3>
<pre><code>letters = ['1:a, b, c', '2: d, e, f']
data = [[int(x[0]), [y.strip() for y in x[1].split(',')]]
        for x in (line.split(':') for line in letters)]
print(data)
</code></pre>
<h3>Results:</h3>
<pre><code>[[1, ['a', 'b', 'c']], [2, ['d', 'e', 'f']]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here</p>
<pre><code>letters=open("letters.txt").read().split("\n")
output_list=[]
for el in letters:
    output_list.append([el.split(":")[0],el.split(":")[1].split(",")])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re</code> to condense the solution:</p>
<pre><code>import re
data = [re.split('\W+', i.strip('\n')) for i in open("letters.txt")]
last_data = [[int(a), b] for a, *b in data]
</code></pre>
<p>Output:</p>
<pre><code>[[1, ['a', 'b', 'c']], [2, ['d', 'e', 'f']]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one loop approach:</p>
<pre><code>print([list(map(lambda x: x.split(','), i.strip().split(':'))) for i in open('file.txt','r')])
</code></pre>
<p>output:</p>
<pre><code>[[['1'], ['a', 'b', 'c']], [['2'], ['d', 'e', 'f']]]
</code></pre>
</div>
<span class="comment-copy">Thank you so much :)</span>
<span class="comment-copy">@Hal sure, hope this helps!  If this answers your question, please mark it as correct by clicking the green checkmark.  Thanks!</span>
<span class="comment-copy">I like your solution because this question exemplifies what list comprehension is good for, and because you preserve the logic of the OP's post (as I did in my answer) but illuminate how it can be coalesced pythonically.  There's a subtlety here: you give an alternative method, but your alternative maintains the original logic.  (Which is ideal, I think.)</span>
