<div class="post-text" itemprop="text">
<p>My data looks like:</p>
<pre><code> 1 1.45
 1 1.153
 2 2.179
 2 2.206
 2 2.59
 2 2.111
 3 3.201
 3 3.175
 4 4.228
 4 4.161
 4 4.213
</code></pre>
<p>The output I want is :</p>
<pre><code> 1  2  (1 occurs 2 times)
 2  4
 3  2
 4  3
</code></pre>
<p>For this I run the following code:</p>
<pre><code>SubPatent2count = {}
for line in data.split('\n'):
    for num in line.split('\t'):
        Mapper_data = ["%s\t%d" % (num[0], 1) ]
        for line in Mapper_data:
            Sub_Patent,count = line.strip().split('\t',1)
            try:
                count = int(count)
            except ValueError:
                continue

            try:
                SubPatent2count[Sub_Patent] = SubPatent2count[Sub_Patent]+count
            except:
                SubPatent2count[Sub_Patent] = count
for Sub_Patent in SubPatent2count.keys():
    print ('%s\t%s'% ( Sub_Patent,  SubPatent2count[Sub_Patent] ))
</code></pre>
<p>At the end I get this error :</p>
<pre><code>     3    for num in line.split('\t'):
     4         #print(num[0])
----&gt; 5         Mapper_data = ["%s\t%d" % (num[0], 1) ]
     6         #print(Mapper_data)
     7         for line in Mapper_data:

IndexError: string index out of range
</code></pre>
<p>If you have any Idea how I can deal with this error please Help. 
Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just suggesting another approach: Have you tried with list comprehension + <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">groupy</a> from <code>itertools</code>?</p>
<pre><code>from itertools import groupby

print([(key, len(list(group))) for key, group in groupby([x.split(' ')[0] for x in data.split('\n')])])
# where [x.split(' ')[0] for x in data.split('\n')] generates a list of all starting number
# and groupy counts them
</code></pre>
<p>Or if you want that exact output:</p>
<pre><code>from itertools import groupby

mylist = [(key, len(list(group))) for key, group in groupby([x.split(' ')[0] for x in data.split('\n')])]


for key, repetition in mylist:
    print(key, repetition)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thank you everybody, your suggestions really helped me, I changed my code as follow:</p>
<pre><code>SubPatent2count = {}
for line in data.split('\n'):
Mapper_data = ["%s\o%d" % (line.split(' ')[0], 1) ]
    for line in Mapper_data:
            Sub_Patent,count = line.strip().split('\o',1)
            try:
                count = int(count)
            except ValueError:
                continue

            try:
                SubPatent2count[Sub_Patent] = SubPatent2count[Sub_Patent]+count
           except:
                SubPatent2count[Sub_Patent] = count
for Sub_Patent in SubPatent2count.keys():
    print ('%s\t%s'% ( Sub_Patent,  SubPatent2count[Sub_Patent] )) 
</code></pre>
<p>And it gives the following result:</p>
<pre><code>1  2  (1 occurs 2 times)
2  4
3  2
4  3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>num[0]</code> is probably an empty string, that's why you are getting an index out of range error. Another possibility is that you are in fact separating the number in each line with empty strings, not with tabs.</p>
<p>Anyway, your code seems a little strange. For example, you encode the data in a string in a list of one element (<code>Mapped_data</code>) and then decode it to process it. That is really not necessary and you should avoid it.</p>
<p>Try this code:</p>
<pre><code>from collections import Counter

decoded_data = [ int(l.split(' ', 1)[0]) for l in data.split('\n') if len(l)&gt;0]
SubPatent2count = Counter(decoded_data)

for k in SubPatent2count:
    print k, SubPatent2count[k]
</code></pre>
</div>
<span class="comment-copy">I try the code but it gives this error:</span>
<span class="comment-copy">print [len(list(group)) for key, group in groupby([x.split(' ')[0] for x in data.split('\n')])]                               ^ SyntaxError: invalid syntax</span>
<span class="comment-copy">I didn't see that yo were using python3: add parenthesis for the print statement: <code>print([len(list(group)) for key, group in groupby([x.split(' ')[0] for x in data.split('\n')])])</code></span>
<span class="comment-copy">Thank you for replying your code works but it gives an output that seems like []</span>
<span class="comment-copy">Thank you the last code works perfectly!</span>
<span class="comment-copy">You kept this pattern where you encode the data to decode it later to process it. This code also has a <code>for</code> loop that is really unnecessary, because you are iterating a list of just one element, a list you have just created. I insist you should not do that. All the solutions offered in the answers are way better than this.</span>
<span class="comment-copy">Thank you for replying. In fact <b>num[0]</b> is not empty, if you print it it gives: ( 1 1 2 2 2 2 3 3 4 4 4 )</span>
<span class="comment-copy">I tried the code it gives the following error: ValueError: invalid literal for int() with base 10: '1 1.232'</span>
<span class="comment-copy">it is probably the last line, that is an empty string, because the las line ends with <code>\n</code>.</span>
<span class="comment-copy">The error it is probably because the numbers are not separated by a tab, but with an empty space. Try replacing  the <code>'\t'</code> with <code>' '</code>.</span>
<span class="comment-copy">I tried to change the '\t' with '  ' but t gives the following error: invalid literal for int() with base 10: ' '</span>
