<div class="post-text" itemprop="text">
<p>I have written a script to convert a text file into dictionary..</p>
<p>script.py</p>
<pre><code>l=[]
d={}
count=0

f=open('/home/asha/Desktop/test.txt','r')
for row in f:
    rowcount+=1
    if row[0] == ' ' in row:
        l.append(row)
    else:
        if count == 0:
            temp = row
            count+=1
        else:
            d[temp]=l
            l=[]
            count=0              
print d
</code></pre>
<p>textfile.txt</p>
<pre><code>Time
 NtGetTickCount
 NtQueryPerformanceCounter
 NtQuerySystemTime
 NtQueryTimerResolution
 NtSetSystemTime
 NtSetTimerResolution
 RtlTimeFieldsToTime
 RtlTimeToTime
System informations
 NtQuerySystemInformation
 NtSetSystemInformation
 Enumerations
 Structures
</code></pre>
<p>The output i have got is </p>
<pre><code>{'Time\n': [' NtGetTickCount\n', ' NtQueryPerformanceCounter\n', ' NtQuerySystemTime\n', ' NtQueryTimerResolution\n', ' NtSetSystemTime\n', ' NtSetTimerResolution\n', ' RtlTimeFieldsToTime\n', ' RtlTimeToTime\n']}
</code></pre>
<p>Able to convert upto 9th line in the text file. Suggest me where I am going wrong..  </p>
</div>
<div class="post-text" itemprop="text">
<p>So you need to know two things at any given time while looping over the file:</p>
<p>1) Are we on a title level or content level (by indentation) and</p>
<p>2) What is the current title</p>
<p>In the following code, we first check if the current line we are at, is a title (so it does not start with a space) and set the <code>currentTitle</code> to that as well as insert that into our dictionary as a key and an empty list as a value.</p>
<p>If it is not a title, we just append to corresponding title's list.</p>
<pre><code>with open('49359186.txt', 'r') as input:

    topics = {}
    currentTitle = ''

    for line in input:
        line = line.rstrip()
        if line[0] != ' ':
            currentTitle = line
            topics[currentTitle] = []
        else:
            topics[currentTitle].append(line)

print topics
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You never commit (i.e. run <code>d[row] = []</code>) the final list to the dictionary.</p>
<p>You can simply commit  when you create the row:</p>
<pre><code>d = {}
cur = []

for row in f:
    if row[0] == ' ':  # line in section
        cur.append(row)
    else:  # new row
        d[row] = cur = []

print (d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer"><code>dict.setdefault</code></a> to create dictionary with lists as values will make your job easier.</p>
<pre><code>d = {}

with open('input.txt') as f:
    key = ''
    for row in f:
        if row.startswith(' '):
            d.setdefault(key, []).append(row.strip())
        else:
            key = row

print(d)
</code></pre>
<p>Output:</p>
<pre><code>{'Time\n': ['NtGetTickCount', 'NtQueryPerformanceCounter', 'NtQuerySystemTime', 'NtQueryTimerResolution', 'NtSetSystemTime', 'NtSetTimerResolution', 'RtlTimeFieldsToTime', 'RtlTimeToTime'], 'System informations\n': ['NtQuerySystemInformation', 'NtSetSystemInformation', 'Enumerations', 'Structures']}
</code></pre>
<p>A few things to note here:</p>
<ol>
<li>Always use <code>with open(...)</code> for file operations.</li>
<li>If you want to check the first index, or the first few indices, use <code>str.startswith()</code></li>
</ol>
<p>The same can be done using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>:</p>
<pre><code>from collections import defaultdict

d = defaultdict(list)

with open('input.txt') as f:
    key = ''
    for row in f:
        if row.startswith(' '):
            d[key].append(row)
        else:
            key = row
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>d = {}
key = None

with open('/home/asha/Desktop/test.txt','r') as file:
    for line in file:
        if line.startswith(' '):
            d[key].append(line.strip())
        else:
            key = line.strip(); d[key] = []

print(d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just for the sake of adding in my 2 cents. </p>
<p>This problem is easier to tackle backwards. Consider iterating through your file backwards and then storing the values into a dictionary whenever a header is reached.</p>
<pre><code>f=open('test.txt','r')

d = {}
l = []
for row in reversed(f.read().split('\n')):
    if row[0] == ' ': 
        l.append(row)
    else:
        d.update({row: l})
        l = []
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just keep track the line which start with ' ' and you are done with one loop only  :</p>
<pre><code>final=[]
keys=[]
flag=True
with open('new_text.txt','r') as f:
    data = []

    for line in f:
        if not line.startswith(' '):
            if line.strip():
                keys.append(line.strip())
            flag=False
            if data:
                final.append(data)
            data=[]
            flag=True
        else:
            if flag==True:
                data.append(line.strip())

final.append(data)
print(dict(zip(keys,final)))
</code></pre>
<p>output:</p>
<pre><code>{'Example': ['data1', 'data2'], 'Time': ['NtGetTickCount', 'NtQueryPerformanceCounter', 'NtQuerySystemTime', 'NtQueryTimerResolution', 'NtSetSystemTime', 'NtSetTimerResolution', 'RtlTimeFieldsToTime', 'RtlTimeToTime'], 'System informations': ['NtQuerySystemInformation', 'NtSetSystemInformation', 'Enumerations', 'Structures']}
</code></pre>
</div>
<span class="comment-copy">At <code>row[0] == ' ' in row</code>, remove the <code>in row</code> part. That expression is being evaluated as <code>row[0] == ' ' and ' ' in row</code>.</span>
<span class="comment-copy">@Aran-Fey ... although that should not really make a difference (if the first part is true, then the second part is true, too)</span>
<span class="comment-copy">@tobias_k Oh, you're right. Hmm, I'm pretty sure the bug is related to that weird <code>count</code> variable then. Honestly, I'm confused by everything that's going on in that <code>else</code> block. Well, I'll leave it to someone else to debug that, because clearly I can't think straight at the moment.</span>
<span class="comment-copy">The downside of this approach is that with a slow Python implementation, you'll create lots useless of empty lists. And for an empty line, I think that <code>row[0] == ' '</code> is actually more appropriate than <code>startswith</code>.</span>
<span class="comment-copy">Why the <code>;</code> in Python code? I mean, if you're <a href="https://codegolf.stackexchange.com/">golfing</a>, maybe ...</span>
<span class="comment-copy">@phihag: combining two strongly related statements in a single code line (as is the case here) is not considered as a bad practice.</span>
<span class="comment-copy">Yes it is, it's E702 <a href="https://pep8.readthedocs.io/en/1.4.5/intro.html#error-codes" rel="nofollow noreferrer">with pep8</a></span>
