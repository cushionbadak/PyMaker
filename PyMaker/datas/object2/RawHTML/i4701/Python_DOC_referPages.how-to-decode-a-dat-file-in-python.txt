<div class="post-text" itemprop="text">
<p>I'm trying to read bytes from a DAT file. I know the data is supposed to be in either Binary or Hex. But when I try to read the bytes it prints out weird symbols. I'm assuming they are ascii values. I tried converting them but I keep getting the error message that 'str' cannot be converted. Does anyone know how I can decode it? And is read() the correct function to use for this?</p>
<pre><code>import time
import binascii
import csv
import serial

with open('Example CARESCAPE Datalog.dat') as binary_file:
    for num in range(1,10):
        data = binary_file.readline()
        print(data)
</code></pre>
<p><a href="https://i.stack.imgur.com/QWnvj.png" rel="nofollow noreferrer">Here is the link to a screenshot of the weird symbols I get</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If your <code>.dat</code> file is not text, you should open it as a binary file with <code>'b'</code> (per <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">Python docs</a>): </p>
<pre><code>with open('Example CARESCAPE Datalog.dat', 'b') as binary_file:
</code></pre>
<p>You'll have to decode the bytes yourself:</p>
<blockquote>
<p>Files opened in binary mode (including 'b' in the mode argument) return contents as bytes objects without any decoding.</p>
</blockquote>
</div>
<span class="comment-copy">A binary file will not have any useful notion of linebreaks. So <code>readline()</code> will not work as expected.</span>
<span class="comment-copy">To my understanding, that's not entirely true (though you're right that it may be misleading): <a href="https://docs.python.org/3/library/io.html#io.IOBase.readline" rel="nofollow noreferrer">docs.python.org/3/library/io.html#io.IOBase.readline</a></span>
<span class="comment-copy">Ya lutz you are right. I changed it to read() to get the individual bytes</span>
<span class="comment-copy">Perfect! Worked for me. Changed it to with open('Example CARESCAPE Datalog.dat', 'rb') as binary_file:</span>
