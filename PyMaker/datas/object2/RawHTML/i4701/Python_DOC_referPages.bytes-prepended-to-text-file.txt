<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/34035761/correct-decoding-of-base64-to-blob">Correct decoding of base64 to blob?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I am reading some CSV file in Python. The file was uploaded from Windows to AWS S3 and then downloaded using <a href="https://docs.python.org/3/library/urllib.request.html#module-urllib.request" rel="nofollow noreferrer">urllib.request</a>. The file should start with</p>
<pre><code>some text
</code></pre>
<p>but instead it starts with</p>
<pre><code>b'u\xabZj\x9ae\x89\xc6\xad\x8a\x89\xff\xbewf\xb1\xec\\zV\xda\xb1\xee\xb8\xef\xbb\xbfsome text
</code></pre>
<p>So, when this piece of code gets executed:</p>
<pre><code>filetemp = urllib.request.urlopen(file_url)
    content = filetemp.read(1024)
</code></pre>
<p>the <code>content</code> variable starts with</p>
<pre><code>b'u\xabZj\x9ae\x89\xc6\xad\x8a\x89\xff\xbewf\xb1\xec\\zV\xda\xb1\xee\xb8\xef\xbb\xbf**some text
</code></pre>
<p>Can it be some kind of BOM? It doesn't look like any BOM that I am familiar with. I used <a href="https://chardet.github.io/" rel="nofollow noreferrer">chardet</a> to find out the file was encoded using Windows-1252 encoding, and when I decode it using that encoding, I get</p>
<pre><code>u«Zjše‰Æ­Š‰ÿ¾wf±ì\\zVÚ±î¸ï»¿some text
</code></pre>
<p>When I open the file in Excel or Notepad, it seems fine and it starts with <code>some text</code>. So, obviously they know how to handle it, but I don't. What am I missing?</p>
<p><strong>Update</strong>: When I download this file on Mac and read it the same way (using the same code), it is only prepended with <code>\xef\xbb\xbf</code>, which is UTF-8 BOM. So it is Windows that is adding those other bytes.</p>
<p><strong>Update 2</strong>: Ok, it's got to be something with <code>urllib.request</code>, because when I download that file manually from AWS S3 and execute the following Python script:</p>
<pre><code>file = open('myfile.csv', 'r')
filecontent = file.read()
file.close()
</code></pre>
<p>the <code>filecontent</code> variable does not contain those weird bytes, just BOM. It might be a similar issue to the one <a href="https://stackoverflow.com/users/2564301/usr2564301">usr2564301</a> linked in his comment.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found a solution with the help of <a href="https://stackoverflow.com/users/2564301/usr2564301">usr2564301's</a> comment. String <code>data:application/vnd.ms-excel;base64,</code> was prepended to the HTTP request payload when uploading the file. <a href="https://stackoverflow.com/a/34036750/3133442">This answer can</a> can be applied to my issue.</p>
</div>
<span class="comment-copy">Can you put in the hex values for this header, or try with <a href="https://en.wikipedia.org/wiki/File_(command)" rel="nofollow noreferrer"><code>file</code></a> to see what it is you're getting? Maybe it's compressed. Based on the paste here I can't tell what it is.</span>
<span class="comment-copy"><code>file</code> doesn't give: $ cat &gt;wtf &lt;&lt;EOF &gt; u«Zjše‰Æ­Š‰ÿ¾wf±ì\\zVÚ±î¸ï»¿some text &gt; EOF $ file wtf wtf: UTF-8 Unicode text</span>
<span class="comment-copy"><code>\xef\xbb\xbf</code> is definitely UTF-8 (and most likely the beginning of your file).</span>
<span class="comment-copy">Can you reliably reproduce the download of those extra bytes, or did it only happen once? Can you reproduce it on a different Windows machine? (One possible explanation: is there a proxy of some sort in between your Windows machine and S3?)</span>
<span class="comment-copy">Those are the same bytes as in a <i>remotely possibly</i> related <a href="https://stackoverflow.com/q/34035761">other question</a>, using a perl URL reader. But, if they are part of the URL specifications, surely there would be more hits ...</span>
