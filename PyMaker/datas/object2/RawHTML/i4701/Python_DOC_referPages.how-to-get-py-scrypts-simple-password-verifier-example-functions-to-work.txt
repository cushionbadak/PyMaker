<div class="post-text" itemprop="text">
<p>I am using the <a href="https://bitbucket.org/mhallin/py-scrypt/src" rel="nofollow noreferrer">example script</a> provide by <code>py-scrypt</code> to build a <strong>simple password verifier</strong>. Below is my test script.</p>
<p><strong>Test Script:</strong></p>
<pre><code>#!/usr/bin/python3
# -*- coding: utf-8 -*-

import scrypt
import os

def hash2_password(a_secret_message, password, maxtime=0.5, datalength=64):
    #return scrypt.encrypt(a_secret_message, password, maxtime=maxtime)
    return scrypt.encrypt(os.urandom(datalength), password, maxtime=maxtime)

def verify2_password(data, password, maxtime=0.5):
    try:
        secret_message = scrypt.decrypt(data, password, maxtime)
        print('\nDecrypted secret message:', secret_message)
        return True
    except scrypt.error:
        return False


password2 = 'Baymax'
secret_message2 = "Go Go"
data2 = hash2_password(secret_message2, password2, maxtime=0.1, datalength=64)
print('\nEncrypted secret message2:')
print(data2)

password_ok = verify2_password(data2, password2, maxtime=0.1)
print('\npassword_ok? :', password_ok)
</code></pre>
<p><strong>Issues:</strong>
I often get an error messages, e.g.:</p>
<pre><code>Traceback (most recent call last):
  File "~/example_scrypt_v1.py", line 56, in &lt;module&gt;
    password_ok = verify2_password(data2, password2, maxtime=0.1)
  File "~/example_scrypt_v1.py", line 43, in verify2_password
    secret_message = scrypt.decrypt(data, password, maxtime)
  File "~/.local/lib/python3.5/site-packages/scrypt/scrypt.py", line 188, in decrypt
    return str(out_bytes, encoding)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xca in position 0: invalid continuation byte
</code></pre>
<p>where the last lines varies to e.g.:</p>
<pre><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xaf in position 3: invalid start byte
</code></pre>
<p>or</p>
<pre><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xee in position 1: invalid continuation byte
</code></pre>
<p>or no error message but return False</p>
<pre><code>password_ok? : False
</code></pre>
<p>When I comment <code>return scrypt.encrypt(os.urandom(datalength), password, maxtime=maxtime)</code> to remove the random secret message generator and uncomment <code>return scrypt.encrypt(a_secret_message, password, maxtime=maxtime)</code> to use a non-random secret message, the function <code>verify2_password</code> works.</p>
<p><strong>Question:</strong> How do I get the random secret message element to work?   What is causing it's failure?</p>
</div>
<div class="post-text" itemprop="text">
<h1>Explanation for UnicodeDecodeError Exception</h1>
<h2>Reason 1</h2>
<p>I think I understand why Scrypt is issuing a <code>UnicodeDecodeError</code>. Quoting <a href="https://wiki.python.org/moin/UnicodeDecodeError" rel="nofollow noreferrer">Python's UnicodeDecodeError </a>:</p>
<blockquote>
<p>The UnicodeDecodeError normally happens when decoding an str string
  from a certain coding. Since codings map only a limited number of str
  strings to unicode characters, an illegal sequence of str characters
  will cause the coding-specific decode() to fail.</p>
</blockquote>
<p>Also in <a href="https://docs.python.org/3.5/howto/unicode.html" rel="nofollow noreferrer">Python's Unicode HOWTO</a> section <em>Python’s Unicode Support --&gt; The String Type</em>, it writes</p>
<blockquote>
<p>In addition, one can create a string using the decode() method of
  bytes. This method takes an encoding argument, such as UTF-8, and
  optionally an errors argument</p>
<p>The errors argument specifies the response when the input string can’t
  be converted according to the encoding’s rules. Legal values for this
  argument are 'strict' (raise a UnicodeDecodeError exception),
  'replace' (use U+FFFD, REPLACEMENT CHARACTER), 'ignore' (just leave
  the character out of the Unicode result), or 'backslashreplace'
  (inserts a \xNN escape sequence).</p>
</blockquote>
<p>In short, whenever Python's <code>.decode()</code> method fails to map <code>str</code> strings to unicode characters, and when it uses the <code>strict</code> argument, the <code>.decode()</code> method will return a <code>UnicodeDecodeError</code> exception. </p>
<p>I tried to find the <code>.decode()</code> method in the <a href="https://bitbucket.org/mhallin/py-scrypt/src/a0801ed84b4e274d28edcfb547d52030bd5df331/scrypt/scrypt.py#scrypt.py-141" rel="nofollow noreferrer">.decrypt()</a> method of <code>py-scrypt/scrypt/scrypt.py</code>. Initially, I could not locate it. For Python3, the <code>.decrypt()</code> method  return statement was:
<a href="https://bitbucket.org/mhallin/py-scrypt/src/a0801ed84b4e274d28edcfb547d52030bd5df331/scrypt/scrypt.py#scrypt.py-188" rel="nofollow noreferrer">return str(out_bytes, encoding)</a></p>
<p>However, further checking Python's explanation on the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str#str" rel="nofollow noreferrer">str</a> class, I found the explanation saying that:</p>
<blockquote>
<p>if object is a bytes (or bytearray) object, then str(bytes, encoding,
  errors) is equivalent to bytes.decode(encoding, errors).</p>
</blockquote>
<p>This meant that without defining the <code>error</code> argument in <code>str(bytes, encoding)</code>, this str class defaulted to returning <code>bytes.decode(encoding, errors='strict')</code> and returned the <code>UnicodeDecodeError</code> exception whenever it failed to map <code>str</code> strings to unicode characters.</p>
<h2>Reason 2</h2>
<p>In the "simple password verifier" example, the <code>input</code> argument of Scrypt.encrypt() was defined as <code>os.urandom(datalength)</code> which returned a <code>&lt;class 'bytes'&gt;</code>.  When this <code>&lt;class 'bytes'&gt;</code> was encrypted, and subsequently decrypted by <code>Scrypt.decrypt()</code>, the returned decrypted value must also be a <code>&lt;class 'bytes'&gt;</code> . According to the doc_string of the <a href="https://bitbucket.org/mhallin/py-scrypt/src/a0801ed84b4e274d28edcfb547d52030bd5df331/scrypt/scrypt.py#scrypt.py-141" rel="nofollow noreferrer"><code>.decrypt()</code> method</a>, for Python3 this method will return a str instance if encoded with encoding. If <code>encoding=None</code>, it will return a bytes instance. As <code>Script.decrypt()</code> defaults to <code>encoding='utf-8'</code> in function <code>verify2_password()</code>, <code>Script.decrypt()</code> attempts to return a <code>&lt;class str&gt;</code> resulted in the <code>UnicodeDecodeError</code>. </p>
<h1>Solution to the "simple password verifier" example script given in <a href="https://bitbucket.org/mhallin/py-scrypt/src/default/" rel="nofollow noreferrer">py-scrypt</a>:</h1>
<ol>
<li>The <code>verify_password()</code> function should contain the argument <code>encoding=None</code> .</li>
<li><code>scrypt.decrypt()</code> should contain the argument <code>encoding=encoding</code> .</li>
</ol>
<p><strong>Revised Example Script:</strong></p>
<pre><code>#!/usr/bin/python3
# -*- coding: utf-8 -*-

import scrypt
import os

def encrypt_password(password, maxtime=0.5, datalength=64):
    passphrase = os.urandom(datalength)
    print('\npassphrase = ', passphrase, type(passphrase))
    return scrypt.encrypt(passphrase, password, maxtime=maxtime)

def verify_password(encrpyted_passphrase, password, maxtime=0.5, encoding=None):
    try:
        passphrase = scrypt.decrypt(encrpyted_passphrase, password, maxtime,
                                    encoding=encoding)
        print('\npassphrase = ', passphrase, type(passphrase))
        return True
    except scrypt.error:
        return False


password = 'Baymax'
encrypted_passphrase = encrypt_password(password, maxtime=0.5, datalength=64)
print('\nEncrypted PassPhrase:')
print(encrypted_passphrase)

password_ok = verify_password(encrypted_passphrase, password, maxtime=0.5)
print('\npassword_ok? :', password_ok)
</code></pre>
</div>
