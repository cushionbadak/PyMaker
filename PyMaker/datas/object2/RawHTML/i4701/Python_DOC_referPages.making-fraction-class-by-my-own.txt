<div class="post-text" itemprop="text">
<p>I'm trying to make my 'own Fraction class'.
Almost all code work fine, but at <code>/</code>, <code>&gt;</code>, <code>&lt;</code>, these are not working.
I have no idea what's wrong with my code.</p>
<pre><code>def gcd(m, n):
    while m%n != 0:
        m, n = n, m%n
    return n

class Fraction:
    '''Fractional class'''

    def __init__(self, num, denom): 
        self.num = num
        self.denom = denom

    def __str__(self): 
        return str(self.num)+'/'+str(self.denom)

    def __add__(self, other): 
        new_num = self.num * other.denom + other.num * self.denom
        new_denom = self.denom * other.denom
        common = gcd(new_num, new_denom)
        return Fraction(new_num//common, new_denom//common)

    def __sub__(self, other): 
        new_num = self.num * other.denom - other.num * self.denom
        new_denom = self.denom * other.denom
        common = gcd(new_num, new_denom)
        return Fraction(new_num//common, new_denom//common)

    def __mul__(self, other): 
        new_num = self.num * other.num
        new_denom = self.denom * other.denom
        common = gcd(new_num, new_denom)
        return Fraction(new_num//common, new_denom//common)

    def __div__(self, other): 
        new_num = self.num * other.denom
        new_denom = self.denom * other.num
        common = gcd(new_num, new_denom)
        return Fraction(new_num//common, new_denom//common)


    def __equal__(self, other):
        return (self.num * other.denom) == (other.num * self.denom)

    def __big__(self, other):
        return str(self.num * other.denom) &gt; str(other.num * self.denom)

    def __small__(self, other):
        return self.num * other.denom &lt; other.num * self.denom



if __name__ == "__main__":

    f1 = Fraction(1,4)
    f2 = Fraction(1,2)
    print(f1+f2)
    print(f1 - f2)
    print(f1 * f2)
    print(f1 / f2) #not working

    print(f1 == f2) 
    print(f1 &gt; f2) #not working
    print(f1 &lt; f2) #not working
</code></pre>
<p>I get the following output:</p>
<pre><code>3/4
-1/4
1/8
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-50-50cad0951bd1&gt; in &lt;module&gt;()
     57     print(f1 - f2)
     58     print(f1 * f2)
---&gt; 59     print(f1 / f2) #not working
     60 
     61     print(f1 == f2)

TypeError: unsupported operand type(s) for /: 'Fraction' and 'Fraction'
</code></pre>
<p>Am I defining <code>__div__</code> correctly?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.x uses <code>__truediv__</code> and <code>__floordiv__</code>. <code>__div__</code> is used in python 2.x.</p>
<p>To make comparison work you need to define <code>__lt__</code>, <code>__gt__</code>, <code>__ge__</code> and <code>__le__</code>.</p>
</div>
<span class="comment-copy">Define 'not working' clearly. Do you get an error? Then include the full traceback. Do you get output you didn't expect? Then tell us what output you did get, and what it should have been.</span>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/fractions.html" rel="nofollow noreferrer"><b><code>fractions</code></b></a></span>
<span class="comment-copy">@PeterWood: sure, but that'll not help them know why this attempt didn't work. There is value in creating your own.</span>
<span class="comment-copy">Python will never call the <code>__big__</code> or <code>__small__</code> methods. Do <a href="https://docs.python.org/3/reference/datamodel.html#basic-customization" rel="nofollow noreferrer">check the documentation</a> to make sure you have the right names.</span>
<span class="comment-copy">Wow!!! It works!!! Thank you very much!!! :) Additionally, If you don't mind, would you please explain what's the different between <b>truediv</b> and <b>floordiv</b> ??</span>
