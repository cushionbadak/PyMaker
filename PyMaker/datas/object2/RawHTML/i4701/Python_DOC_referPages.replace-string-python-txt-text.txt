<div class="post-text" itemprop="text">
<p>I have a book in txt format. I would like to create 2 new text: in the first, I would like to replace all occurencies of the string <code>"Paul"</code> with <code>Paul_1</code>, in the second with <code>Paul_2</code>.
I wrote this code:</p>
<pre><code>with open("book.txt", 'r') as original, \
        open("book_1.txt", 'w') as mod1, \
        open("book_2.txt", 'w') as mod2:
    for line in original:
        words = line.split()
        for word in words:
            s="Paul"
            if(word == s):
                mod1.write(word + "_1 ")
                mod2.write(word + "_2 ")
            else:
                mod1.write(word + " ")
                mod2.write(word + " ")
        mod1.write("\n")
        mod2.write("\n")
</code></pre>
<p>There is a problem, often some <code>Paul</code> are skipped and therefore, in the end, I have in the same document both <code>Paul</code> and <code>Paul_1</code> (and <code>Paul</code> and <code>Paul_2</code>). Where is the problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>This should help.</p>
<pre><code>import re

with open("book.txt", 'r') as original, \
        open("book_1.txt", 'w') as mod1, \
        open("book_2.txt", 'w') as mod2:
    data = original.read()
    data_1 = re.sub(r"\bPaul\b", 'Paul_1', data)   #Replace any occurrence of Paul with Paul_1 
    data_2 = re.sub(r"\bPaul\b", 'Paul_2', data)   #Replace any occurrence of Paul with Paul_2 
    mod1.write(data_1 + r"\n")
    mod2.write(data_2 +  r"\n")
</code></pre>
</div>
<span class="comment-copy">Is it possible the skipped ones are <code>Paul,</code> or <code>Paul.</code> and such?</span>
<span class="comment-copy">@bgse yes, I noticed now that it skipped string like Paul, and Paul'. How can I solve that?</span>
<span class="comment-copy">you can use the method <code>startswith()</code> or remove the punctuation marks with replace (use regex) or compare <code>word[:-1]</code> compare word without the last letter/symbol</span>
<span class="comment-copy">@Camilla8 <code>str.split()</code> by default splits your string using whitespace as a delimiter, and it isn't really suitable for your needs as you can only split by one delimiter if you specify one yourself. You might want to look at <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer">re.split()</a>.</span>
<span class="comment-copy">What do the 'r' in the lasts 2 istructions do?</span>
<span class="comment-copy">Raw string. My editor escapes newline char("\n")</span>
<span class="comment-copy">Should take into account edge-cases like <code>"Paula is a nice lady.".replace("Paul", "Paul_1")</code> though, given the question is concerning a book text, that isn't too far fetched.</span>
<span class="comment-copy">Does it work also with ' ? ! ; ... ?</span>
<span class="comment-copy">Yes it does work with ?!:.</span>
