<div class="post-text" itemprop="text">
<p>I have an <code>any()</code> statement in python, and some of the elements in <code>memo_field</code> array are <code>None</code>. </p>
<pre><code>any(memo_field[1][0] in row[9] for memo_field in memo_fields)
</code></pre>
<p>What is the best way to handle those <code>NoneType</code> elements in the array?</p>
</div>
<div class="post-text" itemprop="text">
<p>This statement must be better than above.</p>
<pre><code>any(memo_field[1][0] in row[9] for memo_field in memo_fields if memo_field is not None)
</code></pre>
<p>It will ignore some of the memo_fields if they are None. It will not ignore these memo_fields: False, 0, [], {}, ()...</p>
<p>But in fact, I suggest you do something better, like:</p>
<pre><code>any(memo_field[1][0] in row[9] for memo_field in memo_fields 
    if isinstance(memo_field, (tuple, list)) and 
       len(memo_field) &gt; 1 and 
       isinstance(memo_field[1], (tuple, list)) and 
       len(memo_field[1]) &gt; 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could apply the <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">filter</a> function to memo_fields to remove any None elements:</p>
<pre><code>any(memo_field[1][0] in row[9] for memo_field in filter(None, memo_fields))
</code></pre>
<p>You should be aware that when using <code>None</code> as the first argument to filter, any values in <code>memo_fields</code> that are 'falsey' (i.e. [], {}, False, None) will be removed. In your case this is probably favorable, but worth being aware of.</p>
</div>
