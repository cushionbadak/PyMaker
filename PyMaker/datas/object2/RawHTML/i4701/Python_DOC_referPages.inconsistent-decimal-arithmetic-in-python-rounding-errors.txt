<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; from decimal import Decimal
&gt;&gt;&gt; Decimal('0.3637') * (Decimal('1') / Decimal('0.9323')) == Decimal('0.3637') / Decimal('0.9323')
False
</code></pre>
<p>Why?</p>
<p>I thought decimal module solves problems with rounding in floating point arithmetic.
How to check the equality of two decimal numbers in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Observation</strong></p>
<p>Order of operations is critical to understand <em>why</em> you are seeing the result:</p>
<pre><code>from decimal import Decimal as D

D('0.3637') * (D('1') / D('0.9323')) == D('0.3637') / D('0.9323')
# False

(D('0.3637') * D('1')) / D('0.9323') == D('0.3637') / D('0.9323')
# True
</code></pre>
<p><strong>Explanation</strong></p>
<p>The reason is <a href="https://stackoverflow.com/a/5997103/9209546">given here</a>, excerpt below. Decimal arithmetic is still fundamentally finite precision.</p>
<p>You <em>can</em> and should, if it matters to you, reduce precision using <code>getcontext().prec</code>. See <code>decimal</code> <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer">documentation</a> for more details.</p>
<blockquote>
<p>In general decimal is probably going overboard and still will have
  rounding errors in rare cases when the number does not have a finite
  decimal representation (for example any fraction where the denominator
  is not 1 or divisible by 2 or 5 - the factors of the decimal base
  (10)).</p>
</blockquote>
<p><strong>Solution</strong></p>
<p>For general comparison of floats:</p>
<p><strong><a href="https://stackoverflow.com/questions/5595425/what-is-the-best-way-to-compare-floats-for-almost-equality-in-python?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa">What is the best way to compare floats for almost-equality in Python?</a></strong></p>
</div>
<span class="comment-copy">Cannot reproduce, returns <code>True</code> for me (once I fix the errant <code>)</code>)</span>
<span class="comment-copy">Because <code>(Decimal('1')/Decimal('0.9323')) = Decimal('1.072616110693982623619006757')</code> . And hence <code>Decimal('0.3637') * Decimal('1.072616110693982623619006757') != Decimal('0.3637')/Decimal('0.9323')</code>.</span>
<span class="comment-copy">@eugenhu, sure done.</span>
