<div class="post-text" itemprop="text">
<p>With python-2.7, you can pretty easily implement a rot-13 Ceasar Cipher using </p>
<pre><code>&gt;&gt;&gt; 'abcdefghijklmnopqrstuvwxyz'.encode('rot-13')
'nopqrstuvwxyzabcdefghijklm'
</code></pre>
<p>You'll even find it in the <a href="https://github.com/python/cpython/blob/d310f13cd2c321f0cca8429f611546c7888ae561/Lib/this.py" rel="nofollow noreferrer">Zen of Python code in the CPython repository</a>.</p>
<p>However, the same code on python3.6 gives - </p>
<pre><code>&gt;&gt;&gt; 'abcdefghijklmnopqrstuvwxyz'.encode('rot-13')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
LookupError: 'rot-13' is not a text encoding; use codecs.encode() to handle arbitrary codecs
</code></pre>
<p>If I want to use the <code>rot-13</code> encoding in python3.x, I'll need to import <code>codecs</code>.</p>
<pre><code>&gt;&gt;&gt; import codecs
&gt;&gt;&gt; codecs.encode('abcdefghijklmnopqrstuvwxyz', 'rot-13')
'nopqrstuvwxyzabcdefghijklm'
</code></pre>
<p>Of course, this is really a minor issue, I don't mind importing <code>codecs</code> to implement a caesar cipher (it's a builtin anyway). I'm just curious to know if there was any underlying rationale behind this design decision. Maybe the reason is as simple as "rot-13 isn't really an encoding", I don't know. </p>
<p>If someone can shed some light on this, I'd love to hear it!</p>
</div>
<div class="post-text" itemprop="text">
<p>you can also take a look at this <a href="https://bugs.python.org/issue21171" rel="nofollow noreferrer">page</a> where someone flagged your issue as a bug. 
For those who don't want to go through the site and its followup links, the simple response from a python committer was as follows:  </p>
<p>"Since rot_13 is a transcoder, not an encoder, the error message is correct, as is the fix for the function. However, since neither the module encodings.rot_13 nor the rot13 function in the module are documented, (not even in 2.7), I wonder if the function and the if __name__; clause are ancient holdovers that should be removed."</p>
</div>
<div class="post-text" itemprop="text">
<p>A quick search for "what's new in python rot-13" turns up this: <a href="https://docs.python.org/3/whatsnew/3.4.html#codec-handling-improvements" rel="nofollow noreferrer">https://docs.python.org/3/whatsnew/3.4.html#codec-handling-improvements</a></p>
<blockquote>
<p>In Python 3.4, the interpreter is able to identify the known non-text
  encodings provided in the standard library and direct users towards
  these general purpose convenience functions when appropriate:</p>
<pre><code>&gt;&gt;&gt;
&gt;&gt;&gt; b"abcdef".decode("hex")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
LookupError: 'hex' is not a text encoding; use codecs.decode() to handle arbitrary codecs

&gt;&gt;&gt; "hello".encode("rot13")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
LookupError: 'rot13' is not a text encoding; use codecs.encode() to handle arbitrary codecs
</code></pre>
</blockquote>
<p>So apparently, this was a cleanup operation to separate actual text encodings (which you would use in an <code>open(file, encoding="foo")</code>call) from other encodings.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python moved the rot13 to (as you said), codecs. My guess is to better reflect what rot13 is and to use a different and more general interface. As TimPietzcker said, most likely cleanup and trying to group similar functions.</p>
</div>
<span class="comment-copy">Check out <a href="https://bugs.python.org/issue10807" rel="nofollow noreferrer">#10807</a> and <a href="https://bugs.python.org/issue7475" rel="nofollow noreferrer">#7475</a> and <a href="https://github.com/python/cpython/commit/b6f424043d267eac9c870d9991a6453a821ff81d" rel="nofollow noreferrer">the commit</a> in which they were removed. This may reveal some insights.</span>
<span class="comment-copy">see also <a href="https://bugs.python.org/issue10807" rel="nofollow noreferrer">#10807</a> and <a href="https://bugs.python.org/issue7475" rel="nofollow noreferrer">#7475</a> and <a href="https://github.com/python/cpython/commit/b6f424043d267eac9c870d9991a6453a821ff81d" rel="nofollow noreferrer">the commit</a> in which they were removed.</span>
<span class="comment-copy">Sorry - but if you "guess" and quote Tim Pietzcker and the person who asked the question - you are only parroting others answers. What new facts did warrant "your" answer?</span>
<span class="comment-copy">From <a href="https://docs.python.org/3/library/codecs.html" rel="nofollow noreferrer">docs.python.org/3/library/codecs.html</a>, as I mentioned: It moved to implement this interface, and to better represent what rot13 does,  namely encode text to text.</span>
<span class="comment-copy">Also, all answers so far have not been facts, but speculation.</span>
