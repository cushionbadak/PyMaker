<div class="post-text" itemprop="text">
<p>Visual Studio Code highlights string literals with prefixes <code>r</code> and <code>R</code> differently:</p>
<pre><code>Match = re.search(r"\d{2} \d{4} \d{2}:\d{2}:\d{2})", Output) 
Match = re.search(R"\d{2} \d(4} \d{2}:\d{2}:\d{2})", Output) 
</code></pre>
<p><a href="https://i.stack.imgur.com/hFPlM.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hFPlM.png"/></a></p>
<p>Is there a difference in meaning between these two notations? Are different conventions used for <code>r</code> and <code>R</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>There's no difference in meaning between these notations. <a href="https://docs.python.org/3/reference/lexical_analysis.html" rel="nofollow noreferrer">Reference</a>:</p>
<blockquote>
<p>Both string and bytes literals may optionally be prefixed with a letter 'r' or 'R'; such strings are called raw strings and treat backslashes as literal characters</p>
</blockquote>
<p>Now regarding VSCode behaviour:</p>
<ul>
<li>the first coloring (with yellow <code>{2}</code>) happens when the editor assumes you're writing a regular expression,</li>
<li>the second one (with blue <code>{2}</code>) happens when the editor thinks you're writing a format string, something like <code>"{0}, {1}!".format("Hello", "world")</code>.</li>
</ul>
<p>This becomes more obvious when we add some more syntax:</p>
<p><a href="https://i.stack.imgur.com/44nKJ.png" rel="nofollow noreferrer"><img alt="highlighted code snippet" src="https://i.stack.imgur.com/44nKJ.png"/></a></p>
<p><s>Now, looks like VSCode should treat <code>R"literal"</code> the same as <code>r"literal"</code>, but instead it colors it the same as <code>"literal"</code>, which is probably a tiny bug that nobody spotted because everyone writes lowercase <code>r</code>.</s></p>
<p>Correction from <a href="https://stackoverflow.com/questions/49358590/is-there-a-difference-between-r-and-r-string-prefixes-in-python/49358682?noredirect=1#comment96150908_49358682">comment</a>: It's not a bug, it's a feature! <a href="https://github.com/MagicStack/MagicPython#strings" rel="nofollow noreferrer">VSCode's highlighter</a> makes clever use of the fact that <code>r</code> and <code>R</code> prefixes are equivalent, and allows you, the developer, to have correct coloring by adopting a convention of using <code>r</code> for regex raw strings and <code>R</code> for non-regex raw strings.</p>
<blockquote>
<p>Raw strings are often interpreted as regular expressions. This is a bit of a problem, because depending on the application this may actually not be the most common case. (...) MagicPython follows a convention that <strong>a lower-case r prefix means a regexp string, but an upper-case R prefix means just a raw string with no special regexp semantics.</strong></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>In general, Python is case sensitive. Per the <a href="https://docs.python.org/3/reference/lexical_analysis.html#grammar-token-stringliteral" rel="nofollow noreferrer">string literal</a> syntax specification, however, string prefixes can be either case (or order). So the difference is visual, although tradition is mostly to use lower case, and upper case letters can be harder to distinguish. </p>
</div>
<span class="comment-copy">According to <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">Python docs</a>, none whatsoever</span>
<span class="comment-copy">Reverting my <a href="https://stackoverflow.com/posts/49358590/revisions">edit</a> was rude, I took the time to convert your image to searchable text. If you wanted to add the image back you could have done so in a subsequent edit.</span>
<span class="comment-copy">@StefanCrain sorry, first time. Fixed.</span>
<span class="comment-copy">Thanks! So if coloring of <code>R...</code> is a bug, is it reasonable to assume that coloring of <code>r"C:\Adam\Betty\Peter\Tom"</code> (with a yellow <code>P</code> and <code>T</code>) is another bug?</span>
<span class="comment-copy">More of a misfeature. That's VSCode thinking the raw string must be a <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expression</a>, where <code>\A</code> and <code>\B</code> are special sequences, but <code>\P</code> and <code>\T</code> are not.</span>
<span class="comment-copy">@bers: It’s not really possible in general to tell whether a given raw string is supposed to represent a regex or a path or anything else. VS Code appears to be assuming that’s a regex, either because it does so for all raw strings or because it’s making a bad guess.</span>
<span class="comment-copy">They are using MagicPython for syntax highlighting. <code>MagicPython follows a convention that a lower-case r prefix means a regexp string, but an upper-case R prefix means just a raw string with no special regexp semantics.</code> <a href="https://github.com/MagicStack/MagicPython#strings" rel="nofollow noreferrer">github.com/MagicStack/MagicPython#strings</a></span>
<span class="comment-copy">@voidvector thanks so much! I'm glad to learn this is documented behaviour - I added this to the answer.</span>
