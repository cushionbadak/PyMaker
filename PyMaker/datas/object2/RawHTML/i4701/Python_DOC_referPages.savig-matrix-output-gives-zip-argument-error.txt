<div class="post-text" itemprop="text">
<p>I would like to write the outputs of the following code in a text file. It gives this error:</p>
<p><code>for x in zip(c(), R1):
TypeError: zip argument #1 must support iteration</code></p>
<p>I could not find any solution. Any help please?</p>
<pre><code>import numpy as np
from math import *
from scipy.integrate import quad
from scipy.integrate import odeint
xx=np.array([0.01,0.012])
yy=np.array([32.95388698,33.87900347])
Cov=[[137,168],[28155,-2217]]
with open('txtfile.txt', 'w') as f:
    for j in range (1,20):
        R1=np.random.uniform(0,1)
        Omn=0.32+R1
        Odn=1-Omn
        def dl(n):
            fn=xx[n]*Odn+yy[n]*Omn
            return fn
        def c():
            f_list = []
            for i in range(2):  #the value '2' reflects matrix size
                    f_list.append(dl(i))
            r1=[f_list]
            r2=[[f] for f in f_list]
            a=np.dot(r1,Cov)
            b=np.dot(a,r2)
            matrix=np.linalg.det(b)
            return matrix  
        for x in zip(c(), R1):
            f.write("{0}\t{1}\n".format(x[0],x[1]))
</code></pre>
<p>I appreciate your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Both <code>c()</code> and <code>R1</code> are both simple values, not lists. So to write them to a file with a tab, you would just need:</p>
<pre><code>f.write("{}\t{}\n".format(c(), R1))
</code></pre>
<p>For example:</p>
<pre><code>import numpy as np
from math import *
from scipy.integrate import quad
from scipy.integrate import odeint

def dl(n):
    return xx[n] * Odn + yy[n] * Omn

def c():
    f_list = []

    for i in range(2):  #the value '2' reflects matrix size
            f_list.append(dl(i))

    r1 = [f_list]
    r2 = [[f] for f in f_list]
    a = np.dot(r1, Cov)
    b = np.dot(a, r2)
    matrix = np.linalg.det(b)
    return matrix      

xx = np.array([0.01, 0.012])
yy = np.array([32.95388698, 33.87900347])
Cov = [[137, 168], [28155, -2217]]

with open('txtfile.txt', 'w') as f:
    for j in range (1,20):
        R1 = np.random.uniform(0, 1)
        Omn = 0.32 + R1
        Odn = 1 - Omn

        f.write("{}\t{}\n".format(c(), R1))
</code></pre>
<p>This would create your <code>txtfile.txt</code> as follows:</p>
<pre class="lang-none prettyprint-override"><code>35206063.6746   0.777596199441
45374454.3839   0.926105934266
3990656.69091   0.0493187574204
28925205.8769   0.674852617966
45542873.2768   0.928417018276
4412088.81481   0.0683471360264
20148228.6097   0.510253466599
6934013.9475    0.166927414742
18602042.1473   0.477747802178
49485237.1146   0.981343401759
31379848.1448   0.716219179241
21670623.7641   0.541061316417
25859179.9751   0.620631842725
10642383.5164   0.28331967175
14640960.1091   0.387697186294
5183085.91921   0.100940240452
12734994.2117   0.340005554729
26863086.7454   0.638722906359
6227944.29448   0.141453730959
</code></pre>
<hr/>
<p>To write extra variable for each row, I would recommend you switch to using a CSV writer as follows:</p>
<pre><code>import numpy as np
from math import *
from scipy.integrate import quad
from scipy.integrate import odeint
import csv

def dl(n):
    return xx[n] * Odn + yy[n] * Omn

def c():
    f_list = [dl(i) for i in range(2)]
    r1 = [f_list]
    r2 = [[f] for f in f_list]

    a = np.dot(r1, Cov)
    b = np.dot(a, r2)
    matrix = np.linalg.det(b)
    return matrix      

xx = np.array([0.01, 0.012])
yy = np.array([32.95388698, 33.87900347])
Cov = [[137, 168], [28155, -2217]]

with open('txtfile.txt', 'w', newline='') as f:
    csv_output = csv.writer(f, delimiter='\t')

    for j in range (1,20):
        R1 = np.random.uniform(0, 1)
        Omn = 0.32 + R1
        Odn = 1 - Omn

        csv_output.writerow([c(), R1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Input to the zip function must be *iterables such an array or list.
Please try below, hopefully it will work.</p>
<pre><code>for x in zip([c()], [R1]):
    f.write("{0}\t{1}\n".format(x[0],x[1]))
</code></pre>
<p>Documentation for zip in python3 is available <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you are using <code>zip()</code>, you are working with lists.
List contains arrays, your function and random number are just number without <code>[]</code> which demonstrats an array. so you can use without its for loop containing <code>zip()</code>.</p>
<p><code>f.write("{0}\t{1}\n".format(c(),R1))</code></p>
<p>The other point: Bring functions out of the <code>with open</code> order.</p>
</div>
<span class="comment-copy">Please rename the variables and give them some sensible names. Its hard to follow <code>mm</code>, <code>zz</code> and <code>hhh</code>.</span>
<span class="comment-copy">@rollstuhlfahrer Updated.</span>
<span class="comment-copy">but why if we write <code>with open('txtfile.txt', 'w') as f:</code> at the tope of code the output file will be empty?</span>
<span class="comment-copy">If you open a file with <code>w</code>, and then don't write anything to it, you will get an empty file. Any existing file contents are lost.</span>
<span class="comment-copy">Do you know any useful tutorial about this issue? Because I want to customize the way of setting layouts, distance of column and etc. in text file. Thank you so much.</span>
<span class="comment-copy">Not sure what you need, if you are hoping to append your results each time you run the script then you can use <code>'a'</code> instead. If you are hoping to write more data per row, take a look at the <a href="https://docs.python.org/3.6/library/csv.html#module-csv" rel="nofollow noreferrer"><code>csv</code></a> library in Python. This helps you write a list to a file automatically adding delimiters between each value.</span>
<span class="comment-copy">You need one <code>{}</code> for each variable inside <code>format()</code>, so <code>f.write("{}\t{}\t{}\n".format(c(), R1, Omn))</code> should work. A better solution would be to use csv with a tab delimiter.</span>
