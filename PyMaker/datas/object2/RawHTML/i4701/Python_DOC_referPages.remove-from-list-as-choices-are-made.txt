<div class="post-text" itemprop="text">
<p>I am trying to create a program that creates a character by randomly assigning it a race, class, and stats.</p>
<p>However I want each stat to have a unique value. So if <code>strength</code> is 8, then none of the other stats can be 8. How would I go about doing this? Do I need to delete list entries as choices are made?</p>
<p><strong>My code</strong></p>
<pre><code>import random

races = ["Human", "Dwarf", "Elf"]
classes = ["Fighter", "Wizard", "Rogue"]
stats = [8, 10, 11, 12, 14, 15]

Strength = 0
Dexterity = 0
Constution = 0
Intelligence = 0
Wisdom = 0
Charisma = 0

Strength = random.choice(stats)
Dexterity = random.choice(stats)
Constution = random.choice(stats) 
Intelligence = random.choice(stats)
Wisdom = random.choice(stats)
Charisma = random.choice(stats)

race = random.choice(races)
clse = random.choice(classes)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Create a random permutation of the <code>stats</code> list and then assign the <code>Strength</code>, <code>Dexterity</code> etc. in order of the permutation. This has the added benefit that you won't need to reset the list before creating a new character.</p>
<pre><code>from random import shuffle

# ...
stats = [8, 10, 11, 12, 14, 15]
shuffle(stats)
Strength = stats[0]
Dexterity = stats[1]
Constution = stats[2]
Intelligence = stats[3]
Wisdom = stats[4]
Charisma = stats[5]
</code></pre>
<p>As a side note, there is no need to assign a default of <code>0</code> to <code>Strength</code>, etc. because they will be changed immediately afterward. </p>
</div>
<div class="post-text" itemprop="text">
<p>Like you said in your question you could delete entries from the list:</p>
<pre><code>Strenght = random.choice(stats)
del stats[stats.index(Strength)]
</code></pre>
<p>Like it is said in the answer above me, a good solution would also be to use <code>random shuffle</code>. Plus a hint when you write for example <code>Strength = random.choice(stats)</code>  you declare the variable Strength in that moment and give it a value so you don't have to declare it above it so you can delete all those <code>Strength = 0</code> and etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you showed us work for 1 character. But what if we want to create hundreds of them. In Python everything is a class and in this case a strongly recommend using it.</p>
<p>Look at this simple example:</p>
<pre><code>import random
from textwrap import dedent

races = ["Human", "Dwarf", "Elf"]
classes = ["Fighter", "Wizard", "Rogue"]
stats = [ 8, 10, 11, 12, 14, 15]

class char:
    def __init__(self, races, classes, stats):
        random.shuffle(stats) # &lt;--- this solves your problem
        self.race = random.choice(races)
        self.cls = random.choice(classes)
        self.stats = dict(zip(['Strength','Dexterity','Constution',
                               'Intelligence','Wisdom','Charisma'],stats))

    def __str__(self):
        s = dedent('''\
        Your character is a....
        Race: {}
        Class: {}
        Stats: {}''').format(self.race, self.cls, self.stats)
        return s

char1 = char(races,classes,stats) # Creates char1 based on char class
char2 = char(races,classes,stats) # Creates char2 ...

print(char1) # printing a class will call the __str__ function if it exists
print()
print(char2)
</code></pre>
<p>A class can hold variables and other functions and in this case we create three variables (race, cls and stats) and we add a print function to easy print what we wnat.</p>
<p>Returned this when I ran it:</p>
<pre><code>Your character is a....
Race: Elf
Class: Rogue
Stats: {'Dexterity': 11, 'Charisma': 15, 'Constution': 12, 'Wisdom': 10, 'Intelligence': 14, 'Strength': 8}

Your character is a....
Race: Dwarf
Class: Fighter
Stats: {'Dexterity': 14, 'Charisma': 8, 'Constution': 12, 'Wisdom': 11, 'Intelligence': 15, 'Strength': 10}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can store the value of random.choice in a temp. variable and use</p>
<pre><code>stats.remove(temp)
</code></pre>
</div>
<span class="comment-copy">Another option would be to just use <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer"><code>random.shuffle</code></a> then assign in order</span>
<span class="comment-copy">@Hamms I was going to say same thing. But use a dictionary and zip.</span>
