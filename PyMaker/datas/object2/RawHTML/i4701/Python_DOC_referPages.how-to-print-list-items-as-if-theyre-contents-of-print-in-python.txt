<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15769246/pythonic-way-to-print-list-items">Pythonic way to print list items</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>words_list = ['who', 'got', '\n', 'inside', 'your', '\n', 'mind', 'baby']</p>
<p>I have this list of words stored as a list element. I wanted to use the elements as contents of the print function. Ex.</p>
<pre><code>print(words_list[0] + words_list[1] + words_list[2]...words_list[n])
</code></pre>
<p>My desired output would be: </p>
<blockquote>
<pre><code>who got 
inside your
mind baby
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3 you can do:</p>
<pre><code>print(*words_list)
</code></pre>
<p>because print is just a function and the <code>*</code> operator in this context will <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">unpack elements of your list and put them as positional arguments of the function call</a>.</p>
<p>In older versions you'd need to concatenate (join) elements of the array first, possibly converting them to strings, if they are not strings already. This can be done like this:</p>
<pre><code>print ' '.join([str(w) for w in words_list])
</code></pre>
<p>or, more succinctly, using generator expression instead of list comprehension: </p>
<pre><code>print ' '.join(str(w) for w in words_list)
</code></pre>
<p>Yet another alternative is to use the <code>map</code> function, which results in even shorter code:</p>
<pre><code>print ' '.join(map(str, words_list))
</code></pre>
<p>However, if you are on Python 2.6+ but not on Python 3, you can get print as a function by importing it from the future:</p>
<pre><code>from __future__ import print_function
print(*words_list)
</code></pre>
</div>
<span class="comment-copy"><code>print( ''.join(words_list) )</code> will concat the list items using '' as "seperator" into one string</span>
<span class="comment-copy">@PatrickArtner thanks! that worked! how can i close this question and choose your answer as the best one?</span>
<span class="comment-copy">That's not exactly correct. You can use <code>print</code> as a function in Python 2.7 (maybe older versions, too, but these should not be used since years). Just import the correct future, which is a good idea anyway.</span>
<span class="comment-copy">Why use a list comprehension? print(' '.join(word_list)) would produce the same output.</span>
