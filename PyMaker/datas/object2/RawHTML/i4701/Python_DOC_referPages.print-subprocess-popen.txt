<div class="post-text" itemprop="text">
<p>I have problem with function Popen. I try retrieving the output from command which i used. </p>
<pre><code>print(subprocess.Popen("dig -x 156.17.86.3 +short", shell=True, stdout=subprocess.PIPE).communicate()[0].decode('utf-8').strip())
</code></pre>
<p>This part working, but when I call the variable inside <code>Popen</code> (for adress in IP)</p>
<p><code>print(subprocess.Popen("dig -x ",Adres," +short", shell=True, stdout=subprocess.PIPE).communicate()[0].decode('utf-8').strip())</code> </p>
<p>happens something like that:</p>
<pre><code>raise TypeError("bufsize must be an integer")
</code></pre>
<p>I thought it would be problem with command so I used this solution:</p>
<pre><code>command=['dig','-x',str(Adres),'+short']
        print(subprocess.Popen(command, shell=True, stdout=subprocess.PIPE).communicate()[0].decode('utf-8').strip())
</code></pre>
<p>But now the return values is different than from console :  </p>
<pre><code>dig -x 156.17.4.20 +short
vpn.ii.uni.wroc.pl.
</code></pre>
<p>How I can print this the above name in script ?
Thank a lot of </p>
</div>
<div class="post-text" itemprop="text">
<p>The error is that you're not passing a single string, but multiple separate arguments:</p>
<pre><code>subprocess.Popen("dig -x ",Adres," +short", shell=True, stdout=subprocess.PIPE)
</code></pre>
<p>If you look at <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">the <code>Popen</code> constructor in the docs</a>, that means you're passing <code>"dig -x"</code> as the <code>args</code> string, passing <code>Adres</code> as the <code>bufsize</code>, and passing <code>"+short"</code> as the <code>executable</code>. That's definitely not what you want.</p>
<p>You could fix this by building a string with concatenation or string formatting:</p>
<pre><code>subprocess.Popen("dig -x " + str(Adres) + " +short", shell=True, stdout=subprocess.PIPE)
subprocess.Popen(f"dig -x {Adres} +short", shell=True, stdout=subprocess.PIPE)
</code></pre>
<p>However, a much better fix is to just not use the shell here, and pass the arguments as a list:</p>
<pre><code>subprocess.Popen(['dig', '-x', Adres, '+short'], stdout=subprocess.PIPE)
</code></pre>
<p>Notice that if you do this, you have to remove the <code>shell=True</code>, or this won't work. (It <em>may</em> actually work on Windows, but not on *nix, and you shouldn't do it even on Windows.) In the edited version of your question, you're not doing that, so it's still wrong.</p>
<p>While we're at it, you really don't need to create a <code>Popen</code> object and <code>communicate</code> with it if that's literally all you're doing. A simpler solution is:</p>
<pre><code>print(subprocess.run(['dig', '-x', Adres, '+short'], stdout=subprocess.PIPE).stdout.decode('utf-8'))
</code></pre>
<p>Also, if you're having problems debugging a complicated expression like yours, it really helps to break it into separate pieces that you can debug separately (with extra <code>print</code>s, or debugger breakpoints):</p>
<pre><code>proc = subprocess.run(['dig', '-x', Adres, '+short'], stdout=subprocess.PIPE)
result = proc.stdout.decode('utf-8')
print(result)
</code></pre>
<p>This is essentially the same thing, with nearly the same efficiency, but easier to read and easier to debug.</p>
<p>And when I run this with <code>Adres = '156.17.4.20'</code>, I get exactly the output you're looking for:</p>
<pre><code>vpn.ii.uni.wroc.pl.
</code></pre>
</div>
<span class="comment-copy">different how? your first 2 attempts don't work because you're passing the arguments as arguments of <code>Popen</code>. Your third attempt is the closest one, but tell us the output (by printing <code>communicate</code> output you're printing output &amp; error streams as a tuple and as bytes. Is that your issue?</span>
<span class="comment-copy">The output what I expect is that like from command, on the third attempt script print wrong server (like didnt see IpAdress)</span>
<span class="comment-copy">The third one is still wrong, because you're passing a list but using <code>shell=True</code>. See my answer; it's too hard to explain everything in comments.</span>
<span class="comment-copy">I see its working but I have list of IP Adress (like 156.17.4.0/24) and i using nettadr. I must put in script all of IP from this mask and in the error i have that problem <code>TypeError: Can't convert 'IPAddress' object to str implicitly</code></span>
<span class="comment-copy">@Gracjan Then use <code>str(Adres)</code> in place of <code>Adres</code>.</span>
<span class="comment-copy">used and the <code>print(result)</code> printing blank line (no errors ??)</span>
<span class="comment-copy">I repair it. I explicitly declared the IP range and working :) Thanks very much :D</span>
<span class="comment-copy">How Can I use | grep in subprocess ? Example : <code>head = subprocess.run(['HEAD',str_IP,'|','grep','Server'], stdout=subprocess.PIPE)</code> returned this same things like <code>head = subprocess.run(['HEAD',str_IP], stdout=subprocess.PIPE)</code>. How Can I fixed this ? Becouse in console that command shows : <code>Server: Apache/2.4.6 (Unix) OpenSSL/1.0.1t PHP/5.5.3 </code>. In Python i can't use this grep</span>
