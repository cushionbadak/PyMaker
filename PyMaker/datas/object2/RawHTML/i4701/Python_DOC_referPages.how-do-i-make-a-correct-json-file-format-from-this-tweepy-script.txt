<div class="post-text" itemprop="text">
<p>I'm trying to get a JSON format of a search query using Tweepy but there's a problem: my final JSON file is in a unreadable format for any program, after checking the file, it seems like the script writes all the data without any correct spacing (for a JSON format)</p>
<p>So, I've been trying to look for the problem but I really can't find any with the script. Does anyone have an idea of what could be wrong with the writing part?</p>
<p>This is the script:</p>
<pre><code>def write_tweets(tweets, filename):
    ''' Function that appends tweets to a file. '''

    with open(filename, 'a') as f:
        for tweet in tweets:
            json.dump([tweet._json], f)
            f.write('\n')
</code></pre>
<p>.
.
.
.</p>
<pre><code>for search_phrase in search_phrases:

    print('Search phrase =', search_phrase)

    ''' other variables '''
    name = search_phrase.split()[0]
    json_file_root = name + '/'  + name
    os.makedirs(os.path.dirname(json_file_root), exist_ok=True)
    read_IDs = False

    # open a file in which to store the tweets
    if max_days_old - min_days_old == 1:
        d = dt.datetime.now() - dt.timedelta(days=min_days_old)
        day = '{0}-{1:0&gt;2}-{2:0&gt;2}'.format(d.year, d.month, d.day)
    else:
        d1 = dt.datetime.now() - dt.timedelta(days=max_days_old-1)
        d2 = dt.datetime.now() - dt.timedelta(days=min_days_old)
        day = '{0}-{1:0&gt;2}-{2:0&gt;2}_to_{3}-{4:0&gt;2}-{5:0&gt;2}'.format(
              d1.year, d1.month, d1.day, d2.year, d2.month, d2.day)
    json_file = json_file_root + '_' + day + '.json'
    if os.path.isfile(json_file):
        print('Appending tweets to file named: ',json_file)
        read_IDs = True

    # authorize and load the twitter API
    api = load_api()

    # set the 'starting point' ID for tweet collection
    if read_IDs:
        # open the json file and get the latest tweet ID
        with open(json_file, 'r') as f:
            lines = f.readlines()
            max_id = json.loads(lines[-1])['id']
            print('Searching from the bottom ID in file')
    else:
        # get the ID of a tweet that is min_days_old
        if min_days_old == 0:
            max_id = -1
        else:
            max_id = get_tweet_id(api, days_ago=(min_days_old-1))
    # set the smallest ID to search for
    since_id = get_tweet_id(api, days_ago=(max_days_old-1))
    print('max id (starting point) =', max_id)
    print('since id (ending point) =', since_id)
</code></pre>
<p><a href="https://i.stack.imgur.com/b3NHs.png" rel="nofollow noreferrer">Here's a image the JSON file that I can't open.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>A <a href="https://tools.ietf.org/html/rfc7159.html" rel="nofollow noreferrer">JSON text</a> is a single JSON value.</p>
<p>Your code is opening a file and calling <code>json.dump</code> multiple times, concatenating a bunch of separate JSON texts, with newlines in between them. The result is not a JSON text. As the documentation for the <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>json</code> module</a> says:</p>
<blockquote>
<p><strong>Note</strong> Unlike <code>pickle</code> and <code>marshal</code>, JSON is not a framed protocol, so trying to serialize multiple objects with repeated calls to <code>dump()</code> using the same <em>fp</em> will result in an invalid JSON file.</p>
</blockquote>
<p>Normally, what you want is either:</p>
<ul>
<li>Put all those separate things in a list and write that list with a single <code>json.dump</code>. The resulting file will look pretty similar to what you're writing, except for brackets around the whole thing and commas between the values, but it will be a legal JSON text.</li>
<li>Put each thing in a different file. Each one will be a legal JSON text.</li>
</ul>
<p>Now, there are some programs, APIs, etc. that use "stream of JSON texts"<sup>*</sup> as a format, but there's no real standard for that, and everyone who does it has different rules for how to combine them—require escaping line terminators and use <code>\n</code> to separate texts; require escaping only <code>\r</code> and use <code>\r\n\r\n</code> to separate texts; assume the texts are self-delimiting (framed); etc. To work with one of these formats, you have to know exactly what it is; it's not just "JSON"—in fact, it's not JSON at all.</p>
<hr/>
<p><sub>* Or, more commonly, "stream of JSON documents". The old standards defined "document" to be an object or array. The new standards define "text" to be any JSON type. That means documents are self-delimiting, but texts are not. (Consider <code>2</code> followed by <code>3</code>.)</sub></p>
</div>
<span class="comment-copy">Waaay too much code. Please make a <a href="https://stackoverflow.com/help/mcve">Minimal, complete and verifiable example</a>.</span>
<span class="comment-copy">Sorry! let me crop the part i need checking!</span>
<span class="comment-copy">What makes you think that "the script writes all the data without any correct spacing (for a Json format)"? The only standards for JSON are for a single JSON document in a file. There are programs and APIs that use streams of multiple JSON documents, but they all do different things. Some require your JSON to have no non-escaped line terminators, and a newline after each one. Or they only ban <code>\r</code> and require <code>\r\n\r\n</code> as a separator. Or they just assume JSON is self-delimiting (it is if you use the old "document" definition, where the top level had to be an object or an array). And so on.</span>
<span class="comment-copy">So, what program are you trying to pass this to that wants multiple JSON docs in one file, and what is it complaining about?</span>
<span class="comment-copy">This is still too much code—but now it's apparently completely missing all the relevant code. Of course it's hard to know exactly what's relevant, but you're asking about "the writing part" and there is no <code>json.dump</code> or other writing code in the edited version… Please read the help that @roganjosh linked to; it explains what you should and shouldn't include.</span>
<span class="comment-copy">this script is used for updating a database of tweets of a specific word in only one file... is there a way of parsing the "json" so it can be read as a database?</span>
<span class="comment-copy">@SantiagoGuinand how can it be "read as a database"?</span>
<span class="comment-copy">i mean that i can open it and read it</span>
<span class="comment-copy">@SantiagoGuinand Open it and read it in <i>what</i>? If you do either of the two things in my answer, you can open it and read it in any program that can open and read arbitrary JSON. Using it "as a database" is way too vague to help you with. Do you want to parse this code back to a Python object or bunch of Python objects to write Python queries again? Store it in a particular document-store nosql database and run queries against it? Store it in a JSON-format column in a hybrid sql database? Just use the JSON strings as meaningless text in a key-value store?</span>
