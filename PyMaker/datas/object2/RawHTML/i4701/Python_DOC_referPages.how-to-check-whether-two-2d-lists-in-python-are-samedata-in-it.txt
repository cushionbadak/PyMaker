<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15855792/how-do-i-compare-2d-lists-for-equality-in-python">How do I compare 2D lists for equality in Python?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<pre><code>#for 1d lists
x = [1,2,3]
y = [1,2,3]
print([True if x[i]==y[i] else False for i in range(len(x))])

#for 2d lists
d=[[0,0,0,0],[0,0,0,0],[0,0,0,0]]
e=[[0,0,1,0],[0,0,0,0],[0,0,0,0]]

for i in range(0,len(d)):
    for j in range(0,len(d[i])):
          if d[i][j]==e[i][j]:
               continue
          else 
              print (false)
print(true) 
</code></pre>
<p>for 2d lists i am using two for loops(nested) and comparing each element with other(d[i][j]==e[i][j])...is there any better method?
Assume both lists are of same size
i am new to python with little C background
Is it possible without numpy library?      </p>
</div>
<div class="post-text" itemprop="text">
<p>See Chapter 5 in the Python documentation â€“ <a href="https://docs.python.org/3/tutorial/datastructures.html#comparing-sequences-and-other-types" rel="nofollow noreferrer">Comparing Sequences and Other Types</a>:</p>
<blockquote>
<p>The comparison uses <em>lexicographical</em> ordering: first the first two items are compared, and if they differ this determines the outcome of the comparison; if they are equal, the next two items are compared, and so on, until either sequence is exhausted. If two items to be compared are themselves sequences of the same type, the lexicographical comparison is carried out recursively. If all items of two sequences compare equal, the sequences are considered equal.</p>
</blockquote>
<p>You should use the <code>==</code> operator, which is overloaded to work for collections (and pretty much any two comparable objects) too.</p>
</div>
<span class="comment-copy">d==e seems to work....can i use it??</span>
<span class="comment-copy">That's the usual way, yeah</span>
<span class="comment-copy">how does == be compared? will it check each element internally?</span>
<span class="comment-copy"><code>[True if x[i]==y[i] else False for i in range(len(x))]</code> =&gt; <code>[x[i]==y[i] for i in range(len(x))]</code> don't use ternary to return true or false.</span>
<span class="comment-copy">thankyou ....got it</span>
