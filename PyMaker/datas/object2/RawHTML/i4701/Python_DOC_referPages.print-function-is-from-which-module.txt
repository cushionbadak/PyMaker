<div class="post-text" itemprop="text">
<p>As a beginner, what I understood is that Python Standard Library (PSL) provides a lot of modules which provide a lot of functionalities, but still if I want to use those then I have to import the module, for example, <code>sys</code>, <code>os</code> etc. are PSL modules but still those need to be imported.</p>
<p>Now, I wonder if that is the case then how without importing anything I am able to use functions like <code>print</code>, <code>list</code>, <code>len</code> etc.? Is it that their "support is built-in into the interpreter"? </p>
</div>
<div class="post-text" itemprop="text">
<p>Yes. They're built-in functions (or in the case of <code>list</code>, a built-in class). You can explicitly import <a href="https://docs.python.org/2/library/__builtin__.html" rel="nofollow noreferrer">the <code>__builtin__</code> module</a> (Py2) or <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer">the <code>builtins</code> module</a> (Py3) if you want qualified access to the names, but by default, those modules are searched whenever an attempt to access a global name doesn't find the name in the module globals. They're not normally needed though, per the docs:</p>
<blockquote>
<p>This module is not normally accessed explicitly by most applications, but can be useful in modules that provide objects with the same name as a built-in value, but in which the built-in of that name is also needed.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The <code>print</code> function comes from the <code>builtins</code> module.
You can find its documentation <a href="https://docs.python.org/3/library/builtins.html#module-builtins" rel="nofollow noreferrer">here</a>.</p>
<p>Here is an example session.
I first check what module <code>print</code> comes from,which is stored in its <code>__module__</code> attribute.
Then, I import the <code>builtins</code> module, and checks if its <code>print</code> function is the same as the prefix-less <code>print</code>.</p>
<pre><code>&gt;&gt;&gt; print.__module__
'builtins'
&gt;&gt;&gt; import builtins
&gt;&gt;&gt; builtins.print("hello")
hello
&gt;&gt;&gt; print is builtins.print
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should give the page on <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">built-in</a> functions a read</p>
<p>Quote:</p>
<blockquote>
<p>The Python interpreter has a number of functions and types built into
  it that are <strong>always available</strong>.</p>
</blockquote>
</div>
<span class="comment-copy">They are called builtin functions. But they are actually imported by default from the builtins module.</span>
<span class="comment-copy">@JohnColeman Ok, it was not clear to be because of the explainations around Python Standard Library</span>
<span class="comment-copy">There was this <a href="https://stackoverflow.com/a/49416772/5079316">interesting question</a> asked the other day that might help you understand what builtins are. Please do not do as the question suggest, that is remove builtins from scope, but knowing how you can do it helps understand where they come from.</span>
<span class="comment-copy">@Chris_Rands In fairness to OP, they are asking about <i>functions</i> -- <code>import</code> is a keyword. <code>C</code> is an example of a language in which even the simplest function like <code>printf()</code> needs to be included by the appropriate header.</span>
<span class="comment-copy">Ok, thank you for your time to answer.</span>
<span class="comment-copy">My understanding is that in PY, module is nothing but a PY script, so I think there will be some PY file called as <code>builtins.py</code>? I see that for me Python is installed at <code>C:\Users\pjj\AppData\Local\Programs\Python\Python36-32</code>, so if I want to see the source code or builtin functions then which folder in this I should look into, I saw but couldn't find anything?</span>
<span class="comment-copy">@pjj: Several of the modules that ship with the CPython interpreter are either <code>.so</code>/<code>.pyd</code>(DLL) files, or baked into the interpreter core itself (not independent files at all); they're not plain <code>.py</code> files on disk. The <code>builtins</code> module is baked into the interpreter core, and written in C; you'd need to look <a href="https://github.com/python/cpython/blob/3.6/Python/bltinmodule.c" rel="nofollow noreferrer">at the CPython source code to see the implementation</a>.</span>
<span class="comment-copy">Ok, thank you for your time to answer.</span>
<span class="comment-copy">Ok, thank you for your time to answer.</span>
