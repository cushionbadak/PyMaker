<div class="post-text" itemprop="text">
<pre><code>#Basically, for the input number given, return results that are smaller 
#than it compared with the list.

n = list(input('Please enter a Number:  '))
#map(int, str(n))
newlist = []
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

for n in a:
    if n &gt; a:
        newlist.append(a)
        print(newlist)
</code></pre>
<p>Not asking for the solution but just asking how n can work as a list since when I run my code, it says:</p>
<pre><code>" if n &gt; a:
TypeError: '&gt;' not supported between instances of 'int' and 'list' "
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you're using python3, the <a href="https://www.programiz.com/python-programming/methods/built-in/input" rel="nofollow noreferrer">input() method</a> returns a string.</p>
<p>So if your user inputs the value <code>42</code>, <code>input()</code> will return <code>"42"</code>, (<code>type 'str')</code>.</p>
<p>Then you are converting your string into a list, so going on with the 42 example, you'll have <code>list("42") == ["4", "2"]</code>, and you store this list in <code>n</code>.</p>
<p>Anyway, you're not using your variable <code>n</code> anymore:</p>
<p>The <code>for</code> loop that you wrote does not not refer to the <code>n</code> variable you previously created (see <a href="http://sebastianraschka.com/Articles/2014_python_scope_and_namespaces.html" rel="nofollow noreferrer">namespaces</a>), but creates a new variable which will contain each number in your <code>a</code> list.</p>
<p>this means that you are comparing each number of the list to the whole list:</p>
<pre><code>1 &gt; [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
1 &gt; [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
2 &gt; [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
3 &gt; [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
...
</code></pre>
<p>In python3 this will raise a TypeError, and in python2 the behaviour won't be what you expect.</p>
<p>To have your code correctly working, you may take the user input and convert it in an integer, then compare this integer with each number inside your list and append the number to a new list if it is lower than the input integer:</p>
<pre><code>myint = int(input('Please enter a Number:  '))
# type(myint) == int
newlist = []
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

# for each (n)umber in list (a):
for n in a:
    # if the provided number is higher than the actual number in list (a):
    if myint &gt; n:
        newlist.append(n)
# print the new list once its fully filled
print(newlist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is what you need. You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> to filter <code>a</code> for required elements.</p>
<pre><code>x = int(input('Please enter a Number:  '))
# Input 5 as an example

a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

result = [i for i in a if i &lt; x]

print(result)
# [1, 1, 2, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>because <code>a</code> is a list and your <code>n</code> in the iteration is an integer value inside of the list <code>a</code>. for example in the zeroth iteration n = 1 but <code>a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]</code> and saying <code>n &gt; a</code> doesn't make sense, does it?</p>
</div>
<span class="comment-copy">Thank you for this. Very well explained. Glad I came to this site.</span>
<span class="comment-copy">Accept the answer if you think It answer to your question</span>
<span class="comment-copy">good solution but the question was "Not asking for the solution but just asking how n can work as a list" though.</span>
<span class="comment-copy">@Tenflex, to be honest I didn't understand the user's attempt. On the one hand, <code>n</code> is a list from a string <code>input</code>. On the other, <code>for n in a</code> is using <code>n</code> to iterate elements of <code>a</code>. Sometimes providing another method enlightens the OP.</span>
<span class="comment-copy">yeah the question isn't clear though. but using locality of variable in the snippet <code>n int</code> is more local than <code>n list</code></span>
