<div class="post-text" itemprop="text">
<p>I have a Python class for a <code>Person</code> object which inherits <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element" rel="nofollow noreferrer"><code>xml.etree.ElementTree.Element</code></a>.</p>
<pre><code>from xml.etree import ElementTree
class Person(ElementTree.Element):
    def __init__(self, name, age):
        super().__init__("person", name=name, age=str(age))

person = Person("Paul", 23)
</code></pre>
<p>I plan on expanding my <code>Person</code> class to include additional attributes and subtags. Before doing this, I want to simplify attribute access by converting my class to use <a href="http://lxml.de/objectify.html" rel="nofollow noreferrer"><code>lxml.objectify.Element</code></a>.</p>
<pre><code>from lxml import objectify
class Person(objectify.Element):
    def __init__(self, name, age):
        super().__init__("person", name=name, age=str(age))

person = Person("Paul", 23)
</code></pre>
<p>Unfortunately, trying to inherit from <code>objectify.Element</code> raises a TypeError about creating <code>cython_function_or_method</code> instances.</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/svascellar/.PyCharmCE2017.3/config/scratches/scratch_1.py", line 2, in &lt;module&gt;
    class Person(objectify.Element):
TypeError: cannot create 'cython_function_or_method' instances
</code></pre>
<p><strong>Why is my class raising a TypeError? How do I inherit frrom <code>lxml.objectify.Element</code>?</strong></p>
</div>
<div class="post-text" itemprop="text">
<h3>In hindsight, I recommend <em>against</em> using <code>lxml</code> to create subclasses.</h3>
<p>As the comments mentioned, <a href="http://lxml.de/api/lxml.objectify-module.html#Element" rel="nofollow noreferrer"><code>lxml.objectify.Element()</code></a> is not a class. It is a <a href="https://pythonspot.com/factory-method/" rel="nofollow noreferrer">factory method</a> that creates and returns an object, meaning it cannot be inherited.</p>
<p>While it's possible to inherit from <a href="http://lxml.de/api/lxml.etree.ElementBase-class.html" rel="nofollow noreferrer"><code>ElementBase</code></a> or <a href="http://lxml.de/api/lxml.objectify.ObjectifiedElement-class.html" rel="nofollow noreferrer"><code>ObjectifiedElement</code></a>, the lxml documentation strongly warns that you must not override <code>__init__</code> or <code>__new__</code>, which my original answer did.</p>
<blockquote>
<p><strong>BIG FAT WARNING</strong>: Subclasses must not override <code>__init__</code> or <code>__new__</code> as it is absolutely undefined when these objects will be created or destroyed. All persistent state of Elements must be stored in the underlying XML. If you really need to initialize the object after creation, you can implement an _init(self) method that will be called directly after object creation.<br/>
<sub>- <a href="http://lxml.de/api/lxml.etree.ElementBase-class.html" rel="nofollow noreferrer">Documentation for <code>lxml.etree.ElementBase</code></a></sub></p>
</blockquote>
<p>I suggest inheriting from a different class instead. As mentioned in the original question, you can inherit from <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree" rel="nofollow noreferrer"><code>lxml.etree.ElementTree.Element</code></a> fairly easily.</p>
<pre><code>from xml.etree import ElementTree
class Person(ElementTree.Element):
    def __init__(self, name, age):
        super().__init__("person", name=name, age=str(age))

person = Person("Paul", 23)
</code></pre>
<p>Working with sub-classes of <code>lxml</code> may be more trouble than it's worth. However, if you <em>really</em> want to subclass <code>lxml</code> despite the warnings, you can see my original answer below.</p>
<hr/>
<h1>Old Answer (Unsafe)</h1>
<p>Try inheriting from <code>lxml.objectify.ObjectifiedElement</code> instead.</p>
<pre><code>from lxml import objectify
class person(objectify.ObjectifiedElement):
    def __init__(self, name, age):
        super().__init__(name=name, age=str(age))

my_person = person("Paul", 23)
print(etree.tostring(my_person, encoding="unicode"))
# output: &lt;person age="23" name="Paul"/&gt;
</code></pre>
<p>Make sure that your class name matches your XML tag, as <code>ObjectifiedElement</code> uses the class name for the root XML tag name.</p>
<p>As <a href="https://stackoverflow.com/questions/49366392/how-do-i-make-a-class-inherit-from-lxml-objectify-element#comment85733629_49366392">Goyo</a> and <a href="https://stackoverflow.com/questions/49366392/how-do-i-make-a-class-inherit-from-lxml-objectify-element#comment85733742_49366392">bruno desthuilliers</a> pointed out, <code>objectify.Element</code> is not a class, which means you can't inherit from it. Going off their comments, I used <code>type()</code> to confirm this for myself and discovered that <code>objectify.Element()</code> returned an object of type <code>ObjectifiedElement</code>.</p>
<pre><code>from lxml import objectify
person = objectify.Element("person", name="Paul", age="23")
print(type(person))
# output: &lt;class 'lxml.objectify.ObjectifiedElement'&gt;
</code></pre>
<p>After changing my class to inherit from <code>lxml.objectify.ObjectifiedElement</code>, the class worked as expected.</p>
</div>
<span class="comment-copy">You don't because <code>lxml.objectify.Element</code> is not a type.</span>
<span class="comment-copy">As the error says: <code>objectify.Element</code> is not a class, it's a <code>cyfunction</code> (a function coded in Cython <a href="http://cython.org/" rel="nofollow noreferrer">cython.org</a>), so you cannot inherit from it.</span>
<span class="comment-copy">Related: <a href="https://stackoverflow.com/q/19096413/3357935">Difficulty creating lxml Element subclass</a></span>
