<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6074018/why-does-the-expression-0-0-0-return-false-in-python">Why does the expression 0 &lt; 0 == 0 return False in Python?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I've typed some code in Python 3 idle and don't understand the output. Can someone explain, why this happens:</p>
<blockquote>
<p>1 &gt; 0 == True</p>
</blockquote>
<pre><code>False
</code></pre>
<blockquote>
<p>1 &gt; (0 == True)</p>
</blockquote>
<pre><code>True
</code></pre>
<blockquote>
<p>(1 &gt; 0) == True</p>
</blockquote>
<pre><code>True
</code></pre>
<p>Also you can replace digits to bools and output will be the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because in Python, <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">comparisons can be chained arbitrarily</a>. So your expression is equivalent to</p>
<pre><code>(1 &gt; 0) and (0 == True)
</code></pre>
<p>the latter part of which obviously fails.</p>
<p>You would be surprised to see this is true in Python, but false in C:</p>
<pre><code>5 &gt; 4 &gt; 3 &gt; 2 &gt; 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>These operators all have the same precedence (<a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">From Docs</a>)</p>
<blockquote>
<p>Unlike C, all comparison operations in Python have the same priority, which is lower than that of any arithmetic, shifting or bitwise operation.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Please take a look at the <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">chained comparison</a>. This explains the query, e.g. first expression - </p>
<pre><code>1 &gt; 0 == True
</code></pre>
<p>can be broken as (1&gt;0) and (0==True), which is True and False and will return false.</p>
</div>
