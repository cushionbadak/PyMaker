<div class="post-text" itemprop="text">
<p>I have Python class looking somewhat like this:</p>
<pre><code>class some_class:
    def __getattr__(self, name):
        # Do something with "name" (by passing it to a server)
</code></pre>
<p>Sometimes, I am working with <code>ptpython</code> (an interactive Python shell) for debugging. <code>ptpython</code> inspects instances of the class and tries to access the <code>__objclass__</code> attribute, which does not exist. In <code>__getattr__</code>, I could simply check <code>if name != "__objclass__"</code> before working with <code>name</code>, but I'd like to know whether there is a better way by either correctly implementing or somehow stubbing <code>__objclass__</code>. </p>
<p>The <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">Python documentation</a> does not say very much about it, or at least I do not understand what I have to do: </p>
<blockquote>
<p>The attribute <code>__objclass__</code> is interpreted by the <code>inspect</code> module as specifying the class where this object was defined (setting this appropriately can assist in runtime introspection of dynamic class attributes). For callables, it may indicate that an instance of the given type (or a subclass) is expected or required as the first positional argument (for example, CPython sets this attribute for unbound methods that are implemented in C).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You want to avoid interfering with this attribute. There is no reason to do any kind of stubbing manually - you want to get out of the way and let it do what it usually does. If it behaves like attributes usually do, everything will work correctly.</p>
<p>The correct implementation is therefore to special-case the <code>__objclass__</code> attribute in your <code>__getattr__</code> function and throw an <code>AttributeError</code>.</p>
<pre><code>class some_class:
    def __getattr__(self, name):
        if name == "__objclass__":
            raise AttributeError

        # Do something with "name" (by passing it to a server)
</code></pre>
<p>This way it will behave the same way as it would in a class that has no <code>__getattr__</code>: The attribute is considered non-existant by default, until it's assigned to. The <code>__getattr__</code> method won't be called if the attribute already exists, so it can be used without any issues:</p>
<pre><code>&gt;&gt;&gt; obj = some_class()
&gt;&gt;&gt; hasattr(obj, '__objclass__')
False
&gt;&gt;&gt; obj.__objclass__ = some_class
&gt;&gt;&gt; obj.__objclass__
&lt;class '__main__.some_class'&gt;
</code></pre>
</div>
<span class="comment-copy">I don't see why you need to stub it. If you just raise an AttributeError in your <code>__getattr__</code>, it'll work the same way as it would in a class that has no <code>__getattr__</code> (i.e. it would work <i>correctly</i>). What reason do you have to manually set this attribute's value?</span>
<span class="comment-copy">@Aran-Fey Hmm I did not think of just raising the right error. Thanks, this makes sense.</span>
<span class="comment-copy">@Aran-Fey you should repost your comment as an answer obviously.</span>
<span class="comment-copy">Yep, I'll discard mine if you do :)</span>
<span class="comment-copy">@brunodesthuilliers Done, thanks. It actually didn't occur to me that that might be worthy of an answer.</span>
