<div class="post-text" itemprop="text">
<p>My code below works to convert phone letters to phone numbers, but I didn't know if there was a better way to do this:</p>
<pre><code>def phone_letter_converter(self):
    if not self.isdigit():
        number_upper = self.upper()
        new_number = ""
        for ch in number_upper:
            if ch == 'A' or ch == 'B' or ch == 'C':
                new_number += '2'
            elif ch == 'D' or ch == 'E' or ch == 'F':
                new_number += '3'
            elif ch == 'G' or ch == 'H' or ch == 'I':
                new_number += '4'
            elif ch == 'J' or ch == 'K' or ch == 'L':
                new_number += '5'
            elif ch == 'M' or ch == 'N' or ch == 'O':
                new_number += '6'
            elif ch == 'P' or ch == 'Q' or ch == 'R' or ch == 'S':
                new_number += '7'
            elif ch == 'T' or ch == 'U' or ch == 'V':
                new_number += '8'
            elif ch == 'W' or ch == 'X' or ch == 'Y' or ch == 'Z':
                new_number += '9'
            else:
                new_number += ch
        return new_number
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <code>in</code> operator :</p>
<p>So instead of <code>if ch == 'A' or ch == 'B' or ch == 'C':</code>, <code>if ch in 'ABC'</code> will check if (for example) <code>A</code> is in <code>ABC</code>.</p>
<p>Or, you could use a <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">dictionary</a> here:</p>
<pre><code>conversion_dict = {'A': '2', 'B': '2', 'C': '2',\
                  'D': '3', 'E': '3', 'F': '3',\
                  'G': '4', 'H': '4', 'I': '4',\
                  'J': '5', 'K': '5', 'L': '5',\
                  'M': '6', 'N': '6', 'O': '6',\
                  'P': '7', 'Q': '7', 'R': '7', 'S': '7',\
                  'T': '8', 'U': '9', 'V': '8',\
                  'W': '9', 'X': '9', 'Y': '9', 'Z': '9'}

number_letters = 'KJLWABJEKF'
new_number = ""
for c in number_letters:
    new_number += conversion_dict[c]
print(new_number) # 5559225353
</code></pre>
<p>This can be shortened even further by using a <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>"".join(...)</code></a> and a <a href="https://docs.python.org/3.6/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>number_letters = 'KJLWABJEKF'
new_number = ''.join([conversion_dict[c] for c in number_letters]) # 5559225353
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dict</a> to map that like:</p>
<h3>Code:</h3>
<pre><code>letter_to_number = dict(
    A=2, B=2, C=2, D=3, E=3, F=3,
    G=4, H=4, I=4, J=5, K=5, L=5,
    M=6, N=6, O=6, P=7, Q=7, R=7, S=7,
    T=8, U=8, V=9, W=9, X=9, Y=9, Z=9,
)

letter_to_number = {k: str(v) for k, v in letter_to_number.items()}
letter_to_number.update({k.lower(): v for k, v in letter_to_number.items()})

def phone_letter_converter(letters_in):
    return ''.join(letter_to_number.get(l, l) for l in letters_in)
</code></pre>
<p>This works by building a initial dict of uppercase letters to numbers.  Then converts the numbers to letters of those numbers, and then adds the lower case version of the lookup.</p>
<h3>Test Code:</h3>
<pre><code>print(phone_letter_converter('AbCdZ'))
</code></pre>
<h3>Result:</h3>
<pre><code>22239
</code></pre>
</div>
