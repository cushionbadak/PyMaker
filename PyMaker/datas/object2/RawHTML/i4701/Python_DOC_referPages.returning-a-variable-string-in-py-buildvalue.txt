<div class="post-text" itemprop="text">
<p>I'm writing the following as a test case in C++:</p>
<pre><code>using namespace boost::algorithm;
static PyObject* strtest(PyObject* self, PyObject* args)
{
    std::string s = "Boost C++ Libraries";
    to_upper(s);
    PyObject * python_val = Py_BuildValue("s", s);
    return python_val;
}
</code></pre>
<p>The code compiles and imports, but produces what looks like a reference to a memory location.</p>
<pre><code>&gt;&gt;&gt; math_demo.strtest()
' X\x0e'
</code></pre>
<p>I was expecting <code>'BOOST C++ LIBRARIES'</code> as a return value</p>
<p>What am I missing? </p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/c-api/arg.html#c.Py_BuildValue" rel="nofollow noreferrer">[Python]: PyObject* <strong>Py_BuildValue</strong>(<em>const char *format, ...</em>)</a> (or any other <em>Python/C API</em> function) works with <em>C</em> types not <em>C++</em>.</p>
<p>In order to fix the problem, use <a href="http://www.cplusplus.com/reference/string/string/c_str" rel="nofollow noreferrer">[cplusplus]: std::<strong>string::c_str</strong></a>:</p>
<pre><code>PyObject *python_val = Py_BuildValue("s", s.c_str());
</code></pre>
</div>
<span class="comment-copy">Did you try <code>PyObject * python_val = Py_BuildValue("s", s.c_str());</code> ?</span>
<span class="comment-copy">Excellent. That's the solution. If you'd like to post as the answer I'll give credit.</span>
