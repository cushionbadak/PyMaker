<div class="post-text" itemprop="text">
<blockquote>
<p>The openssl passwd command computes the hash of a password typed at run-time or the hash of each password in a list. The password list is taken from the named file for option -in file, from stdin for option -stdin, and from the command line otherwise. The UNIX standard algorithm crypt and the MD5-based BSD password algorithm 1 and its Apache variant apr1 are available.</p>
</blockquote>
<p><a href="https://www.mkssoftware.com/docs/man1/openssl_passwd.1.asp" rel="nofollow noreferrer">https://www.mkssoftware.com/docs/man1/openssl_passwd.1.asp</a></p>
<p>Here is an example of a working commandline:</p>
<pre><code># openssl passwd -salt lol "input"
lokvI0eY9X.FM
</code></pre>
<p>Is there a python module that handles password generation with openssl? <a href="https://pyopenssl.org/en/stable/api/crypto.html" rel="nofollow noreferrer">The documentation doesn't appear to cover generating passwords.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you need the same behavior like <code>openssl passwd</code>, which using unix standard crypt(3), python has a <code>crypt</code> module:</p>
<pre><code>import crypt
crypt.crypt('input', salt='lol') # =&gt; 'lokvI0eY9X.FM'
</code></pre>
</div>
<span class="comment-copy">For 3.6, secrets could be helpful: <a href="https://docs.python.org/3/library/secrets.html" rel="nofollow noreferrer">docs.python.org/3/library/secrets.html</a></span>
<span class="comment-copy"><code>cryptography</code> has lots of key generation algorithms: <a href="https://cryptography.io/en/latest/hazmat/primitives/key-derivation-functions/" rel="nofollow noreferrer">cryptography.io/en/latest/hazmat/primitives/â€¦</a> . <code>openssl</code>'s default algorithm, <code>crypt</code> is usually considered obsoleted.</span>
<span class="comment-copy">anyone know which algorithm is used? trying to troubleshoot if the "unix standard algorithm crypt" is being used internally in <code>openssl passwd</code>. then if i knew which algo was used, i could more easily validate that the input + salt returned the right value.</span>
