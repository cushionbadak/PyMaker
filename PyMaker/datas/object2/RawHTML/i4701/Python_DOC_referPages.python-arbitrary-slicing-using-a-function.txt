<div class="post-text" itemprop="text">
<p>I'm trying to make a function that can make an abitrary slice of a list eg:</p>
<pre><code>def slice(arr, a, b, step):
        return arr[a:b:step]
</code></pre>
<p>The problem is, how to handle if a user wants the slice arr[5:] or arr[:5] in a nice way?</p>
</div>
<div class="post-text" itemprop="text">
<p>Omitting a value in a slice is equivalent to using <code>None</code>, so I may suggest this function signature:</p>
<pre><code>def slice_(arr, start=None, stop=None, step=None):
    return arr[start:stop:step]
</code></pre>
<p>Recommend not to use the name <code>slice</code> for your function, because it shadows <a href="https://docs.python.org/3/library/functions.html?highlight=slice#slice" rel="nofollow noreferrer">the built-in class</a>.  </p>
<p>Note:  You don't need to define your own function for this functionality.  A more Pythonic way of slicing an object with dynamic input would be with using getitem directly:</p>
<pre><code>arr[slice(a,b,step)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This already exists in the standard library </p>
<pre><code>&gt;&gt;&gt; import operator
&gt;&gt;&gt; operator.getitem(arr, slice(start, stop, step))
</code></pre>
</div>
<span class="comment-copy">But there is already a function that can do this.  It's <code>list.__getitem__</code>.</span>
<span class="comment-copy">additionally, there is already the <a href="https://docs.python.org/2/library/functions.html#slice" rel="nofollow noreferrer"><code>slice</code></a> builtin</span>
<span class="comment-copy">â€“1 You have <i>very</i> old version of Python!</span>
<span class="comment-copy">And it doesn't work with a step, and it hooks into a deprecated part of the 2.7 object model.</span>
<span class="comment-copy">@wim updated with py2/3 compatibilty</span>
