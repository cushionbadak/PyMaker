<div class="post-text" itemprop="text">
<p>I wonder if my answer below is correct and feasible or are there any improvements Thank you.
question: a program that checks x y and z if they are odd or even if they are odd checks if the number is the biggest of all three.
Below my answer:</p>
<pre><code>    x = 4
    y = 7
    z = 9

  #first condition where 3 numbers are all odd.

    if x%2 == 1 and y%2 == 1 and z%2 == 1:
        if x &gt; y and x &gt; z:
            print "x is the biggest odd number."
        elif x &gt; y and z &gt; x:
            print "z is the biggest odd number."
        else:
            print "y is the biggest odd number."

#second condition where 2 of the numbers are odd
elif x%2 == 0 and y%2 == 1 and z%2 == 1:
    if y &gt; z:
        print "y is the biggest odd number."
    else:
        print "y is the biggest odd number."
elif x%2 == 1 and y%2 == 0 and z%2 == 1:
    if x &gt; z:
        print "x is the biggest odd number."
    else:
        print "z is the biggest odd number."

elif x%2 == 1 and y%2 == 1 and z%2 == 0:
    if x &gt; y:
        print "x is the biggest odd number."
    else:
        print "y is the biggest odd number."    

#third condition where only one of the numbers is odd.

elif x%2 == 0 and y%2 == 0 and z%2 == 1:
    print "z is the biggest odd number."
elif x%2 == 1 and y%2 == 0 and z%2 == 0:
    print "x is the biggest odd number."
elif x%2 == 0 and y%2 == 1 and z%2 == 0:
    print "y is the biggest odd number."

#last condition if none of the numer are odd or not numbers.

else:
    print " None of the numbers are odd or not a number."
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Wow! That is a ton of code. Why don't you just put <code>x</code>,<code>y</code>,<code>z</code> in a list. Use a list comprehension to remove even numbers. Then select the maximum value using the max function. Something like this</p>
<pre><code>arr = [x,y,z]
arr = [i for i in arr if i%2!=0] #select only odd numbers
print(max(arr)) #display the maximum number
</code></pre>
<p>Then you can use <code>max(arr)</code> to figure out  what variable contains the maximum odd number.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your solution is probably a bit too verbose and specific. What if you needed to find the largest odd number and there were four? Or a hundred?</p>
<p>A better idea would be to use Python's <a href="http://docs.python.org/3/library/functions.html#max" rel="nofollow">max</a> function to examine a sequence that filters out even numbers.</p>
<p>You can collect the numbers to be examined in a sequence like a <a href="http://docs.python.org/3.3/library/stdtypes.html#lists" rel="nofollow">list</a>:</p>
<pre><code>A = [53, 31, 59, 75, 25, 32, 99, 15, 63, 35]
</code></pre>
<p>Then you can filter that sequence with a list comprehension:</p>
<pre><code>A_odd = [n for n in A if n % 2 != 0]
</code></pre>
<p>Then you can find the max of that sequence:</p>
<pre><code>max_odd = max(A_odd)
</code></pre>
<p>Suppose that there were no odd numbers in the sequence, though. The <code>max</code> function raises an exception if its argument is empty. So we can use a conditional expression to check to see if <code>A_odd</code> is empty:</p>
<pre><code>if A_odd:
    max_odd = max(A_odd)
else:
    max_odd = "No odd numbers in sequence"
</code></pre>
<p>Then when we print the answer with <code>print(A_odd)</code> we get the result or the message.</p>
<p>Python 3.4 (not yet released) includes an addition to the max function that allows this to be even more compact - you can skip the conditional and just do <code>max(A_odd, default="No odd numbers in sequence")</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This is inspired by Eric's answer but meets your need to print x, y and z instead of values. </p>
<pre><code>&gt;&gt;&gt;val={'x':x,'y':y,'z':z}
&gt;&gt;&gt;newval=dict(k,d for k,d in val.items() if d%2==1) 
</code></pre>
<p>Personally I would prefer to write <code>if d%2</code> but that's just me, it's up to you.</p>
<pre><code>&gt;&gt;&gt;if newval:
          print(max(newval.items(),key=lambda x:x[1]),'is maximum')
   else:
          print('No odd numbers')
</code></pre>
<p>It uses a dictinoary with Eric's list comprehension idea.</p>
<p><strong>EDIT</strong>: I just figured that this would be cooler using a function. </p>
<pre><code>&gt;&gt;&gt;def findmax(**x):
   new=dict((k,d) for k,d in x.items() if d%2)
   if new:
       print(max(new.items(),key=lambda x:x[1]),'is maximum')
   else:
       print('No odd numbers')
</code></pre>
<p>Test run like so,</p>
<pre><code>&gt;&gt;&gt;findmax(x=1,y=37,z=208,a=193)
(a,193) is maximum
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>nums = x, y, z

try:
    print max([n for n in nums if n%2 == 1])
except ValueError:
    print 'No odd numbers'
</code></pre>
<p>This prints <code>'No odd numbers'</code> if there are none  in <code>nums</code></p>
<p>Doing <code>print(max(some_list))</code> where <code>some_list</code> is empty returns an error and so is not dealing with situations where there are no odd numbers present</p>
</div>
<span class="comment-copy">Wouldn't this be good at <a href="http://codereview.stackexchange.com">codereview.stackexchange.com</a>?</span>
<span class="comment-copy">uh, no I guess. He needs to print 'x','y' or 'z'.</span>
<span class="comment-copy">He probably will learn a ton from this answer</span>
<span class="comment-copy">@PyNEwbie he probably will. but still doesn't meet his exact specifications though.</span>
<span class="comment-copy">@Sabyasachi I updated it to reflect that it is incomplete.</span>
<span class="comment-copy">if arr is empty due to no odd numbers, the print statement produces ValueError: max() arg is an empty sequence</span>
<span class="comment-copy">You should probably catch <code>ValueError</code> and not every possible exception, yes?</span>
<span class="comment-copy">oops, meant for that to be there, thanks</span>
