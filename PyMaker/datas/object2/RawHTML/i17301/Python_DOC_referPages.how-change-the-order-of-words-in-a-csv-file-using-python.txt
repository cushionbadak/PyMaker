<div class="post-text" itemprop="text">
<p>I have a csv file like this</p>
<pre><code>Abc  12
bcd 123
bsd 45
bfs 34
</code></pre>
<p>I need to change this file to<br/>
number first form.</p>
<pre><code>12 abc
 123 bcd
45  bsd
 34 dfs
</code></pre>
<p>In this form 
What I have done.</p>
<pre><code>import csv
with open('name.csv', 'rb') as f:
    reader = csv.reader(f, delimiter='\t')
    file = open("names.txt", "w")
    for row in reader:
        for j in range(0 ,len(row)):
            file.write(row[j])


file.close()
</code></pre>
<p>The current output </p>
<pre><code>12
123
34
</code></pre>
<p>Expected output </p>
<pre><code>12 abc
 123 bcd
45  bsd
 34 dfs
</code></pre>
<p>Any clues?</p>
</div>
<div class="post-text" itemprop="text">
<p>Simple:</p>
<pre><code>import csv

with open('name.csv', 'rb') as f:
    reader = csv.reader(f, delimiter='\t')
    with open("names.txt", "w") as o:
        writer = csv.writer(o, delimiter='\t')
        for row in reader:
            writer.writerow((row[1], row[0]))
</code></pre>
<p><em>Edit:</em></p>
<p>If you can use <code>awk</code>, this will be much simpler:</p>
<pre><code>$ awk -F '\t' 'OFS="\t" {print $2, $1}' &lt; name.csv 
</code></pre>
<ul>
<li><code>-F '\t'</code>: fields in the input are separated by tabs</li>
<li><code>OFS="\t"</code>: fields in the ouput shall be separated by tabs, too</li>
<li><code>{print $2, $1}</code>: for each line in the input, print the second and the first field</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can read each line from the file (using <strong>readlines()</strong>) and use the <strong>strip()</strong> (To remove end of line characters)  and the <strong>split()</strong> function (To remove white spaces and separate out entities)  with default arguments to convert each line into a temporary array:</p>
<p>For example </p>
<pre><code>FileHandle = open("file.txt", 'r')
LinesInFile = FileHandle.readlines()

for line in LinesInFile:
    Arr = line.strip().split() #This will give Arr = ["Abc", "12"] for line = "Abc 12"
</code></pre>
<p>Following this you can use the list <strong>pop()</strong> method to get the last element and print that to a file, eventually reversing the order and putting the number before the word.</p>
<p>For example</p>
<pre><code>Num = Arr.pop() #this will get you 12
Wrd = Arr.pop() #this will get you "Abc"
</code></pre>
<p>You can run the above logic in a loop (as shown above in the code snippet) to generate a new file that has the required structure by printing Num and Wrd in the same loop into the file.</p>
</div>
<span class="comment-copy">What is the problem with what you currently have? Errors (provide full traceback)? Unexpected output (provide inputs and expected and actual outputs)?</span>
<span class="comment-copy">worked perfectly</span>
<span class="comment-copy">The <a href="http://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module</a> does exist. Remember, Python comes with batteries included.</span>
<span class="comment-copy">Okay. Didn't know about it (Never used it). Of course this answer wasn't pythonic but solves the problem :)</span>
<span class="comment-copy">@UdayMittal Your solution is good</span>
<span class="comment-copy">@karu, Thank you. :)</span>
