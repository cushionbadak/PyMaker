<div class="post-text" itemprop="text">
<p>Im trying to implement the <code>--verbose</code> option in my script. The idea is to turn on extra printing of errors etc for debugging, but for some reason it doesnt seem to work. Ive tried a few variations of the <code>if verbose</code> statement but no joy. Im hoping someone could point me in the right direction?</p>
<p><strong>CLI EXAMPLE</strong> </p>
<p><code>./attack2.py -f wordfile.txt -d google.com --verbose 1</code></p>
<p><strong>CLI OUTPUT</strong></p>
<pre><code>unknown@ubuntu:~$ ./attack2.py -f wordfile.txt -d google.com --verbose 1
173.194.34.149
173.194.34.130
unknown@ubuntu:~$
</code></pre>
<p><strong>ARG PRINT</strong></p>
<pre><code>{'--domain': 'google.com',
 '--file': 'wordfile.txt',
 '--help': False,
 '--thread': False,
 '--verbose': True,
 '10': False,
 '&lt;1&gt;': '1'}
</code></pre>
<p><strong>CODE</strong></p>
<pre><code>#!/usr/bin/python

"""
Description:

Basic Domain bruteforcer

Usage:
  attack2.py (-f &lt;file&gt;) (-d &lt;domain&gt;) [-t 10] [-v &lt;1&gt;]
  attack2.py -h | --help

Arguments:
  -f --file File to read potential Sub-domains from. (Required)
  -d --domain Domain to bruteforce. (Required)
Options:
  -h --help     Show this screen.
  -p --proxy    Proxy address and port. [default: http://127.0.0.1:8080] (Optional)
  -t --thread   Thread count. (Optional)
  -v --verbose  Turn debug on. (Optional)
"""
import socket
from docopt import docopt


def fread(dwords):
        flist = open(dwords).readlines()
        return [s.replace('\n', '.') for s in flist]


def subcheck(subdomain, domain, verbose):

        vdomain = {}
        for sub in subdomain:
                try:
                        check = socket.gethostbyname(sub + domain)
                        vdomain[sub + domain] = check

                except socket.gaierror, e:
                        if verbose == True:
                                print arguments
                                print e, sub + domain
                        else:
                                pass
        return vdomain

if __name__ == "__main__":
        arguments = docopt(__doc__, version='0.1a')

        fread(arguments['--file'])
        returned_list = fread(arguments['--file'])
        returned_domains = subcheck(returned_list, arguments['--domain'], ['--verbose'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The below line in function <code>subcheck</code></p>
<pre><code>returned_domains = subcheck(returned_list, arguments['--domain'], ['--verbose'])
</code></pre>
<p>should be</p>
<pre><code>returned_domains = subcheck(returned_list, arguments['--domain'], arguments['--verbose'])
</code></pre>
<p>You forgot to pass the <code>verbose</code> param from arguments, instead you passed a <code>list</code></p>
</div>
<div class="post-text" itemprop="text">
<p>It seems I was calling the subcheck incorrectly.</p>
<p>Code should have looked like this</p>
<p><strong>Working CODE</strong></p>
<pre><code>if __name__ == "__main__":
        arguments = docopt(__doc__, version='0.1a')

        fread(arguments['--file'])
        returned_list = fread(arguments['--file'])
        returned_domains = subcheck(returned_list, arguments['--domain'], arguments['--verbose'])
        print returned_domains
</code></pre>
</div>
<span class="comment-copy">Why not use <a href="http://docs.python.org/2/library/argparse.html#module-argparse" rel="nofollow noreferrer">docs.python.org/2/library/argparse.html#module-argparse</a> ?</span>
<span class="comment-copy">Why don't you like to use <a href="http://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a> and <a href="http://docs.python.org/3/library/logging.html" rel="nofollow noreferrer">logging</a> modules?</span>
<span class="comment-copy">@agam360: because another answer about using <code>getopt</code> recommended <code>docopt</code> to the OP. Does it matter here?</span>
<span class="comment-copy">Try to print the <code>type</code> of <code>verbose</code> variable <code>print type(verbose)</code> in function <code>subcheck</code>. IMO the type is <code>str</code> that's why it is not matching the condition.</span>
<span class="comment-copy">to be fair im liking docopt :)</span>
<span class="comment-copy">ROFL u beet me too it by a few secs :)</span>
<span class="comment-copy">As i worked it out myself is it bad practice to give myself the Correct answer?</span>
<span class="comment-copy">@LearningCode - No obligation on you to set my answer as correct.</span>
<span class="comment-copy">hmm i do feel obligated to set yourself correct, but im kinda proud i worked it out myself ^_^</span>
<span class="comment-copy">@LearningCode: Thanks :-)</span>
