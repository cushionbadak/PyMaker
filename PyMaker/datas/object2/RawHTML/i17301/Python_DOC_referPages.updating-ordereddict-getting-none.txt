<div class="post-text" itemprop="text">
<p>Here is my list ,</p>
<pre><code>z=[OrderedDict([('name', 'abc'), ('lastname', 'lastname.'), ('address', 'Mumbai'), ('cell', '21******')]), OrderedDict([('name', 'abc'), ('lastname', 'lastname.'), ('address', 'Mumbai'), ('cell', '21******')]), OrderedDict([('name', 'xyz'), ('lastname', 'lastnamexyz.'), ('address', 'Heaven'), ('cell', '2156******')])]
</code></pre>
<p>I am trying to change keys of this dictionary , </p>
<p>What i am trying ,</p>
<pre><code>&gt;&gt;&gt; temp_lst=[]
&gt;&gt;&gt; for i in z:
    newo=OrderedDict()
    temp_lst.append(newo.update(Name=i.get('name'),Lastname=i.get('lastname')))
&gt;&gt;&gt; print temp_lst
    [None, None, None]
</code></pre>
<p>This code is printing tmp_lst as <code>[None, None, None]</code></p>
<p>But when i have tried following , got the correct result.</p>
<pre><code>&gt;&gt;&gt; for i in z:
    newo=OrderedDict()
    newo.update(Name=i.get('name'),Lastname=i.get('lastname'))
    temp_lst.append(newo)   
&gt;&gt;&gt; temp_lst
[OrderedDict([('Lastname', 'lastname.'), ('Name', 'abc')]), OrderedDict([('Lastname', 'lastname.'), ('Name', 'abc')]), OrderedDict([('Lastname', 'lastnamexyz.'), ('Name', 'xyz')])]
</code></pre>
<p>Both codes seems like the same then why i am getting <code>[None, None, None]</code> in first case and correct output in second case ?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/library/stdtypes.html#dict.update" rel="nofollow"><code>dict.update</code></a> always returns <code>None</code>, so in the first example, you append <code>None</code> three times while in the second example, you append the dict object three times.</p>
</div>
<div class="post-text" itemprop="text">
<p>because newo.update() doesn't return anything (so you get None).</p>
</div>
<div class="post-text" itemprop="text">
<p>Here</p>
<pre><code>temp_lst.append(newo.update(Name=i.get('name'),Lastname=i.get('lastname')))
</code></pre>
<p>You are actually adding the return value of <code>newo.update</code> to the list, which happens to be <code>None</code>. In the first example you first update the dict and then append the dict itself to <code>temp_lst</code>. That makes a difference</p>
</div>
<span class="comment-copy"><code>update</code> is in-place and returns <code>None</code>.</span>
