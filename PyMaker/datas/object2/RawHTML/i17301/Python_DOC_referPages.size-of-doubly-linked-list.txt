<div class="post-text" itemprop="text">
<p>I have various functions created and one of them should append data and the size function should be updated after an item is appended. however when i do it, i get an error saying unsupported operand type(s) for +: 'method' and 'int . I'm a little confused to what that means.</p>
<pre><code>def size(self):
    self.length = 0
    return self.length 

def append(self, data):
    new_node = Double_Node(data)
    self.size = self.size + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def size(self):
    …
</code></pre>
<p>This defines a member <code>size</code> of the class which is a method. So when you try to do <code>self.size + 1</code> you are trying to add <code>1</code> to a method, which is exactly what the error is telling you.</p>
<p>Furthermore, you are also about to assign that result to <code>self.size</code>, essentially overwriting the method, so that’s not what you want to do either.</p>
<p>Instead, you probably want to increment <code>self.length</code> by one.</p>
<p>Note that it is recommended to implement the special method <a href="http://docs.python.org/3/reference/datamodel.html#object.__len__" rel="nofollow"><code>__len__</code></a> to allow people to use the <a href="http://docs.python.org/3/library/functions.html#len" rel="nofollow"><code>len()</code></a> function with your object which is the standard way to get the length of an object. For example:</p>
<pre><code>def __len__ (self):
    return self.length
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In you example, <code>size</code> is a method, not an integer. You probably mean to call it, but since it's not a property, you'll need to use the property decorator and its setter:</p>
<pre><code>class MyObj(object):
    def __init__(self):
        self.length = 0
    @property
    def size(self):
        return self.length 

    @size.setter
    def size(self, value):
        self.length = value

    def append(self, data):
        self.size = self.size + 1
</code></pre>
<p>And then:</p>
<pre><code>&gt;&gt;&gt; myobj = MyObj()
&gt;&gt;&gt; myobj.length
0
&gt;&gt;&gt; myobj.size
0
&gt;&gt;&gt; myobj.append('foo')
&gt;&gt;&gt; myobj.size
1
</code></pre>
</div>
<span class="comment-copy">Did you mean <code>self.length = self.length + 1</code>?</span>
