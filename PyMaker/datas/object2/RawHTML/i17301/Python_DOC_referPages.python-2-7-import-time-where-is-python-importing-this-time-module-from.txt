<div class="post-text" itemprop="text">
<p>When I'm importing something in Python, in this case <code>import time</code>, where is <code>time</code> being imported from? Where is the module located prior to import? I tried using dir() on the <code>__builtin__</code> and other folders in my interpreter, but it's not there.</p>
<p>I have looked in the c:\python folder and a search turns up nothing for a file named <code>time</code> but nonetheless time.sleep(1) works just fine, so it is imported. Is it being automatically downloaded from the network?</p>
<p>I ultimately want to import some other modules for text coloring, but I need to know where this one came from first. Thanks.</p>
<hr/>
<p>Further to Aarons "motivations to your question" edit:</p>
<p><code>[u'',
'C:\\Program Files (x86)\\PyScripter\\Lib\\rpyc.zip',
'C:\\Windows\\system32\\python27.zip',
'C:\\Python27\\DLLs', 'C:\\Python27\\lib',
'C:\\Python27\\lib\\plat-win',
'C:\\Python27\\lib\\lib-tk',
'C:\\Python27', &lt;--- This location
'C:\\Python27\\lib\\site-packages']
</code></p>
<p>This is what i get. Im gonna guess from whats been said, by J.F.Sebastian, that the time module is in the above location marked (C:\Python27) (in the executable file), although my first guess would have been within a file within the lib folder.</p>
<p>I looked for <code>collections</code> and that is an independent file, so even though that too is the Standard Library, it exists in a file on the disk and i know where it is exactly. I would like to know this too for <code>time</code> (im guessing its in the .exe).</p>
<p>If i was to save my own modules in the above marked location (if not where), would i save it as examplemodule[no file extension], examplemodule.py?, and if saved with an extension would i have to import it with the extension i.e. import examplemodule.py? or not.</p>
<p>This is a question (the extension bit) which would probably be answered for me, if i simply could see the file it is on the disk, but being either compiled into the python executable or in the Libs directory i cannot. Thanks again</p>
</div>
<div class="post-text" itemprop="text">
<p>The 'time' module is written in C, and in Python 2 does not have a <code>.__file__</code>, like others such as <code>collections</code> are. In Python 3 (3.4 on my system):</p>
<pre><code>time.__file__
</code></pre>
<p>returns </p>
<pre><code>'/home/user/cpython/build/lib.linux-x86_64-3.4-pydebug/time.cpython-34dm.so'
</code></pre>
<p>I have cpython in my home directory, and I can get to the source code by looking in <code>/Modules/timemodule.c</code></p>
<p>Here's the module in Mercurial online: <a href="http://hg.python.org/cpython/file/3ae2cd85a908/Modules/timemodule.c" rel="nofollow noreferrer">http://hg.python.org/cpython/file/3ae2cd85a908/Modules/timemodule.c</a></p>
<hr/>
<p>The answers on this older question are out of date: <a href="https://stackoverflow.com/questions/269795/how-do-i-find-the-location-of-python-module-sources">How do I find the location of Python module sources?</a></p>
<hr/>
<p>Let me address the motivation for the question, you're concerned about where to place your modules so you can import them. Their location has to be in sys.path, the first item of which is <code>''</code> but semantically means your script directory. </p>
<p>Here's my output from sys.path from my own build of Python 3.4:</p>
<pre><code>&gt;&gt;&gt; import sys, pprint
&gt;&gt;&gt; pprint.pprint(sys.path)
['',
 '/usr/local/lib/python34.zip',
 '/home/user/cpython/Lib',
 '/home/user/cpython/Lib/plat-linux',
 '/home/user/cpython/build/lib.linux-x86_64-3.4-pydebug',
 '/home/user/.local/lib/python3.4/site-packages']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since this being a general question, I would like to give you two links wherein lays your answer. </p>
<p>First one is from Python docs. </p>
<p>http://<a href="http://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">docs.python.org/3/reference/import.html</a></p>
<p><strong>This one is the same but famous question asked in Stackoverflow!</strong> </p>
<p><a href="https://stackoverflow.com/questions/269795/how-do-i-find-the-location-of-python-module-sources">How do I find the location of Python module sources?</a></p>
</div>
<span class="comment-copy">your answer <a href="http://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">docs.python.org/3/reference/import.html</a></span>
<span class="comment-copy">or even this link would do <a href="http://stackoverflow.com/questions/269795/how-do-i-find-the-location-of-python-module-sources" title="how do i find the location of python module sources">stackoverflow.com/questions/269795/â€¦</a></span>
<span class="comment-copy"><a href="http://hg.python.org/cpython/file/3ae2cd85a908/Modules/timemodule.c" rel="nofollow noreferrer">hg.python.org/cpython/file/3ae2cd85a908/Modules/timemodule.c</a></span>
<span class="comment-copy">The answers on that old SO question are out of date.</span>
<span class="comment-copy"><code>time</code> module has <code>__file__</code> attribute as any other imported module (if <code>__file__</code> has meaning for it)</span>
<span class="comment-copy">@J.F.Sebastian maybe in Python 3, but not 2.7: <code>&gt;&gt;&gt; import time &gt;&gt;&gt; time.__file__ Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt; AttributeError: 'module' object has no attribute '__file__'</code></span>
<span class="comment-copy">it probably means that <code>time</code> is builtin into python executable in your installation: <code>'time' in sys.builtin_module_names</code>. The location is the location of <code>python</code> executable itself in this case.</span>
<span class="comment-copy">So to elaborate on this: i did <code>import imp</code> followed by <code>imp.find_module('time')</code> and it returned this: <code>(None, 'time', ('', '', 6))</code> now, the second item in the list <code>'time'</code> is where the location of the file on the disk would be, if it was a file somewhere in the c:\python directory, but it listing itself makes me think its just located within python itself, comes under the Standard Library perhaps?</span>
<span class="comment-copy">@0x14 Yes, time is in the Standard Library, but so is e.g. <code>collections</code>, which is a Python package. Let me add a bit regarding your motivating reason as stated in the question.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/a/16370057/3398981">stackoverflow.com/a/16370057/3398981</a>  This answer showed promise as some of those answers were less friendly to Windows. When i imported <code>imp</code> and ran <code>imp.find_module('time')</code> it returned no location on the hard disk, which i think means it is a part of pythons default modules ("the standard library"?).  I dont know where it is located exactly, but i am sure now its stored locally. Thanks for your answer.</span>
<span class="comment-copy">A link to the large reference for a different Python version is not an answer. The import location and the module source location are not the same thing in general and it is not true for <code>time</code> module in particular.</span>
<span class="comment-copy">I've unticked this one then. To be honest the documentation didn't really help i didn't even notice it was not for 2.7, but i did notice the 2.6 in the top answer in the SO link.  I was able to get the general idea from the rest of the answers though... i think.</span>
