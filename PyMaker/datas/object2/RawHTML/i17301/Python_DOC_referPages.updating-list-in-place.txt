<div class="post-text" itemprop="text">
<p>I have a list of strings, some of them ends with new line symbol. I want to modify this list by removing \n from strings which ends with it. For this purpose I use the following code:</p>
<pre><code>aList = ['qwerttyy\n', '123454\n', 'zxcv']

for s in aList:
    if s.endswith('\n'):
    s = s[: -1]
        print(s)
</code></pre>
<p>The output is the following:</p>
<pre>
    qwerttyy
    123454
    &gt;&gt;&gt; aList
    ['qwerttyy\n', '123454\n', 'zxcv']
</pre>
<p>So the original list wasn't changed though list is mutable object. What is the reason of such behavior?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use slice assignment and a list comprehension:</p>
<pre><code>&gt;&gt;&gt; foo = aList = ['qwerttyy\n', '123454\n', 'zxcv']
&gt;&gt;&gt; aList[:] = [s[:-1] if s.endswith('\n') else s for s in aList]
&gt;&gt;&gt; foo                         #All references are affected.
['qwerttyy', '123454', 'zxcv']
&gt;&gt;&gt; aList
['qwerttyy', '123454', 'zxcv']
</code></pre>
<p>Your code didn't work because it is equivalent to:</p>
<pre><code>s = aList[0]
if s.endswith('\n'):
    s = s[: -1]
s = aList[1]
if s.endswith('\n'):
    s = s[: -1]
...
</code></pre>
<p>i.e You're updating the variable <code>s</code>, not the actual list item</p>
</div>
<div class="post-text" itemprop="text">
<p>because the for loop makes copies of strings.</p>
<p>You can use:
<code>[s[:-1] if s.endswith('\n') else s for s in aList]</code></p>
<p>Maybe this is simpler, though it will remove also whitespaces.
<code>[s.strip() for s in aList]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> and <a href="http://docs.python.org/3/library/stdtypes#str.rstrip" rel="nofollow"><code>str.rstrip</code></a></p>
<pre><code>&gt;&gt;&gt; aList = ['qwerttyy\n', '123454\n', 'zxcv']
&gt;&gt;&gt; [s.rstrip('\n') for s in aList]
['qwerttyy', '123454', 'zxcv']
</code></pre>
<p>Above will create new list. To modify the original list, use slicing (<code>list[:] = ...</code>):</p>
<pre><code>&gt;&gt;&gt; aList
['qwerttyy\n', '123454\n', 'zxcv']
&gt;&gt;&gt; aList[:] = [s.rstrip('\n') for s in aList]
&gt;&gt;&gt; aList
['qwerttyy', '123454', 'zxcv']
</code></pre>
<p><strong>NOTE</strong> <code>str.rstrip</code> returns different result from <code>[:-1]</code> when tehre are multiple trailing newlines:</p>
<pre><code>&gt;&gt;&gt; 'qwerttyy\n\n'.rstrip('\n')
'qwerttyy'
&gt;&gt;&gt; 'qwerttyy\n\n'[:-1]
'qwerttyy\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this </p>
<pre><code>&gt;&gt;&gt; aList = ['qwerttyy\n', '123454\n', 'zxcv']
&gt;&gt;&gt; aList = [x[:-1] if x.endswith('\n') else x for x in aList]
&gt;&gt;&gt; aList
['qwerttyy', '123454', 'zxcv']
</code></pre>
</div>
<span class="comment-copy">+1 Loved this...</span>
<span class="comment-copy">This doesn't modify the list <i>on place</i>.</span>
<span class="comment-copy">Ok. Then re-affect the lsit: aList = [s[:-1] if s.endswith('\n') else s for s in aList]</span>
<span class="comment-copy">Note that there's a difference between <code>x[:-1]</code> and <code>x.strip('\n')</code> when <code>x</code> is something like <code>'foo\n\n'</code>.</span>
<span class="comment-copy">@AshwiniChaudhary, Thank you for comment. I added a note about it.</span>
<span class="comment-copy">Not quite right, you dropped a 'v' in the 3rd element of the list.</span>
