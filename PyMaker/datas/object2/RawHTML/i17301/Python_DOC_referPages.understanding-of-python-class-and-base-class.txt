<div class="post-text" itemprop="text">
<p>Let's say we have an instantiation</p>
<pre><code>client = PiHttpClient("192.168.1.234")
# RPi native GPIO
gpio = NativeGPIO(client)
gpio.setFunction(25, "out")
state = True
</code></pre>
<p>And from the clients.py code I have</p>
<pre><code>class PiMixedClient():
    def __init__(self, host, port=8000, coap=5683):
    def sendRequest(self, method, uri):

class PiHttpClient(PiMixedClient):
    def __init__(self, host, port=8000):
        PiMixedClient.__init__(self, host, port, -1)
class NativeGPIO(GPIO):
    def __init__(self, client):
        RESTAPI.__init__(self, client, "/GPIO")

class GPIO(Device):
    def __init__(self, client, name):
        Device.__init__(self, client, name, "digital")

    def getFunction(self, channel):
        return self.sendRequest("GET", "/%d/function" % channel)

    def setFunction(self, channel, func):
        return self.sendRequest("POST", "/%d/function/%s" % (channel, func))

class Device(RESTAPI):
    def __init__(self, client, name, category):
        RESTAPI.__init__(self, client, "/devices/" + name + "/" + category)

class RESTAPI():
    def __init__(self, client, path):
        self.client = client
        self.path = path

    def sendRequest(self, method, path):
        return self.client.sendRequest(method, self.path + path)
</code></pre>
<ol>
<li><p>So, from the above when it does PiHttpClient("192.168.1.234")  the host="192.168.1.234", right? but the <em>init</em>(self,host, port=8000) looks for self, host. I didn't see self being passed in as argument.</p></li>
<li><p>then inside PiMixedClient, because PiHttpClient extending PiMixedClient, then its host and self should be as the same as PiMixedClient</p></li>
<li><p>then gpio=NativeGPIO(client)    again inside the <em>init</em> of NativeGPIO  _<em>init</em>(self, client),  from the calling function I do not need to supply the self?</p></li>
<li><p>so when extending to lowest level it become RESTAPI base class, its sendRequest method is from client which is from the PiMixedClient class's sendRequest?</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Yes - a python method always gets self as first argument, you might want to take a look at the <a href="http://docs.python.org/3/tutorial/classes.html#a-first-look-at-classes" rel="nofollow">docs</a> on classes.</li>
<li>Yes</li>
<li>-</li>
<li>No. You do not need to manually suply self if you create an instance of the class (you do if you want to override the init method)</li>
<li>Yes</li>
</ol>
<p>But really, take a look at the python docs, they are pretty good.</p>
</div>
<span class="comment-copy">please correct your indentation..</span>
