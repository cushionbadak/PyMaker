<div class="post-text" itemprop="text">
<p>I have a list </p>
<pre><code>mylist = [(0,0,0),(1,1,1),(2,2,2),(3,3,3)]
</code></pre>
<p>i wish to find a code saving method to zip the first element <code>mylist[0]</code> with the rest of the list element <code>mylist[1:]</code> in order to get a new list as:</p>
<pre><code>[((0,0,0),(1,1,1)),((0,0,0),(2,2,2)),((0,0,0),(3,3,3))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>zip</code>:</p>
<pre><code>&gt;&gt;&gt; mylist = [(0,0,0),(1,1,1),(2,2,2),(3,3,3)]
&gt;&gt;&gt; zip([mylist[0]]*(len(mylist)-1), mylist[1:])
[((0, 0, 0), (1, 1, 1)), ((0, 0, 0), (2, 2, 2)), ((0, 0, 0), (3, 3, 3))]
</code></pre>
<p>A list comprehension is even simpler:</p>
<pre><code>&gt;&gt;&gt; [ (mylist[0], sublist) for sublist in mylist[1:] ]
[((0, 0, 0), (1, 1, 1)), ((0, 0, 0), (2, 2, 2)), ((0, 0, 0), (3, 3, 3))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't think that <code>zip</code> is necessary here.  A <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions">list comprehension</a> will work fine:</p>
<pre><code>&gt;&gt;&gt; mylist = [(0,0,0),(1,1,1),(2,2,2),(3,3,3)]
&gt;&gt;&gt; [(mylist[0], x) for x in mylist[1:]]
[((0, 0, 0), (1, 1, 1)), ((0, 0, 0), (2, 2, 2)), ((0, 0, 0), (3, 3, 3))]
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using map:</p>
<pre><code>map(lambda x:(mylist[0],x),mylist[1:])
</code></pre>
<p>Output:</p>
<pre><code>[((0, 0, 0), (1, 1, 1)), ((0, 0, 0), (2, 2, 2)), ((0, 0, 0), (3, 3, 3))]
</code></pre>
</div>
<span class="comment-copy">Not sure why you would <i>want</i> to do that.</span>
<span class="comment-copy">I checked the edit history to ensure you didn't snipe iCodez for extra credit. You didn't. +1</span>
<span class="comment-copy">+1 but map is just half of a comprehension, with an awkward lambda.</span>
