<div class="post-text" itemprop="text">
<p>I am having a bit of trouble trying to find an answer to this. I would like to know what the syntax <code>sep=""</code> and <code>\t</code> means. I have found some informaion about it but I didn't quite understand what the purpose of using the syntax was. I'm looking for an explanation of what it does and when / why you would use it.</p>
<p>An example of <code>sep=''</code> being used:</p>
<pre><code>print('Property tax: $', format(tax, ',.2f'), sep='') 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>sep=''</code> in the context of a function call sets the named argument <code>sep</code> to an empty string. See the <a href="http://docs.python.org/3/library/functions.html#print"><code>print()</code> function</a>; <code>sep</code> is the separator used between multiple values when printing. The default is a space (<code>sep=' '</code>), this function call makes sure that there is no space between <code>Property tax: $</code> and the formatted <code>tax</code> floating point value.</p>
<p>Compare the output of the following three <code>print()</code> calls to see the difference</p>
<pre><code>&gt;&gt;&gt; print('foo', 'bar')
foo bar
&gt;&gt;&gt; print('foo', 'bar', sep='')
foobar
&gt;&gt;&gt; print('foo', 'bar', sep=' -&gt; ')
foo -&gt; bar
</code></pre>
<p>All that changed is the <code>sep</code> argument value.</p>
<p><code>\t</code> <em>in a string literal</em> is an escape sequence for <a href="https://en.wikipedia.org/wiki/%5Ct#Tab_characters">tab character, horizontal whitespace, ASCII codepoint 9</a>.</p>
<p><code>\t</code> is easier to read and type than the actual tab character. See the <a href="http://docs.python.org/3/reference/lexical_analysis.html#index-15">table of recognized escape sequences</a> for string literals.</p>
<p>Using a space or a <code>\t</code> tab as a print separator shows the difference:</p>
<pre><code>&gt;&gt;&gt; print('eggs', 'ham')
eggs ham
&gt;&gt;&gt; print('eggs', 'ham', sep='\t')
eggs    ham
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>sep=''</code> ignore whiteSpace.
see the code to understand.Without <code>sep=''</code></p>
<pre><code>from itertools import permutations
s,k = input().split()
for i in list(permutations(sorted(s), int(k))):
    print(*i)
</code></pre>
<p>output:</p>
<pre><code>HACK 2
A C
A H
A K
C A
C H
C K
H A
H C
H K
K A
K C
K H
</code></pre>
<p>using <code>sep=''</code>
The code and output.</p>
<pre><code>from itertools import permutations
s,k = input().split()
for i in list(permutations(sorted(s), int(k))):
    print(*i,sep='')
</code></pre>
<p>output:</p>
<pre><code>HACK 2
AC
AH
AK
CA
CH
CK
HA
HC
HK
KA
KC
KH
</code></pre>
</div>
<span class="comment-copy">print('Property tax: $', format(tax, ',.2f'), sep='')   would be an example of a line of code its used in.</span>
<span class="comment-copy">@krona: <code>sep=''</code> is not the same thing as <code>sep""</code>. See the <a href="http://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print()</code> function documenation</a>; the code sets the <code>sep</code> keyword argument to an empty string.</span>
<span class="comment-copy">@Noumenon: In Python 2, use <code>from __future__ import print_function</code>; this is not limited to just Python 3. The question was using <code>print()</code> as a function, hence my tailoring to that case.</span>
<span class="comment-copy">By the same logic any Python 2 answer is also good for Python 3 because 2to3 exists. You're causing confusion for Python 2 users by rejecting the edit. I will tag the question as Python 3, but no one ever notices that.</span>
<span class="comment-copy">@Noumenon: there is always going to be some confusion between the two versions. I do link to the function documentation, I call it a <i>function</i> and not a <i>statement</i>, etc.</span>
