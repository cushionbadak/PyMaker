<div class="post-text" itemprop="text">
<p>When I run my code in IDLE my code works fine but when I open it normally in CMD it displays an error message and closes instantly leaving me no time to read the error message. I did however manage to screenshot the error message and it said:</p>
<p>"File "file location..." line 12, in encode
  return codecs.charmap_encode(input,errors,encoding_map)
 UnicodeEncodeError: 'charmap' codec can't encode character '\u03c0' in position 102: character maps to "</p>
<p>I'm not sure what this means and how I can fix it and it is strange that it works in IDLE but not CMD. CMD and IDLE are both on the same version of python and I only have 1 version of python installed on my computer so the problem isn't that the versions don't match. Do you know why it's working and then not working and how to fix it?I am using python 3.3.3. Here is my code (it's for calculating Pi approximately using an infinite series where the user inputs how many terms of the series they want to use):</p>
<pre><code>import math
go="Y"
while go=="Y" or go=="y" or go=="Yes" or go=="yes":
    count=input("The infinite series 1/1 - 1/3 + 1/5 - 1/7... converges to π/4, how many of these divisions would you like the computer to do?\n")
    if count.isdigit():
        count = int(count)
        pi=0
        realcount = 0
        while realcount &lt;= count:
            realcount = realcount + 1
            if realcount / 2 == math.floor(realcount / 2):
                pi = pi - (1 / ((2 * realcount) - 1))
            else:
                pi = pi + (1 / ((2 * realcount) - 1))
        print("π ≈",4 * (pi))
        go=input("Would you like to try again?\n")
    else:
        go=input("Sorry you must input a positive integer, would you like to try again?\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's about the character π (unicode '\u03c0') in your code, the default encoding for python interpreter is ASCII, which means you cannot use a non-ascii character in your source code without telling the system.
You can either 1)use pi instead of π, or 2)add a line at the head of your code: <code>#coding=utf-8</code> to tell the interpreter that you are using the utf-8 encoding in your source code.</p>
</div>
<div class="post-text" itemprop="text">
<p>add one line to your code for set encoding:  </p>
<pre><code># -*- coding: utf-8 -*-
import math
go="Y"
while go=="Y" or go=="y" or go=="Yes" or go=="yes":
    count=input("The infinite series 1/1 - 1/3 + 1/5 - 1/7... converges to π/4, how many of these divisions would you like the computer to do?\n")
    if count.isdigit():
        count = int(count)
        pi=0
        realcount = 0
        while realcount &lt;= count:
            realcount = realcount + 1
            if realcount / 2 == math.floor(realcount / 2):
                pi = pi - (1 / ((2 * realcount) - 1))
            else:
                pi = pi + (1 / ((2 * realcount) - 1))
        print("π ≈",4 * (pi))
        go=input("Would you like to try again?\n")
    else:
        go=input("Sorry you must input a positive integer, would you like to try again?\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The difference between IDLE and your command file is due to the encoding of the source code.</p>
<p>Python 3 reads source code as UTF-8 encoded if not specified differently. The official documentation has <a href="http://docs.python.org/3/howto/unicode.html#unicode-literals-in-python-source-code" rel="nofollow">information on encodings</a> where you can see how to use a different encoding. The right encoding depends on your system's locale. Or better, you can simply save your source as UTF-8. The procedure depends on your text editor.</p>
</div>
<span class="comment-copy">It's the PI characters most likely. Try writing out PI instead and see if that helps. It's them, or that "equivalence" character you have where you have <code>print("π ≈",4 * (pi))</code>. Most likely the console is using an encoding that doesn't handle those characters properly.</span>
<span class="comment-copy">An additional hint: The while-condition could be written as <code>while go.lower() in ('y', 'yes'):</code>.</span>
<span class="comment-copy">Thank you this fixed my problem.</span>
