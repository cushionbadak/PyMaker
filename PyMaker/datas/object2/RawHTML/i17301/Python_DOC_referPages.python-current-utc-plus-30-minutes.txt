<div class="post-text" itemprop="text">
<p>In Python, how can you get the current UTC time plus 30 minutes?</p>
<p>I tried this:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; future = datetime.datetime.now() + datetime.timedelta(seconds=30*60)
&gt;&gt;&gt; str(datetime.timedelta(seconds=future))
'16133 days, 17:54:08' ----&gt; output
</code></pre>
<p>I'm not sure this is correct (I'm sure I am wrong, Python newb here).</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime
from datetime import timedelta
(datetime.utcnow() + timedelta(seconds=60*30)).strftime('%Y-%m-%d %H:%M:%S')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; datetime.datetime.utcnow() + datetime.timedelta(minutes=30)
datetime.datetime(2014, 3, 4, 18, 0, 49, 757000)
</code></pre>
</div>
<span class="comment-copy">Now gives you your local time not the UTC time.</span>
<span class="comment-copy">awesome! Thank you! how would you convert this to seconds?</span>
<span class="comment-copy">@dennismonsewicz, If you use Python 3.3+, you can use <a href="http://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp" rel="nofollow noreferrer"><code>datetime.datetime.timestamp()</code></a> to get POSIX timestamp.</span>
<span class="comment-copy">seconds since what? Epoch is 1970, which is what a lot of things use.  Or do you want since 0 C.E.? Or since Tuesday when Jimmy swallowed a snail because of a dare.</span>
<span class="comment-copy">@JeffLangemeier - I need to publish a <code>start_date</code> that looks like this: 2014-03-10T12:00:00Z or it could be presented in seconds like this: 1394452800</span>
<span class="comment-copy">@dennismonsewicz, Try <code>datetime.datetime.utcnow().isoformat()</code> or <code>datetime.datetime.utcnow().strftime('%Y-%m-%d%H:%M:%SZ')</code></span>
