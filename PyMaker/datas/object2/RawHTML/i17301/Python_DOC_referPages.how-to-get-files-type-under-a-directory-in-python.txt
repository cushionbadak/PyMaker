<div class="post-text" itemprop="text">
<p>I have a directory structure like this</p>
<pre><code>Root\
    DirA\
        DirX\
            File.aaa
            File.bbb
        File.ccc
        File.ddd
    DirB\
        File.aaa
        File.ccc
        File.ddd
        File.eee
    File.fff
</code></pre>
<p>using python I want to get a list of all file types like this:</p>
<pre><code>['aaa','bbb','ccc','ddd','eee','fff']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/22084585/128629">m. samy's answer</a> is correct. However it would be more efficient to use a set which magically check for duplicates.</p>
<pre><code>import os

def get_file_types(directory):
    file_ext = set()
    for root, directories, files in os.walk(directory):
        for filename in files:
            filepath = os.path.join(root, filename)
            fileName, fileExtension = os.path.splitext(filepath)


    return sorted(file_ext)  # Self-explanatory.


file_types = get_file_types("d:\\Development\\")
for ty in file_types:
    print ty
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os

def get_file_types(directory):
    file_ext = []
    for root, directories, files in os.walk(directory):
        for filename in files:
            filepath = os.path.join(root, filename)
            fileName, fileExtension = os.path.splitext(filepath)
            if fileExtension not in file_ext:
                file_ext.append(fileExtension)

    return file_ext  # Self-explanatory.


file_types = get_file_types("d:\\Development\\")
for ty in file_types:
    print ty
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
filesext = []
files = ["porns.txt", "girls.mp3", "hello.png", "folder"]
for file_i in files:
    _, ext = os.path.splitext(file_i)
    if ext:
        filesext.append(ext)
print filesext

&gt;&gt;&gt; ['.txt', '.mp3', '.png']
</code></pre>
</div>
<span class="comment-copy">Google, "python scan directory for file extensions" and work with all the samples that pop up that are really close to what you want.  If you can get all the file names, it's a matter of looking for the last dot and doing some string manipulation.</span>
<span class="comment-copy">The following example does almost what you want: <a href="https://stackoverflow.com/questions/4582550/file-walking-in-python" title="file walking in python">stackoverflow.com/questions/4582550/file-walking-in-python</a></span>
<span class="comment-copy">See <a href="http://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a> and <a href="http://docs.python.org/3/library/os.path.html#os.path.splitext" rel="nofollow noreferrer"><code>os.path.splitext</code></a></span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/1320731/count-number-of-files-with-certain-extension-in-python">Count number of files with certain extension in Python</a></span>
<span class="comment-copy">@dbw <a href="http://stackoverflow.com/questions/1320731/count-number-of-files-with-certain-extension-in-python" title="count number of files with certain extension in python">stackoverflow.com/questions/1320731/â€¦</a> counting only one type of files with a predefined extension. It doesn't provide a generic solution.</span>
