<div class="post-text" itemprop="text">
<p>I have a long string with many replacement fields that I then format with:</p>
<pre><code>firstRep  = replacementDict['firstRep']
secondRep = replacementDict['secondRep']
.
.
.
nthRep    = replacementDict['nthRep']

newString = oldString.format(firstRep = firstRep, 
                             secondRep = secondRep,...,
                             nthRep = nthRep)
</code></pre>
<p>Is there a way to avoid having to set every option individually and use a looped approach to this? </p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply unpack the dictionary like this</p>
<pre><code>replacementDict = {}
replacementDict["firstRep"]  = "1st, "
replacementDict["secondRep"] = "2nd, "
replacementDict["thirdRep"]  = "3rd, "

print "{firstRep}{secondRep}{thirdRep}".format(**replacementDict)
# 1st, 2nd, 3rd, 
</code></pre>
<p>Quoting from the <a href="http://docs.python.org/2/library/string.html#format-examples" rel="nofollow">Format Examples</a>,</p>
<pre><code>Accessing arguments by name:

&gt;&gt;&gt;
&gt;&gt;&gt; 'Coordinates: {latitude}, {longitude}'.format(latitude='37.24N', longitude='-115.81W')
'Coordinates: 37.24N, -115.81W'
&gt;&gt;&gt; coord = {'latitude': '37.24N', 'longitude': '-115.81W'}
&gt;&gt;&gt; 'Coordinates: {latitude}, {longitude}'.format(**coord)
'Coordinates: 37.24N, -115.81W'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="http://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow">unpack argument dicts with a <code>**</code> prefix</a>:</p>
<pre><code>newString = oldString.format(**replacementDict)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3.3/library/stdtypes.html#str.format_map" rel="nofollow noreferrer"><code>str.format_map</code></a> which is provided <em>exactly</em> for this usecase:</p>
<pre><code>old_string.format_map(replacement_dict)
</code></pre>
<p>Note: <code>format_map</code> is provided only in python3.2+. In python2 you can use <code>**</code> unpacking (see <a href="https://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-python-parameters">this</a> related question), <em>howerver</em> this forces python to copy the dictionary and is thus a bit slower and uses more memory.</p>
</div>
<span class="comment-copy">hey thanks for your answer. Too bad I can only accept one.</span>
<span class="comment-copy">Wow, that exists? (Since Python 3, yes! Cool.)</span>
