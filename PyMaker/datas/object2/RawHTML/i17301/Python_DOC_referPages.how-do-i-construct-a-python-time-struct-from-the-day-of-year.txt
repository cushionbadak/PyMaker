<div class="post-text" itemprop="text">
<p>I have the day of the year, or as its called in Python, the tm_yday.
I want to get out the month and day of month.</p>
<p>How can I create a Python time struct from just the day of year?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow"><code>datetime.strptime</code></a> to parse the day of the year:</p>
<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; tm_yday = 59
&gt;&gt;&gt; tm_year = datetime.now().year # current year
&gt;&gt;&gt; datetime.strptime('{} {}'.format(tm_year, tm_yday), '%Y %j')
datetime.datetime(2014, 2, 28, 0, 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import datetime
&gt;&gt;&gt; datetime.datetime.strptime('10', '%j')
datetime.datetime(1900, 1, 10, 0, 0)
&gt;&gt;&gt; datetime.datetime.strptime('359', '%j')
datetime.datetime(1900, 12, 25, 0, 0)
&gt;&gt;&gt; datetime.datetime.strptime('359', '%j').month
12
&gt;&gt;&gt; datetime.datetime.strptime('359', '%j').day
25
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import datetime
foo=datetime.datetime(1990, 1, 1) + datetime.timedelta(tm_yday - 1)
month = foo.month
dayOfMonth = foo.day
</code></pre>
<p>Year 1990 is an example, try other in the case of leap year.</p>
</div>
<div class="post-text" itemprop="text">
<p>Datetime date types are the way to go here:</p>
<pre><code>import datetime
</code></pre>
<p>Here's today:</p>
<pre><code>&gt;&gt;&gt; datetime.date.today()
datetime.date(2014, 2, 27)
</code></pre>
<p>And here's Jan 1st of 2014:</p>
<pre><code>&gt;&gt;&gt; datetime.date(2014, 1, 1)
datetime.date(2014, 1, 1)
</code></pre>
<p>To combine into a datetime object:</p>
<pre><code>datetime.datetime.combine(datetime.date(2014, 1, 1), 
                          datetime.datetime.min.time())
</code></pre>
</div>
<span class="comment-copy">try the <a href="http://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">datetime</a> module</span>
<span class="comment-copy"><code>datetime.strptime('{} {:0&gt;3}'.format(tm_year, tm_yday), '%Y %j')</code> Python docs says : %j	Day of the year as a zero-padded decimal number.	001, 002, ..., 366</span>
<span class="comment-copy">I had padding in my original answer, but a quick test showed that it actually is not necessary for parsing.</span>
