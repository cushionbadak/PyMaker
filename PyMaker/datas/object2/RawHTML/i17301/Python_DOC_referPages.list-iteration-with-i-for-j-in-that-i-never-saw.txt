<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6475314/python-for-in-loop-preceded-by-a-variable">Python for-in loop preceded by a variable</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to understand what does the following python code do</p>
<pre><code>plain_list = [ j for i in arguments for j in i ]
</code></pre>
<p>I've never seen such a syntax, can someone help me out?</p>
</div>
<div class="post-text" itemprop="text">
<p>It is called a <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a>.  </p>
<p>Using normal for-loops, its equivalent code would be:</p>
<pre><code>plain_list = []               # Make a list plain_list
for i in arguments:           # For each i in arguments (which is an iterable)
    for j in i:               # For each j in i (which is also an iterable)
        plain_list.append(j)  # Add j to the end of plain_list
</code></pre>
<p>Below is a demonstration of it being used to flatten a list of lists:</p>
<pre><code>&gt;&gt;&gt; arguments = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
&gt;&gt;&gt;
&gt;&gt;&gt; plain_list = [ j for i in arguments for j in i ]
&gt;&gt;&gt; plain_list
[1, 2, 3, 4, 5, 6, 7, 8, 9]
&gt;&gt;&gt;
&gt;&gt;&gt; plain_list = []
&gt;&gt;&gt; for i in arguments:
...     for j in i:
...         plain_list.append(j)
...
&gt;&gt;&gt; plain_list
[1, 2, 3, 4, 5, 6, 7, 8, 9]
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">It's called a list comprehension.  Knowing that, you should be able to look it up.</span>
<span class="comment-copy">Relevant reading: <a href="http://stackoverflow.com/q/3766711/198633">Advanced list comprehension syntax</a></span>
<span class="comment-copy">Note that this is a relatively common idiom for flattening a list of lists (iterable of iterables), often used by people who tend not to import <code>itertools</code> for everything (<code>itertools.chain</code> can be used to the same end.)</span>
<span class="comment-copy">OP: welcome to Python, where the first step for doing anything is "How can I reduce that to a list comprehension?" Then the second step is "Oh that's ridiculous, I should just use <code>itertools</code> instead."</span>
