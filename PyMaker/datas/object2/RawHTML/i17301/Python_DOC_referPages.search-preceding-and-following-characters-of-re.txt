<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/16875404/python-regex-alternation">Python regex alternation</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I am trying to find the characters immediately before and after a regex match in a given string. This is the code.</p>
<pre><code>&gt;&gt;&gt;import re
&gt;&gt;&gt;s='dafddadffdbdasbffsbbfdbabbfsdfadsfdfddf' #completely garbage test string
&gt;&gt;&gt;re.findall('.{0,5}(abb).{0,5}',s)
['abb']
</code></pre>
<p>The test string has an occurence of 'abb' here <code>...fdbabbfsd...</code> I am under the impression that the special character <code>.</code> matches <em>any</em> character other than <code>\n</code> and the <code>{m,n} Causes the resulting RE to match from m to n repetitions of the preceding RE, attempting to match as many repetitions as possible</code> as stated <a href="http://docs.python.org/3/library/re.html" rel="nofollow">here</a></p>
<p>So I expect my re to return <code>['bbfdbabbfsdfa']</code> and not just <code>['abb']</code>. What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's because of the capturing group. Just move the parentheses:</p>
<pre><code>re.findall('(.{0,5}abb.{0,5})',s)
</code></pre>
<p><code>findall</code> only matches groups, so everything you want to match needs to be in the parentheses.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="http://docs.python.org/2/library/re.html#re.findall" rel="nofollow"><code>re.findall</code> documentation</a>:</p>
<blockquote>
<p>Return all non-overlapping matches of pattern in string, as a list of
  strings. The string is scanned left-to-right, and matches are returned
  in the order found. <strong>If one or more groups are present in the pattern,
  return a list of groups</strong>; this will be a list of tuples if the pattern
  has more than one group.</p>
</blockquote>
<p>So by surrounding whole pattern as a group or removing group will give you what you want.</p>
<pre><code>&gt;&gt;&gt; re.findall('(.{0,5}abb.{0,5})',s)  # Entire pattern as a group
['bbfdbabbfsdfa']
&gt;&gt;&gt; re.findall('.{0,5}abb.{0,5}',s)    # No capturing group
['bbfdbabbfsdfa']
</code></pre>
</div>
<span class="comment-copy">You have a capturing group; <code>.findall()</code> returns just the groups.</span>
<span class="comment-copy">@MartijnPieters What are my alternatives?</span>
<span class="comment-copy">Use this <code>re.findall('(.{0,5}abb.{0,5})',s)</code></span>
<span class="comment-copy">okay thanks. :) that was fast.</span>
<span class="comment-copy">brilliant. thanks. :)</span>
