<div class="post-text" itemprop="text">
<p>It is my first time doing web scraping. What i would like to do is achieve all possible informations regarding properties (location, price etc..)
So what I have now, that I managed to gather with some googling is something like this:</p>
<pre><code>import requests
from bs4 import BeautifulSoup
from pprint import pprint as pp

rootURL = 'https://www.jawitz.co.za/'
response = requests.get(rootURL)                                                   
html = response.content
soup = BeautifulSoup(html,'lxml')

dropdown_list = soup.select(".primary .child-pages a")
cityLinks = [rootURL + dropdown_list_value['href'] for dropdown_list_value in dropdown_list]

# params for our request
params = {"province": "Western Cape", 
          "suburb": "Van Riebeeck Park", 
          "region": "Worcester", 
          "id": 929,
          "property_type": "Apartment"}

for city in cityLinks:  # Looping each city from the Apartment drop down list
    with requests.Session() as s:
        r= s.get(city)
        soup = BeautifulSoup(r.content)
        # getting some information should go here
</code></pre>
<p>Now, I am not really sure how to retrieve information since on this website, after examining the resources I stumble upon some hidden inputs. Any advices on how to proceed with this? I am a bit confused with how to access information that is available in the resource.</p>
<p>Thank you in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could combine selenium with bs4</p>
<pre><code>from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import math
from bs4 import BeautifulSoup as bs
import pandas as pd

def getData(properties):
    for aProperty in properties:
        soup = bs(str(aProperty) , 'lxml')
        price = soup.select_one('.property-price-heading').text if soup.select_one('.property-price-heading') is not None else ''       
        header = soup.select_one('.property-marketing-heading').text if soup.select_one('.property-marketing-heading') is not None else ''        
        beds = soup.select_one('.icon-beds span').text if soup.select_one('.icon-beds span') is not None else ''        
        baths = soup.select_one('.icon-baths span').text if soup.select_one('.icon-baths span') is not None else ''    
        garages = soup.select_one('.icon-garages span').text if soup.select_one('.icon-garages span') is not None else ''
        land = soup.select_one('.property-list-land-size .value').text if soup.select_one('.property-list-land-size .value') is not None else ''
        description = soup.select_one('.results-content').text.strip() if soup.select_one('.results-content') is not None else ''
        ref = soup.select_one('.property-list-webref').text.strip() if soup.select_one('.property-list-webref') is not None else ''
        items = [price, header, beds, baths, garages, land, description, ref ]
        result.append(items)
    return result

varUrl = 'https://www.jawitz.co.za/results/residential/for-sale/cape-town/all/?p={}&amp;advanced_search=1&amp;s=-price'
url = 'https://www.jawitz.co.za/results/residential/for-sale/cape-town/all/?advanced_search=1'

driver = webdriver.Chrome()
driver.get(url)
data =  WebDriverWait(driver,10).until(EC.presence_of_element_located((By.CSS_SELECTOR, ".property-list-details")))
numResults = int(driver.find_element_by_id('id_property_count').text.split(' ')[0])

soup = bs(driver.page_source, 'lxml')
properties = soup.select('.property-list-details')

resultsPerPage = 10
numPages = math.ceil(numResults/resultsPerPage)

results = []

results.append(getData(properties))

if numPages &gt; 1:
    for page in range(2, numPages + 1):
        url = varUrl.format(page)
        driver.get(url)
        data =  WebDriverWait(driver,10).until(EC.presence_of_element_located((By.CSS_SELECTOR, ".property-list-details")))
        soup = bs(driver.page_source, 'lxml')
        properties = soup.select('.property-list-details')
        results.append(getData(properties))
        if page &gt; 3:  #delete after testing
            break  #delete after testing

finalList = [item for sublist in results for item in sublist]
print(finalList)
</code></pre>
</div>
<span class="comment-copy">What are the expected outputs? Could you show us?</span>
<span class="comment-copy">could you indicate a couple of the cities you expect as inputs?</span>
<span class="comment-copy">@Yusufsn I would want to get and print the apartment, name, price, area, as much as information I can retrieve. The output can look something like this : <code>[{u'address': {u'address': u'325 North Park Street',                u'city': u'Brantford',                u'city_id': 332,                u'country': u'Canada',                u'country_code': u'CAN',                u'neighbourhood': u'',                u'postal_code': u'N3R 2X4',                u'province': u'Ontario',               },</code>   ...  and so on for each information available. Does this help?</span>
<span class="comment-copy">@QHarr I would only be interested in properties in CapeTown! Thank you for the help</span>
<span class="comment-copy">@Yusufsn I would be only interested for the properties in Capetown and retrieving as much as available information regarding them.</span>
<span class="comment-copy">Thank you very much this indeed helps! There was just a float range issue in the last for loop, but I was able to fix it!  Appreciated! @QHarr</span>
