<div class="post-text" itemprop="text">
<p>I am getting a bit of headache just because a simple looking, easy statement is throwing some errors in my face.</p>
<p>I have a json file called strings.json like this:</p>
<pre><code>"strings": [{"-name": "city", "#text": "City"}, {"-name": "phone", "#text": "Phone"}, ...,
            {"-name": "address", "#text": "Address"}]
</code></pre>
<p>I want to read the json file, just that for now. I have these statements which I found out, but it's not working:</p>
<pre><code>import json
from pprint import pprint

with open('strings.json') as json_data:
    d = json.load(json_data)
    json_data.close()
    pprint(d)
</code></pre>
<p>The error displayed on the console was this:</p>
<pre class="lang-none prettyprint-override"><code>Traceback (most recent call last):
File "/home/.../android/values/manipulate_json.py", line 5, in &lt;module&gt;
d = json.loads(json_data)
File "/usr/lib/python2.7/json/__init__.py", line 326, in loads
return _default_decoder.decode(s)
File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
obj, end = self.raw_decode(s, idx=_w(s, 0).end())
TypeError: expected string or buffer
[Finished in 0.1s with exit code 1]
</code></pre>
<p><strong>Edited</strong></p>
<p>Changed from <code>json.loads</code> to <code>json.load</code></p>
<p>and got this:</p>
<pre class="lang-none prettyprint-override"><code>Traceback (most recent call last):
File "/home/.../android/values/manipulate_json.py", line 5, in &lt;module&gt;
d = json.load(json_data)
File "/usr/lib/python2.7/json/__init__.py", line 278, in load
**kw)
File "/usr/lib/python2.7/json/__init__.py", line 326, in loads
return _default_decoder.decode(s)
File "/usr/lib/python2.7/json/decoder.py", line 369, in decode
raise ValueError(errmsg("Extra data", s, end, len(s)))
ValueError: Extra data: line 829 column 1 - line 829 column 2 (char 18476 - 18477)
[Finished in 0.1s with exit code 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.python.org/3/library/json.html#json.load" rel="noreferrer"><code>json.load()</code> method</a> (without "s" in "load") can read a file directly:</p>
<pre><code>import json

with open('strings.json') as json_data:
    d = json.load(json_data)
    print(d)
</code></pre>
<p>You were using the <a href="http://docs.python.org/3/library/json.html#json.loads" rel="noreferrer"><code>json.loads()</code> method</a>, which is used for <em>string</em> arguments only. </p>
<p>Edit:
The new message is a totally different problem. In that case, there is some invalid json in that file. For that, I would recommend running the file through a <a href="http://jsonlint.com/" rel="noreferrer">json validator</a>.</p>
<p>There are also solutions for fixing json like for example <a href="https://stackoverflow.com/questions/18514910/how-do-i-automatically-fix-an-invalid-json-string">How do I automatically fix an invalid JSON string?</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a copy of code which works fine for me</p>
<pre><code>import json

with open("test.json") as json_file:
    json_data = json.load(json_file)
    print(json_data)
</code></pre>
<p>with the data</p>
<pre><code>{
    "a": [1,3,"asdf",true],
    "b": {
        "Hello": "world"
    }
}
</code></pre>
<p>you may want to wrap your json.load line with a try catch because invalid JSON will cause a stacktrace error message.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is using <strong>with</strong> statement:</p>
<pre><code>with open('strings.json') as json_data:
    d = json.load(json_data)
    pprint(d)
</code></pre>
<p>The file is going to be implicitly closed already. There is no need to call <code>json_data.close()</code> again.</p>
</div>
<div class="post-text" itemprop="text">
<p>In python 3, we can use below method.</p>
<p><strong>Read from file and convert to JSON</strong></p>
<pre><code>import json

# Considering "json_list.json" is a json file

with open('json_list.json') as fd:
     json_data = json.load(fd)
</code></pre>
<p>or</p>
<pre><code>import json

json_data = json.load(open('json_list.json'))
</code></pre>
<p>Using <strong>with</strong> statement will automatically close the opened file descriptor. </p>
<p><strong>String to JSON</strong></p>
<pre><code>import json

json_data = json.loads('{"name" : "myName", "age":24}')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To add on this, today you are able to use pandas to import json:<br/>
<a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_json.html" rel="nofollow noreferrer">https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_json.html</a>
You may want to do a careful use of the orient parameter.</p>
</div>
<span class="comment-copy">Are you sure that the file contains valid JSON?</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/2835559/parsing-values-from-a-json-file-in-python">Parsing values from a JSON file in Python</a></span>
<span class="comment-copy">See also: <a href="http://stackoverflow.com/a/37795053/562769">Read &amp; Write example for JSON</a></span>
<span class="comment-copy">Your file is an invalid json format. Change it to:  <code>{"strings": [{"-name": "city", "#text": "City"}, {"-name": "phone", "#text": "Phone"}, ...,             {"-name": "address", "#text": "Address"}]}</code></span>
<span class="comment-copy">hm...I changed from json.loads to json.load but I get that nice msg.</span>
<span class="comment-copy">Ah, well the new message is a totally different problem. In that case, there is some invalid json in that file. For that, I would recommend running the file through a <a href="http://jsonlint.com/" rel="nofollow noreferrer">json validator</a>.</span>
<span class="comment-copy">got it! The file was missing EOF. The file was not correctly ended. I wouldn't notice that if it wasn't your good recommendation! Thanks!</span>
<span class="comment-copy">ubomb, if you can change you answer to me to mark it as accepted. Be free! I'll mark it.</span>
<span class="comment-copy">Please remove the json_data.close(). As mentioned, it will be called implicitly.</span>
<span class="comment-copy">Thanks @BonnieVarghese for pointing out. I corrected above</span>
<span class="comment-copy">@Zongjun : Please correct loads to json.load(json_data).</span>
<span class="comment-copy">to pretty-print, I had to use: <code>print(json.dumps(d,sort_keys=True,indent=2))</code></span>
<span class="comment-copy">This answer would be better if you add code examples as well as the url...</span>
