<div class="post-text" itemprop="text">
<p>The <code>rm</code> command allows you to do something like this:</p>
<pre><code>rm -rf --one-file-system /path/to/dir/
</code></pre>
<p>And it will error out (skipping removal) if the contents of that dir have other file systems mounted in them.</p>
<p>Is there a module in Python that allows me to specify a similar behavior? If not, what would be the alternative to enforce such a constraint?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no module that does this for you; you'll have to write it yourself.</p>
<p>But the <code>os</code> module provides everything you need to write it.*</p>
<p>First, <a href="http://docs.python.org/3/library/os.html#os.walk" rel="nofollow"><code>os.walk</code></a> can walk an entire directory tree. You can <a href="http://docs.python.org/3/library/os.html#os.stat" rel="nofollow"><code>os.stat</code></a> each directory and either skip those whose <code>st_dev</code> is different from the root's, or you can <a href="http://docs.python.org/3/library/os.path.html#os.path.ismount" rel="nofollow"><code>os.path.ismount</code></a> each directory and skip those that are true.</p>
<p>This is almost exactly what <code>rm</code> is doing under the covers, except that of course it's using <a href="http://man7.org/linux/man-pages/man3/fts.3.html" rel="nofollow"><code>fts</code></a> (or one of its predecessors, on older systems) rather than a Python function.</p>
<p>There are two tricky bits.</p>
<p>First, unlike <code>fts</code> and similar functions, <code>os.walk</code> doesn't stat the files (or, worse, it <em>does</em> stat the files, but doesn't give you the results), so you have to call <code>os.stat</code> explicitly on each <code>dirname</code>. (Or use a third-party module like <a href="https://github.com/benhoyt/scandir" rel="nofollow"><code>scandir</code></a>, <code>betterwalk</code>, <code>py-fts</code>, etc.)</p>
<p>Second, you have to go top-down to prune the walk (in top-down mode, if you remove dirs from the <code>dirnames</code> argument, <code>walk</code> will not recurse into them), but you have to go bottom-up to remove the files before removing the directories. With APIs like <code>fts</code>, which allow both pre-visiting and post-visiting in the same traversal, this isn't a problem, but <code>os.walk</code> makes you choose one or the other.</p>
<p>But this should be enough for you to get started on this. If you get stuck, you can always ask a new question.</p>
<hr/>
<p>* Well, <code>os</code> and <code>os.path</code>.</p>
</div>
<span class="comment-copy">check here: <a href="http://stackoverflow.com/questions/4453602/how-to-find-the-mountpoint-a-file-resides-on" title="how to find the mountpoint a file resides on">stackoverflow.com/questions/4453602/â€¦</a></span>
