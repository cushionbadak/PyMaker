<div class="post-text" itemprop="text">
<p>I am trying to return the last row from a csv file.  I am modifying another function that I wrote previously that returns the last line from a text file.  It seemed to work as expected at first, but now when I call the function it throws an error.</p>
<pre><code>reader.seek(0, os.SEEK_END)
</code></pre>
<pre class="lang-none prettyprint-override"><code>AttributeError: '_csv.reader' object has no attribute 'seek'
</code></pre>
<hr/>
<pre><code>import os
import csv
def getLastFile(filename):
    distance = 1024
    with open(filename,'rb') as f:
        reader = csv.reader(f)
        reader.seek(0, os.SEEK_END)
        if reader.tell() &lt; distance:
            reader.seek(0, os.SEEK_SET)
            lines = reader.readlines()
            lastline = lines[-1]
        else:
            reader.seek(-1 * distance, os.SEEK_END)
            lines = reader.readlines()
            lastline = lines[-1]

    return lastline
</code></pre>
<p>Can someone please help me modify my code?  I was pretty sure you could use seek in this way, maybe I'm mistaken?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a slight variation of the core concept in the accepted answer to the question <a href="https://stackoverflow.com/questions/970983/have-csv-reader-tell-when-it-is-on-the-last-line">Have csv.reader tell when it is on the last line</a> applied to your variation of the problem. Since each row is potentially a different length, there's really no way around having to read the whole file.</p>
<pre><code>import csv

def get_last_row(csv_filename):
    with open(csv_filename, 'r') as f:
        lastrow = None
        for lastrow in csv.reader(f): pass
        return lastrow
</code></pre>
<p><strong>Update</strong></p>
<p>Here's a simpler and likely faster way to do it using a <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow noreferrer"><code>collections.deque</code></a>. I got the idea from one of the answers to the question <a href="https://stackoverflow.com/questions/20377965/how-to-read-an-output-line-containing-a-list-of-integers-produced">How to read an output line containing a list of integers produced</a>.</p>
<pre><code>from collections import deque
import csv

def get_last_row(csv_filename):
    with open(csv_filename, 'r') as f:
        try:
            lastrow = deque(csv.reader(f), 1)[0]
        except IndexError:  # empty file
            lastrow = None
        return lastrow
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>csv reader not support seek, so you can get csv file last line as text file, then process last line as csv.
In your code, if last line length &gt; distance, then will get only part of last line.</p>
<pre><code>import os

def get_last_line(fin):
    line_len = 80
    fin.seek(0, os.SEEK_END)
    file_size = fin.tell()
    while True:
        line_len = min(line_len * 2, file_size)
        fin.seek(-line_len, os.SEEK_END)
        lines = f.readlines()
        if len(lines) &gt; 1 or line_len == file_size:
            return lines[-1]
</code></pre>
<p>then read csv:</p>
<pre><code>import csv

print ', '.join(csv.reader([last_line]).next())
</code></pre>
</div>
<span class="comment-copy">Could you give us the csv file to work with too?</span>
<span class="comment-copy">You can <code>seek</code> and <code>tell</code> on <code>file</code> objects, but not on <code>csv.reader</code> objects as far as I can tell. I'm not sure there is a good way to do this in conjunction with <code>csv.reader</code>.</span>
<span class="comment-copy">I just made a small .csv file with 20 or so rows and 5 columns filled with random numbers.  The code (I believe) should work with a generic .csv file, returning the last row, so I'm not sure it would help if I posted it, but I could if you want.  Thanks!</span>
<span class="comment-copy">Darn, that's frustrating!</span>
<span class="comment-copy">I don't think this is a duplicate - the target refers to "How do I tell I'm on the last line" - this question is "How do I get the last line"... they're not synonymous...</span>
