<div class="post-text" itemprop="text">
<p>for removing  all punctuations from a string, x.
i want to use re.findall(), but i've been struggling to know what to write <strong>in</strong> it..
i know that i can get <strong>all</strong> the punctuations by writing:</p>
<pre><code>import string
y = string.punctuation
</code></pre>
<p>but if i write:</p>
<pre><code>re.findall(y,x) 
</code></pre>
<p>it says:</p>
<pre><code> raise error("multiple repeat")
 sre_constants.error: multiple repeat
</code></pre>
<p>can someone explain what exactly we should write in <code>re.findall</code> function?</p>
</div>
<div class="post-text" itemprop="text">
<p>You may not even need RegEx for this. You can simply use <code>translate</code>, like this</p>
<pre><code>import string
print data.translate(None, string.punctuation)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Several characters in <code>string.punctuation</code> have special meaning in regular expression. They should be escaped.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; string.punctuation
'!"#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~'
&gt;&gt;&gt; import re
&gt;&gt;&gt; re.escape(string.punctuation)
'\\!\\"\\#\\$\\%\\&amp;\\\'\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;\\&lt;\\=\\&gt;\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~'
</code></pre>
<p>And if you want to match any one of them, use character class (<code>[...]</code>)</p>
<pre><code>&gt;&gt;&gt; '[{}]'.format(re.escape(string.punctuation))
'[\\!\\"\\#\\$\\%\\&amp;\\\'\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;\\&lt;\\=\\&gt;\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~]'
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; pattern = '[{}]'.format(re.escape(string.punctuation))
&gt;&gt;&gt; re.sub(pattern, '', 'Hell,o World.')
'Hello World'
</code></pre>
</div>
<span class="comment-copy">FYI, In Python 3, <a href="http://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a> does not take <code>delete</code> parameter. should be converted to <code>bytes</code>: <code>data.encode().translate(None, string.punctuation.encode()).decode()</code></span>
<span class="comment-copy">what is data? it's my original string?</span>
<span class="comment-copy">Yes, <code>data</code> in this example should be a name referring to your original string. <code>translate</code> is a method available on any string object. Its behavior is described here: <a href="http://docs.python.org/2/library/stdtypes.html#str.translate" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#str.translate</a> - in this instance, it is accepting a <code>None</code> argument for character replacements and a constant defining characters to delete.</span>
<span class="comment-copy">@falsetru: for this operation to handle non-ASCII text, you would in any case have to account for the fact that <code>string.punctuation</code> doesn't contain all the punctuation characters, only the ASCII ones. So you'd want something like <code>''.join(ch for ch in data if unicodedata.category(ch)[0] != 'P')</code>. Just encoding everything will fail to remove non-ASCII punctuation.</span>
