<div class="post-text" itemprop="text">
<pre><code>Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm 3.0.1\helpers\pydev\pydevd.py", line 2, in &lt;module&gt;
    from django_debug import DjangoLineBreakpoint
  File "D:\Program Files\JetBrains\PyCharm 3.0.1\helpers\pydev\django_debug.py", line 3, in &lt;module&gt;
    from pydevd_comm import CMD_SET_BREAK
  File "D:\Program Files\JetBrains\PyCharm 3.0.1\helpers\pydev\pydevd_comm.py", line 107, in &lt;module&gt;
    import pydevconsole
  File "D:\Program Files\JetBrains\PyCharm 3.0.1\helpers\pydev\pydevconsole.py", line 6, in &lt;module&gt;
    from code import compile_command
ImportError: cannot import name compile_command
</code></pre>
<p>My Code is the simple webpy example，there is no problem with it。</p>
</div>
<div class="post-text" itemprop="text">
<p>Most likely you've created a module named <code>code.py</code>.</p>
<p>If you do this, it hides the stdlib module <a href="http://docs.python.org/3/library/code.html" rel="noreferrer"><code>code</code></a>, so anything that needs to use that module will find your module instead.</p>
<p>And the reason you get this error is that your <code>code</code> module doesn't have anything named <a href="http://docs.python.org/3/library/code.html#code.compile_command" rel="noreferrer"><code>compile_command</code></a>.</p>
<p>In general, you always want to avoid giving your modules the same name as anything in the <a href="http://docs.python.org/3/library/index.html" rel="noreferrer">stdlib</a>, or any site-packages you've installed. You can work around this by, e.g., organizing your modules into packages instead of leaving them all at the top level, but it's easier to just not re-use the names.</p>
</div>
