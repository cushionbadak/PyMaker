<div class="post-text" itemprop="text">
<p>On reading in the Python 3.3 documentation I noticed the entry about a BufferError exception: "Raised when a buffer related operation cannot be performed.". Now I'm wondering in which cases code could throw this error to determine if it is due to a programming error or more like a sort of a system error. Has somebody an example for this exception?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a list of the functions that might raise a BufferError:</p>
<p><a href="http://docs.python.org/3.4/c-api/buffer.html#buffer-related-functions" rel="nofollow">http://docs.python.org/3.4/c-api/buffer.html#buffer-related-functions</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Most exceptions are actually more applicable to C-code than Python code using the buffer protocol; see the <a href="http://docs.python.org/3/c-api/buffer.html#bufferobjects" rel="nofollow">C API buffer protocol</a>.</p>
<p>From the 3.3 source code, I see the following error messages being used for <code>BufferError</code>:</p>
<p><em><code>memoryview</code></em>:</p>
<ul>
<li><em>underlying buffer is not writable</em> for a read-only buffer.</li>
<li><em>writable contiguous buffer requested for a non-contiguous object.</em> for a memory view that is not using the right contiguous format</li>
<li><em>memoryview has %zd exported buffer%s</em> on release; this would, IIRC, indicate that the reference count off.</li>
<li><em>memoryview: underlying buffer is not writable</em> when creating a writable <code>memoryview</code> from a read-only buffer. Should not happen from Python code.</li>
<li><em>memoryview: underlying buffer is not C-contiguous</em> when passing in a non-contiguous buffer object but flags requested one. If strides are used and the buffer is not C-contiguous, this exception is also thrown.</li>
<li><em>memoryview: underlying buffer is not Fortran contiguous</em>, ditto.</li>
<li><em>memoryview: underlying buffer is not contiguous</em>, ditto.</li>
<li><em>memoryview: underlying buffer requires suboffsets</em>: flags indicate that a suboffset buffer is required but the buffer passed is not.</li>
<li><em>memoryview: cannot cast to unsigned bytes if the format flag is present</em>: unsigned bytes and a specified format do not mix.</li>
</ul>
<p><em><code>bytearray</code></em>:</p>
<ul>
<li><em>Existing exports of data: object cannot be re-sized</em>: attempting to resize a <code>bytearray</code> that has other views on it.</li>
</ul>
<p>There is also a undocumented <code>PyObject_CopyData</code> C-API method that'll throw this exception with <em>destination is too small to receive data from source</em> if the destination buffer is too small.</p>
</div>
<span class="comment-copy">As I'm seeing it does this mean that only code written in a higher language like an external library or the Python interpreter itself can throw this exception due to an internal error?</span>
