<div class="post-text" itemprop="text">
<p>I am trying to figure out how to append multiple values to a list in Python. I know there are few methods to do so, such as manually input the values, or pur the append operation in a <code>for</code> loop, or <code>append</code>and <code>extend</code> functions. </p>
<p>However, I wonder if there is a more neat way to do so? Maybe a certain package or function?</p>
<p>I am day 1 to Python, so please forgive me if I asked naive question.</p>
<p>Thank you very much. :)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types" rel="noreferrer">sequence method <code>list.extend</code></a> to extend the list by multiple values from any kind of iterable, being it another list or any other thing that provides a sequence of values.</p>
<pre><code>&gt;&gt;&gt; lst = [1, 2]
&gt;&gt;&gt; lst.append(3)
&gt;&gt;&gt; lst.append(4)
&gt;&gt;&gt; lst
[1, 2, 3, 4]

&gt;&gt;&gt; lst.extend([5, 6, 7])
&gt;&gt;&gt; lst.extend((8, 9, 10))
&gt;&gt;&gt; lst
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

&gt;&gt;&gt; lst.extend(range(11, 14))
&gt;&gt;&gt; lst
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
</code></pre>
<p>So you can use <code>list.append()</code> to append <em>a single</em> value, and <code>list.extend()</code> to append <em>multiple</em> values.</p>
</div>
<div class="post-text" itemprop="text">
<p>Other than the <code>append</code> function, if by "multiple values" you mean another list, you can simply concatenate them like so.</p>
<pre><code>&gt;&gt;&gt; a = [1,2,3]
&gt;&gt;&gt; b = [4,5,6]
&gt;&gt;&gt; a + b
[1, 2, 3, 4, 5, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you take a look at the <a href="http://docs.python.org/2/tutorial/datastructures.html#more-on-lists" rel="noreferrer">official docs</a>, you'll see right below <code>append</code>, <code>extend</code>.  That's what your looking for.</p>
<p>There's also <a href="http://docs.python.org/2.7/library/itertools.html#itertools.chain" rel="noreferrer"><code>itertools.chain</code></a> if you are more interested in efficient iteration than ending up with a fully populated data structure.</p>
</div>
<span class="comment-copy">Have you found the <a href="http://docs.python.org/2/library/stdtypes.html#mutable-sequence-types" rel="nofollow noreferrer">list documentation</a> yet?</span>
<span class="comment-copy">You said you <i>know there are a few methods to do so</i>, but don't show what you tried, or explain why the methods you aleady know aren't good enough.</span>
<span class="comment-copy">Please define <i>more neat than <code>extend()</code></i>.</span>
<span class="comment-copy">@FrédéricHamidi <code>more neat == additional package dependency</code>, of course!</span>
<span class="comment-copy">A bit complicated to introduce generators to someone on day 1 of using Python.</span>
<span class="comment-copy">@DanielRoseman My point is that the values can come from <i>any</i> kind of iterable sequence.</span>
<span class="comment-copy">Note that extend do not keep the structure of the element you add compared to <code>append()</code>. With your example using append, you would get <code>[1, 2, 3, 4, [5, 6, 7], (8, 9, 10), range(11, 14)]</code>. <b>Python 3</b></span>
