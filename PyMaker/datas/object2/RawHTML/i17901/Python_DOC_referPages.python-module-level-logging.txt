<div class="post-text" itemprop="text">
<p>Can I use ContextFilters in python logging to change loglevels based on modulenames. So something like </p>
<pre><code>class ContextFilter(logging.Filter):
  CMDID_cf="IAMTEST1"
  def __init__(self, CMDID1): 
  self.CMDID_cf=CMDID1

  def filter(self,record):
    record.CMDID=self.CMDID_cf
    return True

  def moduleFilter(self):
     //something like below//
     if(modulename=="something")
     setLevel(logging.ERROR)

  #MAIN
  **define logger**
  obj=ContextFilter()
  logging.addFilter(obj.modukeFilter)
</code></pre>
<p>In the python documentation I haven't really found out anything about this so any help pointing to this would be great.</p>
</div>
<div class="post-text" itemprop="text">
<p>The appropriate way, which is documented <a href="http://docs.python.org/3/howto/logging.html#advanced-logging-tutorial" rel="nofollow">here</a>, is to use module-level loggers named with <code>__name__</code> and to then set their levels as desired in the logging configuration. There's no need to use a <code>Filter</code> for this.</p>
</div>
<span class="comment-copy">Hi Vinay,I went through your complete documentation and I agree that its the best way to implement. But due to the existing stupid structure of logging in my application (which obviously I cant change and its quite extensively used throughout) I was trying to find out an alternative method.  Please help me if the method I am suggesting to use leads me anywhere towards a good solution</span>
