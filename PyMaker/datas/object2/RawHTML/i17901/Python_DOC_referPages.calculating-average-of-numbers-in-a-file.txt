<div class="post-text" itemprop="text">
<p>So what I have to do is figure out how to ask a user for a a text file and output the average of all the numbers. By tinkering around I have figured out how to find the average of a list i made but not sure how to do a list that the user give me. This is what I have right now:</p>
<pre><code>with open('average', 'wt') as myFile:
    myFile.write('3\n')
    myFile.write('45\n')
    myFile.write('83\n')
    myFile.write('21\n')

with open('average', 'rt') as myFile:
    total, n = 0, 0
    for line in myFile:
        total += int(line)
        n += 1
    print(float(total) / n)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this?</p>
<pre><code>import string

fileName = raw_input("What file name: ")
lines = []
try:
    file = open(fileName)
    lines = file.readlines()
    file.close()
except:
    print "Unable to open file"
sum = 0
values = 0
if(len(lines) &gt; 0):
    for line in lines:
        value = 0
        try:
            value = int(string.strip(line))
        except ValueError:
            pass
        if(value != 0):
            sum = sum + value
            values += 1
    print "Average = %f for %d lines, sum = %f"%(sum/values,values,sum)
else:
    print "No lines in the file"
</code></pre>
<p>NOTE:  This assumes one number per line.  It will not count blank lines or lines that have text.  Other than that, junk on the lines or a bad file should not cause an exception, etc.  </p>
<p>This was the test file (there are blank lines):</p>
<pre><code>10
20
30
40
50
23
5



asdfadfs

s
</code></pre>
<p>And the output:</p>
<pre><code>What file name: numbers.txt
Average = 25.000000 for 7 lines, sum = 178.000000
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Supposing that there is one number on each line of the file:</p>
<pre><code>with open(input('Filename: '), 'r') as f:
    numbers = [int(a.strip()) for a in f]
print('Average is {}'.format(sum(numbers)/len(numbers)))
</code></pre>
</div>
<span class="comment-copy">Why do you think that wouldn't work with a user's file. Is it a different format?</span>
<span class="comment-copy">If you don't know how to get user input, check out the <a href="http://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input</code></a> function.</span>
<span class="comment-copy">Usually you want your try clause to be small, and your except to be specific...</span>
<span class="comment-copy">And close files (or use <code>with</code>), replace <code>if(len(lines)&gt;0)</code> with <code>if lines</code>, etc, etc.</span>
<span class="comment-copy">Cleaned up a bit per comments.  I'll leave handling the file exceptions as an exercise to for the reader.</span>
