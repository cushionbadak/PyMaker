<div class="post-text" itemprop="text">
<p>Okay, I have a class which has 10 objects, these have the attributes self.planet, self.distance, self.distsquared, self.radius, self.diamater where distance/distsquared/radius/diamater are all integers. And I would like to make a function where the user searches for a planet name, and then changes one of the attributes.</p>
<p>For example, the user should input the name "Jupiter", which would then find the object, and the next row of the function would ask the user to add a certain sum to the attribute self.distance.</p>
<p>Currently the first class is set up as following:</p>
<pre><code>class Planets(): 
       def __init__(self, planetName, dist, radius, diameter): 
               self.planetName= planetName 
               self.dist= dist 
               self.radius= radius 
               self.diameter= diameter
</code></pre>
<p>This is then retrieved through a <code>planetObjects=[Planets(*p) for p in planetList]</code> This is the object-list I would like to turn into a dictionary so the user can search for planetName, and alter the distance </p>
<p>Some users suggested I use a dictionary for this, but I have no idea how to go about doing that. Currently my class turns a list of lists into a list of objects, these objects have these attributes that the user is supposed to be able to change by searching for the Planet name, and then changing one of its attributes. </p>
<p>The class is currently just a simple class which has a constructor and a <code>__str__</code> function</p>
<p>Meaning, function starts, asks the user something like "Which planet would you like to alter?", the user inputs "Jupiter" and the program asks, "How has the distance to Jupiter changed?" where the user adds for example 450 or so.</p>
<p>The current code I have is a function which opens an infile and turns it into a list of lists. This list is then turned into objects. I turned it into objects to easily be able to sort it and add new values based on previous values. But at this point the user also has to be able to alter values by searching for a planet name and then changing one of the attributes - this is where I am lost and need help!</p>
<p>Is there any way to do this? Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>In psuedocode:</p>
<pre><code>class Planet(object):
    # Define your planet class here
    # any attributes that you do NOT need the user to be able to edit should start with _

Planets = [Planet('Mercury'.....
#or better
PlanetDict = {'Mercury':Planet(....

which = PromptUserForPlanet()

p = PlanetDict.get(which) # or find and return it if you didn't use a dictionary

for att in dir(p):
   if not att.startswith('_'):
      input = raw_input('%s: (%s)' % (attr, repr(getattr(p,attr)))
      if len(input) &gt; 0:
         setattr(p,att,input) # You may wish to do some type conversion first
</code></pre>
<p>Since p is a reference to the dictionary entry you will change the main object.</p>
</div>
<div class="post-text" itemprop="text">
<p>Given your class <code>Planets</code>, this may be solved like this. I'm assuming that <code>planetList</code> is structured like in this code. If it is not, you may have to alter the code a bit.</p>
<pre><code>def increment_dist(planets):
    name = raw_input('Please enter planet name')
    try:
        planets[name].dist += int(raw_input('Increment distance by (integer)'))
    except KeyError:
        print('No planet called {}'.format(name))
    except ValueError:
        print('That is not an integer')

planetList = [('Tellus', 1, 2, 4), ('Mars', 1, 3, 9)]
planet_dict = {name: Planets(name, dist, radius, diameter) for 
               name, dist, radius, diameter in planetList}

increment_dist(planet_dict)
</code></pre>
</div>
<span class="comment-copy">can you post some code which you have written for this ?</span>
<span class="comment-copy">To understand data types better, you can read about dictionaries in the <a href="http://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">python tutorial</a></span>
<span class="comment-copy">I would suggest avoiding repeat information, e.g. only store one of radius and diameter as they are basically the same information with a conversion between them, *2 in that case, same for dist and squared_dist there is a simple conversion **2 so no need to store both you can always have accessors that does the conversion for you.</span>
<span class="comment-copy">See my updated answer.</span>
<span class="comment-copy">Thanks a lot. But I don't quite understand, I have a list of objects, called planetObjects, which was made from a list of lists. So basically I have to turn that list of Objects into a Dictionary (how?) and then access it through some function which?   Really appreciate your help!</span>
<span class="comment-copy">@user2982959 What kind of objects are in <code>planetObjects</code>? Strings, custom class objects, arrays?</span>
<span class="comment-copy">Its just a bunch of objects which all have the first attribute set to a string, and the other attributes are all ints.</span>
<span class="comment-copy">You can change your list of planets to a dictionary with <code>PlanetDict = {i.Name, i for i in planetObjects}</code> assuming that you have a named member called Name in each object.</span>
<span class="comment-copy">For some reason I am getting an Invalid syntax error using this to make my dictionary, trying to use ourDict= {x.planetName, x for x in planetObjects}. But getting an invalid syntax, hovering over the "for"</span>
<span class="comment-copy">That is somewhat of how I built my universe.  The only problem is that the user has to be able to search for a specific planet, say Tellus, and add some integer to the distance. So the main window asks to user to search for a planet, and then asks the user to add a number, which would then alter the planets distance, without changing the other variables.</span>
<span class="comment-copy">I'm sorry, one last question. If I already have a list of objects and want to turn all of them into the dictionary-class. How can I easily do this? Whhen I just did like the first 2 methods of your Universe class, and I try to print the dictionary, it says "None", as if the dictionary is empty.</span>
<span class="comment-copy">class Planets():     def __init__(self, planetName, dist, radius, diameter):         self.planetName= planetName         self.dist= dist         self.radius= radius         self.diameter= diameter  This is then retrieved through a planetObjects=[Planets(*p) for p in planetList]  This is the object-list I would like to turn into a dictionary so the user can search for planetName, and alter the distance</span>
