<div class="post-text" itemprop="text">
<p>First, I apologize, I am an extreme beginner, so I will probably sound ignorant.</p>
<p>I have 5 word sets. 4 of them are imported through csv, the other one is created from user input. I would like to find the intersection between the input set and each one of the other sets. Then award points based on how many intersections there are.</p>
<p>For example, I would like to find the intersections between "set_1" and "input_set". For each of the intersections add 1 to user_score. Then, find the intersection between "set_2" and "input_set" and for each of those intersections add 2 to user_score. And so on up to add 4 per intersection.</p>
<p>Would I use an if loop or a for loop?</p>
<p>Something like this?</p>
<pre><code>user_score = 0

for x in intersect(input_set, set_1):
    user_score += 1
for x in intersect(input_set, set_2):
    user_score += 2
for x in intersect(input_set, set_3):
    user_score += 3
for x in intersect(input_set, set_4):
    user_score += 4
</code></pre>
<p>or like this?</p>
<pre><code>if intersect(input_set, set_1):
    user_score += 1
elif intersect(input_set, set_2):
    user_score += 2
elif intersect(input_set, set_3):
    user_score += 3
elif intersect(input_set, set_4):
    user_score += 4
</code></pre>
<p>or am I way off? Any help is appreciated. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>This:</p>
<pre><code>for intersect(input_set, set_1):
</code></pre>
<p>… isn't how for loops work. You need a loop variable, like this:</p>
<pre><code>for thing_in_both_sets in intersect(input_set, set_1):
    user_score += 1
</code></pre>
<hr/>
<p>If you don't care what the "thing" is, you can call it <code>_</code>. This doesn't have any special meaning, but conventionally it implies that it's a useless dummy variable:</p>
<pre><code>for _ in intersect(input_set, set_1):
    user_score += 1
</code></pre>
<hr/>
<p>Meanwhile, if you're using the built-in <code>set</code> type, there's no function called <code>intersect</code>, but there's a <em>method</em> called <code>intersection</code>, which you can use like this:</p>
<pre><code>for _ in input_set.intersection(set_1):
</code></pre>
<p>You can also spell this as the <code>&amp;</code> operator.</p>
<hr/>
<p>However, if you think about it, there's a much quicker way to do this: instead of looping, just get the <code>len</code> of the intersection. So:</p>
<pre><code>user_score += len(input_set &amp; set_1)
user_score += len(input_set &amp; set_2) * 2
# etc.
</code></pre>
<hr/>
<p>One last refinement: Instead of having four separate variables for the four sets, why not just have a list of sets? Do you also have four copied-and-pasted-with-slight-variations chunks of code to create the separate variables? If so, get rid of them. Then you can do this:</p>
<pre><code>user_score = 0
for multiplier, user_set in enumerate(user_sets, 1):
    user_score += len(input_set &amp; user_set) * multiplier
</code></pre>
<p>Even if you have the separate variables, you can always create <code>user_set</code> on the fly, like this:</p>
<pre><code>user_sets = (set_1, set_2, set_3, set_4)
</code></pre>
<p>But it would probably be better to just have a list of the sets in the first place, instead of four separate variables. See <a href="http://stupidpythonideas.blogspot.com/2013/05/why-you-dont-want-to-dynamically-create.html" rel="nofollow">this blog post</a> and <a href="http://nedbatchelder.com/blog/201112/keep_data_out_of_your_variable_names.html" rel="nofollow">this one</a> for more discussion on that.</p>
</div>
<span class="comment-copy">Ifs aren't loops. Did you attempt to run the code in either block? As @Abernat has pointed out, your code is littered with syntax errors, which suggests not. The first step in solving your code problems is <i>running your own code</i>.</span>
<span class="comment-copy">@user2825385: Yes, but you don't need those extra parentheses around the <code>len</code>, and it might be more readable with <code>&amp;</code> instead of <code>.intersection</code>—at which point it's basically exactly the same as my middle version.</span>
<span class="comment-copy">Hmm okay, awesome! So, I'm having trouble seeing how the list of sets would be able to differentiate between set_1 and set_2 to be able to award 1 point for set_1 and 2 for set_2 etc..</span>
<span class="comment-copy">That's what I used <a href="http://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> for, so we get the <i>index</i> of each set, along with the set itself. This is one of the most useful functions in Python—it gets rid of so many <code>for i in range(len(foo))</code> loops and similar nonsense that you have to write in most other languages.</span>
<span class="comment-copy">ahh! awesome okay, thank you so much! I will use that</span>
