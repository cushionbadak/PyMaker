<div class="post-text" itemprop="text">
<p>I want to a fixed length list-like container, it should have a sorted()-like function that I can use to sort it,I think there should also a function I can use it to detect whether the numbers of items in it reaches the length of the container , because if the numbers of items in it reaches the length(fixed) of the container,I want to process the data in it .Is there a container in Python like this ?If not, what base container should be used to implement such container?</p>
<p>the container is similar to queue ,but queue doesn't have a sort  function </p>
</div>
<div class="post-text" itemprop="text">
<p>You can make your own container class if you want. Below is a very simplistic sample that may point you in the right direction.</p>
<pre><code>class MyContainer:
    def __init__(self, size, key=None, func=None):
        self.size = size
        self.items = []
        self.key = key
        self.func = func

    def add_item(self, item):
        if not self.is_full():
            self.items.append(item)
        else:
            # Handle cases where the container is full, by raising an exception
            # or printing an error message
            #raise Exception('The container is full')
            print("Container is full")
            return
        if len(self.items) == self.size:
            self.sort_items(self.key)
            self.process_items(self.sort)

    def is_full(self):
        return len(self.items) &gt;= self.size

    def sort_items(self, key):
        self.items = sorted(self.items, key=key)

    def process_items(self, func):
        self.items = map(func, self.items)
</code></pre>
<p>Calling this function with <code>key=lamba x: len(x)</code> and <code>func=str.lower</code> will sort the list depending on the length of your items and convert all strings to lowercase.</p>
<pre><code>&gt;&gt; c = MyContainer(3, key=lambda x: len(x), func=str.lower)
&gt;&gt; c.add_item('a')
&gt;&gt; c.add_item('aBcD')
&gt;&gt; c.add_item('ab')
&gt;&gt; print(c.items)

['a', 'ab', 'abcd']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like a <a href="http://docs.python.org/3/library/queue.html#queue.PriorityQueue" rel="nofollow">PriorityQueue</a> fits the spec. This allows items to be added to the queue in any order (up to a maximum), but they are then taken off the queue in sorted order:</p>
<pre><code>import queue, random

items = list(range(15))
random.shuffle(items)

pq = queue.PriorityQueue(5)

while items:
    pq.put_nowait(items.pop())
    if pq.full():
        print('processing...')
        while not pq.empty():
            print(pq.get_nowait())
        print()
</code></pre>
<p>Output:</p>
<pre><code>processing...
0
4
5
8
14

processing...
1
2
10
11
13

processing...
3
6
7
9
12
</code></pre>
</div>
<span class="comment-copy">All in all,I want to first fill the container, then sort it and process all the contents in it</span>
<span class="comment-copy">Is there any reason basic lists don't meet your needs? You can test the length of the list as you write to it.</span>
<span class="comment-copy">In what way is it supposed to be "queue-like"?</span>
<span class="comment-copy">@PeterDeGlopper it could have fixed length but without any content in it.</span>
<span class="comment-copy">@HughBothwell PeterDeGlopper it could have fixed length but without any content in it,there should also a function I can use it to detect whether the numbers of items in it reaches the length of the container .</span>
<span class="comment-copy">thanks for you great work !but I found queue could also be used in such case , &gt;&gt;&gt; import queue  &gt;&gt;&gt; a=queue.Queue(10)  &gt;&gt;&gt; a.put("asdf")  &gt;&gt;&gt; a.put("qwer")  &gt;&gt;&gt; a.put("zxcv")  &gt;&gt;&gt; a.put("1234")  &gt;&gt;&gt; sorted(a.queue)  ['1234', 'asdf', 'qwer', 'zxcv']</span>
