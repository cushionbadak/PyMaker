<div class="post-text" itemprop="text">
<p>I am working on a school project to make a video club management program and I need some help. Here is what I am trying to do:
I have a txt file with the client data, in which there is this:</p>
<pre><code>clientId:clientFirstName:clientLastName:clientPhoneNumber
</code></pre>
<p>The <code>:</code> is the separator for any file in data.</p>
<p>And in the movie title data file I got this:</p>
<pre><code>movieid:movieKindFlag:MovieName:MovieAvalaible:MovieRented:CopieInTotal
</code></pre>
<p>where it is going is that in the rentedData file there should be that:</p>
<pre><code>idClient:IdMovie:DateOfReturn
</code></pre>
<p>I am able to do this part. Where I fail due to lack of experience:
I need to actually make a container with 3 levels for the movie data file because I want to track the available and rented numbers (changing them when I rent a movie and when I return one).</p>
<p>The first level represents the whole file, calling it will print the whole file, the second level should have each line in a container, the third one is every word of the line in a container.</p>
<p>Here is an example of what I mean:</p>
<pre><code>dataMovie = [[[movie id],[movie title],[MovieAvailable],[MovieRented],[CopieInTotal]],[[movie id],[movie title],[MovieAvailable],[MovieRented],[CopieInTotal]]
</code></pre>
<p>I actually know that I can do this for a two layer in this way:</p>
<pre><code>DataMovie=[]
    MovieInfo = open('Data_Movie', 'r')
    #Reading the file and putting it into a container
    for ligne in MovieInfo:
        print(ligne, end='')
        words = ligne.split(":")
        DataMovie.append(words)
    print(DataMovie)

    MovieInfo.close()
</code></pre>
<p>It separates all the words in to this:</p>
<pre><code>[[MovieID],[MovieTitle],[movie id],[movie title],[MovieAvailable],[MovieRented],[CopieInTotal], [MovieID],[MovieTitle],[movie id],[movie title],[MovieAvailable],[MovieRented],[CopieInTotal]]
</code></pre>
<p>Each line is in the same container (second layer) but the lines are not separated, not very helpful since I need to change a specific information about the quantity available and the rented one to be able to not rent the movie if all of the copies are rented.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you should be using dictionaries to store your data. Rather then just embedding lists on top of one another.</p>
<p>Here is a quick page about dictionaries. 
<a href="http://www.network-theory.co.uk/docs/pytut/Dictionaries.html" rel="nofollow">http://www.network-theory.co.uk/docs/pytut/Dictionaries.html</a> </p>
<p>So your data might look like</p>
<pre><code>movieDictionary = {"movie_id":234234,"movie title":"Iron
   Man","MovieAvailable":Yes,"MovieRented":No,"CopieInTotal":20}
</code></pre>
<p>Then when you want to retrieve a value.</p>
<p><code>movieDictionary["movie_id"]</code></p>
<p>would yield the value.</p>
<pre><code>234234
</code></pre>
<p>you can also embed lists inside of a dictionary value.</p>
<p>Does this help answer you question?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have to use a txt file, storing it in xml format might make the task easier. Since there's already are several good xml parsers for python.</p>
<p>For example <a href="http://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow">ElementTree</a>:</p>
<p>You could structure you'r data like this:</p>
<pre><code>&lt;?xml version="1.0"?&gt;
&lt;movies&gt;
&lt;movie id = "1"&gt;
    &lt;type&gt;movieKind&lt;/type&gt;
    &lt;name&gt;firstmovie&lt;/name&gt;
    &lt;MovieAvalaible&gt;True&lt;/MovieAvalaible&gt;
    &lt;MovieRented&gt;False&lt;/MovieRented&gt;
    &lt;CopieInTotal&gt;2&lt;/CopieInTotal&gt;
&lt;/movie&gt;
&lt;movie id = "2"&gt;
    &lt;type&gt;movieKind&lt;/type&gt;
    &lt;name&gt;firstmovie2&lt;/name&gt;
    &lt;MovieAvalaible&gt;True&lt;/MovieAvalaible&gt;
    &lt;MovieRented&gt;False&lt;/MovieRented&gt;
    &lt;CopieInTotal&gt;3&lt;/CopieInTotal&gt;
&lt;/movie&gt;
&lt;/movies&gt;
</code></pre>
<p>and then access and modify it like this: </p>
<pre><code>import xml.etree.ElementTree as ET

tree = ET.parse('data.xml')
root = tree.getroot()

search = root.findall('.//movie[@id="2"]')
for element in search:
    rented = element.find('MovieRented')
    rented.text = "False"

tree.write('data.xml')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you are actually doing is creating three databases:</p>
<ul>
<li>one for clients</li>
<li>one for movies</li>
<li>one for rentals</li>
</ul>
<p>A relatively easy way to read text files with one record per line and a <code>:</code> separator is to create a <a href="http://docs.python.org/3.3/library/csv.html" rel="nofollow"><code>csv.reader</code></a> object. For storing the databases into your program I would recommend using lists of <a href="http://docs.python.org/3.3/library/collections.html#collections.namedtuple" rel="nofollow"><code>collections.namedtuple</code></a> objects for the clients and the rentals.</p>
<pre><code>from collections import namedtuple
from csv import reader

Rental = namedtuple('Rental', ['client', 'movie', 'returndate'])
with open('rentals.txt', newline='') as rentalsfile:
    rentalsreader = csv.reader(rentalsfile, delimiter=':')
    rentals = [Rental(int(row[0]), int(row[1]), row[2]) for row in rentalsreader]
</code></pre>
<p>And a list of dictionaries for the movies:</p>
<pre><code>with open('movies.txt', 'rb', newline='') as moviesfile:
    moviesreader = csv.reader(moviesfile, delimiter=':')
    movies = [{'id': int(row[0]), 'kind', row[1], 'name': row[2],
              'rented': int(row[3]), 'total': int(row[4])}  for row in moviesreader]
</code></pre>
<p>The main reason for using a list of dictionaries for the movies is that a named tuple is a tuple and therefore immutable, and presumably you want to be able to change <code>rented</code>.</p>
<p>Referring to your comment on Daniel Rasmuson's answer, since you only put the <em>values</em> of the fields in the text files, you will have to hardocde the names of the fields into your program one way or another.</p>
<p>An alternative solution is to store the date in <a href="http://docs.python.org/3.3/library/json.html" rel="nofollow">json</a> files. Those are easily mapped to Python data structures.</p>
</div>
<div class="post-text" itemprop="text">
<p>This might be what you we're looking for</p>
<pre><code>#Using OrderedDict so we always get the items in the right order when iteration. 
#So the values match up with the categories\headers
from collections import OrderedDict as Odict

class DataContainer(object):

    def __init__(self, fileName):
        '''
        Loading the text file in a list. First line assumed a header line and is used to set dictionary keys 
        Using OrderedDict to fix the order or iteration for dict, so values match up with the headers again when called
        '''
        self.file = fileName
        self.data = []
        with open(self.file, 'r') as content:
            self.header = content.next().split('\n')[0].split(':')
            for line in content:
                words = line.split('\n')[0].split(':')
                self.data.append(Odict(zip(self.header, words)))

    def __call__(self):
        '''Outputs the contents as a string that can be written back to the file'''
        lines = []
        lines.append(':'.join(self.header))
        for i in self.data:
            this_line = ':'.join(i.values())
            lines.append(this_line)
        newContent = '\n'.join(lines)
        return newContent

    def __getitem__(self, index):
        '''Allows index access self[index]'''
        return self.data[index]

    def __setitem__(self, index, value):
        '''Allows editing of values self[index]'''
        self.data[index] = value

d = DataContainer('data.txt')
d[0]['MovieAvalaible'] = 'newValue'  # Example of how to set the values

#Will print out a string with the contents
print d()
</code></pre>
</div>
<span class="comment-copy">found the way i needed to do it  <code>def GetActionData(): 		dataAction = open('Data_Film_Action', 'r') 	for ligne in dataAction: 		#this reset the container so every line are in one container 		dataFilmActionTemp=[] 		#print(ligne, end='') 		ligne = ligne.rstrip('\n') 		#the line above remove the anoying \n 		mots = ligne.split(":") 		for mot in mots: 			dataFilmActionTemp.append(mot) 		dataFilmAction.append(dataFilmActionTemp) 	dataAction.close() 	time.sleep(3)	 	return(dataFilmAction) </code></span>
<span class="comment-copy">that can in a way , but i am forced to say that i really need to use a txt file instead of hard coding everything, is tghere a way to use it that way ?</span>
<span class="comment-copy">as for above that would have worcked perfectly, but i can't import a database module and html is one of them sadly</span>
<span class="comment-copy">Why would you need a database module or html for this? The element tree module can parse .txt the same way as .xml files. So just format your .txt with xml data. As long as you can load the element tree module, and can read\write .txt files this should work?</span>
<span class="comment-copy">it could but this is the point , i am not allowed to use any module that format the data doing so is painfull and is a requirement else i will not get any grade ...</span>
<span class="comment-copy">See my other answer. It uses only the standard library.</span>
<span class="comment-copy">this exactly want i wanted to do but i can't i am restricted for the projeck I can't import csv</span>
<span class="comment-copy">@GothSparkImvu If you can't use csv, simply use e.g. <code>for line in moviesfile</code> to iterate over the lines. And use <code>row = line.split()</code> to separate the line.</span>
