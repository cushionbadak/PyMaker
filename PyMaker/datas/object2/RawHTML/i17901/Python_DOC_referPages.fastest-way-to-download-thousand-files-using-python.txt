<div class="post-text" itemprop="text">
<p>I need to download a thousand csv files size: 20KB - 350KB. Here is my code so far:</p>
<p>Im using <code>urllib.request.urlretrieve</code>. And with it i download thousand files with size of all of them together: 250MB, for over an hour.</p>
<p>So my question is:</p>
<p><strong>How can I download thousand csv files faster then one hour?</strong> </p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Most likely the reason it takes so long is that it takes time to open a connection make the request, get the file and close the connection again. </p>
<p>A thousand files in an hour is 3.6 seconds per file, which is high, but the site you are downloading from may be slow.</p>
<p>The first thing to do is to use HTTP/2.0 and keep one conection open for all the files with Keep-Alive. The easiest way to do that is to use the <a href="http://requests.readthedocs.org/" rel="nofollow">Requests</a> library, and use a <a href="http://www.python-requests.org/en/latest/user/advanced/" rel="nofollow">session</a>.</p>
<p>If this isn't fast enough, then you need to do several parallel downloads with either <a href="http://docs.python.org/3/library/multiprocessing.html" rel="nofollow">multiprocessing</a> or <a href="http://docs.python.org/3/library/threading.html" rel="nofollow">threads</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should try using multithreading to download many files in parallel. Have a look at <a href="http://docs.python.org/2/library/multiprocessing.html" rel="nofollow">multiprocessing</a> and especially the worker-pools.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is very unlikely to be bandwidth (connection speed) because any network connection can maintain that bandwidth. The issue is latency - the time it takes to establish a connection and set up your transfers. I know nothing about Python, but would suggest you split your list and run the queries in parallel if possible, on multiple threads or processes - since the issue is almost certainly neither CPU, nor bandwidth-bound. So, I am saying fire off multiple requests in parallel so a bunch of setups can all be proceeding at the same time and the time each takes is masked behind another.</p>
<p>By the way, if your thousand files amount to 5MB, then they are around 5kB each, rather than the 20kB to 350kB you say.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are probably not going to be able to top that speed without either a) a faster internet connection both for you and the provider or b) getting the provider to provide a zip or tar.gz format of the files that you need.  </p>
<p>The other possibility would be to use a cloud service such as Amazon to get the files to your cloud location, zip or compress them there and then download the zip file to your local machine.  As the cloud service is on the internet backbone it should have faster service than you.  The downside is you may end up having to pay for this depending on the service you use.</p>
</div>
<span class="comment-copy">Are you breaking the yahoo license agreement? Have you checked? If not, they might be throttling your connection to prevent you doing this.</span>
<span class="comment-copy">@joe i'm not downloading this from yahoo, it is just an example code</span>
<span class="comment-copy">Your file sizes and file count doesn't add up. A thousand files @ 20KB means between 20 and 350 MB, not 5MB.</span>
<span class="comment-copy">@Lennart Regebro check my edit</span>
<span class="comment-copy">Why did you remove the code in your question?</span>
<span class="comment-copy">OP's using Python3.x and the links are for 2.x docs.</span>
<span class="comment-copy">@hus787: :rolleyes:</span>
<span class="comment-copy">And you need to have the bandwidth both server and client side even though some say it's unlikely.  The server also needs to support keep alive.</span>
<span class="comment-copy">@DerekLitz: It's less that 0.5Mb/s. Sure, the server could be overloaded or restricted, but with many small files, latency is going to be a significant factor here.</span>
<span class="comment-copy">@LennartRegebro Yeah, that is a good assumption :)</span>
<span class="comment-copy">Faster internet connection than 5MB an hour? :-) I don't think that's the problem. Unless he is actually on a 14.4kb modem.</span>
