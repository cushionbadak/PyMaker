<div class="post-text" itemprop="text">
<p>I have a bmp file. It is just a red square. I have to write a program with functions to make it have white stripes. Things I would need to do:</p>
<ul>
<li>load the bmp file.</li>
<li>read and assess the bmp file.</li>
<li>code certain areas coordinates of the file to be colored white.</li>
<li>close the file</li>
<li>display the end product file as output</li>
</ul>
<p>i am a novice, and am having trouble reading or displaying the original bmp file, let alone edit the content inside. it is not similar to opening a txt file and "readline()". also, when i copy paste the bmp file in the pydev projects src folder in eclipse, it does not show up on eclipse, so i don't know if how the computer would recognize that the file is there. i want to read up on it before posting here, but i don't seem to get much results googling, since i am not sure exactly what i should search for.</p>
</div>
<div class="post-text" itemprop="text">
<p>The easy way to do this is with a third-party image-processing library like <a href="http://pillow.readthedocs.org/en/latest/">PIL/Pillow</a>. The code is simple enough that you could figure it out in a few minutes from the examples on the <a href="http://pillow.readthedocs.org/en/latest/reference/Image.html"><code>Image</code></a> module docs…</p>
<p>But if you're not allowed to do that, let's look at how to do this manually.</p>
<p>First, BMP isn't a text file format, it's a <em>binary</em> format. That means you have to read it in binary mode. And you can't read it "line by line", because it doesn't have lines of text to read. Since a <code>bytes</code> object isn't mutable, you will probably want to copy it into a <code>bytearray</code> to work with. So:</p>
<pre><code>with open('spam.bmp', 'rb') as f:
    data = bytearray(f.read())
</code></pre>
<p>Next, you need to parse the BMP file format. I assume the main point of the exercise is figuring out how to do that yourself, so I'll give you a link to <a href="http://en.wikipedia.org/wiki/BMP_file_format">Wikipedia's article</a>, which describes it better than the Microsoft docs, and you can go from there.</p>
<p>The <a href="http://docs.python.org/3/library/struct.html"><code>struct</code></a> module in the standard library will be very helpful for interpreting the headers; it's much easier to read a 32-bit little-endian number with <code>struct.unpack_from('&lt;L', data, offset)</code> than with by reading <code>data[offset]</code>, <code>data[offset+1]</code>, etc. and re-combining them into a 32-bit number.</p>
<p>I'm guessing you can ignore all the options for BMP compression—otherwise, this would be way too hard an assignment. In fact, you can probably just assume that all of the headers will specify the most common variant and only code for that. But you might want to ask your teacher for feedback on that.</p>
<p>Now, once you've found the "pixel array" portion of the BMP, and you've figured out how to interpret it from the DIB header, you can just set pixels to white at whichever positions you want by setting the values at the appropriate indexes of the bytearray. For example, it may turn out to be as simple as:</p>
<pre><code>pos = pixel_array_offset + row_size * y + pixel_size * x
data[pos:pos+3] = 255, 255, 255
</code></pre>
<p>Finally, once you've changed your red pixels to white, you can save it with:</p>
<pre><code>with open('eggs.bmp', 'wb') as f:
    f.write(data)
</code></pre>
</div>
<span class="comment-copy">Are you supposed to do this without using third-party modules like, say, PIL/Pillow?</span>
<span class="comment-copy">apparently not. using only basic coding. this is a first year cp course assigment. i tried to use import image, but that's not allowed</span>
<span class="comment-copy">Look at <a href="http://www.python.org.br/wiki/ImagemTGA" rel="nofollow noreferrer">this</a> Python program to get started</span>
<span class="comment-copy">thanks man. this helped me out a lot. i wasn't sure how to treat a bmp file. i'll look up more on binary file types.</span>
