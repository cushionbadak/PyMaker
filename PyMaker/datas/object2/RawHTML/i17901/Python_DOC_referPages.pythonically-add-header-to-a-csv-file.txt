<div class="post-text" itemprop="text">
<p>I wrote a Python script merging two csv files, and now I want to add a header to the final csv. I tried following the suggestions reported <a href="https://stackoverflow.com/questions/15907200/how-to-add-a-header-to-a-csv-file-in-python">here</a> and I got the following error: <code>expected string, float found</code>. What is the most pythonic way to fix this?</p>
<p>Here is the code I am using:</p>
<pre><code>import csv

with open('combined_file.csv', 'wb') as outcsv:
    writer = csv.DictWriter(outcsv, fieldnames = ["Date", "temperature 1", "Temperature 2"])
    writer.writeheader()

    with open('t1.csv', 'rb') as incsv:
        reader = csv.reader(incsv)
        writer.writerows(row + [0.0] for row in reader)

    with open('t2.csv', 'rb') as incsv:
        reader = csv.reader(incsv)
        writer.writerows(row[:1] + [0.0] + row[1:] for row in reader)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>DictWriter()</code> class expects <em>dictionaries</em> for each row. If all you wanted to do was write an initial header, use a regular <code>csv.writer()</code> and pass in a simple row for the header:</p>
<pre><code>import csv

with open('combined_file.csv', 'wb') as outcsv:
    writer = csv.writer(outcsv)
    writer.writerow(["Date", "temperature 1", "Temperature 2"])

    with open('t1.csv', 'rb') as incsv:
        reader = csv.reader(incsv)
        writer.writerows(row + [0.0] for row in reader)

    with open('t2.csv', 'rb') as incsv:
        reader = csv.reader(incsv)
        writer.writerows(row[:1] + [0.0] + row[1:] for row in reader)
</code></pre>
<p>The alternative would be to generate dictionaries when copying across your data:</p>
<pre><code>import csv

with open('combined_file.csv', 'wb') as outcsv:
    writer = csv.DictWriter(outcsv, fieldnames = ["Date", "temperature 1", "Temperature 2"])
    writer.writeheader()

    with open('t1.csv', 'rb') as incsv:
        reader = csv.reader(incsv)
        writer.writerows({'Date': row[0], 'temperature 1': row[1], 'temperature 2': 0.0} for row in reader)

    with open('t2.csv', 'rb') as incsv:
        reader = csv.reader(incsv)
        writer.writerows({'Date': row[0], 'temperature 1': 0.0, 'temperature 2': row[1]} for row in reader)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just add one additional row before you execute the loop. This row contains 
your CSV file header name.</p>
<pre><code>schema = ['a','b','c','b']
row = 4
generators = ['A','B','C','D']
with open('test.csv','wb') as csvfile:    
     writer = csv.writer(csvfile, delimiter=delimiter)
# Gives the header name row into csv
     writer.writerow([g for g in schema])   
#Data add in csv file       
     for x in xrange(rows):
         writer.writerow([g() for g in generators])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This worked for me. </p>
<pre><code>header = ['row1', 'row2', 'row3']
some_list = [1, 2, 3]
with open('test.csv', 'wt', newline ='') as file:
    writer = csv.writer(file, delimiter=',')
    writer.writerow(i for i in header)
    for j in some_list:
        writer.writerow(j)
</code></pre>
</div>
<span class="comment-copy">how many columns are you writing into your csv file? Could you please specify in your question 1. input format of your file 2. output format</span>
<span class="comment-copy">@nio: A large section of the code posted is from <a href="http://stackoverflow.com/questions/20306550/python-merging-of-csv-files-with-one-axis-in-common">this previous question by the OP</a></span>
<span class="comment-copy">Why are the files being opened in binary mode? The csv files are obviously text, not binary format. This could cause problems on Windows systems.</span>
<span class="comment-copy">@pcarter: On Python 2, opening a file in text mode on Windows triggers newline translations that are incompatible with the CSV format; the <code>csv</code> module thus wants to handle newlines directly (using <code>\n</code> and <code>\r\n</code> as needed), which means you have to open the file in binary mode. See the <a href="https://docs.python.org/2/library/csv.html#csv.reader" rel="nofollow noreferrer"><code>csv.reader()</code> documentation</a>: <i>If csvfile is a file object, it must be opened with the ‘b’ flag on platforms where that makes a difference.</i>. On Python 3, you'd use the <a href="https://docs.python.org/3/library/csv.html#id3" rel="nofollow noreferrer"><code>newline=''</code> option</a> instead.</span>
