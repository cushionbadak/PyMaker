<div class="post-text" itemprop="text">
<p>I have a while loop that returns data to a function.</p>
<pre><code>    while (count &lt; int(pagecount)):
        count = count + 1
        request = requestGet("http://www.site.com/User.aspx?ID={0}&amp;page={1}".format(self.userid, count))
        regexdata = re.findall('REGEX" REGEX="(.*?)"', request)
        return regexdata
</code></pre>
<p>I need to know how I can return each value back to the function the while loop is in. Also, to be more specific, the data that I'm returning is actually in a list. So maybe somehow appending the new list to the old list would be a better approach. Either way, I'm lost and I need help.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to return a bunch of things, put them in a list and return that:</p>
<pre><code>results = []
while (count &lt; int(pagecount)):
    count = count + 1
    request = requestGet("http://www.site.com/User.aspx?ID={0}&amp;page={1}".format(self.userid, count))
    regexdata = re.findall('REGEX" REGEX="(.*?)"', request)
    results.append(regexdata)
return results
</code></pre>
<p>Alternatively, it might be appropriate to <code>yield</code> the results, turning your function into a generator:</p>
<pre><code>while (count &lt; int(pagecount)):
    count = count + 1
    request = requestGet("http://www.site.com/User.aspx?ID={0}&amp;page={1}".format(self.userid, count))
    regexdata = re.findall('REGEX" REGEX="(.*?)"', request)
    yield regexdata
</code></pre>
<p>Both of these options let you iterate over the return value to get the elements, but the generator option only lets you do so once. <code>return</code> halts the function immediately, so once your function hits a <code>return</code>, it won't continue on to further loop iterations.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://wiki.python.org/moin/Generators" rel="nofollow">Generator</a>:</p>
<pre><code>def getRegexData(self):     
    while (count &lt; int(pagecount)):
        count = count + 1
        request = requestGet("http://www.site.com/User.aspx?ID={0}&amp;page={1}".format(
                            self.userid, count))
        yield re.findall('REGEX" REGEX="(.*?)"', request)
</code></pre>
</div>
<span class="comment-copy">"return each value back to the function the while loop is inâ€¦" is exactly what generators are for. See the <a href="http://docs.python.org/3/tutorial/classes.html#iterators" rel="nofollow noreferrer">Iterators</a> and subsequent two sections in the tutorial for an explanation.</span>
<span class="comment-copy">Thanks a lot! That worked.</span>
