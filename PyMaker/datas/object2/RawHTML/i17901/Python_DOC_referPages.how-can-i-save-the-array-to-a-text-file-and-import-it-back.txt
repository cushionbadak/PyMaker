<div class="post-text" itemprop="text">
<p>Basically, I want to know how to get my array that gets data from peoples input saved to a text file and automatically imported back into the array when the program starts again. </p>
<p>Edit: Now after this, it seems saving and reopening adds data to the same subarrays</p>
<p>My code:</p>
<pre><code>import json
import time


datastore=[]
datastore = json.load(open("file.json"))
menuon = 1






def add_user():
    userdata = input("How many users do you wish to input?")
    print("\n")

    if (userdata == 0):
        print("Thank you, have a nice day!")

    else:
        def add_data(users):
            for i in range(users):
                datastore.append([])
                datastore[i].append(input("Enter Name: "))
                datastore[i].append(input("Enter Email: "))
                datastore[i].append(input("Enter DOB: "))
        add_data(int(userdata))

def print_resource(array):
    for entry in datastore:
        print("Name:  "+entry[0])
        print("Email:  "+entry[1])
        print("DOB:  "+entry[2])
        print("\n")



def search_function(value):
  for eachperson in datastore:
      if value in eachperson:
          print_resource(eachperson)






while menuon == 1:        
    print("Hello There. What would you like to do?")
    print("")
    print("Option 1: Add Users")
    print("Option 2: Search Users")
    print("Option 3: Replace Users")
    print("Option 4: End the program")
    menuChoice = input()


    if menuChoice == '1':
        add_user()

    if menuChoice == '2':
        searchflag = input("Do you wish to search the user data? y/n")
        if(searchflag == 'y'):
            criteria = input("Enter Search Term: ")
            search_function(criteria)

    if menuChoice == '3':
        break


    if menuChoice == '4':
        print("Ending in 3...")
        time.sleep(1)
        print("2")
        time.sleep(1)
        print("1")
        json.dump(datastore, open("file.json", "w"))
        menuon=0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://wikipedia.org/wiki/JavaScript_Object_Notation" rel="nofollow">JSON</a>; Python has a <a href="http://docs.python.org/3.3/library/json.html" rel="nofollow">json module</a> built-in :</p>
<pre><code>import json

datastore = json.load(open("file.json")) // load the file

datastore["new"] = "new value" // do something with your data

json.dump(datastore, open("file.json", "w")) // save data back to your file
</code></pre>
<p>You could also use Pickle to serialize a dictionary, but JSON is better for small data and is human-readable and editable with a simple text editor, where as Pickle is a binary format.</p>
<p>I've updated your code to use JSON and dictionaries, and it works fine :</p>
<pre><code>import json
import time

datastore = json.load(open("file.json"))
menuon = 1

def add_user():
    userdata = input("How many users do you wish to input?")
    print("\n")

    if (userdata == 0):
        print("Thank you, have a nice day!")
    else:
        def add_data(users):
            for i in range(users):
                datastore.append({"name":input("Enter Name: "), "mail":input("Enter Email: "), "dob":input("Enter DOB: ")})
        add_data(int(userdata))

def print_resource(array):
    for entry in datastore:
        print("Name:  "+entry["name"])
        print("Email:  "+entry["mail"])
        print("DOB:  "+entry["dob"])
        print("\n")

def search_function(value):
  for eachperson in datastore:
    for i in eachperson.keys():
        if value in eachperson[i]:
            print_resource(eachperson)

while menuon == 1:        
    print("Hello There. What would you like to do?")
    print("")
    print("Option 1: Add Users")
    print("Option 2: Search Users")
    print("Option 3: Replace Users")
    print("Option 4: End the program")
    menuChoice = input()

    if menuChoice == '1':
        add_user()

    if menuChoice == '2':
        searchflag = input("Do you wish to search the user data? y/n")
        if(searchflag == 'y'):
            criteria = input("Enter Search Term: ")
            search_function(criteria)

    if menuChoice == '3':
        break

    if menuChoice == '4':
        print("Ending in 3...")
        time.sleep(1)
        print("2")
        time.sleep(1)
        print("1")
        json.dump(datastore, open("file.json", "w"))
        menuon=0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This module would do what you want: <a href="http://docs.python.org/3/library/pickle.html" rel="nofollow">http://docs.python.org/3/library/pickle.html</a></p>
<p>An example:</p>
<pre><code>import pickle

array = ["uno", "dos", "tres"]

with open("test", "wb") as f:
    pickle.dump(array, f)

with open("test", "rb") as f:
    unpickled_array = pickle.load(f)
    print(repr(unpickled_array))
</code></pre>
<p>Pickle serializes your object. In essence this means it converts it to a storeable format that can be used to recreate a clone of the original. </p>
<p>Check out the wiki entry if you're interested in more info: <a href="http://en.wikipedia.org/wiki/Serialization" rel="nofollow">http://en.wikipedia.org/wiki/Serialization</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Python docs have a beautiful explanation on how to handle text files among other files to read/write. Here's the link:</p>
<p><a href="http://docs.python.org/2/tutorial/inputoutput.html" rel="nofollow">http://docs.python.org/2/tutorial/inputoutput.html</a></p>
<p>Hope it helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to serialize the array somehow to store it in a file.  Serialize basically just means turn into a representation that is linear.  For our purposes that means a string.  There are several ways (csv, pickle, json). My current favorite way to do that is <code>json.dump()</code> and <code>json.load()</code> to read it back in.  See <a href="http://docs.python.org/2/library/json.html" rel="nofollow">json docs</a></p>
<pre><code>import json

def save_file():
    with open('datafile.json', 'w') as f:
        json.dump(datastore, f)

def load_file():
    with open('datafile.json', 'r') as f:
        datastore = json.load(f)
</code></pre>
</div>
<span class="comment-copy">See <a href="http://meta.stackexchange.com/q/22186">How do I format my code blocks?</a> for next time.</span>
<span class="comment-copy">The line which I would like more elaboration with is "datastore["new"] = "new value" // do something with your data"</span>
<span class="comment-copy">Ok thanks, I implemented the code you gave me and it seems to working quite fine. Thank you very much! :)</span>
<span class="comment-copy">This is wierd, but when I load it back up, it seems to include one of the  users into the first user. Is it something to do with the dump function?</span>
<span class="comment-copy">Note: This only happens after the first save. Is this because I needs to be saved and pulled too?</span>
<span class="comment-copy">This has been done.</span>
<span class="comment-copy">Is there a good way to do it without a module as I want to try to stick to what pythons originally allows me to do if I can. Thank you :)</span>
<span class="comment-copy">@Flux Pickle is a built-in python module, no need to install anything new. However if you eventually need to load the data in another language or edit it by hand, you should probably look at my answer and use JSON (which is supported in all languages and can be edited by hand using a text editor).</span>
<span class="comment-copy">for basic funcitonality, it's better to use CPickle. It's realized in C, so it's way faster (though less flexible)</span>
<span class="comment-copy">@yuvi, in Python 3 you're supposed to import the non-c version, which attempts to import the c extension version first. See: <a href="http://docs.python.org/3.3/whatsnew/3.0.html" rel="nofollow noreferrer">docs.python.org/3.3/whatsnew/3.0.html</a></span>
<span class="comment-copy">This is not all that helpful; how should the OP marshall a list and read it back again?</span>
<span class="comment-copy">Since I am still new to python, can you elaborate on the term serialize and explain the methods on the "json"?</span>
<span class="comment-copy">@Flux added info about what serialize means for our purposes.</span>
<span class="comment-copy">Your answer helped explain serializing for me. Thank you :) Although Andre was the quickest help for me :D</span>
