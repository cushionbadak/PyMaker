<div class="post-text" itemprop="text">
<p>I have a matrix and a list of indices for both dimensions. </p>
<pre><code>A = [[1,2,3],[4,5,6],[7,8,9]]
idx = [1,3,4]
idy = [2,5,7]
</code></pre>
<p>What is the similar notation from Matlab doing A(idx,idy) in Python? </p>
</div>
<div class="post-text" itemprop="text">
<p>Here is my exmple: </p>
<pre><code>A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

idx = [0, 1]
idy = [1, 2]

a = [[A[ix][iy] for iy in idy] for ix in idx]
print(a)
</code></pre>
<p>From: </p>
<pre><code>[
   [1, 2, 3], 
   [4, 5, 6], 
   [7, 8, 9]
]
</code></pre>
<p>I am obtaining the submatrix according to my indexes <code>idx</code> and <code>idy</code>:</p>
<pre><code>[
    [2, 3], 
    [5, 6]
]
</code></pre>
<p>Please keep in mind that in python indexing start from <code>0</code> so giving the fact that here we have a 3x3 matrix the smallest index is <code>0</code> and the biggest is <code>2</code> for each row and column.</p>
<p>Is this what you are looking for? Please let me know.</p>
</div>
<span class="comment-copy">You have <code>list</code> of <code>lists</code>, not matrix. You need <code>numpy.array(A)</code>, but both sets of indices exceed both axis.</span>
<span class="comment-copy">There is no easy way to acess columns. You'd be able to access the row <code>i</code> in the matrix as <code>row=A[i]</code>. Indexing columns would require e.g. Python generator expression.</span>
