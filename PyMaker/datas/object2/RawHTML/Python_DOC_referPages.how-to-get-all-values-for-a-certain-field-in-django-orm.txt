<div class="post-text" itemprop="text">
<p>I have a table called <code>user_info</code>. I want to get names of all the users. So the table has a field called <code>name</code>. So in sql I do something like</p>
<pre><code>SELECT distinct(name) from user_info
</code></pre>
<p>But I am not able to figure out how to do the same in django. Usually if I already have certain value known, then I can do something like below.</p>
<pre><code>user_info.objects.filter(name='Alex')
</code></pre>
<p>And then get the information for that particular user.</p>
<p>But in this case for the given table, I want to get all the name values using django ORM just like I do in sql.</p>
<p>Here is my django model</p>
<pre><code>class user_info(models.Model):
    name = models.CharField(max_length=255)
    priority = models.CharField(max_length=1)
    org = models.CharField(max_length=20)
</code></pre>
<p>How can I do this in django?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>values_list</code>.</p>
<pre><code>user_info.objects.values_list('name', flat=True).distinct()
</code></pre>
<p>Note, in Python classes are usually defined in InitialCaps: your model should be UserInfo.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>values_list()</code> as given in Daniel's answer, which will provide you your data in a list containing the values in the field. Or you can also use, <code>values()</code> like this:</p>
<pre><code>user_info.object.values('name')
</code></pre>
<p>which will return you a queryset containing a dictionary. <code>values_list()</code> and <code>values()</code> are used to select the columns in a table.</p>
</div>
