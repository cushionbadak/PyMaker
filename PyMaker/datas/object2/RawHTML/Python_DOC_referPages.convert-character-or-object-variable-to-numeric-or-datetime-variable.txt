<div class="post-text" itemprop="text">
<p>I have a monthly data on sales volumes:</p>
<pre><code>YearMonth     Sales Count
2010-04       300
2010-05       342
2010-06       425
</code></pre>
<p>and I just want to draw a line graph in r to observe the trend.</p>
<p>I use ggplot2 in r:</p>
<pre><code>ggplot(data,
   aes(x = YearMonth, y = `Sales Count`)) +
   geom_line()
</code></pre>
<p>However, r gives me an error message:</p>
<pre><code>geom_path: Each group consists of only one observation. 
Do you need to adjust the group aesthetic?
</code></pre>
<p>I tried many ways to convert variable "YearMonth" to a numeric variable, but they all don't work...</p>
<p>Because the data was generated in python, I checked the data type using:</p>
<pre><code>data.dtypes
</code></pre>
<p>and it returns </p>
<pre><code>YearMonth           object
Sales Count         int64
dtype: object
</code></pre>
<p>I tried to convert it using</p>
<pre><code>data['YearMonth'] = pd.to_datetime(data['YearMonth'])
</code></pre>
<p>but it converts everything to the first day of the month, i.e. the data now looks like:</p>
<pre><code>YearMonth        Sales Count
2010-04-01       300
2010-05-01       342
2010-06-01       425
</code></pre>
<p>Because the x-axis should be each month rather than the first day of each month, is there anyway to keep just the month and plot it as a numeric or datetime variable?</p>
<p>Many thanks!!</p>
<p><strong>EDITS</strong></p>
<p>Actually when I plot it in r, it only shows years like 2010, 2011 on the x-axis... So the issue above does not matter, if we can change what is shown on the x-axis. Is there a way to define what can be shown on the x-axis, like showing 2010 April, 2010 May, rather than just the year?</p>
<p><strong>SOLUTION</strong></p>
<p>Combining answers from @Jon Spring and @ThomasPepperz, the following codes give me exactly what I want:</p>
<pre><code>data[['YearMonth']] = lubridate::ymd(paste(data[['YearMonth']], 1))

ggplot(stats8, aes(YearMonth, `Sales Count`)) + 
  geom_line() +
  scale_x_date(date_breaks = "6 months",
               date_labels = "%Y %b") +
  theme(axis.text.x = element_text(angle=90, hjust=1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>data$date = lubridate::ymd(paste(data$YearMonth, 1))

library(ggplot2)
ggplot(data, aes(date, Sales_Count)) + 
  geom_line() +
  scale_x_date(date_breaks = "month",
               date_labels = "%Y %b")
</code></pre>
<p><a href="https://i.stack.imgur.com/PUHE2.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/PUHE2.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>df$YearMonth = lubridate::as_date(as.character(df$YearMonth), '%Y-%m')
df$month = lubridate::month(df$YearMonth)
</code></pre>
<p>Use 'lubridate' to convert to a date object and then use month() to extract only the month and store it as a new variable. </p>
</div>
<span class="comment-copy">add <code>group = 1</code>, <code>ggplot(df,aes(x = YearMonth, y = SalesCount, group  =1)) +  geom_line()</code> If you google your error message it should lead you the marked post.</span>
<span class="comment-copy">For me it displays what you have in <code>YearMonth</code> column on X-axis which is <code>2010-04</code>, <code>2010-05</code>. What do you need ?</span>
<span class="comment-copy">@RonakShah, thanks a lot for the fast reply! group=1 really works for only a few points. My problem with it is I have too many observations, and the x-axis have all the values overlap with each other... I know we can add a date or time break if the x-value is stored as datetime. But since here it is stored as character, can we still only display every a few months, rather than display all the months on x-axis?</span>
<span class="comment-copy">we can aggregate the data and then plot. Can you post few more rows with some overlap dates and explain what you would like in the output. I'll reopen the post.</span>
<span class="comment-copy">Oh sorry for the confusion, what I mean by overlap is that there are too many labels on the axis so I can't see which month corresponds to which data, like in this post: <a href="https://stackoverflow.com/questions/37080756/too-many-values-on-x" title="too many values on x">stackoverflow.com/questions/37080756/too-many-values-on-x</a>  But the method in that post doesn't work for me, because my data is character...</span>
<span class="comment-copy">Thanks a lot!! This works perfectly for me - the x-axis is now very clear after I change the date_breaks to 6 months. May I ask, (1) what does "paste" in the ymd function do, and (2) what does "%b" mean in date_lables? Thank you so much for your patience!</span>
<span class="comment-copy"><code>paste</code> is a base R function that concatenates strings; lubridate's <code>ymd</code> function expects a year then month then day. R has a variety of codes for date formatting, for instance %y is YY and %Y is YYYY. %b happens to be abbreviated month: <a href="https://www.stat.berkeley.edu/~s133/dates.html" rel="nofollow noreferrer">stat.berkeley.edu/~s133/dates.html</a></span>
<span class="comment-copy">Thank you so much for the detailed explanation and references, @Jon Spring! This really solves my problem, and teaches me how it is solved. Sorry for another question - I am trying to learn r and am reading the document on <code>paste</code>: paste (..., sep = " ", collapse = NULL). It says the second argument is how we want to separate the data. Does <code>1</code> in your code mean we don't need to separate the data?</span>
<span class="comment-copy">No, the 1 is getting pasted on afterwards, with default <code>sep</code>aration of a space, so that "2010-04" is transformed into "2010-04 1". Lubridate is pretty robust and will treat spaces, dashes, slashes, etc. as separators between terms, so it should consistently turn that into the right date.</span>
<span class="comment-copy">Ohh this makes a lot of sense! Thank you so much for all the detailed explanations, Jon Spring!</span>
<span class="comment-copy">Thanks a lot for the suggestion! It makes a lot of sense, but there are two problems with it: (1) lubricate works weirdly here... It converts 2004-06 to 2020-04-06 and I get an error message: Warning message:  72 failed to parse. (2) The second line only gives me the month, for example, it gives 6 rather than 2014-06, which is what I need to put on the x-axis. The reason is, there are also data from 2015-06, 2017-06, etc. If I only extract the month, I can't distinguish between the years...</span>
<span class="comment-copy">If you're data is of the format "2010-04" it shouldn't fail to parse. Ensure that you're data is as originally posted and not as 'YYYY-MM-DD'</span>
<span class="comment-copy">Try turning the x-axis labels sideways to make more room if you need to. <code>ggplot(...)+...+ theme(axis.text.x = element_text(angle=60, hjust=1))</code> Also, <code>lubridate::months(df, format = " ", labels = TRUE)</code> will produce abbreviated month labels.</span>
<span class="comment-copy">This helps a lot and I have been looking for a way to turn the x-axis labels to an angle. Thank you so much!!</span>
<span class="comment-copy">Regarding the abbreviation, I got an error message... Error: 'months' is not an exported object from 'namespace:lubridate'</span>
