<div class="post-text" itemprop="text">
<p>I'm using emacs and anaconda.</p>
<p>I have this in my init.el:</p>
<pre><code>(setenv "WORKON_HOME" "/home/user/anaconda3/envs/")
</code></pre>
<p>And conda on my path:</p>
<pre><code># added by Anaconda3 installer
export PATH="/home/user/anaconda3/bin:$PATH"
</code></pre>
<p>but emacs can't find my conda environments, which I understand it is supposed to be able to do..</p>
<p>So, when I run <code>C-c C-p</code> to start a new session, and <code>C-c C-c</code>, it fails to import my packages  which are installed in a conda environment, with <code>ModuleNotFoundError</code>.</p>
<p>Since I have added this to my path and it still doesn't work, I am trying to work around this, and still be able to run my conda applications from emacs.</p>
<p>I can open a <em>shell</em> in emacs with <code>M-x shell</code>, then <code>source activate myenv</code>, and run <code>python</code>.</p>
<p>I now want <code>C-c C-c</code> to copy into /this/ <em>shell</em>.  How do I mark this <em>shell</em> <em>buffer</em> as a python process to send my file.py's text to on C-c C-c, rather than just a shell <em>shell</em>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Programs inherit the environment variables from the shell that spawned them.  The way conda and virtualenv work is by overriding the shell's PATH variable.  They do this so that the OS finds the new version of the app (conda's or virtualenv's) instead of the default one installed with the OS (Macs come with an ancient version of python).  </p>
<p>So, what is happening here?  If you start Emacs by double clicking on the OS icon it will inherit the default shell environment variables.  So when you try to call a library that you installed with conda (or equivalently with virtualenv and pip), because you are using the default OS path, the OS is finding the default version of python (and crucially the default version's libraries).  The default version of python is going to respond "I have no idea what library that is."</p>
<p>How to fix?  One reliable way is to <em>not</em> start Emacs by double clicking on the OS Icon.  Here is what I do most days:</p>
<pre><code>1) start a console/terminal
2) switch to the conda environment `activate py37` 
    (or with virtualenv: `source .py37dev/bin/activate`)
3) start Emacs from that same shell that has the modified environment variables.  
    On a Mac its: `/Applications/Emacs.app/Contents/MacOS/Emacs` 
    (I use a installed version of Emacs on the Mac because the one that 
    comes with Mac is ancient).  
    On Linux and Windows the path to EMacs will be different but the idea is the same.
4) start a shell inside Emacs and you should see the shell looks the way it does 
    in your conda shell (or virtualenv shell)
</code></pre>
<p>here it what it looks like for me:
<a href="https://i.stack.imgur.com/pc8fD.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/pc8fD.png"/></a></p>
<p>see how the version of python is not the default OS python?  Its the one from the virtualenv + pip environment (conda works the exact same way, just the start envirmonment is a different command)</p>
</div>
<span class="comment-copy">Not completely sure, but look at Emacs' <code>exec-path</code> variable, this is where Emacs is searching for programs to run. As for loading a virtual environment, what works for me is calling <code>pyvenv-activate</code>.</span>
<span class="comment-copy">How do you manage switching between different python projects that may be in different conda environments?</span>
