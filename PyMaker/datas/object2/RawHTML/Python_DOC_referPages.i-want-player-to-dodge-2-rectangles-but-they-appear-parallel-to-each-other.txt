<div class="post-text" itemprop="text">
<p>I am trying to make a car dodging game in pygame, I just learnt python and learning pygame .</p>
<p>I have made a function things which a called a times with different parameters of x axis to draw to rectangles as I want player to dodge 2 rects .But i cant figure out to delay the second one so that they doesnt not come at the same time.</p>
<p>I want the second to be drawn after some delay, basically some difference in their y axis. attaching a image here and code </p>
<p><a href="https://i.stack.imgur.com/fCYuB.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/fCYuB.png"/></a> </p>
<pre><code>import pygame
import time
import random

pygame.init()

display_width=600
display_height=800

black=(0,0,0)
white=(255,255,255)
red=(255,0,0)
green=(0,255,0)
blue=(0,0,255)
brown=(165,42,42)

car_width=60

gameDisplay=pygame.display.set_mode((display_width,display_height))

pygame.display.set_caption("Lets Race")

bg = pygame.image.load("road.png")

clock=pygame.time.Clock()

CarImg=pygame.image.load("Image.png")

pygame.mouse.set_visible(1)



def things_dodged(count):
    font=pygame.font.SysFont(None,40)
    text=font.render("Score "+str(count),True,black)
    gameDisplay.blit(text,(20,20))

def car(x,y):
    gameDisplay.blit(CarImg,(x,y))

def things(thingx,thingy,thingw,thingh,color):
    color=brown

    pygame.draw.rect(gameDisplay,color,[thingx,thingy,thingw,thingh])

def text_objects(text,font):
    textSurface=font.render(text, True, white)
    return textSurface, textSurface.get_rect()

def message_display(text):
    largeText=pygame.font.Font('freesansbold.ttf',80)
    TextSurf, TextRect=text_objects(text, largeText)
    TextRect.center=((display_width/2),(display_height/2))
    gameDisplay.blit(TextSurf, TextRect)

    pygame.display.update()

    time.sleep(2)

    game_loop()

def crash():
    message_display('Game Over')

def game_loop():
    x=(display_width*0.48)
    y=(display_height*0.79)

    x_change=0

    thing_startx=random.randrange(0,display_width-100)
    thing_startx2=random.randrange(0,display_width-100)
    thing_starty=-600
    thing_speed=9
    thing_width=100
    thing_height=100

    dodged=0

    gameExit=False

    while not gameExit:

        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                pygame.quit()
                quit()

            if event.type==pygame.KEYDOWN:
                if event.key==pygame.K_LEFT:
                    x_change=-15
                elif event.key==pygame.K_RIGHT:
                    x_change=15

            if event.type==pygame.KEYUP:
                if event.key==pygame.K_LEFT or event.key==pygame.K_RIGHT:
                    x_change=0

        x+=x_change

        #gameDisplay.fill(white)
        gameDisplay.blit(bg, (0, 0))

        #things(thingx,thingy,thingw,thingh,color)
        things(thing_startx,thing_starty,thing_width,thing_height,black)
        things(thing_startx2,thing_starty,thing_width,thing_height,black)


        thing_starty+=thing_speed
        car(x,y)
        things_dodged(dodged)

        if x&gt;display_width-car_width or x&lt;0:
            crash()
        if thing_starty&gt;display_height:
            thing_starty=0-thing_height
            thing_startx=random.randrange(0,display_width-100)
            dodged+=1
            if thing_speed&lt;15:
                thing_speed+=0.15

        if y&lt;thing_starty+thing_height:
            pass

            if x&gt;thing_startx and x&lt;thing_startx+thing_width or x+car_width&gt;thing_startx and x+car_width&lt;thing_startx+thing_width:
                crash()

        pygame.display.update()
        clock.tick(100)

game_loop()
pygame.quit()
quit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The 2 rectangles have 2 different x coordinates (<code>thing_startx</code> , <code>thing_startx2</code>). They've to have 2 different y coordinates, too.  </p>
<p>Create a list of "things", which is basically a list of positions (x and y coordinates):</p>
<pre class="lang-py prettyprint-override"><code>thing_list = [
    [random.randrange(0,display_width-100), -600],
    [random.randrange(0,display_width-100), -300]]
thing_speed=9
thing_width=100
thing_height=100
</code></pre>
<p>Operate on the list of things in the main loop.<br/>
Further I recommend to use <a href="https://www.pygame.org/docs/ref/rect.html#pygame.Rect.colliderect" rel="nofollow noreferrer"><code>pygame.Rect.colliderect()</code></a> to chek for collisions.</p>
<pre class="lang-py prettyprint-override"><code>while not gameExit:

    # [...]

    for thing in thing_list:
        things(*thing, thing_width, thing_height, black)
        thing[1] += thing_speed

    car(x,y)
    things_dodged(dodged)

    if x&gt;display_width-car_width or x&lt;0:
        crash()

    carRect = pygame.Rect(x, y, car_width, 1)
    for thing in thing_list:
        if thing[1] &gt; display_height:
            thing[0] = random.randrange(0,display_width-100)
            thing[1] = 0-thing_height;
            dodged += 1
            thing_speed = min(thing_speed+0.15, 15)
        if carRect.colliderect(pygame.Rect(*thing, thing_width, thing_height)):
            crash()

    pygame.display.update()
    clock.tick(100)
</code></pre>
</div>
