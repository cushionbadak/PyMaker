<div class="post-text" itemprop="text">
<p>I have a Dataframe by the name bids_data</p>
<p>bids_data:</p>
<pre><code>  Supplier_ID  shiper_RFQ
----------
0    2305      5000
1    2309      5200
2    2305      6500 
3    2307      4500
4    2301      900
5    2302      10000
6    2306      4500
</code></pre>
<p>and I want to remove the outliers rows from shiper_RFQ and store them in another dataframe. I tried converting the shiper_RFQ in a list and then finding the outliers but it doesn't work well.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you have good data then use <code>threshold = 0.5</code></p>
<pre><code>threshold = 1
print(df[df['shiper_RFQ'].apply(lambda x: np.abs(x - df['shiper_RFQ'].mean()) / df['shiper_RFQ'].std() &lt; threshold)])
</code></pre>
<p>also this</p>
<pre><code> df = df[ np.abs(df['shiper_RFQ'] - df['shiper_RFQ'].mean()) / df['shiper_RFQ'].std() &lt; threshold]
</code></pre>
<p>both will have same result</p>
<p>output</p>
<pre><code>   Supplier_ID  shiper_RFQ
0         2305        5000
1         2309        5200
2         2305        6500
3         2307        4500
6         2306        4500
</code></pre>
<p>if you print you can see the anomaly </p>
<pre><code>print(df['shiper_RFQ'].apply(lambda x: np.abs(x - df['shiper_RFQ'].mean()) / df['shiper_RFQ'].std()))

0    0.084182
1    0.010523
2    0.468261
3    0.268329
4    1.594192
5    1.757294
6    0.268329
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can identify outliers by finding rows that differ from the mean column value by more than 1.5 standard deviations (or any other cut-off value you choose):</p>
<pre><code>df['outliers'] = 0
df.loc[(df.shiper_RFQ - df.shiper_RFQ.mean()).abs() &gt; 1.5*df.shiper_RFQ.std(), 'outliers'] = 1
print(df)
</code></pre>
<pre><code>   Supplier_ID  shiper_RFQ  outliers
0         2305        5000         0
1         2309        5200         0
2         2305        6500         0
3         2307        4500         0
4         2301         900         1
5         2302       10000         1
6         2306        4500         0
</code></pre>
<p>Then you can store them in another data frame and remove them from the original:</p>
<pre><code>df2 = df[df.outliers == 1].reset_index(drop=True)
df = df[df.outliers == 0].reset_index(drop=True)
print(df2)
print(df)
</code></pre>
<pre><code>   Supplier_ID  shiper_RFQ  outliers
0         2301         900         1
1         2302       10000         1

   Supplier_ID  shiper_RFQ  outliers
0         2305        5000         0
1         2309        5200         0
2         2305        6500         0
3         2307        4500         0
4         2306        4500         0
</code></pre>
</div>
<span class="comment-copy">What is your condition for finding the outliers?</span>
<span class="comment-copy">For 1D, I was using standard deviation/z-score to find them</span>
<span class="comment-copy">this is wrong you know</span>
<span class="comment-copy">Do you have a constructive explanation for your comment?</span>
<span class="comment-copy">This doesn't give the right results when I tried it on another dataset</span>
<span class="comment-copy">simple observation is 900 is outlier</span>
<span class="comment-copy">You are right. I have updated my answer.</span>
