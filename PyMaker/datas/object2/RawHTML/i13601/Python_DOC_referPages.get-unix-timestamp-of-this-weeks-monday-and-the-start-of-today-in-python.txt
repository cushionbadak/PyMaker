<div class="post-text" itemprop="text">
<p>I am trying to investigate how to find these numbers, but honestly the answers I have been finding around online have been confusing me.  I'm trying to figure out how to get the time of the start of today, and of the most recent Monday.</p>
<p>I read about time.time(), but that gives me the time right now.</p>
</div>
<div class="post-text" itemprop="text">
<p>I prefer to work with <code>datetime</code>, then you can easily convert that to a timestamp: <a href="https://stackoverflow.com/questions/7852855/how-to-convert-a-python-datetime-object-to-seconds">How to convert a Python datetime object to seconds</a>.</p>
<p>To get today's date, with the time set to zero (midnight) in local time:</p>
<pre><code>today = datetime.datetime.now().replace(hour=0, minute=0, second=0, microsecond=0)
</code></pre>
<p>If you do this you will probably want to convert the time zone to UTC before converting to a timestamp. If you'd rather take midnight in UTC:</p>
<pre><code>today_utc = datetime.datetime.utcnow().replace(hour=0, minute=0, second=0, microsecond=0)
</code></pre>
<p>Now to adjust to Monday, you need to know which day of the week this represents. Handily there's a <code>weekday</code> method that uses <code>0</code> for Monday, so you can just subtract:</p>
<pre><code>monday = today - datetime.timedelta(days=today.weekday())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this should get you the unix timestamp for midnight today in your local timezone:</p>
<pre><code>today = datetime.date.today()
time.mktime((today.year, today.month, today.day, 0, 0, 0, 0, 0, 0))
</code></pre>
<p>And this should get you midnight on Monday, since Monday is considered the 0th day of the week:</p>
<pre><code>monday = today + datetime.timedelta(days=-today.weekday())
time.mktime((monday.year, monday.month, monday.day, 0, 0, 0, 0, 0, 0))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Get UNIX timestamp of the start of today in Python</p>
</blockquote>
<p>See <a href="https://stackoverflow.com/q/373370/4279">How do I get the UTC time of “midnight” for a given timezone?</a> to get an aware datetime object that represents midnight. To get Unix timestamp from that object, call its <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp" rel="nofollow noreferrer"><code>.timestamp()</code> method.</a></p>
<blockquote>
<p>Get UNIX timestamp of this week's monday </p>
</blockquote>
<p>The code almost the same for the monday's timestamp:</p>
<pre><code>from datetime import datetime, time, timedelta
import tzlocal # $ pip install tzlocal

local_timezone = tzlocal.get_localzone()
today = datetime.now(local_timezone).date()
monday = today - timedelta(today.weekday())
dt = local_timezone.localize(datetime.combine(today, time.min), is_dst=None)
unix_time = dt.timestamp()
</code></pre>
<p>If you need <code>.timestamp()</code> implementation for &lt;3.3 Python version, see <a href="https://stackoverflow.com/a/8778548/4279">Converting datetime.date to UTC timestamp in Python</a>.</p>
</div>
<span class="comment-copy">do you mean date?</span>
<span class="comment-copy">What exactly do you mean by "the start of today"? Is it simply midnight local time, or something more complex?</span>
<span class="comment-copy">do you mean utime (time in seconds from 1970) ?</span>
<span class="comment-copy">please, limit your questions to a single issue per question if possible e.g., you could split this question into several independent steps: (1) get start of today (2) this week's monday (3) convert a local time to Unix time i.e., you could have asked 3 questions instead (with the additional context and links between the questions if necessary).</span>
<span class="comment-copy">@J.F.Sebastian that is simply not a reasonable split up of questions.  This is a single comprehensive question for a programming case I need.  If you wanted to suggest that I elaborate on what I was asking, that would be something I would comply with.  There is no need to obfuscate it what I need as a user for the sake of pages showing up in google.  That's not the point of SO.</span>
<span class="comment-copy">it is not easy to convert a naive datetime object that represents local time to Unix timestamp: : 1st answer is not suitable, 2nd answer is not portable. Read <a href="http://stackoverflow.com/q/7852855/4279">my comments</a> and <a href="http://stackoverflow.com/a/32192894/4279">the answer there</a>.</span>
<span class="comment-copy">@J.F.Sebastian I know I did a little hand-waving over the part about converting local time to UTC, but what makes it unsuitable? I do wish the OP would come back and clarify the question.</span>
<span class="comment-copy">"unsuitable" is about the 1st answer from the link you've provided that uses formula that works only with utc time without even mentioning that fact.</span>
<span class="comment-copy"><code>mktime()</code> may fail for past dates if it doesn't has access to a historical timezone database on a given platform. A portable solution could <a href="http://stackoverflow.com/a/32192987/4279">use a <code>pytz</code>-based solution</a></span>
