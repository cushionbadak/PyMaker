<div class="post-text" itemprop="text">
<p>Using python+beautifulsoup, let's say I have a <code>&lt;class 'bs4.element.Tag'&gt;</code> object, <code>a</code>:</p>
<pre><code>&lt;div class="class1"&gt;&lt;em&gt;text1&lt;/em&gt; text2&lt;/div&gt;
</code></pre>
<p>I can use the following command to extract <code>text1 text2</code> and put it in <code>b</code>:</p>
<pre><code>b = a.text
</code></pre>
<p>I can use the following command to extract <code>text1</code> and put it in <code>c</code>:</p>
<pre><code>c = a.findAll("em")[0].text
</code></pre>
<p>But how can I extract just <code>text2</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>I edited your HTML snippet slightly to have more than just one word in and outside the <code>&lt;em&gt;</code> tag so that <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/#get-text" rel="nofollow"><code>getText()</code></a> extracting all the text form your <code>&lt;div&gt;</code> container leads to the following output:</p>
<pre><code>'text1 foo bar text2 foobar baz'
</code></pre>
<p>As you can see, this is just a string where the <code>&lt;em&gt;</code> tags have been removed. As far as I understood you want to kind of remove the contents of the <code>&lt;em&gt;</code> tag from the contents in your <code>&lt;div&gt;</code> container.</p>
<p>My solution is not very nice, but this can be done by using <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow"><code>.replace()</code></a> to replace the contents of the <code>&lt;em&gt;</code> tag with an empty string <code>''</code>. Since this could lead to leading or trailing spaces you could call <a href="https://docs.python.org/3.4/library/stdtypes.html#str.lstrip" rel="nofollow"><code>.lstrip()</code></a> to get rid of those:</p>
<pre><code>#!/usr/bin/env python3
# coding: utf-8

from bs4 import BeautifulSoup

html = '&lt;div class="class1"&gt;&lt;em&gt;text1 foo bar&lt;/em&gt; text2 foobar baz&lt;/div&gt;'
soup = BeautifulSoup(html, 'html.parser')

result = soup.getText().replace(soup.em.getText(), '').lstrip()

print(result)
</code></pre>
<p>Output of print statement:</p>
<pre><code>'text2 foobar baz'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can remove all children of the div parent and then get the content of the parent like this:</p>
<pre><code>&gt;&gt;&gt; a = BeautifulSoup(out_div, 'html.parser')
&gt;&gt;&gt; for child in a.div.findChildren():
...     child.replace_with('')
...     
&lt;em&gt;text1&lt;/em&gt;
&gt;&gt;&gt; a.get_text()
u' text2'
</code></pre>
</div>
<span class="comment-copy">Do you want to ignore div's children content?</span>
<span class="comment-copy">Maybe try <code>d = b[len(c):]</code>...</span>
<span class="comment-copy">Suppose that <code>text1</code> can actually be an unknown number of words. Same with <code>text2</code>.</span>
<span class="comment-copy">Why on earth would you always assume there are only two words, especially given that the OP's snippet is obviously an example ("text1 text2")?</span>
<span class="comment-copy">@bill999: I updated my answer to fulfill the 'more than one/two words problem'</span>
<span class="comment-copy">@albert, thanks!</span>
