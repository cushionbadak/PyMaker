<div class="post-text" itemprop="text">
<p>Heres the code:</p>
<pre><code>import turtle
import math

def drawTree(segments,size):
    """
    :param segments: refers to number of extensions from the previous
    :param size: refers to the length of the initial extension
    """
    if (segments &lt; 0.0 | size &lt; 0.0):
        print("Invalid Input")
    elif (segments == 0 | size == 0):
        pass
    elif segments &gt; 0:
        i = 1
        for i in range(6):
            turtle.down()
            turtle.forward(size)
            turtle.back(size)
            turtle.right(60)
            i -= 1
            if segments != 0:
                size *= (1/3)
                turtle.forward(size)
                turtle.back(size)
                segments -= 1
                drawTree(segments, size)
def main():
    drawTree(1, 200)
    input("Press ENTER to exit")

main()
</code></pre>
<p>Heres the error list:</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/MATTHEW/PycharmProjects/snowflake/snowflake.py", line 36, in &lt;module&gt;
    main()
  File "C:/Users/MATTHEW/PycharmProjects/snowflake/snowflake.py", line 33, in main
    drawTree(1, 200)
  File "C:/Users/MATTHEW/PycharmProjects/snowflake/snowflake.py", line 14, in drawTree
    if (segments &lt; 0.0 | size &lt; 0.0):
TypeError: unsupported operand type(s) for |: 'float' and 'int'
</code></pre>
<p>The errors don't really haven an explanation. In fact, this code was running fine until I added the last for loop, and, for some reason, it stopped.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using the wrong operator. For a boolean OR, use the <a href="https://docs.python.org/3/reference/expressions.html#boolean-operations"><code>or</code> operator</a>:</p>
<pre><code>if (segments &lt; 0.0 or size &lt; 0.0):
</code></pre>
<p>and</p>
<pre><code>elif (segments == 0 or size == 0):
</code></pre>
<p>The <code>|</code> operator is a <a href="https://docs.python.org/3/reference/expressions.html#binary-bitwise-operations">bitwise operator</a>; it applies boolean logic to individual bits of integers.</p>
</div>
<span class="comment-copy">Obviously you have made changes that broke the code. <code>segments &lt; 0.0 | size &lt; 0.0</code> means <code>segment &lt; (0.0 | size) &lt; 0.0</code> and the parenthesis means bitwise or of <code>0.0</code> and <code>size</code> which is nonsense.</span>
