<div class="post-text" itemprop="text">
<p>I'm experimenting with multiprocessing module and copying example codes from <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow">this</a> page. Here is one example:</p>
<pre><code>#!/usr/bin/python
from multiprocessing import Pool
from time import sleep

def f(x):
    return x*x

if __name__ == '__main__':
    # start 4 worker processes
    with Pool(processes=4) as pool:

        # print "[0, 1, 4,..., 81]"
        print(pool.map(f, range(10)))

        # print same numbers in arbitrary order
        for i in pool.imap_unordered(f, range(10)):
            print(i)

        # evaluate "f(10)" asynchronously
        res = pool.apply_async(f, [10])
        print(res.get(timeout=1))             # prints "100"

        # make worker sleep for 10 secs
        res = pool.apply_async(sleep, [10])
        print(res.get(timeout=1))             # raises multiprocessing.TimeoutError

    # exiting the 'with'-block has stopped the pool
</code></pre>
<p>After running this code I get:</p>
<pre><code>Traceback (most recent call last):
  File "example01.py", line 11, in &lt;module&gt;
    with Pool(processes=4) as pool:
AttributeError: __exit__
</code></pre>
<p>Somehow I've find that this is due to <code>with</code> keyword. However this code is also using <code>with</code> and it is running:</p>
<pre><code>#!/usr/bin/python
with open("input.csv", "wb") as filePath:
    pass
filePath.close()
</code></pre>
<p>When I want to run mentioned example I have to modify it following way:</p>
<pre><code>#!/usr/bin/python

from multiprocessing import Pool
from time import sleep
import traceback

def f(x):
    return x*x

if __name__ == '__main__':
  # start 4 worker processes
  # with Pool(processes=4) as pool:
  try:
    pool = Pool(processes = 4)

    # print "[0, 1, 4,..., 81]"
    print(pool.map(f, range(10)))

    # print same numbers in arbitrary order
    for i in pool.imap_unordered(f, range(10)):
      print(i)

    # evaluate "f(10)" asynchronously
    res = pool.apply_async(f, [10])
    print(res.get(timeout=1))             # prints "100"

    # make worker sleep for 10 secs
    res = pool.apply_async(sleep, [10])
    print(res.get(timeout=1))             # raises multiprocessing.TimeoutError

    # exiting the 'with'-block has stopped the pool

  # http://stackoverflow.com/questions/4990718/python-about-catching-any-exception
  # http://stackoverflow.com/questions/1483429/how-to-print-an-error-in-python
  # http://stackoverflow.com/questions/1369526/what-is-the-python-keyword-with-used-for
  except Exception as e:
    print "Exception happened:"
    print type(e)
    print str(e)
    print traceback.print_exc()
</code></pre>
<p>The output then looks like this:</p>
<pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
0
1
4
9
16
25
36
49
64
81
100
Exception happened:
&lt;class 'multiprocessing.TimeoutError'&gt;

Traceback (most recent call last):
  File "example01_mod.py", line 29, in &lt;module&gt;
    print(res.get(timeout=1))             # raises multiprocessing.TimeoutError
  File "/usr/lib/python2.7/multiprocessing/pool.py", line 563, in get
    raise TimeoutError
TimeoutError
None
</code></pre>
<p>Why I get an error when using <code>with</code> keyword, are those codes (with and try-catch) equivalents? I'm using python 2.7.10.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have wrongly assumed that the <a href="https://docs.python.org/2/library/multiprocessing.html#using-a-pool-of-workers" rel="nofollow">multiprocessor Pool class of Python 2.7</a> returns a <a href="https://docs.python.org/2/library/stdtypes.html#typecontextmanager" rel="nofollow">context manager</a>. Instead it returns a List of <a href="https://docs.python.org/2/library/multiprocessing.html#using-a-pool-of-workers" rel="nofollow">worker processes</a>. The Pool was converted to a context manager object from <a href="https://docs.python.org/3.4/library/multiprocessing.html" rel="nofollow">Python 3.4.3</a> and if your version predates that, you cannot use it with a context manager.</p>
<p>To use with the with statement, the expression should return an object with <strong>enter</strong> and <strong>exit</strong> methods so you get the familiar error.</p>
<pre><code>AttributeError: __exit_
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://www.python.org/dev/peps/pep-0343/" rel="nofollow">This PEP</a> describes the context manager interface which is needed for using the 'with' keyword. Python 2.7's version of the Pool class does not support this interface so you cannot use the 'with' keyword in the way you described. </p>
<p>You can just rewrite the code to not use with and join/terminate the Pool directly as in <a href="https://docs.python.org/2/library/multiprocessing.html#module-multiprocessing.pool" rel="nofollow">the example here</a> or you can upgrade to Python 3 which does support 'with' for Pools.</p>
</div>
<span class="comment-copy">You can't just use <code>with</code> with any object.  The object has to be a <a href="https://www.python.org/dev/peps/pep-0343/" rel="nofollow noreferrer">context manager</a>.</span>
<span class="comment-copy">Can you please briefly explain what is context manager? From your question it seems like some data type used by <code>with</code> keyword. Thank you</span>
<span class="comment-copy">@WakanTanka: I have updated the answer linking to the relevant section of the document explaining what context manager is.</span>
<span class="comment-copy">Thank you I've up voted your answer.</span>
<span class="comment-copy">Can you please explain what you mean by "context manager" and also what you mean by "rewrite the code to not use with and join the Pool directly"? And also is it possible to briefly explain why it is working in python3 I mean it is matter of Pool or it is python3 feature or what? Thank you</span>
<span class="comment-copy">Why is this working in python3 is probably explained by @Abhijit "The Pool was converted to a context manager object from Python 3.4.3 and if your version predates that, you cannot use it with a context manager." Correct me if I am wrong, PS: I am non native English.</span>
<span class="comment-copy">Thank you I've up voted your answer.</span>
