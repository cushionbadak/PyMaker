<div class="post-text" itemprop="text">
<p>Input is list1=['water vapor','evaporation','carbon dioxide','sunlight','green plants']</p>
<p>Output should be</p>
<pre><code>list1=['evaporation','sunlight']
for i in list1:
    " " not in i
    print i

False - water vapor
True - evaporation
False - carbon dioxide
True - sunlight
False - green plants
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Aren't those strings containing a single word, e.g. "evaporation" &amp; "sunlight" unigrams? It seems to me that you want to <em>retain</em> the unigrams, not remove them.</p>
<p>You can do that using a list comprehension:</p>
<pre><code>list1 = ['water vapor','evaporation','carbon dioxide','sunlight','green plants']
unigrams = [word for word in list1 if ' ' not in word]

&gt;&gt;&gt; print unigrams
['evaporation', 'sunlight']
</code></pre>
<p>This assumes that words are separated by a one or more spaces. This might be an oversimplification as to what constitutes a n-gram for n &gt; 1 as different whitespace characters could delimit words e.g. tab, new line, various whitespace unicode code points, etc. You could use a <a href="https://docs.python.org/2/library/re.html" rel="nofollow">regular expression</a> :</p>
<pre><code>import re

list1 = ['water vapor','evaporation','carbon dioxide','sunlight','green plants', 'word with\ttab', 'word\nword', 'abcd\refg']
unigram_pattern = re.compile('^\S+$')    # string contains only non-whitespace chars
unigrams = [word for word in list1 if unigram_pattern.match(word)]

&gt;&gt;&gt; print unigrams
['evaporation', 'sunlight']
</code></pre>
<p>The pattern <code>^\S+$</code> says to match from the beginning of a string all non-whitespace characters until the end of the string.</p>
<p>If you need to support unicode spaces you can specify the unicode flag when compiling the pattern:</p>
<pre><code>list1.extend([u'punctuation\u2008space', u'NO-BREAKu\u00a0SPACE'])
unigram_pattern = re.compile('^\S+$', re.UNICODE)
unigrams = [word for word in list1 if unigram_pattern.match(word)]

&gt;&gt;&gt; print unigrams
['evaporation', 'sunlight']
</code></pre>
<p>Now it will also filter out those strings that contain unicode whitespace, e.g. non-break space (U+00A0) and punctuation space (U+2008).</p>
</div>
<div class="post-text" itemprop="text">
<p>If you need to remove elements from a list based on a condition, you can use <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow"><code>filter()</code></a> or <a href="https://docs.python.org/3.4/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>.</p>
<p>You get the idea about checking for non-unigram words: <code>" " in word</code>.</p>
<p>Basically, if you want to construct a new list using a for loop, you can write something like:</p>
<pre><code>new_list = []
for word in words:
    if " " in word:  # This is not an unigram word
        new_list.append(word)
</code></pre>
<p>This can be simpler, thanks to Python syntax:</p>
<pre><code>new_list = [word for word in words if " " in word]
</code></pre>
<p>Alternatively:</p>
<pre><code>new_list = list(filter(lambda word: " " in word, words))
</code></pre>
<p>Both will return the list of non-unigram words, as stated in the title of your question (even if your example returns unigram words...)</p>
</div>
<span class="comment-copy">Have you tried <i>anything</i>?</span>
<span class="comment-copy">Yes i have tried. But not getting this output</span>
<span class="comment-copy">Please post what code you've tried and your results.</span>
<span class="comment-copy">You are getting downvotes because you have not posted any code try posting your code</span>
<span class="comment-copy">I guess that you want to remove items that contains more than one word. What have you tried that didn't work?</span>
