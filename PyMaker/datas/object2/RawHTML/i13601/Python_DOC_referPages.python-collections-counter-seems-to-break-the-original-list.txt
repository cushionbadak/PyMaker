<div class="post-text" itemprop="text">
<p>Code:</p>
<pre><code>sortedgroups = sorted(metagroups, key=lambda group: group[-1])
categories = map(operator.itemgetter(-1), sortedgroups)
categorycounts = collections.Counter(categories)

print('Writing output files')

with open('report.txt', 'a+') as f:
    for category in categories:
        f.write(category + '\n')
</code></pre>
<p>So this code works if I comment out:</p>
<pre><code>categorycounts = collections.Counter(categories)
</code></pre>
<p>The for loop seems to break if I try to count the amounts of same strings in the categories list. Does <code>collections.Counter()</code> modify the original categories object?</p>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be using Python 3.</p>
<p><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map</code></a> now returns an iterator. <code>collections.Counter(categories)</code> exhausts the iterator, just like <code>list(m)</code> in the example below</p>
<pre><code>In [3]: m = map(bool, [1, 2, 3, 4])

In [4]: list(m)
Out[4]: [True, True, True, True]

In [5]: list(m)
Out[5]: []
</code></pre>
<p>The solution is to build a <a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow">sequence</a> before calling <code>collections.Counter</code>.
For example, a list can be constructed using either <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow"><code>list</code></a>:</p>
<pre><code>categories = list(map(operator.itemgetter(-1), sortedgroups))
</code></pre>
<p>or <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<pre><code>categories = [x[-1] for x in sortedgroups]
</code></pre>
</div>
<span class="comment-copy">So uhh, how can I fix this? I am very new to Python, but not to programming in general. Categories is a list like this before the collections.counter line: <code>categories = ['a', 'a', 'a', 'b', 'b', 'c']</code> Edit: Aha, seems like you already editer your answer :)</span>
<span class="comment-copy">Thanks! Wrapping the map stuff in list() solves the problem.</span>
