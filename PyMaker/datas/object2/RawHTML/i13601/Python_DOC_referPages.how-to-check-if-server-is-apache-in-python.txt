<div class="post-text" itemprop="text">
<p>I need some idea to test the server from a link. I do not know where to start</p>
<p>Would be:</p>
<pre><code>site = 'example.com'
if(site === Apache)
   print '[ok] Apache - Version:'
else
   print '[No] Is not apache' 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I prefer using requests since it's simple and well documented. And it doesn't return an error like urllib</p>
<pre><code>import requests

request = requests.get("http://stackoverflow.com/")
if "Apache" in request.headers['server']:
    print "Apache Server found"
else: 
    print "This is no Apache Server"
</code></pre>
<p>Also see : <a href="http://www.python-requests.org/en/latest/" rel="nofollow">http://www.python-requests.org/en/latest/</a> for more information</p>
</div>
<div class="post-text" itemprop="text">
<p>In python 3:</p>
<pre><code>import urllib.request

response = urllib.request.urlopen('http://www.google.com')
print(response.headers['Server'])
</code></pre>
<p>would be the simplest way to get the server header in some cases.
Some sites (like stackoverflow), however, will return 403 error code.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/http.client.html" rel="nofollow noreferrer">docs.python.org/3/library/http.client.html</a> Send a request, get a response and check the "Server" header.</span>
<span class="comment-copy">Thx, could you give me an example?</span>
<span class="comment-copy">You could use google, you know... It's first time i've ever done such thing in python and i got 'working' example in 10 minutes. (Almost) everything is in documentation.</span>
<span class="comment-copy">You can use requests  <code>requests.head(url).headers["Server"]</code></span>
