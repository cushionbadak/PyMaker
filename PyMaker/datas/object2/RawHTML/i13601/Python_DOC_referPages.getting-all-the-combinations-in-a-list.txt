<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/464864/how-to-get-all-possible-combinations-of-a-list-s-elements">How to get all possible combinations of a listâ€™s elements?</a>
<span class="question-originals-answer-count">
                    24 answers
                </span>
</li>
</ul>
</div>
<p>lets say I have a list [1,1,1,1].</p>
<p>I want to iterate over all the possible combinations while every index of the list must contain a number from 1 to n.</p>
<p>in other words, i want to make a for loop that will go over all the combinations.</p>
<p>like: [n-35, n-5, 1, n], [1, 1, 1, n], [n, 1, n, n-19]. I hope you get the idea.</p>
<p>does anyone has any idea how to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>see <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations_with_replacement" rel="nofollow">itertools.combinations_with_replacement</a>. That should do it.</p>
<pre><code>for comb in itertools.combinations_with_replacement(range(1,n+1), 4):
    # comb is (1,1,1,1), then (1,1,1,2), then ...
</code></pre>
</div>
<span class="comment-copy">Try <a href="http://docs.python.org/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a></span>
<span class="comment-copy">But this is not what i need, i need a loop that will give me an access to check whatever i want to every combination. this is why i have a list.</span>
<span class="comment-copy">itertools gives you an iterator, that you can iterate over and do whatever logic you want on each iteration. So yes, it is what you need.</span>
<span class="comment-copy">this is what i need! thank you polpak!</span>
<span class="comment-copy">polpak edited, I answered. Feels great to be left out.</span>
<span class="comment-copy">you right i'm sorry, thanks Berserker! i was helped by your comment, i didn't get that it actually letting me to iterate through the combinations. polpak just added the range(1, n+1) that was missed. i guess you deserve the main thank.</span>
