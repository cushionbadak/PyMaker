<div class="post-text" itemprop="text">
<p>So I made this method to set parameters from a text file:</p>
<pre><code>def set_params(self, params, previous_response=None):
        if len(params) &gt; 0:
            param_value_list = params.split('&amp;')
            self.params = {
                param_value.split()[0]: json.loads(previous_response.decode())[param_value.split()[1]] if
                param_value.split()[0] == 'o' and previous_response else param_value.split()[1]
                for param_value in param_value_list
            }
</code></pre>
<p>When i call this method for example like this: </p>
<pre><code>apiRequest.set_params("lim 5 &amp; status active")

//now self.params={"lim" : 5, "status" : "active"}
</code></pre>
<p>it works well. Now I want to be able to add the same parameter multiple times, and when that happens, set the param like a list:</p>
<pre><code>apiRequest.set_params("lim 5 &amp; status active &amp; status = other")

//I want this: self.params={"lim" : 5, "status" : ["active", "other"]}
</code></pre>
<p>How can I modify this method beautifully? All I can think of is kinda ugly... I am new with python</p>
</div>
<div class="post-text" itemprop="text">
<p>Just write it as simple and straightforward as you can.  That is usually the best approach.  In my code, below, I made one change to your requirements: all values are a list, some may have just one element in the list.</p>
<p>In this method I apply the following choices and techniques:</p>
<ul>
<li>decode and parse the previous response only once, not every time it is referenced</li>
<li>start with an empty dictionary</li>
<li>split each string only once: this is faster because it avoids redundant operations and memory allocations, and (even more importantly) it is easier to read because the code is not repetitive</li>
<li>adjust the <code>value</code> according to the special-case</li>
<li>use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow"><code>setdefault()</code></a> to obtain the current list of values, if present, or set a new empty list object if it is not present</li>
<li>append the new value to the list of values</li>
</ul>
<pre class="lang-py prettyprint-override"><code>def set_params(self, params, previous_response=None):
    if len(params) &lt;= 0:
        return
    previous_data = json.loads(previous_response.decode())
    self.params = {}
    for param_value in params.split('&amp;'):
        key, value = param_value.split()
        if key == 'o' and previous_response:
            value = previous_data[value]

        values = self.params.setdefault(key, [])
        values.append(value)
# end set_params()
</code></pre>
<blockquote>
<p>Debugging is twice as hard as writing the code in the first place.
  Therefore, if you write the code as cleverly as possible, you are, by
  definition, not smart enough to debug it.</p>
<pre><code>   â€” Brian W. Kernighan and P. J. Plauger in The Elements of Programming Style.
</code></pre>
<p><em>Reference: <a href="http://quotes.cat-v.org/programming/" rel="nofollow">http://quotes.cat-v.org/programming/</a></em></p>
</blockquote>
</div>
<span class="comment-copy">Stack Overflow probably isn't the best place for this kind of question. Maybe you could post to <a href="http://codereview.stackexchange.com/">codereview.stackexchange.com</a> instead?</span>
<span class="comment-copy">Start with a regular loop, overcomplicated comprehension expressions are rarely beautiful.</span>
<span class="comment-copy">Readability... take for example <code>param_value.split()</code>, it occours 4 times. Why don't you do a preprocessing step with <code>split</code> first?</span>
<span class="comment-copy">@KarolyHorvath thanks but what kind of preprocessing do you suggest? can you post some code?</span>
<span class="comment-copy"><code>map(str.split, ...)</code></span>
