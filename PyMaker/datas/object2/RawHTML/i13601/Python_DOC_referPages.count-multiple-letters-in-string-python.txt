<div class="post-text" itemprop="text">
<p>I'm trying to count the letter's 'l' and 'o' in the string below. 
It seems to work if i count one letter, but as soon as i count the next letter 'o' the string does not add to the total count. What am I missing?</p>
<pre><code>s = "hello world"

print s.count('l' and 'o')
</code></pre>
<blockquote>
<p>Output: 5</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You probably mean <code>s.count('l') + s.count('o')</code>.</p>
<p>The code you've pasted is equal to <code>s.count('o')</code>: the <code>and</code> operator checks if its first operand (in this case <code>l</code>) is false. If it is false, it returns its first operand (<code>l</code>), but it isn't, so it returns the second operand (<code>o</code>).</p>
<pre><code>&gt;&gt;&gt; True and True
True
&gt;&gt;&gt; True and False
False
&gt;&gt;&gt; False and True
False
&gt;&gt;&gt; True and 'x'
'x'
&gt;&gt;&gt; False and 'x'
False
&gt;&gt;&gt; 'x' and True
True
&gt;&gt;&gt; 'x' and False
False
&gt;&gt;&gt; 'x' and 'y'
'y'
&gt;&gt;&gt; 'l' and 'o'
'o'
&gt;&gt;&gt; s.count('l' and 'o')
2
&gt;&gt;&gt; s.count('o')
2
&gt;&gt;&gt; s.count('l') + s.count('o')
5
</code></pre>
<p><a href="https://docs.python.org/3.6/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow">Official documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Alternatively, and since you are counting appearances of multiple letters in a given string, use <a href="https://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt;
&gt;&gt;&gt; s = "hello world"
&gt;&gt;&gt; c = Counter(s)
&gt;&gt;&gt; c["l"] + c["o"]
5
</code></pre>
<p>Note that <code>s.count('l' and 'o')</code> that you are currently using <a href="https://docs.python.org/3/reference/expressions.html#and" rel="nofollow">would evaluate</a> as <code>s.count('o')</code>:</p>
<blockquote>
<p>The expression <code>x and y</code> first evaluates <code>x</code>: if <code>x</code> is false, its value is
  returned; otherwise, <code>y</code> is evaluated and the resulting value is
  returned.</p>
</blockquote>
<p>In other words:</p>
<pre><code>&gt;&gt;&gt; 'l' and 'o'
'o'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use regular expression:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; len(re.findall('[lo]', "hello world"))
5
</code></pre>
<p>or <code>map</code>:</p>
<pre><code>&gt;&gt;&gt; sum(map(s.count, ['l','o']))
5
</code></pre>
</div>
<span class="comment-copy">s.count('l') + s.count('o')</span>
<span class="comment-copy">In the case of the string: s = 'azcbobobegghakl' If I want to know the number of times bob occurs. How would I do that. The correct output would be 2. @Wander Nauta</span>
<span class="comment-copy">@taji01That's a whole different question, especially because you seem to be looking for <i>overlapping</i> matches. <code>count</code> counts non-overlapping matches. <a href="http://stackoverflow.com/q/2970520/182402">See here.</a></span>
<span class="comment-copy">In the case of the string: s = 'azcbobobegghakl' If I want to know the number of times bob occurs. How would I do that. The correct output would be 2. @alecxe</span>
