<div class="post-text" itemprop="text">
<p>I have tried to get response from a url, from the following code.
I am using Python 3.x</p>
<pre><code>from urllib.request import urlopen

url_getallfolders = 'https://qa.wittyparrot.com/alfresco/service/acrowit/userfolderinfo?access_token=TICKET_83361146b0e140f48ba404c3d8457452a92e117f'
x = urlopen(url_getallfolders)
print(x)
</code></pre>
<p>I get the following error:</p>
<pre><code>&lt;http.client.HTTPResponse object at 0x030304B0&gt;
</code></pre>
<p>I even tried with urllib.urlopen:</p>
<pre><code>x = urllib.urlopen(url_getallfolders)
print(x)
</code></pre>
<p>then i get this error:</p>
<pre><code>NameError: name 'urllib' is not defined
</code></pre>
<p>Kindly help. Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You did not get an error, you instead got an expected response object. If you wanted to access the data from the response then you need to <em>read</em> from that object, or inspect the headers and status code perhaps.</p>
<p>Reading the response body data is as simple as:</p>
<pre><code>x = urlopen(url_getallfolders)
data = x.read()
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="noreferrer"><code>urllib.request.urlopen()</code> documentation</a>:</p>
<blockquote>
<p>For http and https urls, this function returns a <code>http.client.HTTPResponse</code> object which has the following <em><a href="https://docs.python.org/3/library/http.client.html#httpresponse-objects" rel="noreferrer"><code>HTTPResponse</code> Objects</a></em> methods.</p>
</blockquote>
<p>where I used the <a href="https://docs.python.org/3/library/http.client.html#http.client.HTTPResponse.read" rel="noreferrer"><code>HTTPResponse.read()</code> method</a> above.</p>
<p>Note that the result will be <em>encoded bytes</em>, if you expected text you'll still need to decode that text. The URL you called returns JSON, so you probably want to decode that to Python:</p>
<pre><code>import json

x = urlopen(url_getallfolders)
raw_data = x.read()
encoding = x.info().get_content_charset('utf8')  # JSON default
data = json.loads(raw_data.decode(encoding))
</code></pre>
<p>after which you can access keys such as <code>'error'</code>, <code>'errorList'</code>, <code>'respList'</code> and <code>'warning'</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you just want super basic command-line oriented, HTTP-client functionality, like <code>curl</code> or <code>wget</code> (the popular CLI utilities) without any options; where you feed it a URL, and it simply returns plaintext and HTML: </p>
<pre><code>#!/usr/bin/env python3
#-*- coding: utf-8 -*-

from urllib.request import urlopen

with urlopen('https://example.com') as x:
     data = x.read().decode('utf-8')

print(data)
</code></pre>
<p>If you want the byte objects, just drop the <code>.decode('utf-8')</code> so it looks like:</p>
<pre><code>#!/usr/bin/env python3
#-*- coding: utf-8 -*-

from urllib.request import urlopen

with urlopen('https://example.com') as x:
     data = x.read()

print(data)
</code></pre>
<p>I've tried to reduce it to as few lines as possible. Feel free to define your variables (URLs, etc.) separately.</p>
</div>
<span class="comment-copy">That is not an error. It is the expected response object. You probably want to read the documentation in more detail.</span>
<span class="comment-copy">Thanks.Now i get the byte literals along with my output. b'&lt;myoutput&gt;</span>
