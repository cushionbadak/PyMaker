<div class="post-text" itemprop="text">
<p>I want to be able to write to file a multi-line text in a way that the text is written as is, for example:  </p>
<pre><code>file.write("Hello {0} Hello1 {0}".format("world"))
</code></pre>
<p>So the result file will be:  </p>
<pre><code>Hello world  
Hello1 world
</code></pre>
<p>And not look like :  </p>
<pre><code>Hello world  
[many spaces] Hello1 world
</code></pre>
<p>I also want to try not using <code>\r\n</code><br/>
I know in C# we can write <code>@</code> before string and all is done like I want</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe what you're looking for is this:</p>
<pre><code>file_handle.write("""Hello {0}
Hello1 {0}""".format("world"))
</code></pre>
<p>You can use the <a href="https://docs.python.org/3/library/textwrap.html#textwrap.dedent" rel="nofollow"><code>textwrap.dedent()</code></a> function to strip common leading whitespace:</p>
<pre><code>from textwrap import dedent

s = dedent("""\
           Hello {0}
           Hello1 {0}""")
file_handle.write(s.format("world"))
</code></pre>
<p>I'd recommend against doing either of those though. I'd either split it into two calls (that would each still have a <code>'\n'</code> in them), or just use <code>'\n'</code> in the one string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Multiline strings (triple quotes) should work here.</p>
<pre><code>with open("file.txt", "w") as f:
    f.write("""Hello {0}
Hello1 {0}""".format("world"))
</code></pre>
<p>I also agree with @Cyphase, if there is no important reason for you to avoid <code>\n</code>, I'd rather use:</p>
<pre><code>with open("file.txt", "w") as f:
    f.write("Hello {0}\nHello1 {0}".format("world"))
</code></pre>
</div>
<span class="comment-copy">Not that I do much care about it , but I wonder why people decremented to -2 in my question</span>
<span class="comment-copy">Just out of curiosity, why is it so unrecommended to use the <code>dedent</code> solution?</span>
<span class="comment-copy">@JavaSa, IMO, it makes for ugly code, versus just including a newline in the string. This is especially true for short strings; I would feel differently about a large, multi-line string.</span>
<span class="comment-copy">Great my example is short, but my real usage will be multi line ;)</span>
<span class="comment-copy">@JavaSa, there's no "wrong" way to do it; it's a matter of style.</span>
