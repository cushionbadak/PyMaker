<div class="post-text" itemprop="text">
<p>I have a generator that will generate more than 1 trillion strings, and I would like to put them in a queue, and let a pool of workers to consume the queue. However I couldn't afford to put the whole 1 trillion strings in my memory and map them to threads.</p>
<p>Generator is very fast, consumption worker is not. I need to maintain the length of queue at a certain level to not blow up my memory. That means I need to figure out a way to pause and restart feeding the queue.</p>
<p>Could anyone provide a hint or so how to accomplish this task in Python 3.4? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can specify the maximum size of the queue:</p>
<pre><code>q = queue.Queue(10)   # max size of the queue is 10
</code></pre>
<p>When the queue has attained the maximum size new insertions will block until items are removed from the queue.</p>
<p>Your generator thread can just generate items and put them on the queue. If it gets too far ahead of the consumer threads it will just block.</p>
<pre><code>while not done:
   e = generate next item
   q.put(e)         # will block if queue is full
</code></pre>
<p>See:</p>
<p><a href="https://docs.python.org/3/library/queue.html" rel="nofollow">https://docs.python.org/3/library/queue.html</a></p>
<p>for more info.</p>
</div>
<span class="comment-copy">Are we talking an American trillion or a British trillion?</span>
<span class="comment-copy">@user5402 10^12 level. Each string is about 100 characters.</span>
