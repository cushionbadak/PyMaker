<div class="post-text" itemprop="text">
<p>I'm very new to python. I'm having trouble evaluating a function in an if statement. Some very simple code here:</p>
<pre><code>import sys
number = sys.argv
def is_even(n):
    if n%2==0:
        return true
    else:
        return false

if is_even(number):
    print "The number is even"
else:
    print "The number is not even"
</code></pre>
<p>When I try and run the code I get: </p>
<pre><code>TypeError: unsupported operand type(s) for %: 'list' and 'int'
</code></pre>
<p>Not sure what's going on here. Could someone please give me some pointers to what I might be doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sys.argv</code> is a list of strings. The first string is the name of the script, so what you want is to take the second string and turn it into an <code>int</code>.</p>
<pre><code>import sys

number = int(sys.argv[1])  # Changed this line

def is_even(n):
    if n%2==0:
        return true
    else:
        return false

if is_even(number):
    print "The number is even"
else:
    print "The number is not even"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>sys.argv</code> is a list of strings, where the first element is the script path itself, and the elements after that are the arguments you passed into the program in command line. If you wanted to pass in the number in command line and take it in your program, you should use -</p>
<pre><code>number = int(sys.argv[1])
</code></pre>
<p>Also, you should convert it to int if you are expecting it as an integer.</p>
<hr/>
<p>Explanation -</p>
<pre><code>python &lt;script.py&gt; arg1
           ^         ^ 
  sys.argv[0] sys.arv[1] ... 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have passed the <code>number</code> to your function, the <a href="https://docs.python.org/3/library/sys.html#sys.argv" rel="nofollow"><code>sys.argv</code></a> is a list of command line arguments passed to a Python script which its first item is the script name and from the rest of arguments are the custom argument passed to script, so in this case you need to pass the integer of <code>number[1]</code> to your function (if you have passed one argument in command line).</p>
<blockquote>
<p><strong>sys.argv</strong></p>
<p>The list of command line arguments passed to a Python script. argv[0] is the script name (it is operating system dependent whether this is a full pathname or not). If the command was executed using the -c command line option to the interpreter, argv[0] is set to the string '-c'. If no script name was passed to the Python interpreter, argv[0] is the empty string.</p>
</blockquote>
<p>So you can simply do :</p>
<pre><code>import sys
number = int(sys.argv[1])

def is_even(n):
    if n%2==0:
        return true
    return false
</code></pre>
<p>Not that if you want to pass multiple argument in command line you need to get the items from second index to end :</p>
<pre><code>numbers = map(int,sys.argv[1:])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you have to change one line in your code </p>
<pre><code>number = int(sys.argv[1])
</code></pre>
<p>Then it will work.</p>
</div>
<div class="post-text" itemprop="text">
<p>when you call <code>sys.argv</code> it return a list where first element is the script name and remaining elements will be the user passed input</p>
<p><strong>Modification:</strong></p>
<pre><code>import sys
print sys.argv
number = int(sys.argv[1])
def is_even(n):
    if n%2==0:
        return True
    else:
        return False

if is_even(number):
    print "The number is even"
else:
    print "The number is not even"
</code></pre>
<p><strong>output:</strong></p>
<pre><code>(Canopy 32bit) C:\Users\Desktop\yp_test&gt;python sample.py 2
['sample.py', '2']
The number is even
</code></pre>
</div>
<span class="comment-copy">You are passing a list(<code>number</code> is a list because <code>sys.argv</code> is a list) to the function.Try indexing like <code>is_even(number[1])</code>.</span>
<span class="comment-copy">sys.argv are of the type list, even if you pass only a singel argument</span>
<span class="comment-copy">Ah thanks for this! Had no idea argv worked like that. thanks</span>
<span class="comment-copy">Not quite; if you do that you'll get <code>TypeError: not all arguments converted during string formatting</code>, which could be really confusing :P. You need to convert it to an <code>int</code>.</span>
<span class="comment-copy">Actually your right it should be number = int(sys.argv[1])</span>
