<div class="post-text" itemprop="text">
<p>How to return maximum number of numbers matching? For example:</p>
<p><code>def maximum_number([4, 5, 6, 5, 2])</code></p>
<p>returns <code>2</code> because 5 is maximum number and appears twice. </p>
</div>
<div class="post-text" itemprop="text">
<p>Put your list into a <a href="https://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter()</code> object</a> and ask it for the top result:</p>
<pre><code>from collections import Counter

def maximum_number(lst):
    return Counter(lst).most_common(1)[0][1]
</code></pre>
<p>The <a href="https://docs.python.org/2/library/collections.html#collections.Counter.most_common" rel="nofollow"><code>Counter.most_common()</code> method</a> returns the top N results by count; the code above asks for the 1 top result, takes that one result from the returned list and extracts the count only:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; lst = [4, 5, 6, 5, 2]
&gt;&gt;&gt; Counter(lst)
Counter({5: 2, 2: 1, 4: 1, 6: 1})
&gt;&gt;&gt; Counter(lst).most_common(1)
[(5, 2)]
&gt;&gt;&gt; Counter(lst).most_common(1)[0]
(5, 2)
&gt;&gt;&gt; Counter(lst).most_common(1)[0][1]
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This could help you..</p>
<pre><code>lst = [4, 5, 6, 5, 2]    
max([lst.count(i) for i in lst])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <em>Counters</em> as shown works great. However, it doesn't help to understand the pattern. So here is a recipe to do it manually </p>
<ol>
<li>Create a empty dict</li>
<li>Loop over the input//list</li>
<li>Find that value, as key, in the dict

<ul>
<li>if it exist, increase the value by one</li>
<li>else add it, with a value of 1</li>
</ul></li>
</ol>
<p>When the loop is done, find the highest value in the dict and use its key</p>
<p>This all can be done effectively in Python, using <code>dict.get(key, 0)+1</code> and <code>dict.iteritems()</code> (for Python-2; items(), for Python-3).</p>
</div>
<span class="comment-copy">I haven't used counter before any other way ??</span>
<span class="comment-copy">Yes there are other ways but <code>Counter</code> is kind of a canonical solution and there is no reason to do something else. Just read the <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">documentation for <code>Counter</code></a>.</span>
<span class="comment-copy">@R.I: you'd have to manually count, using a dictionary (keys are the values in the list, values are the number of times you saw that value), then take the maximum count from that. Since Counter is a dictionary object, really, there is little point in reinventing the wheel here.</span>
<span class="comment-copy">After seeing Vineesh's answer, it occurred to me that it would be more intuitive to do <code>max(Counter(lst).values())</code>.</span>
<span class="comment-copy">@PauloAlmeida that is what <code>Counter.most_common()</code> ultimately uses when the argument is <code>1</code>.</span>
<span class="comment-copy">This is hugely inefficient, executing O(N^2) steps. 10 elements is 100 steps, 1000 takes a million steps, etc.</span>
