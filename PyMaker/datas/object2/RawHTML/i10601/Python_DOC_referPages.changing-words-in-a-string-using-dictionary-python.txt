<div class="post-text" itemprop="text">
<p>I have the following message:</p>
<pre><code>msg = "Cowlishaw Street &amp;amp; Athllon Drive, Greenway now free of obstruction."
</code></pre>
<p>I want to change things such as "Drive" to "Dr" or "Street" to "St"</p>
<pre><code>expected_msg = "Cowlishaw St and Athllon Dr Greenway now free of obstruction"
</code></pre>
<p>I also have a "conversion function"</p>
<p>how do I check the list if such word is in it. and if so, change it with the "conversion" function. "conversion" is a dictionary that have word such as "Drive" act as a key and the value is "Dr"</p>
<p>this is what I have done</p>
<pre><code>def convert_message(msg, conversion):
    msg = msg.translate({ord(i): None for i in ".,"})
    tokens = msg.strip().split(" ")
    for x in msg:
         if x in keys (conversion):


    return " ".join(tokens)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Isn't it simply:</p>
<pre><code>translations = {'Drive': 'Dr'}

for index, token in enumerate(tokens):
    if token in conversion:
        tokens[index] = conversion[token]

return ' '.join(tokens)
</code></pre>
<p>However, this wouldn't work on sentences like <code>"Obstruction on Cowlishaw Street."</code> since the token now would be <code>Street.</code>. Perhaps you should use a regular expression with <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a>:</p>
<pre><code>import re
def convert_message(msg, conversion):
    def translate(match):
        word = match.group(0)
        if word in conversion:
            return conversion[word]
        return word

    return re.sub(r'\w+', translate, msg)
</code></pre>
<p>Here the <code>re.sub</code> finds 1 or more consecutive (<code>+</code>) alphanumeric characters (<code>\w</code>); and for each such regular expression match calls the given function, giving the match as a parameter; the matched word can be retrieved with <code>match.group(0)</code>. The function should return a replacement for the given match - here, if the word is found in the dictionary we return that instead, otherwise the original is returned.</p>
<p>Thus:</p>
<pre><code>&gt;&gt;&gt; msg = "Cowlishaw Street &amp;amp; Athllon Drive, Greenway now free of obstruction."
&gt;&gt;&gt; convert_message(msg, {'Drive': 'Dr', 'Street': 'St'})
'Cowlishaw St &amp;amp; Athllon Dr, Greenway now free of obstruction.'
</code></pre>
<hr/>
<p>As for the <code>&amp;amp;</code>, on Python 3.4+ you should use <a href="https://docs.python.org/3/library/html.html#html.unescape" rel="nofollow noreferrer"><code>html.unescape</code></a> to decode HTML entities:</p>
<pre><code>&gt;&gt;&gt; import html
&gt;&gt;&gt; html.unescape('Cowlishaw Street &amp;amp; Athllon Drive, Greenway now free of obstruction.')
'Cowlishaw Street &amp; Athllon Drive, Greenway now free of obstruction.'
</code></pre>
<p>This will take care of <em>all</em> known HTML entities. For older python versions you can see <a href="https://stackoverflow.com/questions/2087370/decode-html-entities-in-python-string">alternatives on this question</a>.</p>
<p>The regular expression does not match the <code>&amp;</code> character; if you want to replace it too, we can use regular expression <code>\w+|.</code> which means: "any consecutive run of alphanumeric characters, or then any single character that is not in such a run":</p>
<pre><code>import re
import html


def convert_message(msg, conversion):
    msg = html.unescape(msg)

    def translate(match):
        word = match.group(0)
        if word in conversion:
            return conversion[word]
        return word

    return re.sub(r'\w+|.', translate, msg)
</code></pre>
<p>Then you can do</p>
<pre><code>&gt;&gt;&gt; msg = 'Cowlishaw Street &amp;amp; Athllon Drive, Greenway now free of obstruction.'
&gt;&gt;&gt; convert_message(msg, {'Drive': 'Dr', '&amp;': 'and', 
                          'Street': 'St', '.': '', ',': ''})
'Cowlishaw St and Athllon Dr Greenway now free of obstruction'
</code></pre>
</div>
<span class="comment-copy">Can you please try to get the formatting of your example code correct?</span>
<span class="comment-copy">Can't you just use <code>msg.replace("Drive","Dr")</code> etc. ?</span>
<span class="comment-copy"><code>for "Drive" in msg</code> is not proper Python at all. Since you have a dictionary, you should include it into the question.</span>
<span class="comment-copy">You might want to look at nltk for tokenizing your string, btw. Handles punctuation and all that.</span>
<span class="comment-copy">@Chris_Rands yes i can just do that. but my tutor said that is not allowed because its sort of hard coding. what we meant to do is iterate through the message of in the string. and then if we found words that is also a key in the dictionary "conversion" then we convert those words which is its corresponding value in that conversion dictionary.</span>
<span class="comment-copy">the first one works because the translation that you define there is already define for each cases of the word. and the testing is done seperately each time. thanks</span>
<span class="comment-copy">OP apparently wants <code>&amp;amp'</code> -&gt; <code>and</code> - but I'm sure they can work that one out with the translations :)</span>
