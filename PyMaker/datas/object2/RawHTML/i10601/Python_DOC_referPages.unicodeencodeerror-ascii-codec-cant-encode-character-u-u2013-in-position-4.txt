<div class="post-text" itemprop="text">
<p>I am currently using selenium python to scrape linkedin data. I can parse through various webpages and scrape data but the process is interrupted after the first few pages due to the Unicode error. Here's my code:</p>
<pre><code>from selenium import webdriver
from time import sleep

driver = webdriver.Firefox()
driver.get('https://www.linkedin.com/jobs/search?locationId=sg%3A0&amp;f_TP=1%2C2&amp;orig=FCTD&amp;trk=jobs_jserp_posted_one_week')

result = []
while True:
    while True:
        try:
            sleep(1)
            result +=[i.text for i in driver.find_elements_by_class_name('job-title-text')]
        except:
            sleep(5)
        else:
            break
    try:
        for i in range(50):
            nextbutton = driver.find_element_by_class_name('next-btn')
            nextbutton.click()
    except:
        break

with open('jobtitles.csv', 'w') as f:
f.write('\n'.join(i for i in result).encode('utf-8').decode('utf-8'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use UnicodeWriter (from Python docs):</p>
<pre><code>import codecs
import cStringIO
import csv
from time import sleep

from selenium import webdriver


class UnicodeWriter:
    """
    A CSV writer which will write rows to CSV file "f",
    which is encoded in the given encoding.
    """

    def __init__(self, f, dialect=csv.excel, encoding="utf-8", **kwds):
        # Redirect output to a queue
        self.queue = cStringIO.StringIO()
        self.writer = csv.writer(self.queue, dialect=dialect, **kwds)
        self.stream = f
        self.encoder = codecs.getincrementalencoder(encoding)()

    def writerow(self, row):
        self.writer.writerow([s.encode("utf-8") for s in row])
        # Fetch UTF-8 output from the queue ...
        data = self.queue.getvalue()
        data = data.decode("utf-8")
        # ... and reencode it into the target encoding
        data = self.encoder.encode(data)
        # write to the target stream
        self.stream.write(data)
        # empty queue
        self.queue.truncate(0)

    def writerows(self, rows):
        for row in rows:
            self.writerow(row)


driver = webdriver.Firefox()
driver.get('https://www.linkedin.com/jobs/search?locationId=sg%3A0&amp;f_TP=1%2C2&amp;orig=FCTD&amp;trk=jobs_jserp_posted_one_week')

result = []
while True:
    while True:
        try:
            sleep(1)
            result +=[i.text for i in driver.find_elements_by_class_name('job-title-text')]
        except:
            sleep(5)
        else:
            break
    try:
        for i in range(50):
            nextbutton = driver.find_element_by_class_name('next-btn')
            nextbutton.click()
    except:
        break


with open('jobtitles.csv', 'w') as f:
    doc = UnicodeWriter(f)
    doc.writerows(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>it is an improper encoding... you claim that a bytestream is encoded by UTF-8 and that is not true
at the referred position according to the UTF-8 implementation only ascii character(0-127) is allowed, so the UTF-8 decoding fails... I do not see at your code how and when that UTF-8 decoding fails, so you should trace the exact location by yourself
check the variables with type(), and please also note that python 2 and 3 got differences in this area</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import sys 
reload(sys)
sys.setdefaultencoding("utf-8")
print sys.getdefaultencoding()
</code></pre>
<p>add it on the top of your code.</p>
<p>also, u might need to preprocess your code to replace some nonenglish words</p>
<pre><code>        words=word_tokenize(content)
        # print words
        word=[]
        for w in words:
            w= re.sub(r'[^\w\s]', '',w)
            w =re.sub("[^A-Za-z]+"," ",w,flags=re.MULTILINE)
            w =w .strip("\t\n\r")
            word.append(w)
        words=word
        # print words
        stop_words = set(stopwords.words('english'))
        filteredword = [w for w in words if not w in stop_words and 3 &lt; len(w)]
        # print filteredword
        words=" ".join(filteredword)
</code></pre>
</div>
<span class="comment-copy">Why are you doing <code>.encode('utf-8').decode('utf-8')</code>? <code>Actual String</code> -&gt; <code>Encode</code> -&gt; <code>Decode</code> -&gt; <code>Actual String</code>, what is the usage?</span>
<span class="comment-copy">I want to get the text format of the job titles and export it to a csv file</span>
<span class="comment-copy">I tried taking away the decode but still it works till the 9th webpage and it stops. There are actually 50 pages</span>
<span class="comment-copy">What version os python is this? Also, you should probably read the unicode Howto (for <a href="https://docs.python.org/2/howto/unicode.html" rel="nofollow noreferrer">py2</a> or <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">py3</a>)</span>
<span class="comment-copy">the version is 2.7.12</span>
