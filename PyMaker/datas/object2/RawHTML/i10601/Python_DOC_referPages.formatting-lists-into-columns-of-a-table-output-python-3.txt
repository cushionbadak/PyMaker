<div class="post-text" itemprop="text">
<p>I have data that is collected in a loop and stored under separate lists that hold only the same datatypes (e.g. only strings, only floats) as shown below:</p>
<pre><code>names = ['bar', 'chocolate', 'chips']
weights = [0.05, 0.1, 0.25]
costs = [2.0, 5.0, 3.0]
unit_costs = [40.0, 50.0, 12.0]
</code></pre>
<p>I have treated these lists as "columns" of a table and wish to print them out as a formatted table that should look something like this:</p>
<pre><code>Names     | Weights | Costs | Unit_Costs  
----------|---------|-------|------------
bar       | 0.05    | 2.0   | 40.0
chocolate | 0.1     | 5.0   | 50.0
chips     | 0.25    | 3.0   | 12.0
</code></pre>
<p>I only know how to print out data from lists horizontally across table rows, I have looked online (and on this site) for some help regarding this issue, however I only managed to find help for getting it to work in python 2.7 and not 3.5.1 which is what I am using.<br/>
my question is:<br/>
how do I get entries from the above 4 lists to print out into a table as shown above.  </p>
<p>Each item index from the lists above is associated (i.e. entry[0] from the 4 lists is associated with the same item; bar, 0.05, 2.0, 40.0).  </p>
</div>
<div class="post-text" itemprop="text">
<p>Some interesting table draw with <code>texttable</code>.</p>
<pre><code>import texttable as tt
tab = tt.Texttable()
headings = ['Names','Weights','Costs','Unit_Costs']
tab.header(headings)
names = ['bar', 'chocolate', 'chips']
weights = [0.05, 0.1, 0.25]
costs = [2.0, 5.0, 3.0]
unit_costs = [40.0, 50.0, 12.0]

for row in zip(names,weights,costs,unit_costs):
    tab.add_row(row)

s = tab.draw()
print (s)
</code></pre>
<p><strong>Result</strong></p>
<pre><code>+-----------+---------+-------+------------+
|   Names   | Weights | Costs | Unit_Costs |
+===========+=========+=======+============+
| bar       | 0.050   | 2     | 40         |
+-----------+---------+-------+------------+
| chocolate | 0.100   | 5     | 50         |
+-----------+---------+-------+------------+
| chips     | 0.250   | 3     | 12         |
+-----------+---------+-------+------------+
</code></pre>
<p>You can install <code>texttable</code> with using this command <code>pip install texttable</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a small implementation that does what you want in basic python (no special modules). </p>
<pre><code>
names = ['bar', 'chocolate', 'chips']
weights = [0.05, 0.1, 0.25]
costs = [2.0, 5.0, 3.0]
unit_costs = [40.0, 50.0, 12.0]


titles = ['names', 'weights', 'costs', 'unit_costs']
data = [titles] + list(zip(names, weights, costs, unit_costs))

for i, d in enumerate(data):
    line = '|'.join(str(x).ljust(12) for x in d)
    print(line)
    if i == 0:
        print('-' * len(line))
</code></pre>
<p>Output:</p>
<pre><code>
names       |weights     |costs       |unit_costs  
---------------------------------------------------
bar         |0.05        |2.0         |40.0        
chocolate   |0.1         |5.0         |50.0        
chips       |0.25        |3.0         |12.0        
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After visiting docs.python.org/3/library/functions.html#zip (link provided by cdarke)  </p>
<p>I managed to find the solution I needed:  </p>
<p>using the zip method I created a new summary list of the associated data:</p>
<pre><code># sort into rows of associated data and convert to list
rows = zip(names, weights, costs, unit_costs)
summary = list(rows)
</code></pre>
<p>Once I had the new summary list, I proceeded to sort and print out the table to the user (however, I will deal with the formatting later):</p>
<pre><code># Sort Alphabetically and print
summary.sort()
print()
print("*** Results shown below (alphabetically) ***")
print("Name\t\tWeight\tCost\tUnit Cost")
for item in summary:
    print("")
    for data in item:
        print(data, "\t", end='')
</code></pre>
<p>output is as follows:</p>
<pre><code>*** Results shown below (alphabetically) ***
Name        Weight  Cost    Unit Cost

bar     0.05    2.0     40.0    
chips   0.25    3.0     12.0    
chocolate   0.1     5.0     50.0    
</code></pre>
<p>Thanks to cdarke for the help :)</p>
</div>
<span class="comment-copy">Take a look at string formatting, and the <code>zip</code> built-in <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#zip</a>.  The 2.7 solution should be easy to convert to 3.5, if in doubt use <code>2to3.py</code> on it.</span>
<span class="comment-copy">Thanks for the quick reply I'll take a look at the site and see :)</span>
<span class="comment-copy">Hey, I took a look at the link and found a way to get it to work for me. thanks for your help :)</span>
<span class="comment-copy">@JakeCannon You can post the solution as an answer to your own question.</span>
<span class="comment-copy">ok, I will do that now. sorry i'm new to this site.</span>
<span class="comment-copy">Thanks for this, This method appears to work very effectively and is formatted excellently.</span>
<span class="comment-copy">Thanks for sharing this. Nice thing is you don't need to import a new library, downside is if the length of value is variable you will need to adjust the value passed into ljust to account for that.</span>
