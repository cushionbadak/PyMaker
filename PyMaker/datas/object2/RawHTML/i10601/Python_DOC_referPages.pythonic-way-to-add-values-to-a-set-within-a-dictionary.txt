<div class="post-text" itemprop="text">
<p>Lets say i have a dictionary of sets:</p>
<pre><code>d = {"foo":{1,2,3},
        "bar":{3,4,5}}
</code></pre>
<p>Now lets say I want to add the value <code>7</code> to the set found within the key <code>foo</code>.  This would be easy:</p>
<pre><code>d["foo"].add(7)
</code></pre>
<p>but what if we were unsure of the key already existing?  It doesn't feel very pythonic to check beforehand:</p>
<pre><code>if "baz" in dict:
    d["baz"].add(7)
else:
    d["baz"] = {7}
</code></pre>
<p>I tried to be clever and do something like</p>
<pre><code>d["baz"] = set(d["baz"]).add(7)
</code></pre>
<p>but then you just get a <code>KeyError</code> trying to access a bad key in the <code>set</code> constructor.</p>
<p>Am i missing something, or do I need to just bite the bullet and look before I leap?  I would understand if that were the case, it would just be neat if there were a simple way to say "Add this value to the set found at this location, or if there isn't a set at that location, make one, and then put it in.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>defaultdict</code></p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; d = defaultdict(set)
&gt;&gt;&gt; d
defaultdict(&lt;class 'set'&gt;, {})
&gt;&gt;&gt; d['foo'].add(1)
&gt;&gt;&gt; d['foo'].add(2)
&gt;&gt;&gt; d
defaultdict(&lt;class 'set'&gt;, {'foo': {1, 2}})
&gt;&gt;&gt; d['bar'].add(3)
&gt;&gt;&gt; d['bar'].add(4)
&gt;&gt;&gt; d
defaultdict(&lt;class 'set'&gt;, {'foo': {1, 2}, 'bar': {3, 4}})
&gt;&gt;&gt; 
</code></pre>
<p>Also, if you must use plain dict, you can use the <code>.setdefault</code> method:</p>
<pre><code>&gt;&gt;&gt; d2 = {}
&gt;&gt;&gt; d2.setdefault('foo',set()).add(1)
&gt;&gt;&gt; d2.setdefault('foo',set()).add(2)
&gt;&gt;&gt; d2
{'foo': {1, 2}}
&gt;&gt;&gt; d2.setdefault('bar',set()).add(3)
&gt;&gt;&gt; d2.setdefault('bar',set()).add(4)
&gt;&gt;&gt; d2
{'foo': {1, 2}, 'bar': {3, 4}}
&gt;&gt;&gt; 
</code></pre>
<h2>Edit to add time comparisons</h2>
<p>You should note that using <code>defaultdict</code> is faster:</p>
<pre><code>&gt;&gt;&gt; setup = "gen = ((letter,k) for letter in 'abcdefghijklmnopqrstuvwxyx'  for k in range(100)); d = {}"
&gt;&gt;&gt; s = """for l,n in gen:
...     d.setdefault(l,set()).add(n)"""
&gt;&gt;&gt; setup2 = "from collections import defaultdict; gen = ((letter,k) for letter in 'abcdefghijklmnopqrstuvwxyx'  for k in range(100)); d = defaultdict(set)"
&gt;&gt;&gt; s2 = """for l,n in gen:
...     d[l]=n"""
&gt;&gt;&gt; 
&gt;&gt;&gt; import timeit
&gt;&gt;&gt; timeit.timeit(stmt=s, setup=setup, number=10000)
0.005325066005752888
&gt;&gt;&gt; timeit.timeit(stmt=s2, setup=setup2, number=10000)
0.0014927469965186901
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>trying to keep this simple, how about this</p>
<pre><code>dict['baz'] = dict.get('baz', set())
dict['baz'].add(7)
</code></pre>
</div>
<span class="comment-copy">Would a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> help?</span>
<span class="comment-copy">By the way, you should never shadow the built-in <code>dict</code> function. Name your dictionary something else, <code>dict_</code> if you must.</span>
<span class="comment-copy">@juanpa.arrivillaga thanks for pointing that out, this was just throwaway code that i made just for this question, didn't even think about that.  I'll edit the question.</span>
<span class="comment-copy">if baz in dict , don't need to and should not call .keys</span>
<span class="comment-copy">@JHixson no worries. It seems relatively harmless, but it can lead to pernicious bugs.</span>
<span class="comment-copy">While the elegance is nice, it does looks like this is basically replicating the functionality of <code>d.setdefault('baz',set()).add(7)</code> in two lines</span>
<span class="comment-copy">Ah thanks, yea that is a fair point. If you are doing this type of thing more than once then the defaultdict might server you better as others have suggested.</span>
