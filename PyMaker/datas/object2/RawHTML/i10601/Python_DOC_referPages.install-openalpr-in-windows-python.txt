<div class="post-text" itemprop="text">
<p>I am using <strong>Windows 10</strong> and I want to install <strong>openalpr</strong> and import the library to <strong>python</strong>. </p>
<p>However, after downloaded the <strong>Pre-compiled Windows binaries</strong>, I dont know how ti import alpr in python</p>
<p>I follow the instruction in <a href="https://github.com/openalpr/openalpr" rel="noreferrer">OpenAlpr</a></p>
<p>I downloaded the <strong>openalpr-2.3.0-win-64bit.zip</strong> <a href="https://github.com/openalpr/openalpr/releases" rel="noreferrer">here</a> and unzipped it.</p>
<p>Afterwards, I can run <code>alpr</code> in command line but I cannot import it.</p>
<p>Can anyone teach me how I can import Openalpr in python. Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you've downloaded the binary distribution, navigate to <code>python</code> subdirectory and run <code>python setup.py</code>. This would install OpenALPR as package, so then you would be able to import it from anywhere, not just from ALPR's directory.</p>
<p><strong>Explaination</strong>:
To be importable, it requires that the package you're trying to import been else:</p>
<ol>
<li>In current directory, from where you run <code>python</code></li>
<li>Specified via <code>PYTHONPATH</code> environment variable</li>
<li>Part of standard library</li>
<li>Specified in one of <code>.pth</code> files</li>
<li>Located in <code>site-packages</code> dir</li>
<li>Added to <code>sys.path</code> by hand</li>
</ol>
<p>And when you  run <code>setup.py</code> script, it kicks distutils to properly copy package's distribution to <code>site-packages</code>, thus adding it to your libs. </p>
<p>For more information, see <a href="https://pythonhosted.org/an_example_pypi_project/setuptools.html#using-setup-py" rel="noreferrer">setup.py usage</a> and <a href="https://docs.python.org/3/reference/import.html" rel="noreferrer">how import system works</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I setted up the same environment as you:</p>
<ul>
<li>Anaconda 4.0 installed into <code>C:\Users\user\Anaconda</code></li>
<li>OpenAlpr installed into <code>C:\Users\user\Downloads\openalpr-2.3.0-win-64bit</code></li>
</ul>
<p>So I can call <code>python</code> from the console (<code>cmd</code>) and get:</p>
<pre><code>Python 2.7.11 |Anaconda 4.0.0 (64-bit)
...
</code></pre>
<hr/>
<h1>The module</h1>
<p>As the bindings are not shipped with the pre-compiled Windows binaries, you have to install the module manually:</p>
<ul>
<li>download the <a href="https://github.com/openalpr/openalpr/archive/master.zip" rel="noreferrer">GitHub repo as ZIP</a>;</li>
<li>extract the archive to a temporary folder, let's say <code>C:\Users\user\Downloads\openalpr-master</code>;</li>
<li>Python binding is into the <code>C:\Users\user\Downloads\openalpr-master\src\bindings\python</code> folder;</li>
<li>open a console into this directory and type <code>python setup.py install</code></li>
</ul>
<p>Voil√†, the Python module OpenAlpr is installed!.</p>
<p>Call <code>python_test.bat</code> from the OpenAlpr directory to see it works.</p>
<hr/>
<h1>Usage</h1>
<p>To be able to import OpenAlpr module from Python, two solutions.</p>
<p>Solution 1: you will need to work into the OpenAlpr directory where DLL files are located.
Then, it should works as expected:</p>
<pre><code>&gt;&gt;&gt; from openalpr import Alpr
&gt;&gt;&gt; alpr = Alpr('us', 'openalpr.conf', 'runtime_data')
&gt;&gt;&gt; alpr.is_loaded()
True
</code></pre>
<p>Solution 2 (best I think): you update the <code>PATH</code> to include the OpenAlpr folder:</p>
<pre><code>&gt;&gt;&gt; from os import environ
&gt;&gt;&gt; alpr_dir ='C:\Users\user\Downloads\openalpr-2.3.0-win-64bit\openalpr_64'
&gt;&gt;&gt; environ['PATH'] = alpr_dir + ';' + environ['PATH']

&gt;&gt;&gt; from openalpr import Alpr
&gt;&gt;&gt; alpr = Alpr('us', alpr_dir + '/openalpr.conf', alpr_dir + '/runtime_data')
&gt;&gt;&gt; alpr.is_loaded()
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you need to add the OpenALPR to the system path (step 4 below) and install the Python bindings (step 5 below). This is how I got OpenALPR to work on Windows 7/Anaconda 3/python 3.5 x64:</p>
<ol>
<li><p>You should uninstall any previous version of ALPR</p></li>
<li><p>Download the <em>binaries</em> <strong>and</strong> the <em>source code</em> from <a href="https://github.com/openalpr/openalpr/releases" rel="nofollow noreferrer">https://github.com/openalpr/openalpr/releases</a></p></li>
<li><p>Unzip the <em>binaries</em> <strong>and</strong> the <em>source code</em> in some directory, for example <code>C:\OpenALPR</code></p></li>
<li><p>Add the directory where alpr is located to your PATH. In my case <code>C:\OpenALPR\openalpr_64</code></p></li>
<li><p>Use Anaconda Prompt to install the Python bindings (they are in the source code directory). In my case:</p></li>
</ol>
<blockquote>
<pre><code>cd C:\OpenALPR\openalpr-2.3.0\src\bindings\python
python setup.py install --record files.txt
</code></pre>
</blockquote>
<ol start="6">
<li>Test your installation in the same prompt:</li>
</ol>
<blockquote>
<pre><code>cd C:\OpenALPR\openalpr_64
python_test.bat
</code></pre>
</blockquote>
<p>Output:</p>
<pre><code>Using OpenALPR 2.3.0
Image size: 497x372
Processing Time: 22.618999
Plate #1
          Plate   Confidence
  -       THECAR   92.207481
  -       THEGAR   81.348961
  -        HECAR   80.229317
  -       TMECAR   78.159492
  -       THE0AR   77.702461
  -       THECAB   77.389000
  -        THEAR   76.510017
</code></pre>
<p>Now there is a problem with the unload method of the DLL, but that is another issue: <code>Exception ignored in: &lt;bound method Alpr.__del__ of &lt;openalpr.openalpr.Alpr object at 0x0000000002C04198&gt;&gt;</code>. BTW this problem only happen when using alpr.unload().</p>
</div>
<span class="comment-copy">Which version of Python do you have and where is it installed?</span>
<span class="comment-copy">I am using Python 2.7.11(Anaconda 4.0) which is installed in <code>C:\Users\user\Anaconda</code>. For the openalpr, I installed it in <code>C:\Users\user\Downloads\openalpr-2.3.0-win-64bit</code></span>
<span class="comment-copy">is the Python 2.7 a 64 bits version?</span>
<span class="comment-copy">No solution solved your issue?</span>
<span class="comment-copy">Why the downvote? It is exactly what is asked and it works ...</span>
<span class="comment-copy">Thank you so much but I have a problem with the installation for python. I runing test.py but I got an error. Error details; <a href="https://groups.google.com/forum/#!topic/openalpr/EBHvhXD96-k" rel="nofollow noreferrer">groups.google.com/forum/#!topic/openalpr/EBHvhXD96-k</a></span>
