<div class="post-text" itemprop="text">
<p>I have a long running python script, and I want to use a node.js to display the data python prints(becasue I will make it a server and send data to somewhere else), I used python-shell, it doesn't display anything until the whole python finished, it there any way to display 'partial' output?</p>
<pre><code>var pshell = require('python-shell');
var prompt = require('prompt');
var command = 'start';

prompt.start();
function receivecommand() {
prompt.get(['input'], function(err, result) {
    if(result.input == command) {
        run();
        console.log('run')
    }
    else {console.log('type start')
            receivecommand();
        }  
    })
}
receivecommand();
function run() {
var ps = new pshell('hello.py');
ps.on('message', function(message) {
    console.log(message);
});
ps.end(function(err) {
    if (err) throw err;
    console.log('finished')
});
}
</code></pre>
<p>for now hello.py is just running a time-delay loop and print something out. </p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way is to setup a server with node js and just send requests with the data that is suppose to be printed. I am giving this solution of course in the prior knowledge that you have control of what is printed. ( You didn't mention if the output is coming from a script that you wrote or it is coming from another library or script of python.)</p>
</div>
<span class="comment-copy">Are you aware that <a href="https://docs.python.org/3/library/http.server.html" rel="nofollow noreferrer">Python has a simple, built-in web server</a>? Using it will likely be less complicated than adding node.js just to host stuff.</span>
<span class="comment-copy">Without knowing the desired setup or task to be fulfilled this question is far too broad since there are several solutions depending on things like complexity, availability and scalability. Changing data e.g. could be done by piping through different processes at the lower end or using a message broker resp. task queue at the upper end of scalability and complexity.</span>
<span class="comment-copy">@albert task to be fulfilled is to display what's printed out from python script when it's still running instead of display all together when it's finished.</span>
<span class="comment-copy">i'm sorry but i don't see your solution</span>
