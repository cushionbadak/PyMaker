<div class="post-text" itemprop="text">
<p>I have 2 lists of hostnames</p>
<pre><code>foo=['some-router-1', 'some-switch-1', 'some-switch-2']

bar=['some-router-1-lo','some-switch-1','some-switch-2-mgmt','some-switch-3-mgmt']
</code></pre>
<p>I would expect output to be like...</p>
<pre><code>out=['some-switch-3-mgmt']
</code></pre>
<p>I want to find entries in <code>bar</code> that are not in <code>foo</code>. However some names in <code>bar</code> have <code>"-mgmt"</code> or some other string appended that don't occur in <code>foo</code>. The length and number of dashes per list item vary greatly, so I'm not sure how successful using a regex would be. I'm new to programming, so please provide some explanation if possible.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may achieve it by using <code>filter</code> as:</p>
<pre><code>&gt;&gt;&gt; filter(lambda x: x if not any(x.startswith(f) for f in foo) else None, bar)
['some-switch-3-mgmt']
</code></pre>
<p>I am using <code>startswith</code> to check whether any element of <code>bar</code> starts with any element of <code>foo</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You could do this with a list comprehension and <code>all</code>:</p>
<pre><code>&gt;&gt;&gt; out = [i for i in bar if all(j not in i for j in foo)]    
&gt;&gt;&gt; out
['some-switch-3-mgmt']
</code></pre>
<p>Meaning, you select every element <code>i</code> in <code>bar</code> if, for every element <code>j</code> in <code>foo</code>, <code>j</code> is not contained in <code>i</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>startswith()</code> to see if a string starts with another string. So something like:</p>
<pre><code>out = [bar_string for bar_string in bar if not bar_string.startswith(tuple(foo))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is some problems with the solutions provided by @Jim and @bbkglb when the elements are repeated in <strong><em>bar</em></strong>. Those solutions should be converted to <strong><em>sets</em></strong>. I tested the solutions and their response times:</p>
<pre><code>foo=['some-router-1', 'some-switch-1', 'some-switch-2']*1000
bar=['some-router-1-lo','some-switch-1','some-switch-2-mgmt','some-switch-3-mgmt']*10000
</code></pre>
<h3>Using <a href="http://www.python-course.eu/python3_lambda.php" rel="nofollow">filter - lambda</a>:</h3>
<pre><code>%timeit set(filter(lambda x: x if not any(x.startswith(f) for f in foo) else None, bar))
1 loop, best of 3: 7.65 s per loop
</code></pre>
<h3>Using <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow">all</a>:</h3>
<pre><code>%timeit set([i for i in bar if all(j not in i for j in foo)])
1 loop, best of 3: 7.97 s per loop
</code></pre>
<h3>Using <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow">any</a>:</h3>
<pre><code>%timeit set(b for b in bar if not any(b.startswith(f) for f in foo))
1 loop, best of 3: 7.97 s per loop
</code></pre>
</div>
<span class="comment-copy">The bar elements are always in the name_in_foo-something_else? Or could be in the form one_thing-name_in_foo-something_else?</span>
<span class="comment-copy">bar is a list of hosts that show up on a logging server. foo is a list of hosts in a monitor server. They aren't matching lists. Purpose is to find hosts from the logging server (bar) that may not be in the monitoring server (foo). The beginning of the names are always the same, that's not the case with the ending though.</span>
<span class="comment-copy">Awesome, thanks!</span>
<span class="comment-copy">Use <code>i.startswith(j)</code> instead of <code>j not in i</code>. As mentioned by OP, <code>j</code> will be present only at the start of string</span>
<span class="comment-copy">Yup, you should use <code>i.startswith(j)</code> otherwise <code>a-switch-1</code> and <code>ba-switch-1</code> will be counted as equals...</span>
