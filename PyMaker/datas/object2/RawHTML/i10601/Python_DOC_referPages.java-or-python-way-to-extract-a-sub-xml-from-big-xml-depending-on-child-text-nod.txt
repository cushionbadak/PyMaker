<div class="post-text" itemprop="text">
<p>I have a big XML to be handled, I need to extract all "Situation" TAGS if these ones have &lt;_0:roadNumber&gt;A-52, &lt;_0:roadNumber&gt;AP-9 or &lt;_0:roadNumber&gt;A-55 values in theirs, because I don`t need the rest of XML. Then build a XML document with the XML substraction. I donÂ´t need a implementation, only I would like to know how can I handle this or wich API is the most appropiated, thanks.</p>
<p><strong>PD:</strong> My finall achieve is to dump the XML in a data base</p>
<p><strong>XML GET:</strong></p>
<pre><code>print("GETTING XML...")
resp = requests.get('http://infocar.dgt.es/datex2/dgt/SituationPublication/all/content.xml', stream = True) #XML that I need
if resp.status_code != 200:
    raise ApiError('GET /tasks/ {}'.format(resp.status_code))
print("XML RECIBIDO 200 OK")
#resp.raw.decode_content = True
print("GUARDANDO XML")
with open("DGT_DATEX.xml", "wb") as handle:
    for data in (resp.iter_content()):
        handle.write(data)

dom = parse("DGT_DATEX.xml")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For really big XML documents you should best use <a href="http://www.saxproject.org/" rel="nofollow">SAX</a> for streaming (not needing to have the full document in memory at once) but for finding elements easly <a href="https://www.w3.org/TR/xpath/" rel="nofollow">XPath</a> is really helpful.</p>
<p>For Python you have some <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xpath-support" rel="nofollow">XPath support</a> in <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow">xml.etree.ElementTree</a> and SAX in <a href="https://docs.python.org/3/library/xml.sax.html" rel="nofollow">xml.sax</a> - but there of course are other parsers, too.</p>
<p>There are SAX implementations and XPath for Java, too.</p>
</div>
