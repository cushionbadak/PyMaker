<div class="post-text" itemprop="text">
<p>I'm trying to convert data from an excel file to a python dictionary. My excel file has has two columns and many rows. </p>
<pre><code>Name    Age
Steve   11
Mike    10
John    11
</code></pre>
<p>How do I go about adding this into a dictionary with Age as the key and name as the value? Also, if many names have the same age, they should all be in an array. For example:</p>
<pre><code>{'11':['Steve','John'],'10':['Mike']}
</code></pre>
<p>What I've written so far:</p>
<pre><code>import xlsxwriter
import openpyxl

wb = openpyxl.load_workbook('demo.xlsx')
sheet = wb.get_sheet_by_name('Sheet1')

#print sheet.cell(row=2, column=2).value


age_and_names = {}

for i in range(1,11):

    age = sheet.cell(row=i, column=2).value
    name = sheet.cell(row=i, column=1).value  

#Problem seems to be in this general area
    if not age in age_and_names:
        age_and_names[age]=[]

        age_and_names[age].append(name)    

print age_and_names
</code></pre>
<p>What should I have done for the desired output? I'm very new to python. All help will be appreciated. Thank You. </p>
</div>
<div class="post-text" itemprop="text">
<p>Just a simple indentation error and your code is incorrect</p>
<pre><code>#Problem seems to be in this general area
    if not age in age_and_names:
        age_and_names[age]=[]
        age_and_names[age].append(name)    
</code></pre>
<p>should be</p>
<pre><code>#Problem seems to be in this general area
    if not age in age_and_names:
        age_and_names[age]=[]

    age_and_names[age].append(name)    
</code></pre>
<p>Otherwise you destroy previous data from <code>age_and_names[age]</code>.</p>
<p>You should consider using <code>collections.defaultdict</code> instead to avoid testing if key exists:</p>
<p>Declare like this</p>
<pre><code>from collections import defaultdict

age_and_names = defaultdict(list)
</code></pre>
<p>Use like this:</p>
<pre><code>age_and_names[12].append("Mike")
</code></pre>
<p>If the dict has no key <code>12</code>, it will invoke the <code>list</code> method and will create an empty list for you. No need to test if key exists in the first place.</p>
</div>
<div class="post-text" itemprop="text">
<p>For this case, use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>collections.defaultdict</code></a> instead of a plain dictionary <code>{}</code>); <code>collections.defaultdict</code> takes a factory function that is used to construct values for new keys. Use <code>list</code> to construct an empty list for each key:</p>
<pre><code>import collections
age_and_names = collections.defaultdict(list)

...
     age_and_names[age].append(name)
</code></pre>
<p>No <code>if</code>s are needed.</p>
</div>
<span class="comment-copy">This code works, but it has weird characters all around the keys and values: <code>{1L: [u'dmvyc'], 4L: [u'aorbe', u'ebphb', u'nprrj'], 5L: [u'fgyfg'], 6L: [u'ralno'], 7L: [u'zaysd', u'wmklg', u'gsdhy', u'cqiki']}</code></span>
<span class="comment-copy">that's the representation of the dict, don't worry if you print each element you won't get that. (u is for unicode and L is for long integer)</span>
<span class="comment-copy">No even if I print <code>print age_and_names[6]</code> it prints <code>[u'ralno']</code></span>
<span class="comment-copy">@Di437 That's because you are printing the list. If you want just an element in the list you have to index inside the list: <code>print age_and_names[6][0]</code> Also, you should probably be using Python 3.</span>
