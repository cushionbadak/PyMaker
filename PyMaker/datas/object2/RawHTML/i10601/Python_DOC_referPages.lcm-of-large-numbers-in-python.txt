<div class="post-text" itemprop="text">
<p>I'm using the formula "product of two number is equal to the product of their GCD and LCM".</p>
<p>Here's my code :</p>
<pre><code># Uses python3

import sys

def hcf(x, y):

    while(y):
        x, y = y, x % y

    return x

a,b = map(int,sys.stdin.readline().split())

res=int(((a*b)/hcf(a,b)))
print(res)
</code></pre>
<p>It works great for small numbers. But when i give input as :</p>
<blockquote>
<p>Input:
  226553150 1023473145</p>
<p>My output:
  46374212988031352</p>
<p>Correct output:
  46374212988031350</p>
</blockquote>
<p>Can anyone please tell me where am I going wrong ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Elaborating on the comments. In Python 3, true division, <code>/</code>, converts its arguments to floats. In your example, the true answer of <code>lcm(226553150, 1023473145)</code> is <code>46374212988031350</code>. By looking at <code>bin(46374212988031350)</code> you can verify that this is a 56 bit number. When you compute <code>226553150*1023473145/5</code> (5 is the gcd) you get <code>4.637421298803135e+16</code>. Documentation suggests that such floats only have 53 bits of precision. Since 53 &lt; 56, you have lost information. Using <code>//</code> avoids this. Somewhat counterintuitively, in cases like this it is "true" division which is actually false.</p>
<p>By the way, a useful module when dealing with exact calculations involving large integers is <a href="https://docs.python.org/3/library/fractions.html" rel="nofollow">fractions</a> (*):</p>
<pre><code>from fractions import gcd
def lcm(a,b):
    return a*b // gcd(a,b)

&gt;&gt;&gt; lcm(226553150,1023473145)
46374212988031350
</code></pre>
<p>(*) I just noticed that the documentation on <code>fractions</code> says this about its <code>gcd</code>: "Deprecated since version 3.5: Use math.gcd() instead", but I decided to keep the reference to <code>fractions</code> since it is still good to know about it and you might be using a version prior to 3.5.</p>
</div>
<span class="comment-copy">Use <code>//</code> rather than <code>/</code> ?</span>
<span class="comment-copy">@JohnColeman How will the floor division affect the result ?</span>
<span class="comment-copy">It will avoid loss of precision which true division will have when converting to floating point.</span>
<span class="comment-copy">The problem is solved. Thanks mate !</span>
<span class="comment-copy">That was an amazing explanation. Thanks for that. I was not allowed to use any other library other than 'sys', that's the reason i wasn't using them.</span>
