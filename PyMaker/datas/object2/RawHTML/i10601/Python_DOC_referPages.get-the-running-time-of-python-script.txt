<div class="post-text" itemprop="text">
<p>I wrote set of python scripts which runs as my back end. User have to upload a file using the web page that I have provided to them. I that web page there is a progress bar which shows the user how mach of processing done to there video file. Because this video file break into frames and identify objects and save in the db. Every things are works well except the progress bar. I need a way to indicate the user repeatedly until the script is completes. But I do not have a way to do this. I try to use</p>
<pre><code>start_time = time.time()

@app.route('/upload', methods=['POST'])
def upload_file():
filename = request.get_json()
print filename

fullPath = path + "/" + filename

print fullPath

fragmentation.framerate.calframerate(fullPath)

timeRunning = ("--- %s seconds ---" % (time.time() - start_time))

return timeRunning
</code></pre>
<p>but this will give the output after the script ends. But I need to show the progress bar till the script ends.</p>
<p>Is there is a way to do this.Please help me</p>
</div>
<div class="post-text" itemprop="text">
<p>A progress bar would require async or threading. Research these and give it a go. You can't be actively performing tasks while a progress bar is being rendered unless you are ticking the progress bar up in a loop. Which would be a better way to go about this. </p>
<p><a href="https://docs.python.org/2/library/threading.html" rel="nofollow">Threading</a></p>
<p><a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow">Asyncio</a></p>
</div>
<span class="comment-copy">Where is your php, javascript, html and ajax part? You only provided a python script.</span>
<span class="comment-copy">Questions seeking debugging help ("why isn't this code working?") must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself. Questions without a clear problem statement are not useful to other readers. See: <a href="http://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>.</span>
