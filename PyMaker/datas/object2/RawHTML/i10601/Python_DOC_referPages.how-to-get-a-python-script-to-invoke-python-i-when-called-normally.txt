<div class="post-text" itemprop="text">
<p>I have a python script that I like to run with <code>python -i script.py</code>, which runs the script and then enters interactive mode so that I can play around with the results.</p>
<p>Is it possible to have the script itself invoke this option, such that I can just run <code>python script.py</code> and the script will enter interactive mode after running?</p>
<p>Of course, I can simply add the <code>-i</code>, or if that is too much effort, I can write a shell script to invoke this.</p>
</div>
<div class="post-text" itemprop="text">
<p>From within <code>script.py</code>, set the <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONINSPECT"><code>PYTHONINSPECT</code></a> environment variable to any nonempty string. Python will recheck this environment variable at the end of the program and enter interactive mode.</p>
<pre><code>import os
# This can be placed at top or bottom of the script, unlike code.interact
os.environ['PYTHONINSPECT'] = 'TRUE'  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In addition to all the above answers, you can run the script as simply <code>./script.py</code> by making the file executable and setting the shebang line, e.g.</p>
<pre><code>#!/usr/bin/python -i
this = "A really boring program"
</code></pre>
<hr/>
<p>If you want to use this with the <code>env</code> command in order to get the system default <code>python</code>, then you can try using a shebang like <a href="https://stackoverflow.com/users/5249307/donkopotamus">@donkopotamus</a> suggested in the comments</p>
<pre><code>#!/usr/bin/env PYTHONINSPECT=1 python
</code></pre>
<p>The success of this may depend on the version of <code>env</code> installed on your platform however.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use an instance of <a href="https://docs.python.org/3/library/code.html#code.InteractiveInterpreter" rel="nofollow noreferrer"><code>code.InteractiveConsole</code></a> to get this to work:</p>
<pre><code>from code import InteractiveConsole
i = 20
d = 30
InteractiveConsole(locals=locals()).interact()
</code></pre>
<p>running this with <code>python script.py</code> will launch an interactive interpreter as the final statement and make the local names defined visible via <code>locals=locals()</code>.</p>
<pre><code>&gt;&gt;&gt; i
20
</code></pre>
<p>Similarly, a convenience function named <a href="https://docs.python.org/3/library/code.html#code.interact" rel="nofollow noreferrer"><code>code.interact</code></a> can be used:</p>
<pre><code>from code import interact
i = 20
d = 30
interact(local=locals())
</code></pre>
<p>This creates the instance for you, with the only caveat that <code>locals</code> is named <code>local</code> instead.</p>
<hr/>
<p>In addition to this, as <a href="https://stackoverflow.com/users/464744/blender">@Blender</a> stated in the comments, you could also embed the <code>IPython</code> REPL by using:</p>
<pre><code>import IPython
IPython.embed()
</code></pre>
<p>which has the added benefit of not requiring the namespace that has been populated in your script to be passed with <code>locals</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you're looking for <a href="https://docs.python.org/3/library/code.html#code.interact" rel="nofollow" title="code.interact">this</a>?</p>
<pre class="lang-py prettyprint-override"><code>import code
foo = 'bar'
print foo
code.interact(local=locals())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would simply accompany the script with a shell script that invokes it.</p>
<pre class="lang-sh prettyprint-override"><code>exec python -i "$(dirname "$0")/script.py"
</code></pre>
</div>
<span class="comment-copy">Unrequested Public Service Announcement: If you use 'python -i' and like tab-completion, you owe it to yourself to check out <a href="https://en.wikipedia.org/wiki/IPython" rel="nofollow noreferrer">iPython</a> (Fan, no affiliation.)</span>
<span class="comment-copy">I usually use <code>import IPython; IPython.embed()</code> if I want to play around with the state of my application. You might find it useful.</span>
<span class="comment-copy">@Blender why not add that to the answers? Also, OP I think the edit is unnecessary, if a user sees this question, he'll scroll down to see the answers.</span>
<span class="comment-copy">@Jim: It's not that much different from <code>code.interact(local=locals())</code>, the interpreter is just prettier. You still have to add code to the end of your script to embed it.</span>
<span class="comment-copy">@Blender fair enough, I'll add it as an addendum to my answer in order to have it in a more visible place.</span>
<span class="comment-copy">This is great! Would you know how to get it working with <code>#!/usr/bin/env python -i</code> ? I'm getting a <code>/usr/bin/env: python -i: No such file or directory</code></span>
<span class="comment-copy">@MatthewMoisen There are some platform-specific ways to do it nicely, and also some horrendous hacks that will potentially work in more places. For the full details see: <a href="http://stackoverflow.com/questions/3306518/cannot-pass-an-argument-to-python-with-usr-bin-env-python" title="cannot pass an argument to python with usr bin env python">stackoverflow.com/questions/3306518/â€¦</a></span>
<span class="comment-copy"><code>#!/usr/bin/env PYTHONINSPECT=1 python</code></span>
<span class="comment-copy">@donkopotamus as the comments in the answer I linked mention, that seems to work on some platforms but not on others.</span>
