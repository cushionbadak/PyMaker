<div class="post-text" itemprop="text">
<p>I hope to turn this into an app to remind myself to think every once in a while. I would like to ask 'why'/'why not' every time I put an input in. I wanna make the determinant factor whether or not the length of the <code>notoriginal</code>/<code>alsonotoriginal</code> is even or odd. </p>
<pre><code>print ('Have you thought today?') 

original = input('Yes or No:')

if len(original) &gt; 2:
    notoriginal = input('When?:')

elif len(original) &lt; 3:
    alsonotoriginal = input('Why?:')

while len(notoriginal) % 2 == 0:
    input('Why not?:') 

while len(notoriginal) % 2 &gt; 0:
    input('Why?:')

while len(alsonotoriginal) % 2 == 0:
    input('Why not?:') 

while len(alsonotoriginal) % 2 &gt; 0:
    input('Why?:')
</code></pre>
<p>You guys are the best! Thanks!</p>
<p>Edit: Thank you for all your help. I realize this was a pretty simple thing that I messed up. I'd also like to point out that I've since changed the original/notoriginal to better variable names such as second, third, and fourth. I fixed the problem I had, I took your suggestions. What I was confused/forgot about was that you could simply rename variables later in the code and the whole variable would change. What I had was  this:</p>
<pre><code>print ('Have you thought today?') 

first = input('Yes or No:')

if len(*first*) &gt; 2:
    **second** = input('When?:')

elif len(*second*) &lt; 3:
    **third** = input('Why?:')

if len(third) % 2 == 0:
    fourth = input('Why not?:') 
else:
    fifth = input('Why?:')

while len(fourth) % 2 == 0:
    fifth = input('Why?')

while len(fourth) % 2 &gt; 0:
    sixth = input('Why not?')
</code></pre>
<p>The problem was that I kept renaming variables, when they didn't have to be renamed and in fact caused an error because they were renamed. I was calling on the code to assess two separate variables when I should've been calling the code to check on a single variable that had two separate outcome values, like so:</p>
<pre><code>print ('Have you thought today?') 

first = input('Yes or No:')

if len(first) &gt; 2:
    second = input('When?:')

elif len(first) &lt; 3:
    second = input('Why?:')

if len(second) % 2 == 0:
    third = input('Why not?:') 
else:
    third = input('Why?:')

while len(third) % 2 == 0:
    third = input('Why?')

while len(third) % 2 &gt; 0:
    third = input('Why not?')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>The % Operand</h2>
<blockquote>
<p>The % (modulo) operator yields the remainder from the division of the
  first argument by the second. The numeric arguments are first
  converted to a common type. A zero right argument raises the
  ZeroDivisionError exception. The arguments may be floating point
  numbers, e.g., 3.14%0.7 equals 0.34 (since 3.14 equals 4*0.7 + 0.34.)
  The modulo operator always yields a result with the same sign as its
  second operand (or zero); the absolute value of the result is strictly
  smaller than the absolute value of the second operand</p>
</blockquote>
<p><a href="https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations" rel="nofollow" title="taken from here">taken from here</a></p>
<p>To divide <code>len('word')</code> you can use the <code>/</code> operand, but by using the <code>% 2</code> operation you are able to determine if a number is even or not by analyzing the result, if it returns 0, it is even, if it does not, it is odd, like so:</p>
<pre><code>number = input('Type a number: ')

if number % 2 == 0:
    print('Even')
else:
    print('Odd')
</code></pre>
<hr/>
<h2>Why the 'why' input keeps coming up</h2>
<p>The reason your code loops and seems to get stuck on the 'why?' question is because you are using <code>while len(notoriginal) % 2 &gt; 0</code> and <code>while len(alsonotoriginal) % 2 &gt; 0</code>, since the <code>notoriginal</code> and the <code>alsonotoriginal</code> values don't change after the input, you get what is called a 'infinite loop',  the same <code>while</code> loop will run forever. To fix this, instead of using <code>while</code>, you could use a <code>if</code> and <code>elif</code> statement, but doing so will require you to fix your code logic, since it's quite flawed at the moment.</p>
<hr/>
<h2>Also...</h2>
<p>Don't ever call your variables these generic names, it just makes for very confusing debugging later on.</p>
</div>
<span class="comment-copy">You have bugs. About half way through your program you stop assigning the return value of the input() function to a variable. That input is dropped and since the loop variable doesn't change, you are stuck. Consider adding print statements to debug when stuck on a problem like this!</span>
