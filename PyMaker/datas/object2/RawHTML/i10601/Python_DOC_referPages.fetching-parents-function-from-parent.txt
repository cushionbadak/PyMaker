<div class="post-text" itemprop="text">
<p>I override a function, but would like to get hold of the parent's function from within the parent.</p>
<pre><code>&gt;&gt;&gt; class a:
...     def __init__(self):
...             print(self.f)
...     def f(self):
...             pass
...
&gt;&gt;&gt; class b(a):
...     def __init__(self):
...             super(b, self).__init__()
...     def f(self):
...             pass
...
&gt;&gt;&gt; b()
&lt;bound method b.f of &lt;__main__.b object at 0x000002E297A96160&gt;&gt;
</code></pre>
<p>I'd like the printout to say <code>a.f</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/tutorial/classes.html#private-variables" rel="nofollow">name mangling</a> to make <code>self.__f</code> refer to <code>A.__f</code> from within <code>A</code>'s class definition.</p>
<blockquote>
<p>Name mangling is helpful for letting subclasses override methods without breaking intraclass method calls</p>
</blockquote>
<pre><code>class A:

    def __init__(self):
        self.__f()

    def f(self):
        print('A.f')

    __f = f   # Private copy of A's `f` method

class B(A):

    def __init__(self):
        super(B, self).__init__()

    def f(self):
        print('B.f')

b = B()
b.f()
</code></pre>
<p>prints</p>
<pre><code>A.f
B.f
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>class a(object):
    def __init__(self):
        pass

    def f(self):
        print 'Parent Method...'

class b(a):
    def __init__(self):
        super(b, self).__init__()
        a.f(self) #referance the parent class rather than the child class, because the child overrides the parent method.
        self.f()

    def f(self):
        print "Childs Method..."


b()
</code></pre>
</div>
<span class="comment-copy">So we can avoid an <a href="http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a>, what's the <i>actual</i> problem you're trying to solve? An instance of <code>b</code> <i>should</i> see its own implementation of <code>f</code> first.</span>
<span class="comment-copy">I'm working on some optimizing code. This is the <i>actual</i> problem.</span>
<span class="comment-copy">That's really added no more information. Unless you want to be explicit (<code>print(a.f)</code>), you can't.</span>
<span class="comment-copy">Because class <code>b</code> inherits class <code>a</code>'s methods <code>f()</code> becomes a method of <code>b</code>. I am incredibly unsure of the issue at hand. What is your end goal?</span>
<span class="comment-copy">Do you want <code>self.f()</code> (or something like it) from within <code>class a</code> to call <code>a.f</code> or do you literally want <code>print(self.f)</code> to print <code>a.f</code>?</span>
<span class="comment-copy">As the questions states, "from parent." You're calling <code>a.f</code> from the child class <code>b</code>.</span>
