<div class="post-text" itemprop="text">
<p>All of the examples I've seen have used <code>psql</code> with something like <code>COPY COMMAND | gzip &gt; 'filename'</code>.  I'd prefer to use a solution with <code>psycopg2</code> if possible, and I was thinking that it might be nice to write it out to a string buffer type object which processes the data and then writes out a compressed <code>gzip</code> file.</p>
<p>How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The documentation for psycopg says that <a href="http://initd.org/psycopg/docs/cursor.html#cursor.copy_to" rel="nofollow"><code>copy_to</code></a> accepts any file-like object. Thus you could simply use the <a href="https://docs.python.org/3/library/gzip.html" rel="nofollow"><code>gzip.open</code></a> to open a writable gzip file-like object:</p>
<pre><code>import gzip

with gzip.open('table-data.gz', 'wb') as gzip_file:
    cursor.copy_to(gzip_file, 'my_table')
</code></pre>
<p>Alternatively, if you prefer to write text in certain encoding, and on Python 3.3+, you can use mode <code>'wt'</code> and add <code>encoding='UTF-8'</code> or similar to the <code>gzip.open</code>.</p>
</div>
<span class="comment-copy">do you know the <code>Gzip</code> module?</span>
<span class="comment-copy">I use it all the time, just took a peek and maybe the <code>GzipFile</code> object might be the answer?</span>
<span class="comment-copy">Fantastic, would there be a way to perform an intermediary step where I add a couple of etl tracking fields before it's written out?</span>
<span class="comment-copy">You can write it to <code>io.BytesIO</code> or <code>io.StringIO</code> instead, but it would then be held in memory! Are you sure you have enough memory? Perhaps easiest to spool it into one file, then process it from that file to another, another approach would be to write a class that can process lines as they're written through it.</span>
<span class="comment-copy">Writing a class to process lines as they are added in is exactly what I had in mind, I've been trying to find a good starting point for something similar.  If you could point me in the direction of a library or file on github I could peek at I would be very appreciative!  It's mostly the streaming part that confuses me.  Would a co-routine be what you had in mind?</span>
