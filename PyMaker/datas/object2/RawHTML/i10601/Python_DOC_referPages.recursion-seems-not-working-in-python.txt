<div class="post-text" itemprop="text">
<p>I am writing a piece of code to recursively processing *.py files. The code block is as the following:</p>
<pre><code>class FileProcessor(object):

    def convert(self,file_path):
        if os.path.isdir(file_path):
            """ If the path is a directory,then process it recursively 
                untill a file is met"""
            dir_list=os.listdir(file_path)
            print("Now Processing Directory:",file_path)

            i=1

            for temp_dir in dir_list:
                print(i,":",temp_dir)
                i=i+1
                self.convert(temp_dir)
        else:
            """ if the path is not a directory"""
            """ TODO something meaningful """

if __name__ == '__main__':
    tempObj=FileProcessor()
    tempObj.convert(sys.argv[1])
</code></pre>
<p>When I run the script with a directory path as argument, it only runs the first layer of the directory, the line:</p>
<pre><code>self.convert(temp_dir)
</code></pre>
<p>seems never get called. I'm using Python 3.5.</p>
</div>
<div class="post-text" itemprop="text">
<p>The recursion is happening fine, but <code>temp_dir</code> is not a directory so it passes control to your stub <code>else</code> block. You can see this if you put <code>print(file_path)</code> outside your <code>if</code> block.</p>
<p><code>temp_dir</code> is the <strong><em>name</em></strong> of the next directory, not its absolute path. <code>"C:/users/adsmith/tmp/folder"</code> becomes just <code>"folder"</code>. Use <code>os.path.abspath</code> to get that</p>
<pre><code>self.convert(os.path.abspath(temp_dir))
</code></pre>
<p>Although the canonical way to do this (as mentioned in my comment on the question) is to use <code>os.walk</code>.</p>
<pre><code>class FileProcessor(object):
    def convert(self, file_path):
        for root, dirs, files in os.walk(file_path):
            # if file_path is C:/users/adsmith, then:
            #   root == C:/users/adsmith
            #   dirs is an iterator of each directory in C:/users/adsmith
            #   files is an iterator of each file in C:/users/adsmith
            # this walks on its own, so your next iteration will be
            # the next deeper directory in `dirs`

            for i, d in enumerate(dirs):
                # this is also preferred to setting a counter var and incrementing
                print(i, ":", d)
                # no need to recurse here since os.walk does that itself
            for fname in files:
                # do something with the files? I guess?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As <code>temp_dir</code> has the filename only without parent path, you should change</p>
<pre><code>self.convert(temp_dir)
</code></pre>
<p>to</p>
<pre><code>self.convert(os.path.join(file_path, temp_dir))
</code></pre>
</div>
<span class="comment-copy">there's a better way to do this btw. <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a></span>
<span class="comment-copy">thanks a lot. detailed explanation and nice example,helps a lot!</span>
<span class="comment-copy">thanks,lots to learn on the python way</span>
