<div class="post-text" itemprop="text">
<p>I am preparing for my exam and I decided to start solving past exams. One of the requirements is to understand what a code does. But I am having troubles with this annotation.</p>
<p>I do not understand which the structure of this nested loop and which loop is executed first.</p>
<pre><code>n = 10
p = [q for q in range(2, n) if q not in [r for i in range(2, int(n**0.5)) for r in range(i * 2, n, i)]]
print(p)
</code></pre>
<p>Can someone help me understand please?</p>
</div>
<div class="post-text" itemprop="text">
<p>As a rule of thumb, the innermost loops are going to be executed first.</p>
<p>Having this in mind, let's break the problem down :</p>
<pre><code>[r for i in range(2, int(n**0.5)) for r in range(i * 2, n, i)]
</code></pre>
<p><code>n**0.5</code> is 3.xxx, so <code>range(2, int(n**0.5))</code> is in fact range(2, 3), which is 2 (see <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow">range</a> for more informations).</p>
<p>So <code>i</code> is going to be 2, no matter what.</p>
<p><code>r in range(i * 2, n, i)</code> looks pretty simple now, r will be between 4 and 10 (excluded), using a step of 2. The possible values are 4, 6 and 8.</p>
<p>The problem becomes :</p>
<pre><code>p = [q for q in range(2, n) if q not in [4, 6, 8]]
</code></pre>
<p>Which is basically all odd numbers between 2 and 10 (excluded), plus the number 2.</p>
</div>
<div class="post-text" itemprop="text">
<p>It starts by evaluating:</p>
<pre><code>[r for i in range(2, int(n**0.5)) for r in range(i * 2, n, i)]
</code></pre>
<p>which boils down to:</p>
<pre><code>[r for r in range(4, 10, 2)]
</code></pre>
<p>since <code>range(2, int(n * 0.5))</code> reduces to a list with a single element <code>[2]</code> that is used as the value of <code>i</code> in the <code>for r in range(i * 2, n, i)</code> statement. So the inner list comprehension evaluates to <code>[4, 6, 8]</code>.</p>
<p>Then, the outer loop <code>for q in range(2, n)</code> is executed and it returns those elements from the list <code>[2, 3, ..., 9]</code> that do not belong in the previously constructed list i.e <code>[4, 6, 8]</code> with:</p>
<pre><code># range(2, n) -&gt; [2, 3, ..., 9]
q for q in range(2, n) if q not in [..previously constructed list]     
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This equivalent to :</p>
<pre><code>list_i=[]
for i in range(2, int(n**0.5)):
    for r in range(i*2, n, i):
        list_i.append(r)
res=[]
for q in range(2, n) :
    if q not in list_i:
        res.append(q)

print res
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're having a hard time understanding inner loops, run this code:</p>
<pre><code>resultA = []
for x in ['x1', 'x2', 'x3']:
    for y in ['y1', 'y2', 'y3']:
        for z in ['z1', 'z2', 'z3']:
            resultA.append(''.join([x, y, z]))

print resultA

resultB = [''.join([x, y, z])
           for x in ['x1', 'x2', 'x3']
           for y in ['y1', 'y2', 'y3']
           for z in ['z1', 'z2', 'z3']
           ]

print resultB

print resultA == resultB
</code></pre>
<p>Once you've understood this code comprehension lists become second nature to you, then just come back to your original code and you won't have any problems with it :)</p>
</div>
<span class="comment-copy">Does <a href="http://stackoverflow.com/questions/18072759/python-nested-list-comprehension">this</a> help?</span>
<span class="comment-copy">write them out as regular loops and you will be able to figure it out pretty easily.</span>
<span class="comment-copy">alright I get it cristal clear now!! thanks thanks thanks</span>
