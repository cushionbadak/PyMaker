<div class="post-text" itemprop="text">
<p>I'm starting my Python Websocket using "ws.run_forever", another <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.run_until_complete" rel="nofollow">source</a> stated that I should use "run_until_complete()" but these functions only seem available to Python asyncio.</p>
<p>How can I stop a websocket client? Or how to start it withouth running forever.</p>
</div>
<div class="post-text" itemprop="text">
<p>In python websockets, you can use "ws.keep_running = False" to stop the "forever running" websocket.</p>
<p>This may be a little unintuitive and you may choose another library which may work better overall.</p>
<p>The code below was working for me (using ws.keep_running = False).</p>
<pre><code>class testingThread(threading.Thread):
    def __init__(self,threadID):
        threading.Thread.__init__(self)
        self.threadID = threadID
    def run(self):
        print str(self.threadID) + " Starting thread"
        self.ws = websocket.WebSocketApp("ws://localhost/ws", on_error = self.on_error, on_close = self.on_close, on_message=self.on_message,on_open=self.on_open)
        self.ws.keep_running = True 
        self.wst = threading.Thread(target=self.ws.run_forever)
        self.wst.daemon = True
        self.wst.start()
        running = True;
        testNr = 0;
        time.sleep(0.1)
        while running:          
            testNr = testNr+1;
            time.sleep(1.0)
            self.ws.send(str(self.threadID)+" Test: "+str(testNr)+")
        self.ws.keep_running = False;
        print str(self.threadID) + " Exiting thread"
</code></pre>
</div>
<span class="comment-copy">Are there any recommendations for alternative Python Websocket libraries?</span>
<span class="comment-copy">I think this isn't really a valid comment to this post, you may be better off creating an "question" yourself or use Google to find other recommendations. Though the real question is why?</span>
<span class="comment-copy">I asked this question because you specifically stated that the library in the question was unintuitive, which suggests the existence of better alternatives.</span>
<span class="comment-copy">Hmm, I see your point, though it was quite some time ago and I haven't quite dug deeper into Python. I've been using NodeJS more and more lately, but that can be completely irrelevant.</span>
