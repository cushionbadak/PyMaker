<div class="post-text" itemprop="text">
<p>I am a beginner in python and I am trying to solve a coding problem, got this error. Don't understand why ? I went through a couple of Q/A's here but they don't seem to solve my problem. Essentially what I am trying to do is iterate over a string, through its characters and fill these characters in a dictionary. With characters being the keys and values being the number of times these characters appeared. So I'm trying the following: </p>
<pre><code> def myfunc(mystring):
 for i in mystring:
    if charCounter[i]:
       charCounter[i] += 1
    charCounter[i] = 1

 mystring = "hello! how are you ?"
 myfunc(mystring)
</code></pre>
<p>and Im getting following error:</p>
<blockquote>
<p>File "xyq.py", line 3, in myfunc
      if CharCounter[i]:
  KeyError: 'h'</p>
</blockquote>
<p>Can someone please suggest, where am I going wrong ? And if possible how can I improve the code ?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to check if <code>i</code> is in <code>charCounter</code> before you try to retrieve it:</p>
<pre><code>if i in charCounter:
    charCounter[i] += 1
else:
    charCounter[i] = 1
</code></pre>
<p>Or alternatively:</p>
<pre><code>if charCounter.get(i):
   ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if charCounter[i]:
</code></pre>
<p>throws <code>KeyError</code> if the key does not exist. What you want to do isuse <code>if i in charCounter:</code> instead:</p>
<pre><code>if i in char_counter:
    char_counter[i] += 1
else:
    char_counter[i] = 1
</code></pre>
<p>Alternatively you could use <code>get</code> which <em>gets</em> the value if it exists, or returns the second (optional) value if it didn't exist:</p>
<pre><code>char_counter[i] = char_counter.get(i, 0) + 1
</code></pre>
<p>However this counting pattern is so popular that a whole class exists for it: <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a>: </p>
<pre><code>from collections import Counter

def my_func(my_string):
    return Counter(my_string)
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; counts = my_func('hello! how are you ?')
&gt;&gt;&gt; counts
Counter({' ': 4, 'o': 3, 'h': 2, 'l': 2, 'e': 2, '!': 1, 'r': 1, 'a': 1,
         '?': 1, 'w': 1, 'u': 1, 'y': 1})
&gt;&gt;&gt; counts[' ']
4
</code></pre>
<p><code>collections.Counter</code> is a subclass of dictionary, so it would behave in the same way that an ordinary dictionary would do with item access and so forth.</p>
</div>
<span class="comment-copy">Your example is not reproducible. What is <code>charCounter</code>? Where is it initialised?</span>
<span class="comment-copy">Sorry! Somehow I missed it in my code. charCounter is a dictionary charCounter = {} and this is declared inside myfunc at the top.</span>
<span class="comment-copy">@CodeInfinity You can re-edit your question. Please do so to improve the quality of your question for future readers. Thanks.</span>
<span class="comment-copy">Hi Zach!  Thanks for your suggestion. charCounter is actually an empty dictionary here declared inside myfunc. Somehow I missed to write it here.  What can be done in that case ?</span>
<span class="comment-copy">Hi!  Thanks for your suggestion. charCounter is actually an empty dictionary here declared inside myfunc. Somehow I missed to write it here. What can be done in that case ?</span>
<span class="comment-copy">@CodeInfinity fixed</span>
<span class="comment-copy">Thanks @Antii, i'll try this out</span>
