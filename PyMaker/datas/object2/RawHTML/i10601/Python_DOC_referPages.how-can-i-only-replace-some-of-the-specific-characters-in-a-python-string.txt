<div class="post-text" itemprop="text">
<p>I want to replace characters in a string but not all of the characters at once.  For example:</p>
<pre><code>s = "abac"
</code></pre>
<p>I would like to replace the string with all these options</p>
<pre><code>"Xbac"
"abXc"
"XbXc"
</code></pre>
<p>I only know the normal s.replace() function that would replace all occurences of that character.  Does anyone have any clever code that would replace all the possible options of characters in the string?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>string.replace(s, old, new[, maxreplace])
</code></pre>
<p>Return a copy of string s with all occurrences of substring old replaced by new. If the optional argument maxreplace is given, the first maxreplace occurrences are replaced.
So, if <code>maxreplace=1</code> only the first character is replaced.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/string.html#string.replace" rel="nofollow">You can still use <code>replace()</code></a> to only replace the first <em>k</em> occurrences of a character, rather than all of them at once.</p>
<blockquote>
<p><em>string.replace(s, old, new[, maxreplace])</em> </p>
<p>Return a copy of string <code>s</code> with all occurrences of substring <code>old</code> replaced by <code>new</code>. <strong>If the optional argument <code>maxreplace</code> is given, the first <code>maxreplace</code> occurrences are replaced.</strong></p>
</blockquote>
<p>So your example could be accomplished by:</p>
<pre><code>'abac'.replace('a','X',1).replace('a','X',1)
&gt;&gt;&gt; 'XbXc'
</code></pre>
<hr/>
<p>More complicated patterns can be accomplished by using the <code>re</code> module in Python, which allows for pattern matching using regular expressions, notably with <a href="https://docs.python.org/2/library/re.html#re.sub" rel="nofollow"><code>re.sub()</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Does anyone have any clever code that would replace all the possible
  options of characters in the string?</p>
</blockquote>
<p>Take a look at <a href="https://docs.python.org/3.4/library/re.html" rel="nofollow">regular expressions</a> in Python.</p>
<p>Here's an example:</p>
<pre><code>import re

s = "abac"

re.sub('^a', 'X', s)

# output = 'Xbac'
</code></pre>
<p>This would replace all strings that start with <code>a</code> and put an <code>X</code> there.</p>
</div>
<div class="post-text" itemprop="text">
<p>I have managed to replace all the character in the string with all the different combinations.  Although the code isnt the most efficient it does what I wanted it to</p>
<pre><code>def replaceall(s, n):
    occurence = s.count(n)
    alt = []
    temp = s
    for i in range(occurence):
        temp2 = temp
        for j in range(i,occurence):
            temp2 = temp2.replace(n,"x",1)
            alt.append(temp2)
        temp = temp.replace(n,"!",1)
    for i in range(len(alt)):
        alt[i] = alt[i].replace("!",n)

    return alt
</code></pre>
</div>
<span class="comment-copy">Do you mean any combinations of those particular letters?  It sounds an awful lot like regex (<a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">docs.python.org/2/library/re.html</a>) would do the trick if this is what you meant.</span>
<span class="comment-copy">The normal <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">replace</a> only replaces all occurences if you fail to provide the optional third (count) parameter.</span>
<span class="comment-copy">What are the input data? The string <code>abac</code>, what else? The question is not clear.</span>
<span class="comment-copy">Are you planning to only replace single characters?</span>
<span class="comment-copy">Are you planning to replace a specific char at specific positions or just a specific number of occurrence? Like first <code>a</code>, or second <code>a</code>?</span>
