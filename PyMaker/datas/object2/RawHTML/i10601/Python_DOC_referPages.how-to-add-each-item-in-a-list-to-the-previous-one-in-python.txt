<div class="post-text" itemprop="text">
<p>I have a list and I want to add each element in the list to the previous one. For example if I have the list <code>(1,1,3,3,4)</code>, I want the program to output <code>(1,2,5,8,12)</code>. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>[sum(a[:i]) for i in range(1,len(a)+1)]
</code></pre>
<p>is probably the easiest way ... I guess ...</p>
<pre><code>numpy.cumsum(a)
</code></pre>
<p>would also work i think</p>
</div>
<div class="post-text" itemprop="text">
<p>using <a href="https://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow"><code>itertools.accumulate</code></a></p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; list(itertools.accumulate([1,1,3,3,4], lambda total,el: total+el))
[1, 2, 5, 8, 12]
</code></pre>
<p><em>disclaimer</em>: added in python 3.2</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>for i in range(1, len(arr)):
    arr[i] += arr[i - 1]
</code></pre>
<p>more efficient than Joran Beasley loop</p>
</div>
<span class="comment-copy">Wouldn't adding each element "to the previous one" give you (2,4,6,7,4)?</span>
<span class="comment-copy">@ScottHunter..i think the OP meant cumulative sum based on his expected result.</span>
<span class="comment-copy">^_^ ... not really if its big enough to impact speedwise the numpy version is what he should really use :P +1 all the same ... just maybe a little less clear to the reader that it is a cumulative sum</span>
<span class="comment-copy">yea i am sure numpy.cumsum was implemented as fast as possible i was talking about the first loop</span>
