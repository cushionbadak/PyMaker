<div class="post-text" itemprop="text">
<p>I'm trying to convert <code>NULL</code> values in a .csv to <code>NaN</code> and then save a file with these edits. <code>f</code> in the code below has the <code>NaN</code>values in the correct location in the data. However, I am unable to save this as a .csv. the error is printed below the code.</p>
<pre><code>#take .csv with NULL and replaces with NaN - write numerical and NaN values to .csv

import csv
import numpy as np
import pandas

f = pandas.read_csv('C:\Users\mmso2\Google Drive\MABL Wind\_Semester 2 2016\Wind Farm Info\DataB\DataB - Copy.csv')#convert file to variable so it can be edited
outfile = open('C:\Users\mmso2\Google Drive\MABL Wind\_Semester 2 2016\Wind Farm Info\DataB\DataB - NaN1.csv','wb')#create empty file to write to
writer = csv.writer(outfile)#writer will write when given the data to write below
result = f[f is 'NULL'] = np.nan

writer.writerows(f)
</code></pre>
<p>error:</p>
<pre><code> Traceback (most recent call last):
  File "C:/Users/mmso2/Google Drive/MABL Wind/_Semester 2 2016/_PGR Training/CENTA/MATLAB/In class ex/SAR_data/gg_nan.py", line 12, in &lt;module&gt;
    writer.writerows(f)
_csv.Error: sequence expected
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/csv.html#csv.csvwriter.writerows" rel="nofollow"><code>csv.writer.writerows()</code></a> expects a sequence of sequences (a sequence of row objects), which a <code>pandas.DataFrame</code> is not, as it returns a sequence of column names when iterated over:</p>
<pre><code>In [23]: df = pd.DataFrame({'A': range(10)})

In [24]: for x in df: 
    print(x)
   ....:     
A
</code></pre>
<p>This can bite you silently, as a sequence of strings is actually a sequence of sequences, so you'd end up with a CSV file that contains rows made up of the letters of your column names. In your case it fails because of how you tried to replace the 'NULL' strings, which ended up adding a column with the label <code>False</code> (a boolean value).</p>
<p>To iterate over row tuples, you'd use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.itertuples.html" rel="nofollow"><code>DataFrame.itertuples()</code></a>:</p>
<pre><code>In [27]: for x in df.itertuples(index=False):
    print(x)
   ....:     
(0,)
(1,)
(2,)
...
</code></pre>
<p>The easiest approach though is to simply use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html" rel="nofollow"><code>DataFrame.to_csv()</code></a>:</p>
<pre><code>filename = 'C:\Users\mmso2\Google Drive\MABL Wind\_Semester 2 2016\Wind Farm Info\DataB\DataB - NaN1.csv'
f.to_csv(filename, na_rep='NaN')  # default representation for nans is ''
</code></pre>
<p>Note that to replace the <code>'NULL'</code> values you have to use the equality operator instead of the identity operator <code>is</code>:</p>
<pre><code>f[f == 'NULL'] = np.nan
</code></pre>
<p>Using the identity will effectively add a new column labeled <code>False</code> with all values set to nan:</p>
<pre><code>In [42]: df = pd.DataFrame({'A': ['NULL', 1] * 10})

In [43]: df[df is 'NULL'] = float('nan')

In [44]: df
Out[44]: 
       A  False
0   NULL    NaN
1      1    NaN
2   NULL    NaN
3      1    NaN
...
</code></pre>
<p>because <code>f is 'NULL'</code> evaluates to <code>False</code> instead of a new <code>DataFrame</code>.</p>
</div>
<span class="comment-copy">Why not <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html" rel="nofollow noreferrer"><code>f.to_csv(...)</code></a>?</span>
<span class="comment-copy">I hadn't heard of that before - thanks!</span>
