<div class="post-text" itemprop="text">
<pre><code>a=str(input("Enter string: "))
b=str(input("Enter another: "))

def switch(x, y): 
    x, y = y, x
    return x, y

print (switch(a, b))
</code></pre>
<p>output is for example: ('there', 'hello')
I want to remove parathenses and ''</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you want to keep the output of your function the same (a tuple), you can use use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>join</code></a> to print the tuple separated by a space:</p>
<pre><code>a = input("Enter string: ")
b = input("Enter another: ")

def switch(x, y):
    return y, x

print(' '.join(switch(a, b)))
</code></pre>
<p><strong>Small note</strong>: I changed the method to just be <code>return y, x</code>, since the other two lines in the method did not seem needed in this case :)</p>
</div>
<div class="post-text" itemprop="text">
<p>The return value of <code>switch</code> is a tuple of 2 items (a pair), which is passed to the <code>print</code> function as a single argument. And <code>print</code> converts each of its arguments to a string with implicit <code>str</code>, and the <code>('', '')</code> come from the string representation of this tuple.</p>
<p>What you want is to pass each item in the pair separately.</p>
<p>As this is Python 3, you just need to add one character:</p>
<pre><code>print(*switch(a, b))
</code></pre>
<p>The <code>*</code> means "pass the elements of the following iterable as separate positional arguments", so it is shorthand (in this case) for</p>
<pre><code>value = switch(a, b)
print(value[0], value[1])
</code></pre>
<p>Print normally prints the values separated by a single space. If you want another separator, for example <code>,</code>, you can use the <code>sep</code> keyword argument:</p>
<pre><code>print(*switch(a, b), sep=', ')
</code></pre>
<hr/>
<p>Finally, the <code>str()</code> in your example seem unnecessary.</p>
</div>
<span class="comment-copy">Don't print the list, print each element separately.</span>
<span class="comment-copy">makes sense now. But how does the ' '.join function remove the characters?</span>
<span class="comment-copy">Ah - it actually doesn't remove any characters. It's just that when you just print a tuple itself, it will add the parenthesis and the quotes to provide a string representation of a tuple of strings. The same goes for a list...if you print a Python list intialized as <code>['hello', 'world']</code>, it will print as <code>['hello', 'world']</code> with the quotes and brackets to indicate it's a list (as opposed to just the strings within the list).</span>
