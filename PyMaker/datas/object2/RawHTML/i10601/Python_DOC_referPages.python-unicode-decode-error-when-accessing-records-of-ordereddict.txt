<div class="post-text" itemprop="text">
<p>using python 3.5.2 on windows (32), I'm reading a DBF file which returns me an OrderedDict.</p>
<pre><code>from dbfread import DBF
Table = DBF('FME.DBF')
for record in Table:
   print(record)
</code></pre>
<p>When accessing the first record all is ok until I reach a record which contains diacritics:</p>
<pre><code>Traceback (most recent call last):
  File "getdbe.py", line 3, in &lt;module&gt;
    for record in Table:
  File "...\AppData\Local\Programs\Python\Python35-32\lib\site-packages\dbfread\dbf.py", line 311, in _iter_records
    for field in self.fields]
  File "...\AppData\Local\Programs\Python\Python35-32\lib\site-packages\dbfread\dbf.py", line 311, in &lt;listcomp&gt;
    for field in self.fields]
  File "...\AppData\Local\Programs\Python\Python35-32\lib\site-packages\dbfread\field_parser.py", line 75, in parse
    return func(field, data)
  File "...\AppData\Local\Programs\Python\Python35-32\lib\site-packages\dbfread\field_parser.py", line 83, in parseC
    return decode_text(data.rstrip(b'\0 '), self.encoding)
UnicodeDecodeError: 'ascii' codec can't decode byte 0x82 in position 11: ordinal not in range(128)
</code></pre>
<p>Even if I don't print the record I still have the problem.</p>
<p>Any idea ?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>dbfread</code> failed to detect the correct encoding from your DBF file. From the <a href="https://dbfread.readthedocs.io/en/latest/introduction.html#character-encodings" rel="nofollow"><em>Character Encodings</em> section of the documentation</a>:</p>
<blockquote>
<p><code>dbfread</code> will try to detect the character encoding (code page) used in the file by looking at the <code>language_driver</code> byte. <strong>If this fails it reverts to ASCII</strong>. You can override this by passing <code>encoding='my-encoding'</code>.</p>
</blockquote>
<p>Emphasis mine.</p>
<p>You'll have to pass in an explicit encoding; this will invariably be a Windows codepage. Take a look at the <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow">supported codecs in Python</a>; you'll have to use one that starts with <code>cp</code> here. If you don't know what codepage to you you'll have some trial-and-error work to do. Note that some codepages overlap in characters, so even if a codepage appears to produce legible results, you may want to continue searching and trying out different records in your data file to see what fits best.</p>
</div>
<span class="comment-copy"><a href="https://dbfread.readthedocs.io/en/latest/introduction.html#character-encodings" rel="nofollow noreferrer">dbfread.readthedocs.io/en/latest/…</a>, try passing <code>DBF(...)</code> the correct encoding.</span>
<span class="comment-copy">Are you sure it's UTF-8 encoding?</span>
<span class="comment-copy">@Harrison: I highly doubt it, DBF is not a format where I'd expect to see UTF-8 encoded data. Where does the OP even mention UTF-8 however?</span>
<span class="comment-copy">That's the right answer. I had problem finding the right encoding, so I looked the first encountered diacritic i.e. <b>"é"</b> and searched which encoding correspond to <b>x82</b>, I found it was cp850 (MS-DOS).</span>
<span class="comment-copy">@SDufour: there are <a href="http://www.fileformat.info/info/unicode/char/e9/codepage_support.htm" rel="nofollow noreferrer">11 codepages where <code>é</code> is encoded as 0x82</a>. You could possibly narrow that down further with more codepoints.</span>
<span class="comment-copy">Thanks, I haven't had time to look at it.</span>
<span class="comment-copy">One could image a program which will read throught a file and instead of throwing exceptions would show you the surrounding words and ask you which character is expected, removing all codepages that aren't matching. Does it look possible ?</span>
<span class="comment-copy">@SDufour: yes, that's something that is possible, given that the number of codecs here is limited to 1-byte encodings which all are supersets of ASCII.</span>
