<div class="post-text" itemprop="text">
<p>I have this piece of code:</p>
<pre><code>from shutil import rmtree

def ook(path):
    rmtree(path, onerror=lambda x, y, z: self._logger.warn(z[1]))
</code></pre>
<p>In my unit tests, I want to mock it so check that right <code>path</code> is passed:</p>
<pre><code>from mock import patch, ANY

@patch("rmtree")
def test_rmtree(self, m_rmtree):
    ook('/tmp/fubar')
    m_rmtree.assert_called_once_with('/tmp/fubar', onerror=ANY)
</code></pre>
<p>What can I replace <code>ANY</code> with to check that there is a lambda there?</p>
</div>
<div class="post-text" itemprop="text">
<p>I would do this with the <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.call_args" rel="nofollow"><code>call_args</code></a> and <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.call_count" rel="nofollow"><code>call_count</code></a> rather than directly in <code>assert_called_once_with</code>, I don't think <code>unittest.mock</code> has anything like e.g. <a href="http://jasmine.github.io/2.0/introduction.html#section-Matching_Anything_with_&lt;code&gt;jasmine.any&lt;/code" rel="nofollow"><code>jasmine.any</code></a>:</p>
<pre><code>from collections import Callable

...

@patch("rmtree")
def test_rmtree(self, m_rmtree):
    ook('/tmp/fubar')
    assert m_rmtree.call_count == 1
    args, kwargs = m_rmtree.call_args
    assert args[0] == '/tmp/fubar'
    assert isinstance(kwargs.get('onerror'), Callable)
</code></pre>
<p>Note that it's not relevant that the argument is a <code>lambda</code> specifically, just that it is callable. </p>
</div>
<span class="comment-copy">I think it's probably easier to assert that it was called at all, then get the arguments from the mock and assert on them individually. AFAIK <code>unittest.mock</code> doesn't have anything like <a href="http://jasmine.github.io/2.0/introduction.html#section-Matching_Anything_with_&lt;code&gt;jasmine.any&lt;/code&gt;" rel="nofollow noreferrer"><code>jasmine.any</code></a>, for example.</span>
<span class="comment-copy">@Sardathrion are you sure? When I tested it, I got three values: <a href="https://repl.it/Co6v/0" rel="nofollow noreferrer">repl.it/Co6v/0</a>. The <a href="https://hg.python.org/cpython/file/3.5/Lib/unittest/mock.py#l1925" rel="nofollow noreferrer">source code</a> refers to both, confusingly...</span>
<span class="comment-copy">How odd! I tested it with Python 2.7 if that makes a difference. Docs (for Py3) says: This is either None (if the mock hasn’t been called), or the arguments that the mock was last called with. This will be in the form of a tuple: the first member is any ordered arguments the mock was called with (or an empty tuple) and the second member is any keyword arguments (or an empty dictionary). Which seems to indicate, it's a tuple of two…</span>
