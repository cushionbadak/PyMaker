<div class="post-text" itemprop="text">
<p>i am new to Glass framework i have installed glass server in in my ubuntu system when i run sample test application its return _BaseServer__is_shut_down
error how can i resolve this issue and i already tried different port number but same issue .</p>
<p>test.py</p>
<pre><code>#!/usr/bin/env python
from glass.HTTPServer import test
try:
  print "Use Control-C to exit.  In Windows, use Control-Break."
  test()
except KeyboardInterrupt:
  pass
</code></pre>
<p>when i run this code i got error like </p>
<pre><code>Serving HTTP on 0.0.0.0 port 8080 ...
Traceback (most recent call last):
File "HTTPServer.py", line 305, in &lt;module&gt;
test()
File "HTTPServer.py", line 300, in test
httpd.serve_forever()
File "/usr/lib/python2.7/SocketServer.py", line 223, in serve_forever
self.__is_shut_down.clear()
File "HTTPServer.py", line 265, in __getattr__
raise AttributeError(attr)
AttributeError: _BaseServer__is_shut_down
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I was not able to fix that issue, but the framework seems really old. I can reditect you to the simplest HTTP server existant, and easy too:</p>
<p>Python 3 (prefered) using <a href="https://docs.python.org/3/library/http.server.html" rel="nofollow">http.server</a>:</p>
<pre><code>import http.server
import socketserver

PORT = 8000
Handler = http.server.SimpleHTTPRequestHandler
httpd = socketserver.TCPServer(('', PORT), Handler)
print('serving at port', PORT)
httpd.serve_forever()
</code></pre>
<p>Python 2 using <a href="https://docs.python.org/2/library/simplehttpserver.html" rel="nofollow">SimpleHTTPServer</a>:</p>
<pre><code>import SimpleHTTPServer
import SocketServer

PORT = 8000
Handler = SimpleHTTPServer.SimpleHTTPRequestHandler
httpd = SocketServer.TCPServer(('', PORT), Handler)
print 'serving at port', PORT
httpd.serve_forever()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After doing some research inside the framework code I have found the next:</p>
<p>The HTTPServer inside the package is a custom one with a <code>__getattr__</code> built-in set that is rising exceptions when an attribute that is not "is_secure" is accessed.</p>
<pre><code># Code from HTTPServer.py
def __getattr__(self, attr):
    if attr == "is_secure":
        return getattr(self.servertype.create_socket, "is_secure", False)
    raise AttributeError(attr)  # This is the buggy statement
</code></pre>
<p>So in plain, any HTTPServer attribute (except "is_secure") which is accessed will irremediably raise an exception.</p>
<p>I guess you have three options:</p>
<ol>
<li>Fix the test function in order to make it work properly</li>
<li>Keep going without using the test function and trying to make that framework work</li>
<li>Follow the Tiger-222 solution and stick to the <em>SimpleHTTPServer</em></li>
</ol>
</div>
<span class="comment-copy">No solution solved your issue?</span>
<span class="comment-copy">i tried different method(without test) but same issue</span>
<span class="comment-copy">Could you specify what method you have tried?</span>
