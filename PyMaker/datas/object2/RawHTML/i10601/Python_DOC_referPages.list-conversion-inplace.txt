<div class="post-text" itemprop="text">
<p>I am trying to convert ['1','2','3','4'] to [1,2,3,4]
I want to make this conversion inplace. Is it possible to do it? If not, what is the optimal solution.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can do it with list comprehension like this:</p>
<pre><code>l = [int(item) for item in l]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think it is better to use <a href="https://docs.python.org/3/library/functions.html?highlight=map#map" rel="nofollow"><code>map</code></a> for this kind of tasks. Which creates iterator, what means it is more memory efficient.</p>
<pre><code>l = list(map(int, l))
# here I convert it to list, but usually you would just iterate over it
# so you can just do
for item in map(int, l):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As long as the whole array fits in memory, you should just be able to step through it, replacing each item as you go:</p>
<pre><code># bigarray is ['1','2','3','4',...];

# loop through bigarray using index i
for i in range(len(bigarray)):
    # coerce bigarray[i] to int in place
    bigarray[i] = int(bigarray[i])

# bigarray is [1,2,3,4,...];
</code></pre>
<p>good luck!</p>
</div>
<div class="post-text" itemprop="text">
<p>This should be pretty much in-place?</p>
<pre><code>In [31]: l = ['1','2','3','4']

In [32]: for i in range(len(l)):
   ....:     l[i] = int(l[i])
   ....:     

In [33]: l
Out[33]: [1, 2, 3, 4]
</code></pre>
<p>Or, you could do it by using <code>enumerate</code> which takes an iterable (like a <code>list</code>) and returns an <code>index</code> and the corresponding value from the beginning till the end:</p>
<pre><code>In [84]: l = ['1','2','3','4']

In [85]: for idx, val in enumerate(l):
   ....:     l[idx] = int(val)
   ....:     

In [86]: l
Out[86]: [1, 2, 3, 4]
</code></pre>
</div>
<span class="comment-copy">How large is it? <code>lyst[1] = int('1')</code> will assign 1 to index 1 of a list.   <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> should help</span>
<span class="comment-copy">around 100 numbers in the array</span>
<span class="comment-copy">It was damn easy!! My bad!</span>
<span class="comment-copy">If you have <code>100</code> numbers you really shouldn't be worried about doing things in place.</span>
<span class="comment-copy">Creates a new list.</span>
<span class="comment-copy">I did the same after thinking for few mins. Thanks for the reply!</span>
<span class="comment-copy">You should use <code>enumerate</code> for this. It fits the use-case <i>exactly</i>.</span>
