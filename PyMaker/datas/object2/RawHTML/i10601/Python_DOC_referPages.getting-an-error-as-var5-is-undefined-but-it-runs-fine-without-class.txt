<div class="post-text" itemprop="text">
<pre><code>class roger:
    root1 = Tk()
    frame1 = Frame(root1, width=100, height=100)
    frame1.pack(side=TOP)
    label5 = Label(frame1, text="x1=")
    label6 = Label(frame1, text="x2=")
    label7 = Label(frame1, text="x3=")
    label8 = Label(frame1, text="x4=")
    label5.grid(row=0)
    label6.grid(row=1)
    label7.grid(row=2)
    label8.grid(row=3)
    var5 = StringVar()
    var6 = StringVar()
    var7 = StringVar()
    var8 = StringVar()


    textbox1 = Entry(frame1, textvariable=var5, bd=10, width=10, font=30)
    textbox1.grid(row=0, column=1)

    textbox2 = Entry(frame1, textvariable=var6, bd=10, width=10, font=30)
    textbox2.grid(row=1, column=1)

    textbox3 = Entry(frame1, textvariable=var7, bd=10, width=10, font=30)
    textbox3.grid(row=2, column=1)

    textbox4 = Entry(frame1, textvariable=var8, bd=10, width=10, font=30)
    textbox4.grid(row=3, column=1)
    hoo = Entry(frame1, width=20, bd=10)
    hoo.grid(row=5, column=0)

    def inverse():
        a = ([float(var5.get()), float(var6.get())], [float(var7.get()), float(var8.get())])
        ans = inv(a)
        hoo.insert(0, ans)

    def eigen():
        a = ([float(var5.get()), float(var6.get())], [float(var7.get()), float(var8.get())])
        ans = eig(a)
        hoo.insert(0, ans)

    k = Button(frame1, text="inverse", command=inverse)
    k.grid(row=4, column=0)

    l = Button(frame1, text="eigen value ", command=eigen)
    l.grid(row=4, column=1)

    root1.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>roger.var5</code> instead of <code>var5</code>, since you have defined it as class's static property. Similarly do for other variables.</p>
</div>
<span class="comment-copy">Your code has multiple basic errors and I think it'd be beneficial for you to first <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">read on classes</a> from the official tutorial.</span>
<span class="comment-copy">You appear to have just intented a block of code and stuck <code>class roger:</code> at the top - that's not how classes work. You need to move imperative codes into methods, and then actually have something call them. Also, the error is because you need to explicitly scope class or instance variables. Seriously, look at Ilja's link.</span>
<span class="comment-copy">I believe the preferred nomenclature in Python is simply <i>class attribute</i>, as distinguished from an instance attribute.</span>
<span class="comment-copy"><code>roger</code> is the name of his class. OP has defined <code>var5</code> as <code>class property</code>, instead of <code>instance</code> property. In order to access it, syntax should be <code>&lt;class_name&gt;.&lt;variable&gt;</code>.</span>
<span class="comment-copy">I simply meant that normally the descriptor <i>static</i> is dropped used in Python.</span>
