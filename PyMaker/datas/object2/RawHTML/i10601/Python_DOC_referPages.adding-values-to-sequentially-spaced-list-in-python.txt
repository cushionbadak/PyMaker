<div class="post-text" itemprop="text">
<p>I am fairly new to Python and am confused how to represent the following code from Matlab into Python:</p>
<pre><code>P = [2:35,50,100,200]
</code></pre>
<p>In Matlab, this will spit out: P = [2,3,...,35,50,100,200] ; however, I can't seem to figure out how to easily add values to an a list with sequential numbering as is easily done in Matlab. Any suggestions would be great. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Vanilla python doesn't have a dedicated syntax for this ... If you're working with lists, you need 2 steps:</p>
<pre><code>lst = list(range(2, 36))  # for python2.x, you don't need `list(...)`
lst.extend([50, 100, 200])
</code></pre>
<p>If you have the "bleeding edge" (python3.5), <a href="https://www.python.org/dev/peps/pep-0448/" rel="nofollow">you <em>can</em> use unpacking</a>:</p>
<pre><code>lst = [*range(2, 36), 50, 100, 200]
</code></pre>
<p>If you're using <code>numpy</code>, you can use the <code>r_</code> index trick (which looks somewhat similar to the matlab version):</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; np.r_[2:36, 100, 200, 500]
array([  2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,
    15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,
    28,  29,  30,  31,  32,  33,  34,  35, 100, 200, 500])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're fortunate enough to use Python 3.5, you can use <a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" rel="nofollow"><em>additional unpacking generalizations</em></a> (from <a href="https://www.python.org/dev/peps/pep-0448/" rel="nofollow">PEP 448</a>) with <code>range</code>:</p>
<pre><code>&gt;&gt;&gt; [*range(2, 36), 50, 100, 200]
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 
 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 50, 100, 200]
</code></pre>
<p>Note that the last value generated by <code>range</code> is one less than the <code>end</code> argument.</p>
</div>
<span class="comment-copy">Have you tried adding a value and then sorting the list so it retains its sequential numbering? - I am not familiar with matlab</span>
<span class="comment-copy">@FujiApple except you can't - as the integers aren't iterable so it'll fail...</span>
<span class="comment-copy">@JonClements indeed, how silly of me</span>
<span class="comment-copy">Well... in 3.5, you can do <code>[*range(2, 36), 50, 100, 200]</code>...</span>
<span class="comment-copy">@JonClements -- Thanks.  I suppose it <i>does</i> have a syntax for that (sort of) :-)</span>
<span class="comment-copy">Thanks! This worked for Python3.5</span>
<span class="comment-copy"><code>np.r_[2:36, 50, 100, 200]</code>?</span>
<span class="comment-copy">@Trying2Learn: <code>range</code> only returns a list in Python 2.  In modern Python it returns a special <code>range</code> object.</span>
