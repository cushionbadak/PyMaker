<div class="post-text" itemprop="text">
<p>I am trying in a Python script to import a tar.gz file from HDFS and then untar it. The file comes as follow <b>20160822073413-EoRcGvXMDIB5SVenEyD4pOEADPVPhPsg.tar.gz</b>, it  has always the same structure.</p>
<p>In my python script, I would like to copy it locally and the extract the file. I am using the following command to do this:</p>
<pre><code>import subprocess
import os
import datetime
import time

today = time.strftime("%Y%m%d")

#Copy tar file from HDFS to local server
args = ["hadoop","fs","-copyToLocal", "/locationfile/" + today + "*"]

p=subprocess.Popen(args)

p.wait()

#Untar the CSV file 
args = ["tar","-xzvf",today + "*"]

p=subprocess.Popen(args)

p.wait()
</code></pre>
<p>The import works perfectly but I am not able to extract the file, I am getting the following error:</p>
<pre><code>['tar', '-xzvf', '20160822*.tar']
tar (child): 20160822*.tar: Cannot open: No such file or directory
tar (child): Error is not recoverable: exiting now
tar: Child returned status 2
tar: Error is not recoverable: exiting now
put: `reportResults.csv': No such file or directory
</code></pre>
<p>Can anyone help me?</p>
<p>Thanks a lot!</p>
</div>
<div class="post-text" itemprop="text">
<p>Try with the <code>shell</code> option:</p>
<pre><code>p=subprocess.Popen(args, shell=True)
</code></pre>
<p>From <a href="https://docs.python.org/2/library/subprocess.html#frequently-used-arguments" rel="nofollow">the docs</a>:</p>
<blockquote>
<p>If shell is True, the specified command will be executed through the
  shell. This can be useful if you are using Python primarily for the
  enhanced control flow it offers over most system shells and still want
  convenient access to other shell features such as shell pipes,
  filename wildcards, environment variable expansion, and expansion of ~
  to a userâ€™s home directory.</p>
</blockquote>
<p>And notice:</p>
<blockquote>
<p>However, note that Python itself offers implementations of many
  shell-like features (in particular, glob, fnmatch, os.walk(),
  os.path.expandvars(), os.path.expanduser(), and shutil).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>In addition to @martriay answer, you also got a typo - you wrote "20160822*.tar", while your file's pattern is "20160822*.tar.gz"</p>
<p>When applying <code>shell=True</code>, the command should be passed as a whole string (see <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow">documentation</a>), like so:</p>
<pre><code>p=subprocess.Popen('tar -xzvf 20160822*.tar.gz', shell=True)
</code></pre>
<p>If you don't need <code>p</code>, you can simply use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.call" rel="nofollow">subprocess.call</a>:</p>
<pre><code>subprocess.call('tar -xzvf 20160822*.tar.gz', shell=True)
</code></pre>
<p><strong>But</strong> I suggest you use more standard libraries, like so:</p>
<pre><code>import glob
import tarfile

today = "20160822"  # compute your common prefix here
target_dir = "/tmp"  # choose where ever you want to extract the content

for targz_file in glob.glob('%s*.tar.gz' % today):
    with tarfile.open(targz_file, 'r:gz') as opened_targz_file:
        opened_targz_file.extractall(target_dir)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found a way to do what I needed, instead of using os command, I used python tar command and it works!</p>
<pre><code>import tarfile
import glob

os.chdir("/folder_to_scan/")
for file in glob.glob("*.tar.gz"):
    print(file)

tar = tarfile.open(file)
tar.extractall()
</code></pre>
<p>Hope this help.</p>
<p>Regards
Majid</p>
</div>
<span class="comment-copy">Hi thanks. I am having now a different error:      tar: You must specify one of the <code>-Acdtrux' or </code>--test-label'  options     Try <code>tar --help' or </code>tar --usage' for more information. 	 Thank you</span>
<span class="comment-copy">@Majid what's in your <code>today</code> variable when passing it to <code>Popen</code>?</span>
<span class="comment-copy">it's the date of the day formatted as 20160822. I do that because I am receiving one file per day and I try to automate the process</span>
<span class="comment-copy">Try printing <code>args</code> just before passing it to <code>Popen</code> so you can test with the same values in your terminal. The original issue is resolved, from now on is all on the shell side.</span>
<span class="comment-copy">the print gives me ['tar', 'xvf ', '20160822*'] but with the same error tar: "You must specify ..."</span>
<span class="comment-copy">Yes it's a typo, I tried to unzip and then unrar, but same first issue.</span>
