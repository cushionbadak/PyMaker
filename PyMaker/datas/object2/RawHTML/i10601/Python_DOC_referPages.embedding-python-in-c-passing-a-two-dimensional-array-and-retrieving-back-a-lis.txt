<div class="post-text" itemprop="text">
<p>I want to pass a list of arrays (or a 2D array) such as <code>[[1,2,3],[4,5,6]]</code> from C to a Python script which computes and returns a list. What possible changes would be required to the embedding <a href="https://docs.python.org/3/extending/embedding.html#pure-embedding" rel="nofollow">code</a> in order to achieve this? The python script to be executed is as follows:</p>
<p><em>abc.py</em></p>
<pre><code>import math
def xyz(size,wss):
    result=[0 for i in range(size)]
    for i in range(size):    
        wss_mag=math.sqrt(wss[i][0]*wss[i][0]+wss[i][1]*wss[i][1]+wss[i][2]*wss[i][2])
        result[i]=1/wss_mag
    return result
</code></pre>
<p>Here size is the number of 1D arrays in WSS (for e.g. 2 in case <code>wss=[[1,2,3],[4,5,6]]</code>) The question is different than the suggested duplicate in the sense it has to return back a list as a 1-D array to C.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think what you want to do is to pass in some Lists, have them converted to C arrays and then back to Lists before returning to Python.</p>
<p>The Lists are received in C as a pointer to a PyObject, so to get the data from you'll have to use <a href="https://docs.python.org/3.4/extending/extending.html" rel="nofollow">PyArg_ParseXX</a>(YY), where XX and YY depend on what type of list object you had in Python and how you want it to be interpreted in C. This is where you would specify the shape information of the input lists and turn it into whatever shape you need for processing.</p>
<p>To return the arrays back to python you'll have to look at the Python-C API, which gives methods for creating and manipulating Python objects in C. As othera have suggested, using the <a href="http://docs.scipy.org/doc/numpy/user/c-info.how-to-extend.html" rel="nofollow">numpy-C API</a> is also an option with many advantages. In this case, you can use the PyArray_SimpleNew to create an array and populate it with your output.</p>
</div>
<span class="comment-copy">What do you mean by "list of arrays"? You can't put C arrays in a Python list.</span>
<span class="comment-copy">I think a two dimensional array (in terms of C) (which would be like a list of lists in terms of Python) would be more appropriate. You can refer to the example I gave of the input I wanted.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/30330279/how-to-pass-two-dimensional-array-from-c-to-python">How to Pass Two-dimensional array from C to Python</a></span>
<span class="comment-copy">I know this isn't a perfect duplicate - they're using <code>std::vector</code> rather than 2D C array and they return tuples rather than lists - but it's pretty close and the answer is good so you should probably be able to get what you want from it.</span>
<span class="comment-copy">Thanks, yes it helped me solve my first part of the query, but how do I return a list back to C?</span>
