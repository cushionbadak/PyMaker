<div class="post-text" itemprop="text">
<p>I have something like this where trade_date, effective_date and termination_date are date values:</p>
<pre><code>tradedates = dict(((k, k.strftime('%Y-%m-%d')) 
  for k in (trade_date,effective_date,termination_date)))
</code></pre>
<p>I get this:</p>
<pre><code>{datetime.date(2005, 7, 25): '2005-07-25',
 datetime.datetime(2005, 7, 27, 11, 26, 38): '2005-07-27',
 datetime.datetime(2010, 7, 26, 11, 26, 38): '2010-07-26'}
</code></pre>
<p>What I would like is:</p>
<pre><code>{'trade_date':'2005-07-25','effective_date':'2005-07-27','termination_date':'2010-07-26'}
</code></pre>
<p>How do I achieve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/3/library/functions.html#vars" rel="noreferrer"><code>vars</code></a>:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt;
&gt;&gt;&gt; trade_date = datetime.date(2005, 7, 25)
&gt;&gt;&gt; effective_date = datetime.datetime(2005, 7, 27, 11, 26, 38)
&gt;&gt;&gt; termination_date = datetime.datetime(2010, 7, 26, 11, 26, 38)
&gt;&gt;&gt;
&gt;&gt;&gt; d = vars() # You can access the variable as d['name']
&gt;&gt;&gt; tradedates = {
...     name: d[name].strftime('%Y-%m-%d')
...     for name in ('trade_date', 'effective_date', 'termination_date')
... }
&gt;&gt;&gt; tradedates
{'effective_date': '2005-07-27', 'termination_date': '2010-07-26', 'trade_date': '2005-07-25'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For something that size, I'd create the <code>dict</code> directly:</p>
<pre><code>result = {
    'trade_date': format(trade_date, '%Y-%m-%d'),
    'effective_date': format(effective_date, '%Y-%m-%d'),
    # etc....
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure if I got your question right. But let me explain what I understood and my answer for that:</p>
<p>You know the variable names: trade_date,effective_date,termination_date 
And they have data in them</p>
<p>You could easily do:</p>
<pre><code>tradedates = dict()
for k in ('trade_date','effective_date','termination_date'):
    tradedates[k] = eval(k).strftime('%Y-%m-%d')      // eval will evaluate them as a variable name not as a string.
</code></pre>
<p>This will give you a final dict something like:</p>
<pre><code>{
  'trade_date': &lt;date_string_according_to_the_format_above&gt;
  'effective_date': &lt;date_string_according_to_the_format_above&gt;
  'termination_date': &lt;date_string_according_to_the_format_above&gt;
}
</code></pre>
</div>
<span class="comment-copy">Yes falsetru that's correct</span>
<span class="comment-copy">Hi Thanks your answer is correct but can you explain what is d = vars()</span>
<span class="comment-copy">I added a comment to the code. Or follow the link in the answer.</span>
<span class="comment-copy">Hi what is d = vars() though i never seen this syntax ever</span>
<span class="comment-copy">@jhon.smith falsetru has a link to the documentation for you - that'll be worth reading first :)</span>
<span class="comment-copy">@jhon.smith, syntax? It's a just a assignment statement.</span>
<span class="comment-copy">Hi Very elegant solution clear for a novice like me to understand</span>
<span class="comment-copy">Sorry i cannot mark two answers as correct</span>
<span class="comment-copy">@jhon.smith nope - that's fine. I would personally pick falsetru's as well. Take the time to understand why/how the solution works and you'll be fine...</span>
<span class="comment-copy">Although this'll work using <code>eval</code> here is not recommended - <code>vars/globals</code> as shown by @falsetru would be the preferred method to pull from the namespace instead...</span>
<span class="comment-copy">Unfortunately - the change you've made <code>eval(k.strftime(...))</code> will eval the formatted date, you want to apply the formatting to the resultant object otherwise you'll end up doing subtraction on the date element - eg - today will be: <code>eval('2014-02-21')</code> which gives <code>1991</code> :)</span>
<span class="comment-copy">@JonClements Right. Sorry missed the misplaced brackets. Fixed it. Thanks for pointing out.</span>
<span class="comment-copy">There are so many better ways to do this than with <code>eval()</code> - and eval is <i>dangerous</i> if misused.</span>
