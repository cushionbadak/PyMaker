<div class="post-text" itemprop="text">
<p>I couldn't find the right search terms for this question, so please apologize if this question has already been asked before.</p>
<p>Basically, I want to create a python function that allows you to name the columns (as a function parameter) that you will do certain kinds of analyses on.</p>
<p>For instance see below. Obviously this code doesn't work because 'yearattribute' is taken literally after the df. I'd appreciate your help! </p>
<pre><code>def networkpairs2(df, Year):
    """
    An effort to generalize the networkpairs function by allowing you to choose the
    organization and actor parameter column names
    """
    totaldf = df
    yearattribute = '%s' %Year
    print yearattribute
    yearlist = list(np.unique(df.yearattribute))
    print yearlist
    return 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand you, <code>df[yearattribute].unique()</code> should work.  You can index into DataFrame columns like a dictionary.</p>
<p>Aside #1: <code>totaldf = df</code> only makes <code>totaldf</code> a new name for <code>df</code>, it doesn't make a copy, and you don't use it anyway.</p>
<p>Aside #2: you're not returning anything.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/functions.html#getattr" rel="nofollow"><code>getattr</code></a> here:</p>
<pre><code>yearlist = list(np.unique(getattr(df, yearattribute)))
</code></pre>
<p><code>getattr</code> allows you to access an attribute via a string representation of its name.</p>
<p>Below is a demonstration:</p>
<pre><code>&gt;&gt;&gt; class Foo:
...     def __init__(self):
...         self.attr = 'value'
...
&gt;&gt;&gt; foo = Foo()
&gt;&gt;&gt; getattr(foo, 'attr')
'value'
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">D'oh. I knew i was forgetting something stupid. i forgot about that index method.</span>
<span class="comment-copy">excellent thank you!</span>
