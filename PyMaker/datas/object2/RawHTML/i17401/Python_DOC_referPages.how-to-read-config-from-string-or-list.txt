<div class="post-text" itemprop="text">
<p>Is it possible to read the configuration for <code>ConfigParser</code> from a string or list?<br/>
Without any kind of temporary file on a filesystem</p>
<p><strong>OR</strong><br/>
Is there any similar solution for this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a buffer which behaves like a file:</p>
<pre><code>import ConfigParser
import StringIO

s_config = """
[example]
is_real: False
"""
buf = StringIO.StringIO(s_config)
config = ConfigParser.ConfigParser()
config.readfp(buf)
print config.getboolean('example', 'is_real')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The question was tagged as python-2.7 but just for the sake of completeness: Since 3.2 you can use the <a href="https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read_string" rel="noreferrer">ConfigParser function read_string()</a> so you don't need the StringIO method anymore.</p>
<pre><code>import configparser

s_config = """
[example]
is_real: False
"""
config = configparser.ConfigParser()
config.read_string(s_config)
print(config.getboolean('example', 'is_real'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://wiki.python.org/moin/ConfigParserExamples" rel="nofollow">This</a> may also be useful. It shows you how to read strings using a config (CFG file).
Here's a basic config reader I made with the info I've gathered from the Internet:</p>
<pre><code>import configparser as cp
config = cp.ConfigParser()
config.read('config.cfg')
opt1=config.getfloat('Section1', 'option1')
opt2=config.getfloat('Section1', 'option2')
opt3=config.get('Section1', 'option3')
print('Config File Float Importer example made using\n\
http://stackoverflow.com/questions/18700295/standard-way-of-creating-config-file-suitable-for-python-and-java-together\n\
and\n\
https://docs.python.org/2/library/configparser.html\n\
. (Websites accessed 13/8/2016).')
print('option1 from Section1 =', opt1, '\n Option 2 from section 1 is', str(opt2), '\nand option 3 from section 1 is "'+opt3+'".')
input('Press ENTER to exit.')
</code></pre>
</div>
<span class="comment-copy">well where to use the buffer? ConfigParser.Read() excepts a file name.</span>
<span class="comment-copy">@Lucas, feed the file-like object to <code>configparser.readfp()</code></span>
<span class="comment-copy"><a href="http://docs.python.org/2/library/stringio.html#module-cStringIO" rel="nofollow noreferrer"><code>cStringIO</code> objects</a> are not <a href="http://docs.python.org/2/library/functions.html#buffer" rel="nofollow noreferrer"><code>buffer</code>s</a>. <i>Strings</i> are buffers, but buffers cannot be used where <code>file</code>-like objects are required; <code>cStringIO</code> <i>wraps</i> a <code>buffer</code> in order to make it behave like a <code>file</code>. Besides, your example does not demonstrate how a <code>cStringIO</code> behaves like a file; <code>getvalue</code> is a method specific to <code>cStringIO</code> instances, but files don't have it.</span>
<span class="comment-copy">@Lucas I've posted a complete example that takes a StringIO buffer and gets a sample value</span>
<span class="comment-copy">1 more reason I hate working with Python 2.7 still (thanks RHEL 7)</span>
