<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5477134/how-can-i-get-around-declaring-an-unused-variable-in-a-for-loop">How can I get around declaring an unused variable in a for loop?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>In Python 3.x, I'm calling a function <code>rand_foo()</code> which returns some random stuff each time being called. I wish to store the sequence of random results into a list. I'm using the following construct:</p>
<pre><code>r = [ rand_foo() for i in range(10) ]
</code></pre>
<p>Now my PyCharm 3.0 IDE keeps warning: <code>Local variable 'i' value is not used</code>.</p>
<p>Is there an elegant way of removing the unnecessary variable? Indeed, in some cases, I could use <code>itertools.repeat()</code> or something like <code>10*[value]</code>, which, however, cannot be applied to my example above.</p>
</div>
<div class="post-text" itemprop="text">
<p>The convention when a variable is unused is to use an underscore instead:</p>
<pre><code>r = [rand_foo() for _ in range(10)]
</code></pre>
<p>See for example: <a href="https://stackoverflow.com/questions/1739514/underscore-as-variable-name-in-python">Underscore _ as variable name in Python</a></p>
<p>I believe this will suppress your PyCharm warning</p>
</div>
<span class="comment-copy">I'd consider it to be a bug in PyCharm. It's very common for this type of expression to occur in Python code, and you shouldn't have to jump through hoops to avoid a silly warning.</span>
<span class="comment-copy">+1, but one warning: There are a few libraries, most notably the <a href="http://docs.python.org/3/library/gettext.html" rel="nofollow noreferrer"><code>gettext</code></a> i18n module in the stdlib, that provide a special meaning for <code>_</code>, and if you use one of those, your linter (or a human reader) may complain that you're shadowing the global <code>_</code> with a local of the same name… (And, of course, if your expression is actually trying to <i>use</i> <code>gettext</code>, you can't do this.)</span>
<span class="comment-copy">What a <i>terrible</i> choice that was!</span>
<span class="comment-copy">The Python <code>gettext</code> module is a wrapper around the C/Unix <code>gettext</code> library, which has been a de facto standard since the early 90s, and uses <code>_("string to localize")</code> to signal that the string should be localized. And perl, sh, Smalltalk, etc. bindings for <code>gettext</code> had already adopted the same <code>_</code> syntax. So there was really no choice…</span>
<span class="comment-copy">Correct, the warning disappeared! Thanks.</span>
<span class="comment-copy">@wsysuper if you don't care about the variable, you can actually reuse the underscore for both of them: <code>r=[[rand() for _ in range(10)] for _ in range(20)]</code></span>
