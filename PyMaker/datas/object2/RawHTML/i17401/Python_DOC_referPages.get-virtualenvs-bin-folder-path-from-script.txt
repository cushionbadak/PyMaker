<div class="post-text" itemprop="text">
<p>I'm using virtualenvwrapper with a django project that has a management task that automatically writes some config files, so the user just has to</p>
<pre><code>./manage.py generate_configuration &gt; much_nice.conf
</code></pre>
<p>And then move the file elsewhere. One of the generated config files is a task for supervisord that launches a celery worker. The problem I'm getting is that I don't know how to <strong>output the path of the celery executable</strong> that is <strong>within the bin folder</strong> of the virtualenv. Essentially, I'd like to have the output of the command</p>
<pre><code>which celery
</code></pre>
<p>One option is using <code>sys.executable</code>, get the folder (which seems to be the <code>bin</code> folder of the virtualenv) and that's it... but I'm not sure.</p>
<p>Doesn't virtualenv have any kind of method to get the path itself?</p>
</div>
<div class="post-text" itemprop="text">
<p>The path to the virtual env is in the environment variable VIRTUAL_ENV</p>
<pre><code>echo $VIRTUAL_ENV
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>VIRTUAL_ENV</code> environment variable is only available if the virtual environment is activated.</p>
<p>For instance:</p>
<pre class="lang-sh prettyprint-override"><code>$ python3 -m venv myapp
$ source myapp/bin/activate
(myapp) $ python  -c "import os; print(os.environ['VIRTUAL_ENV'])"
/path/to/virtualenv/myapp
</code></pre>
<p>If not activated, you have an exception:</p>
<pre class="lang-sh prettyprint-override"><code>(myapp) $ deactivate
$ myapp/bin/python -c "import os; print(os.environ['VIRTUAL_ENV'])"
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
  File "/usr/lib64/python3.4/os.py", line 635, in __getitem__
    raise KeyError(key) from None
KeyError: 'VIRTUAL_ENV'
</code></pre>
<p>IMO, you should use <a href="https://docs.python.org/3/library/sys.html#sys.executable" rel="nofollow noreferrer"><code>sys.executable</code></a> to get the path of your Python executable,
and then build the path to celery:</p>
<pre class="lang-py prettyprint-override"><code>import sys
import os

celery_name = {'linux': 'celery', 'win32': 'celery.exe'}[sys.platform]
celery_path = os.path.join(os.path.dirname(sys.executable), celery_name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.fabfile.org/en/1.8/" rel="nofollow">fabric</a> to do such things from python</p>
<pre><code>&gt;&gt;&gt; from fabric.api import local
&gt;&gt;&gt; local('which celery')
</code></pre>
</div>
<span class="comment-copy">That's it, thanks. I managed to get the value in python using <code>os.environ['VIRTUAL_ENV']</code>.</span>
<span class="comment-copy">Note that <code>VIRTUAL_ENV</code> is set by the virtualenv's <code>activate</code> script, and it's possible to use the virtualenv python without activating the virtualenv. See: <a href="http://stackoverflow.com/a/1883251/1286571">stackoverflow.com/a/1883251/1286571</a></span>
<span class="comment-copy">This will probably not work. A sub-shell started is not going to have the virtual env on $PATH so <code>which</code> won't work.</span>
