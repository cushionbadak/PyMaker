<div class="post-text" itemprop="text">
<p>I'm trying to sort this dict based on the key "<strong>order</strong>". Kindly, find below sample dict :-</p>
<pre><code>{'about-us': [{'name': 'CONSTITUTION', 'order': u'2', 'uri': 'constitution'},
              {'name': 'EXECUTIVE COMMITTEE',
               'order': u'3',
               'uri': 'executive-committee'},
              {'name': 'FINANCIAL INFO',
               'order': u'4',
               'uri': 'financial-info'},
              {'name': 'SPONSORS AND AFFILIATIONS',
               'order': u'5',
               'uri': 'sponsors-and-affiliations'},
              {'name': 'ABOUT', 'order': u'1', 'uri': 'about'}]}
</code></pre>
<p>Tried using this code, but I got an error</p>
<pre><code>sorted(sub_links, key=lambda x: sub_links[x]['order'])
</code></pre>
<p><strong>TypeError: list indices must be integers, not str</strong></p>
<p>Any hint?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't sort the dictionary itself. Dictionary in python does not have an order.</p>
<ul>
<li>Trying to sort dictionary will pass keys of the dictionary to the <code>key</code> function. <code>sub_links[x]</code> =&gt; <code>sub_links['about-us']</code>; <code>sub_links[x]['order']</code> fails because <code>sub_links[x]</code> returns a  list.</li>
</ul>
<p>You can sort the list inside the dictionary: <code>d['about-us']</code></p>
<hr/>
<p>Also the usage of the <code>sorted</code> function should be changed: <a href="http://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> passes each item to the key function, not the index of the item.</p>
<pre><code>&gt;&gt;&gt; sorted(d['about-us'], key=lambda x: int(x['order']))
[{'uri': 'about', 'name': 'ABOUT', 'order': u'1'},
 {'uri': 'constitution', 'name': 'CONSTITUTION', 'order': u'2'},
 {'uri': 'executive-committee', 'name': 'EXECUTIVE COMMITTEE', 'order': u'3'},
 {'uri': 'financial-info', 'name': 'FINANCIAL INFO', 'order': u'4'},
 {'uri': 'sponsors-and-affiliations', 'name': 'SPONSORS AND AFFILIATIONS', 'order': u'5'}]
</code></pre>
<p>If you need to sort all the dictionary values in place, loop over the values.</p>
<pre><code>for value in d.values(): # use `itervalues` In Python 2.x
    value.sort(key=lambda x: int(x['order']))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>falsetru showed what you probably meant to do, but here's an explanation of the error you are seeing:</p>
<p>The <code>key</code> lambda function receives the dictionary's keys as its argument <code>x</code> when called--in this case, the call looks something like this when performed on the one and only key in the dictionary:</p>
<pre><code># this is JUST for demonstrating the execution of the code--this is not actual Python code
lambda("about-us"):
    return sub_links["about-us"]["order"]
</code></pre>
<p>When this executes, <code>sub_links["about-us"]</code> returns the value of that key, which is a list. When the next part of the statement executes (<code>&lt;the list that got returned&gt;["order"]</code>), the <code>TypeError</code> gets thrown because lists require integer indices.</p>
<p>There's a bigger problem here--it seems you called <code>sorted</code> on the whole dictionary, which only contains 1 value. It doesn't make sense to sort something with only 1 entry, and it should not be used to sort what you seem to want to sort, which is the inner list of dictionaries.</p>
<p>If you want to sort the inner list of dictionaries (the corresponding dict value for the "about-us" key), you'll need something like this (as falsetru also suggested):</p>
<pre><code>sorted(sub_links["about-us"], key=lambda d: int(d["order"]))
</code></pre>
</div>
<span class="comment-copy">its working. I loop and append back to the dict</span>
<span class="comment-copy">Downvoter: Please let me know if there's anything wrong.</span>
<span class="comment-copy">This does not solve the problem. 'order' is still not an integer</span>
<span class="comment-copy">@RichardMiles, Yes, <code>order</code> itself is not an integer; so I added <code>int</code> call. <code>int(x['order'])</code></span>
<span class="comment-copy">@RichardMiles, OP's question is not about changing the <code>order</code> to int. It's about sorting by <code>order</code>. If that was an issue, OP (skycrew) didn't accept the answer.</span>
<span class="comment-copy">-1 and no comment? thanks...</span>
<span class="comment-copy">I didn't downvote. There's syntax error in the first code. 1) the parameter of the lambda is string. 2) <code>lambda</code> should be one line (unless it is explicitly line-continued) 3) no statement is allowed in <code>lambda</code> (<code>return</code>)</span>
<span class="comment-copy">It's just for demonstrating the way the code executes. It is not meant to be actual written code. But it is helpful to see how the <code>lambda</code> consumes the parameter and returns a value (since <code>lambda</code>s are so terse).</span>
