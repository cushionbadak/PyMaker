<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/287085/what-do-args-and-kwargs-mean">What do *args and **kwargs mean? [duplicate]</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>As mentioned in PythonCookbook, <code>*</code> can be added before a tuple, and what does <code>*</code> mean here?</p>
<p>Chapter 1.18. Mapping Names to Sequence Elements:</p>
<pre><code>from collections import namedtuple
Stock = namedtuple('Stock', ['name', 'shares', 'price'])
s = Stock(*rec) 
# here rec is an ordinary tuple, for example: rec = ('ACME', 100, 123.45)
</code></pre>
<p>In the same section, <code>**dict</code> presents:</p>
<pre><code>from collections import namedtuple
Stock = namedtuple('Stock', ['name', 'shares', 'price', 'date', 'time'])
# Create a prototype instance
stock_prototype = Stock('', 0, 0.0, None, None)
# Function to convert a dictionary to a Stock
def dict_to_stock(s):
    return stock_prototype._replace(**s)
</code></pre>
<p>What is <code>**</code>'s function here?</p>
</div>
<div class="post-text" itemprop="text">
<h1>In a function call</h1>
<p><code>*t</code> means "treat the elements of this tuple as positional arguments to this function call."</p>
<pre><code>def foo(x, y):
    print(x, y)

&gt;&gt;&gt; t = (1, 2)
&gt;&gt;&gt; foo(*t)
1 2
</code></pre>
<p>Since v3.5, you can also do this in a list/tuple/set literals:</p>
<pre><code>&gt;&gt;&gt; [1, *(2, 3), 4]
[1, 2, 3, 4]
</code></pre>
<p><code>**d</code> means "treat the key-value pairs in the dictionary as additional named arguments to this function call."</p>
<pre><code>def foo(x, y):
    print(x, y)

&gt;&gt;&gt; d = {'x':1, 'y':2}
&gt;&gt;&gt; foo(**d)
1 2
</code></pre>
<p>Since v3.5, you can also do this in a dictionary literals:</p>
<pre><code>&gt;&gt;&gt; d = {'a': 1}
&gt;&gt;&gt; {'b': 2, **d}
{'b': 2, 'a': 1}
</code></pre>
<h1>In a function signature</h1>
<p><code>*t</code> means "take all additional positional arguments to this function and pack them into this parameter as a tuple."</p>
<pre><code>def foo(*t):
    print(t)

&gt;&gt;&gt; foo(1, 2)
(1, 2)
</code></pre>
<p><code>**d</code> means "take all additional named arguments to this function and insert them into this parameter as dictionary entries."</p>
<pre><code>def foo(**d):
    print(d)

&gt;&gt;&gt; foo(x=1, y=2)
{'y': 2, 'x': 1}
</code></pre>
<h1>In assignments and <code>for</code> loops</h1>
<p><code>*x</code> means "consume additional elements in the right hand side", but it doesn't have to be the last item. Note that <code>x</code> will always be a list:</p>
<pre><code>&gt;&gt;&gt; x, *xs = (1, 2, 3, 4)
&gt;&gt;&gt; x
1
&gt;&gt;&gt; xs
[2, 3, 4]

&gt;&gt;&gt; *xs, x = (1, 2, 3, 4)
&gt;&gt;&gt; xs
[1, 2, 3]
&gt;&gt;&gt; x
4

&gt;&gt;&gt; x, *xs, y = (1, 2, 3, 4)
&gt;&gt;&gt; x
1
&gt;&gt;&gt; xs
[2, 3]
&gt;&gt;&gt; y
4

&gt;&gt;&gt; for (x, *y, z) in [ (1, 2, 3, 4) ]: print(x, y, z)
...
1 [2, 3] 4
</code></pre>
</div>
<span class="comment-copy">Please read <a href="http://docs.python.org/3/tutorial/" rel="nofollow noreferrer">Python tutorial</a>. (<a href="http://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">Unpacking Argument Lists</a>)</span>
<span class="comment-copy">And it's not <code>**tuple</code> but <code>**dictionary</code>.</span>
<span class="comment-copy">@MartijnPieters SORRY for that, I will try to fix it.</span>
<span class="comment-copy">No problem, just pointing to a misunderstanding on your part.</span>
<span class="comment-copy">@MartijnPieters This is not a duplicate question if you starting with the language. For me this question gave a different perspective then *arg and **kwargs.</span>
<span class="comment-copy">You forgot a <code>*</code> there on the <code>**dict</code> syntax. And there is context missing; function call or function signature?</span>
<span class="comment-copy">@MartijnPieters thanks. Is it better now?</span>
<span class="comment-copy">Yup, see the linked duplicate questions. :-D</span>
