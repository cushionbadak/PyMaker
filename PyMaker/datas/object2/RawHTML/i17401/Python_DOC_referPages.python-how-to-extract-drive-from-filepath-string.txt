<div class="post-text" itemprop="text">
<p>If there a pre-defined single-line easy to remember python command that extracts a drive letter from a string filepath useful on both mac and windows?</p>
<p>if MAC:</p>
<pre><code>filepathString = '/Volumes/Some Documents/The Doc.txt'
</code></pre>
<p>would result to : </p>
<pre><code>myDrive = '/Volumes/transfer'
</code></pre>
<p>if WIN:</p>
<pre><code>filepathString = 'c:\Some Documents\The Doc.txt'
</code></pre>
<p>would result to : </p>
<pre><code>myDrive = 'c:'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try the <a href="http://docs.python.org/3/library/os.path.html#os.path.splitdrive" rel="nofollow"><code>splitdrive</code></a> method from the <a href="http://docs.python.org/3/library/os.path.html" rel="nofollow"><code>os.path</code></a> module along with the regular <a href="http://docs.python.org/3/library/os.path.html#os.path.split" rel="nofollow"><code>split</code></a>. It's not single line, but then again I can't see how the code would know to append <code>transfer</code> to the volume path, or detect if a given path is from Windows or Unix (remember <code>C:</code> is a valid Unix filename).</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you're going to have to write custom code for this. Use <code>platform.system()</code> or <code>platform.uname()</code> to find out what kind of system you're on, then use <code>os.path</code> functions to extract the drive/volume name in a way appropriate to the detected platform.</p>
<p>A sketch:</p>
<pre><code>def volume_name(path):
    if platform.system() == "Darwin":
        return re.search("^\/Volumes\/[^/]+/", path).group(0)
    elif platform.system() == "Windows":
        return path[0:2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple example(Windows):</p>
<pre><code>import os
import pathlib
drive = pathlib.Path(os.getcwd()).parts[0]
</code></pre>
</div>
