<div class="post-text" itemprop="text">
<p>I have a array of arrays where each internal array is a variable size, and will change with each run.  e.g.:</p>
<pre><code>a = [[T1], [4, 5, 6], ['a', 'b']]
</code></pre>
<p>What I'd like to do is print this as a table, with the 1st array as col_1, 2nd col_2, and then col_3.  Currently, there will only be 3 cols.  Desired result:</p>
<pre><code>COL1     COL2     COL3
----     ----     ----
T1       4        a
         5        b
         6      
</code></pre>
<p>I guess I have two major questions:<br/>
1. Can this be done<br/>
2. How to account for the diff sizes of each array - not in terms of formatting, but looping through elements where there might not be one.</p>
<p>Thanks very much.</p>
<p><em>p.s. I'm currently experimenting with zip() as that looks like it could work, but still have a mis-matched number of elements in each array.</em></p>
</div>
<div class="post-text" itemprop="text">
<p>You're on the right track with <code>zip</code>.  To fill in something where there's nothing, use <code>itertools.zip_longest</code> (in python 2, <code>izip_longest</code>):</p>
<pre><code>for line in zip_longest(*a,fillvalue=''):
    print('\t'.join(map(str,line)))

T1      4       a
        5       b
        6       
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I'm currently experimenting with zip() as that looks like it could work, but still have a mis-matched number of elements in each array.</p>
</blockquote>
<p>Yes, as the docs say, <code>zip</code> stops as soon as any of the arrays stops.</p>
<p>But the <code>itertools</code> module has a function called <a href="http://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow"><code>zip_longest</code></a> (or <code>izip_longest</code>, in 2.x) that solves this problem.</p>
<p>You just need specify what you want as the fill valueâ€”in this case, probably <code>''</code>:</p>
<pre><code>for row in itertools.zip_longest(*a, fillvalue=''):
    print('\t'.join(row))
</code></pre>
</div>
