<div class="post-text" itemprop="text">
<p>In my program that I am writing in Python, I am trying to say:</p>
<p>if a letter is found in word 1 and is in word2:</p>
<p>delete the letter from word2</p>
<p>I tried:</p>
<pre><code>for i in range(len(word1)):
    if word1[i] in word2:
       del word1[i] in word2
</code></pre>
<p>When I did this, a syntax error came from the word <strong>in</strong> in the very last line.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/reference/simple_stmts.html#the-del-statement" rel="nofollow"><code>del</code></a> is only used to remove names (variables) in Python.</p>
<p>If you want to remove individual characters in a string, you should use <a href="http://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow"><code>str.replace</code></a>. Also note that instead of iterating over indexes, you can just iterate over the characters of the string:</p>
<pre><code>for char in word1:
    if char in word2:
        word2 = word2.replace(char, '')
</code></pre>
<p>Of course, <code>replace</code> won’t actually replace anything if it can’t find a match, so you can just remove the <code>if</code>:</p>
<pre><code>for char in word1:
    word2 = word2.replace(char, '')
</code></pre>
<p>And finally, <code>word1</code> may contain characters more than once, in which case you would try to remove single characters multiple times. So instead, you can just iterate over the <em>unique</em> characters of <code>word1</code>:</p>
<pre><code>for char in set(word1):
    word2 = word2.replace(char, '')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>del</code> keyword does not do what you are thinking it does in python. To delete from a string, try something like</p>
<pre><code>i = 5
word = 'abcdefghijk'
#delete the i'th element
word = word[0:i] + word [i+1:]
</code></pre>
<p>There is rarely a good reason to use the <code>del</code> keyword in python</p>
</div>
<div class="post-text" itemprop="text">
<p>your del line uses incorrect syntax. del cannot be used on characters in a string. Assuming word1 and word2 are strings.. you can't just delete a letter from a string. However, you can use str.replace():</p>
<pre><code>for c word1:
    if c in word2:
        word2 = word2.replace(c, '')
</code></pre>
<p>You must create a new string to do this, as simply doing <code>word2.replace(c, '')</code> won't actually modify word2.</p>
<p>Hence the <code>word2 =</code> bit</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.python.org/2.7/library/stdtypes.html#str.translate" rel="nofollow"><em>str.translate</em></a> method is very well suited to this task.  If you pass <em>None</em> as the first argument, the second argument lists all the characters to be removed:</p>
<pre><code>&gt;&gt;&gt; 'clementine'.translate(None, 'welcome')
'ntin'
&gt;&gt;&gt; 'apple'.translate(None, 'orange')
'ppl'
</code></pre>
<p><strong>Q.</strong>  Variant of the question: <code>if word1 = 'heli' and word2 = 'jello', i only want it to replace one 'l' from 'jello', what do I do.</code></p>
<p><strong>A.</strong> Use <a href="http://docs.python.org/2.7/library/stdtypes.html#str.find" rel="nofollow"><em>str.find</em></a> and <a href="http://docs.python.org/2.7/tutorial/introduction.html#strings" rel="nofollow">string slicing</a> to isolate and remove one character at a time (don't use <em>str.replace</em> which does a multi-replace):</p>
<pre><code>&gt;&gt;&gt; word1 = 'heli'
&gt;&gt;&gt; word2 = 'jello'
&gt;&gt;&gt; for c in word1:
        i = word2.find(c)
        if i != -1:
            word2 = word2[:i] + word2[i+1:]

&gt;&gt;&gt; word2
'jlo'
</code></pre>
</div>
<span class="comment-copy">if word1 = 'heli' and word2 = 'jello', i only want it to replace one 'l' from 'jello', what do I do.</span>
<span class="comment-copy">You can pass <code>1</code> as the third parameter to <code>str.replace</code> to restrict it to only replacing it <i>once</i>. It will pick the first match.</span>
<span class="comment-copy">Thanks!, this helped a lot.</span>
