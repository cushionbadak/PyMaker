<div class="post-text" itemprop="text">
<p>I have a lot of XML-Files which aren't sorted. I'd like to sort them by a tag-content named "title". I know the order of titles:
1.) editorial
2.) content
3.) club
etc.
Each file has another "title"-content.</p>
<p>The XML-structure of file number 1 looks like this:</p>
<pre><code>&lt;article&gt;
&lt;someTags&gt;
&lt;/someTags&gt;
&lt;title&gt;editorial&lt;/title&gt;
&lt;/article&gt;
</code></pre>
<p>How can I go through all files and sort them by the defined order?
The file-names can look like: "sorted_01.xml", "sorted_02.xml" and so on.
How can I get this?
Thanks a lot for any help! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow"><code>sort</code></a> or <a href="http://docs.python.org/3/library/functions.html#sorted" rel="nofollow"><code>sorted</code></a> with the function that return the text of the <code>title</code> tag as a key function.</p>
<pre><code>import glob
import xml.etree.ElementTree as ET

def get_title(filepath):
    tree = ET.parse(filepath)
    return tree.find('.//title').text
    # Find `title` element and return the text of the element.

filepaths = glob.glob('*.xml')
print(sorted(filepaths, key=get_title))
</code></pre>
<p>See <a href="http://asciinema.org/a/7660" rel="nofollow">demo</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>another way to do it (wasn't tested)</p>
<pre><code>import glob, os
from lxml import etree
d = {}
titles = ['editorial', 'content' , 'club', ...] # ordered titles
for fname in glob.glob('*.xml'):
     tree = etree.parse(fname)
     title = tree.xpath('//title/text()')[0]
     subtitle = tree.xpath('//subtitle/text()')[0]
     key = '%s_%s' % (title, subtitle)
     d[key] = fname
for idx,title in enumerate(titles, 1):
     os.rename(d[title], 'sorted_%02d.xml' % idx)
</code></pre>
</div>
<span class="comment-copy">With the given xml sample, we can't figure out the structure of the xml. Could you post another sample that contains at least 2 <code>title</code> tags?</span>
<span class="comment-copy">Each file has exactly 1 title-tag. The content is different. The file with the title-content "editorial" should become the first file, the file with the title-content "content" the second file and so on :)</span>
<span class="comment-copy">But how can I determine the order in which the files are saved? I mean: the file with the "editorial"-title-content should be saved as 01.xml, the file with the "content"-title-content as "02.xml" and so on. I do have to save the order of tag-contents in a list, don't I?</span>
<span class="comment-copy">Btw: Thanks for your help! :)</span>
<span class="comment-copy">@MarkF6, It seems like I misunderstood your question. Check out Guy Gavriely's answer.</span>
<span class="comment-copy">Use simply <code>for</code> loop (especially when the expression in the list comprehension does not yield meaningful value + has side effect)</span>
<span class="comment-copy">I didn't tested your code, but your code will  not work because <code>xpath</code> returns a list which is not hashable; cannot be used as dictionary key.</span>
<span class="comment-copy">In addition to that, the code does not populate the <code>arr</code> list.</span>
<span class="comment-copy">update, both of your remarks are correct (also your code) :) thanks @falsetru</span>
<span class="comment-copy">right, OP say he has <code>arr</code> ordered list of titles, or I misunderstood...</span>
