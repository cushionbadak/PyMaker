<div class="post-text" itemprop="text">
<p>I have a dictionary of a list of dictionaries. something like below:</p>
<p><code>x = {'a':[{'p':1, 'q':2}, {'p':4, 'q':5}], 'b':[{'p':6, 'q':1}, {'p':10, 'q':12}]}</code></p>
<p>The length of the lists (values) is the same for all keys of dict x.
I want to get the length of any one value i.e. a list without having to go through the obvious method -&gt; get the keys, use len(x[keys[0]]) to get the length.</p>
<p>my code for this as of now:</p>
<pre><code>val = None
for key in x.keys():
    val = x[key]
    break
    #break after the first iteration as the length of the lists is the same for any key
try:
    what_i_Want = len(val)
except TypeError:
    print 'val wasn't set'
</code></pre>
<p>i am not happy with this, can be made more 'pythonic' i believe. </p>
</div>
<div class="post-text" itemprop="text">
<p>What about this:</p>
<pre><code>val = x[x.keys()[0]]
</code></pre>
<p>or alternatively:</p>
<pre><code>val = x.values()[0]
</code></pre>
<p>and then your answer is</p>
<pre><code>len(val)
</code></pre>
<hr/>
<p>Some of the other solutions (posted by thefourtheye and gnibbler) are better because they are not creating an intermediate list. I added this response merely as an easy to remember and obvious option, not a solution for time-efficient usage.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is most efficient way, since we don't create any intermediate lists.</p>
<pre><code>print len(x[next(iter(x))])   # 2
</code></pre>
<p><strong>Note:</strong> For this method to work, the dictionary should have atleast one key in it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Works ok in Python2 or Python3</p>
<pre><code>&gt;&gt;&gt; x = {'a':[{'p':1, 'q':2}, {'p':4, 'q':5}], 'b':[{'p':6, 'q':1}, {'p':10, 'q':12}]}
&gt;&gt;&gt; next(len(i) for i in x.values())
2
</code></pre>
<p>This is better for Python2 as it avoids making a list of the values. Works well in Python3 too</p>
<pre><code>&gt;&gt;&gt; next(len(x[k]) for k in x)
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/3/library/functions.html#next" rel="nofollow"><code>next</code></a> and <a href="http://docs.python.org/3/library/functions.html#iter" rel="nofollow"><code>iter</code></a>:</p>
<pre><code>&gt;&gt;&gt; x = {'a':[{'p':1, 'q':2}, {'p':4, 'q':5}], 'b':[{'p':6, 'q':1}, {'p':10, 'q':12}]}
&gt;&gt;&gt; val = next(iter(x.values()), None) # Use `itervalues` in Python 2.x
&gt;&gt;&gt; val
[{'q': 2, 'p': 1}, {'q': 5, 'p': 4}]
&gt;&gt;&gt; len(val)
2

&gt;&gt;&gt; x = {}
&gt;&gt;&gt; val = next(iter(x.values()), None) # `None`: default value
&gt;&gt;&gt; val is None
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; x = {'a':[{'p':1, 'q':2}, {'p':4, 'q':5}], 'b':[{'p':6, 'q':1}, {'p':10, 'q':12}]}
&gt;&gt;&gt; len(x.values()[0])
2
</code></pre>
<p>Here, x.values gives you a list of all values then you can get length of any one value from it. </p>
</div>
<span class="comment-copy">Can you elaborate on what you are trying to accomplish?</span>
<span class="comment-copy">I just want the length of any list viz. the value of any key. All values have the same length</span>
<span class="comment-copy">+1 ... but I would just do <code>len(x.values()[0])</code></span>
<span class="comment-copy">@JoranBeasley Nice option, added to answer.</span>
<span class="comment-copy">Mind. this one doesn't work in Python3, and it does create a temporary list of all the values.</span>
<span class="comment-copy">@jeev But, this is exactly what you did <i>NOT</i> want, as per your question. <code>without having to go through the obvious method -&gt; get the keys, use len(x[keys[0]]) to get the length</code></span>
<span class="comment-copy">@jeev No problem :) I am just trying to point out that <a href="http://stackoverflow.com/a/21820448/1903116">mine</a> and <a href="http://stackoverflow.com/a/21820470/1903116">gnibbler's second solution</a> are far better than this solution, since we don't create intermediate list. :)</span>
