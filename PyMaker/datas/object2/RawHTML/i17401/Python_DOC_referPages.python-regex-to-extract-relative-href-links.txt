<div class="post-text" itemprop="text">
<p>I have an html file having tons of relative href links like;</p>
<pre><code>href="data/self/dated/station1_140208.txt"&gt;Saturday, February 08, 2014/a&gt;br/&gt;
</code></pre>
<p>There are tons of other http and ftp links in the file,<br/>
I need an output txt file;</p>
<pre><code>14/02/08: station1_140208.txt  
14/02/09: station1_140209.txt  
14/02/10: station1_140210.txt  
14/02/11: station1_140211.txt  
14/02/12: station1_140212.txt  
</code></pre>
<p>I tried to write my own but it takes too long for me to get used to Python regex.<br/>
I can open the source file, apply a specific regex which I couldn't figure out yet, and write it back to the disk.</p>
<p>I need your help on the regex side.
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>pattern = 'href="data/self/dated/([^"]*)"[^&gt;]*&gt;([\s\S]*?)&lt;/a&gt;'
</code></pre>
<p>test:</p>
<pre><code>import re
s = """
&lt;a href="data/self/dated/station1_140208.txt"&gt;Saturday, February 08, 2014&lt;/a&gt;
br/&gt;
&lt;a href="data/self/dated/station1_1402010.txt"&gt;Saturday, February 10, 2014&lt;/a&gt;
br/&gt;
&lt;a href="data/self/dated/station1_1402012.txt"&gt;Saturday, February 12, 2014&lt;/a&gt;
br/&gt;
"""
pattern = 'href="data/self/dated/([^"]*)"[^&gt;]*&gt;([\s\S]*?)&lt;/a&gt;'
re.findall(pattern,s)
</code></pre>
<p>output:</p>
<pre><code>[('station1_140208.txt', 'Saturday, February 08, 2014'), ('station1_1402010.txt', 'Saturday, February 10, 2014'), ('station1_1402012.txt', 'Saturday, February 12, 2014')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I know it's not exactly what you asked for, but I thought I would show a way of converting the dates from your link text into the format you show in your example of desired output(dd/mm/yy). I used <a href="http://www.crummy.com/software/BeautifulSoup/" rel="nofollow">BeautifulSoup</a> to read elements from the html.</p>
<pre><code>from bs4 import BeautifulSoup
import datetime as dt
import re

html = '&lt;a href="data/self/dated/station1_140208.txt"&gt;Saturday, February 08, 2014&lt;/a&gt;&lt;br/&gt;'

p = re.compile(r'.*/station1_\d+\.txt')   

soup = BeautifulSoup(html)

a_tags = soup.find_all('a', {"href": p})

&gt;&gt;&gt; print a_tags # would be a list of all a tags in the html with relevant href attribute
[&lt;a href="data/self/dated/station1_140208.txt"&gt;Saturday, February 08, 2014&lt;/a&gt;]

names = [str(a.get('href')).split('/')[-1] for a in a_tags] #str because they will be in unicode

dates = [dt.datetime.strptime(str(a.text), '%A, %B %m, %Y') for a in a_tags]
</code></pre>
<p>names and dates use <a href="http://www.secnetix.de/olli/Python/list_comprehensions.hawk" rel="nofollow">list comprehensions</a></p>
<p><a href="http://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow"><strong>strptime</strong></a> creates datetime objects out of the date strings</p>
<pre><code>&gt;&gt;&gt; print names # would be a list of all file names from hrefs
['station1_140208.txt']

&gt;&gt;&gt; print dates # would be a list of all dates as datetime objects
[datetime.datetime(2014, 8, 1, 0, 0)]

toFileData = ["{0}: {1}".format(dt.datetime.strftime(d, '%w/%m/%y'), n) for d in dates for n in names]
</code></pre>
<p><a href="http://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow"><strong>strftime</strong></a> reformats the date into the format in your example:</p>
<pre><code>&gt;&gt;&gt; print toFileData
['5/08/14: station1_140208.txt']
</code></pre>
<p>then write the entries in <code>toFileData</code> to a file</p>
<p>For info on the methods I used such as <code>soup.find_all()</code> and <code>a.get()</code> in the code above, I recommend you look at the <code>BeautifulSoup</code> docs via the link at the top. Hope this helps.</p>
</div>
<span class="comment-copy">Use the DOM to extract all links and after check the links that are relative.</span>
<span class="comment-copy">Thanks so much Kowalski, it does exactly what I was looking for.</span>
