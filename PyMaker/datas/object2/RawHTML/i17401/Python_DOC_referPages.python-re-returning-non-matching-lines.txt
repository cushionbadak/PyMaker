<div class="post-text" itemprop="text">
<p>I'm trying to solve a regular expression puzzle and I'm ... puzzled. I expect the following:</p>
<pre><code>import re
import fileinput

TEST_DATA = [
    "6",
    "2 ",
    "1 877 2638277 ",
    "91-011-23413627"
]

for line in TEST_DATA:
    print(
        re.sub(
            r'(\d{1,3})[- ](\d{2,3})[- ]+(\d{5,10})',
            r'CountryCode=\1,LocalAreaCode=\2,Number=\3',
            line))
</code></pre>
<p>to give me this:</p>
<pre><code>CountryCode=1,LocalAreaCode=877,Number=2638277 
CountryCode=91,LocalAreaCode=011,Number=23413627
</code></pre>
<p>instead I get this:</p>
<pre><code>6
2 
CountryCode=1,LocalAreaCode=877,Number=2638277 
CountryCode=91,LocalAreaCode=011,Number=23413627
</code></pre>
<p>I don't understand why the lines that don't match are being printed. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>re.sub</code> returns the string regardless of whether a replacement occurred. From <a href="http://docs.python.org/3/library/re.html?highlight=re.sub#re.sub" rel="noreferrer">the documentation</a>:</p>
<blockquote>
<p>Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl. If the pattern isnâ€™t found, string is returned unchanged.</p>
</blockquote>
<p>Perhaps you could first check to see if a <a href="http://docs.python.org/3/library/re.html?highlight=re.sub#re.match" rel="noreferrer">match</a> occurred, and then perform the replacement.</p>
<pre><code>for line in TEST_DATA:
    if re.match(my_pattern, line):
        print(
            re.sub(
                r'(\d{1,3})[- ](\d{2,3})[- ]+(\d{5,10})',
                r'CountryCode=\1,LocalAreaCode=\2,Number=\3',
                line))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I gotta tell ya, I really HATE <code>re.sub</code>. I don't know why, I don't have a great explanation, but I avoid it like the plague. I can't even really remember ever using it to poor effect, I just don't like it....</p>
<p>The reason it's not producing your expected output is that <code>re.sub</code> will return the string regardless of whether it matches the regex. It's kind of like <code>"Hello there".replace("foo","bar")</code> -- just because it doesn't find anything to replace doesn't mean it throws away your string. What I would do instead is this:</p>
<pre><code>pattern = r'(?P&lt;country&gt;\d{1,3})[- ](?P&lt;area&gt;\d{2,3})[- ]+(?P&lt;number&gt;\d{5,10})'
text = r"CountryCode={country},LocalAreaCode={area},number={number}"

for line in TEST_DATA:
    match = re.match(pattern,line)
    if not match: continue
    print(text.format(**match.groupdict()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try with:</p>
<pre><code>import re    

TEST_DATA = [
    "6",
    "2 ",
    "1 877 2638277 ",
    "91-011-23413627"
]

pattern = r'(\d{1,3})[- ](\d{2,3})[- ]+(\d{5,10})'
rep = r'CountryCode=\1,LocalAreaCode=\2,Number=\3'

for line in TEST_DATA:
    if re.match(pattern, line):
        print re.sub(pattern,rep,line)
</code></pre>
</div>
<span class="comment-copy">I suppose a closer reading of the documentation would have told me that it just returns the string if it doesn't match, but that seems like a reason to hate it.</span>
<span class="comment-copy">@Amanda I don't need much of a reason, mind you! I also avoid regex like the plague.</span>
