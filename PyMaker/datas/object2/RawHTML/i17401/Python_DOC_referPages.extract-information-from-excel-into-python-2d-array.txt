<div class="post-text" itemprop="text">
<p>I have an excel sheet with dates, time, and temp that look like this:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/RioSe.png"/></p>
<p>using python, I want to extract this info into python arrays.</p>
<p>The array would get the date in position 0, and then store the temps in the following positions and look like this:</p>
<pre><code>temparray[0] = [20130102,34.75,34.66,34.6,34.6,....,34.86]
temparray[1] = [20130103,34.65,34.65,34.73,34.81,....,34.64]
</code></pre>
<p>here is my attempt, but it sucks:</p>
<pre><code>from xlrd import * 

print open_workbook('temp.xlsx')

wb = open_workbook('temp.xlsx')

for s in wb.sheets():
    for row in range(s.nrows):
        values = []
        for col in range(s.ncols):
            values.append(s.cell(row,col).value)
        print(values[0])
        print("%.2f" % values[1])
        print'''
</code></pre>
<p>i used xlrd, but I am open to using anything. Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>From what I understand of your question, the problem is that you want the output to be a list of lists, and you're not getting such a thing.</p>
<p>And that's because there's nothing in your code that even <em>tries</em> to get such a thing. For each row, you build a list, print out the first value of that list, print out the second value of that list, and then forget the list.</p>
<p>To append each of those row lists to a big list of lists, all you have to do is exactly the same thing you're doing to append each column value to the row lists:</p>
<pre><code>temparray = []
for row in range(s.nrows):
    values = []
    for col in range(s.ncols):
        values.append(s.cell(row,col).value)
    temparray.append(values)
</code></pre>
<hr/>
<p>From your comment, it looks like what you <em>actually</em> want is not only this, but also grouping the temperatures together by day, and also only adding the second column, rather than all of the values, for each day. Which is not at all what you described in the question. In that case, you shouldn't be looping over the columns at all. What you want is something like this:</p>
<pre><code>days = []
current_day, current_date = [], None
for row in range(s.nrows):
    date = s.cell(row, 0)
    if date != current_date:
        current_day, current_date = [], date
        days.append(current_day)
    current_day.append(s.cell(row, 2))
</code></pre>
<p>This code assumes that the dates are always in sorted order, as they are in your input screenshot.</p>
<p>I would probably structure this differently, building a row iterator to pass to <a href="http://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby</code></a>, but I wanted to keep this as novice-friendly, and as close to your original code, as possible.</p>
<p>Also, I suspect you really don't want this:</p>
<pre><code>[[date1, temp1a, temp1b, temp1c], 
 [date2, temp2a, temp2b]]
</code></pre>
<p>… but rather something like this:</p>
<pre><code>{date1: [temp1a, temp1b, temp1c], 
 date2: [temp1a, temp1b, temp1c]}
</code></pre>
<p>But without knowing what you're intending to <em>do</em> with this info, I can't tell you how best to store it.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are looking to keep all the data for the same dates, I might suggest using a dictionary to get a list of the temps for particular dates. Then once you get the dict initialized with your data, you can rearrange how you like. Try something like this after <code>wb=open_workbook('temp.xlsx')</code>:</p>
<pre><code>tmpDict = {}
for s in wb.sheets():
    for row in xrange(s.nrows):
        try:
            tmpDict[s.cell(row, 0)].append(s.cell(row, 2).value)
        except KeyError:
            tmpDict[s.cell(row, 0)] = [s.cell(row,2).value]
</code></pre>
<p>If you print tmpDict, you should get an output like:</p>
<pre><code>{date1: [temp1, temp2, temp3, ...],
 date2: [temp1, temp2, temp3, ...]
 ...}
</code></pre>
<p>Dictionary keys are kept in an arbitrary order (it has to do with the hash value of the key) but you can construct a list of lists based on the content of the dict like so:</p>
<pre><code>tmpList = []
for key in sorted(tmpDict.keys):
    valList = [key]
    valList.extend(tmpDict[key])
    tmpList.append(valList)
</code></pre>
<p>Then, you'll get a list of lists ordered by date with the vals, as you were originally working. However, you can always get to the values in the dictionary by using the keys. I typically find it easier to work with the data afterwards but you can change it to any form you need.</p>
</div>
<span class="comment-copy">"It sucks" isn't helpful - are you getting errors (provide traceback)? Unexpected outputs (provide inputs, expected outputs, actual outputs)?</span>
<span class="comment-copy">@jonrsharpe sorry for the confusion. it works, but it doesn't do what I want since I am not familiar with xlrd</span>
<span class="comment-copy">"It doesn't do what I want" is still not helpful. Describe precisely what you want it to do, and what it is doing instead.</span>
<span class="comment-copy">I'm not familiar with the xlrd module, but can I suggest exporting the xl file to csv format then reading it in python ?</span>
<span class="comment-copy">It seems like the problem with you code has nothing to do with the xlrd part (unless that isn't working—in which case you'll have to tell us <i>in what way</i> it isn't working), and everything to do with the fact that you don't actually store the lists you build up, you just print the first two values out and then immediately forget the whole list.</span>
<span class="comment-copy">your code is similar, but it gets the date in every array.  your code makes: [date,time,temp] , [date,time,temp], [date,time,temp].... I want just [date, temp, temp, temp]. when the date changes, [date2, temp, temp]</span>
<span class="comment-copy">@user1681664: See my edit. But you really need to make your question clearer. Nowhere does your question say that you want to group all rows with the same date together. Also, you need to <i>understand</i> the code people give you, so you can adapt it, not just run it and say "doesn't work" until someone finally gives you something that seems to work.</span>
<span class="comment-copy">you are incorrect in your suspicion. I do want an array of arrays. it makes it easier for me.</span>
<span class="comment-copy">@user1681664: If that's true, then the part of your code that uses these values is probably a lot more complicated, and possibly a lot slower, than it should be. But I won't argue about guesses about code I can't even see; hopefully now you know enough to write the code you actually want, and can always come back to SO if you get stuck again.</span>
<span class="comment-copy">thank you for your help. I get an error though. KeyError: number:20130102</span>
<span class="comment-copy">My mistake. The try-except loop should look for a KeyError not an attribute error. I've edited the example to show the correction.</span>
