<div class="post-text" itemprop="text">
<p>I'm calling a function and trying to capture the output it prints out, but in 3.3 I don't have access to StringIO.   Is there another method around this?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, <a href="http://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow"><code>StringIO</code></a> lives in the <code>io</code> package. So you can still use it to capture the output:</p>
<pre><code>&gt;&gt;&gt; def someMagicFunction ():
        print('foo bar baz')

&gt;&gt;&gt; import io, sys
&gt;&gt;&gt; original = sys.stdout
&gt;&gt;&gt; sys.stdout = new = io.StringIO()
&gt;&gt;&gt; someMagicFunction()
&gt;&gt;&gt; sys.stdout = original
&gt;&gt;&gt; print(new.getvalue())
foo bar baz
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about setting up basic logging:</p>
<p><a href="http://docs.python.org/3/library/logging.html" rel="nofollow">http://docs.python.org/3/library/logging.html</a></p>
<p>Here is the basic tutorial link:</p>
<p><a href="http://docs.python.org/3/howto/logging.html#logging-basic-tutorial" rel="nofollow">http://docs.python.org/3/howto/logging.html#logging-basic-tutorial</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>StringIO</code> has moved in Python 3. Try <code>from io import StringIO</code>. You also need to decide whether you want a <code>StringIO</code> or a <code>BytesIO</code>.</p>
<p>However, it sounds as though you're trying to monkey-patch over <code>sys.stdout</code> in (something like) a unit test. I wouldn't recommend doing this in your tests unless you're sure you need to; it'll make for hard-to-maintain tests. I'd suggest that your code needs refactoring - consider changing your function to return a string, which clients can print (or write to a file, or display on a GUI, or...) at their leisure.</p>
</div>
<span class="comment-copy"><a href="http://docs.python.org/2/library/subprocess.html" rel="nofollow noreferrer">subprocess.check_output</a></span>
<span class="comment-copy">This is a little confusing, both because 3.3 does have <code>io.StringIO</code> and because it's not clear how <code>StringIO</code> would capture the output, unless the function accepts a filelike output target or you rebind <code>print</code> or something.</span>
<span class="comment-copy">Thanks...don't know why I couldn't find StringIO before :)</span>
<span class="comment-copy">Thanks...don't know why I couldn't find StringIO before :)</span>
