<div class="post-text" itemprop="text">
<p>Here's an excerpt from the code I'm using.  I'm looping through the part that adds the email; my problem is rather than changing the "to" field on each loop, it is appending the "to" data.  Obviously this causes some issues, since the to field ends up getting longer and longer.  I tried msgRoot.del_param('To') to no avail.  I even tried setting the msgRoot['To'] to refer to the first index of a list so I could simply change the value of that list item (also didn't work).</p>
<pre><code>from email.MIMEMultipart import MIMEMultipart
msgRoot = MIMEMultipart('related')
msgRoot['To'] = 'email@email.com'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="http://docs.python.org/library/email.message.html#email.message.Message.replace_header" rel="nofollow"><code>replace_header</code> method</a>.</p>
<blockquote>
<p><code>replace_header(_name, _value)</code></p>
<p>Replace a header. Replace the first header found in the message that matches _name, retaining header order and field name case. If no matching header was found, a KeyError is raised.</p>
<p>New in version 2.2.2.</p>
</blockquote>
<p>For example,</p>
<pre><code>if msgRoot.has_key('to'):
    msgRoot.replace_header('to', someAdress)
else:
    msgRoot['to'] = 'email@email.com'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I just do this:</p>
<pre><code>del msgRoot["To"]
msgRoot["To"] = "email@email.com"
</code></pre>
<p>My homebrewed blog platform at <a href="http://www.royalbarrel.com/" rel="nofollow">http://www.royalbarrel.com/</a> stores its blog posts this way, using Mime messages. Works great. And if someone adds a comment I upgrade the message to MimeMultipart and have the first payload be the actual blog post and subsequent payloads be the comments.</p>
</div>
<span class="comment-copy">Thank you, that worked perfectly!</span>
<span class="comment-copy">in Python 3.5 I had to use <code>if 'to' in message:</code> because <code>has_key</code> has been deprecated.</span>
<span class="comment-copy">Python 3 changed dict syntax. See <a href="https://docs.python.org/3/whatsnew/3.0.html#builtins" rel="nofollow noreferrer">docs.python.org/3/whatsnew/3.0.html#builtins</a> "Removed. dict.has_key() â€“ use the in operator instead."</span>
