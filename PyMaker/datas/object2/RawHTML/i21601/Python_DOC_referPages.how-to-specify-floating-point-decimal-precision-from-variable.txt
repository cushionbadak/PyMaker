<div class="post-text" itemprop="text">
<p>I have the following repetitive simple code repeated several times that I would like to make a function for:</p>
<pre><code>for i in range(10):
    id  = "some id string looked up in dict"
    val = 63.4568900932840928 # some floating point number in dict corresponding to "id"
    tabStr += '%-15s = %6.1f\n' % (id,val)
</code></pre>
<p>I want to be able to call this function: <code>def printStr(precision)</code><br/>
Where it preforms the code above and returns <code>tabStr</code> with <code>val</code> to <code>precision</code> decimal points.  </p>
<p>For example: <code>printStr(3)</code><br/>
would return <code>63.457</code> for <code>val</code> in <code>tabStr</code>.</p>
<p>Any ideas how to accomplish this kind of functionality?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>tabStr += '%-15s = %6.*f\n' % (id, i, val)  
</code></pre>
<p>where <code>i</code> is the number of decimal places.</p>
<hr/>
<p>BTW, in the recent Python where <code>.format()</code> has superseded <code>%</code>, you could use</p>
<pre><code>"{0:&lt;15} = {2:6.{1}f}".format(id, i, val)
</code></pre>
<p>for the same task.</p>
<p>Or, with field names for clarity:</p>
<pre><code>"{id:&lt;15} = {val:6.{i}f}".format(id=id, i=i, val=val)
</code></pre>
<p>If you are using Python 3.6+, you could simply use <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="noreferrer">f-strings</a>:</p>
<pre><code>f"{id:&lt;15} = {val:6.{i}f}"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I know this an old thread, but there is a much simpler way to do this:</p>
<p>Try this:</p>
<pre><code>def printStr(FloatNumber, Precision):
    return "%0.*f" % (Precision, FloatNumber)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work too</p>
<pre><code>tabStr += '%-15s = ' % id + str(round(val, i))
</code></pre>
<p>where <code>i</code> is the precision required.</p>
</div>
<span class="comment-copy">Thanks for the help!</span>
<span class="comment-copy">@Jeremy You should accept the answer</span>
