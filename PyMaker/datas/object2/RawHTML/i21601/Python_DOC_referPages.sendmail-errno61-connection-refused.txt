<div class="post-text" itemprop="text">
<p>I've been trying to get my application to mail some outputted text to an email. For simplification I have isolated the script :</p>
<pre><code>import smtplib
import sys
import os

SERVER = "localhost"

FROM = os.getlogin()
TO = [raw_input("To : ")]

SUBJECT = "Message From " + os.getlogin()

print "Message : (End with ^D)"
TEXT = ''
while 1:
    line = sys.stdin.readline()
    if not line:
        break
    TEXT = TEXT + line

# Prepare actual message

message = """\
From: %s
To: %s
Subject: %s

%s
""" % (FROM, ", ".join(TO), SUBJECT, TEXT)

# Send the mail

server = smtplib.SMTP(SERVER)
server.sendmail(FROM, TO, message)
server.quit()
</code></pre>
<p>This script outputs :</p>
<pre><code>    Traceback (most recent call last):
  File "/Users/christianlaustsen/Dropbox/Apps - Python/mail/smtplib_mail.py", line 32, in &lt;module&gt;
    server = smtplib.SMTP(SERVER)
  File "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/smtplib.py", line 239, in __init__
    (code, msg) = self.connect(host, port)
  File "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/smtplib.py", line 295, in connect
    self.sock = self._get_socket(host, port, self.timeout)
  File "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/smtplib.py", line 273, in _get_socket
    return socket.create_connection((port, host), timeout)
  File "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/socket.py", line 512, in create_connection
    raise error, msg
error: [Errno 61] Connection refused
</code></pre>
<p>So as you can see, the connection is being refused. I'm running Python 2.6 on Mac OS X Snow Leopard (if that's relevant).</p>
<p>I have tried searching around a lot, but haven't been able to find a solution. Any help will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>My guess is that you do not have any SMTP server installed on your local machine.</p>
<p>If your emails are not sensitive, open a Gmail account and <a href="https://stackoverflow.com/questions/778202/smtplib-and-gmail-python-script-problems">send your emails using it with Python</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you start a local server as follows:</p>
<blockquote>
<p>python -m smtpd -n -c DebuggingServer localhost:1025</p>
</blockquote>
<p>Make sure to modify the mail-sending code to use the non-standard port number:</p>
<pre><code>server = smtplib.SMTP(SERVER, 1025)
server.sendmail(FROM, TO, message)
server.quit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Start a simple SMTP server with Python like so:</p>
<pre><code>python -m smtpd -n -c DebuggingServer localhost:1025
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't want to run a separate server, and if you're only using Unix, you can use this technique, copied from <a href="http://www.yak.net/fqa/84.html" rel="nofollow">http://www.yak.net/fqa/84.html</a>, and originally from the Python FAQ:</p>
<p>On Unix, it's very simple, using sendmail. The location of the sendmail program varies between systems; sometimes it is /usr/lib/sendmail, sometime /usr/sbin/sendmail. The sendmail manual page will help you out. Here's some sample code:</p>
<pre><code>SENDMAIL = "/usr/sbin/sendmail" # sendmail location
import os
p = os.popen("%s -t" % SENDMAIL, "w")
p.write("To: cary@ratatosk.org\n")
p.write("Subject: test\n")
p.write("\n") # blank line separating headers from body
p.write("Some text\n")
p.write("some more text\n")
sts = p.close()
if sts != 0:
    print "Sendmail exit status", sts
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I wanted to create something so that you could just copy paste it and have it work but this is the closest I got:</p>
<pre><code>from email.message import EmailMessage
import smtplib
import os

def send_email(message,destination):
    # important, you need to send it to a server that knows how to send e-mails for you
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    # don't know how to do it without cleartexting the password and not relying on some json file that you dont git control...
    server.login('valid.username@gmail.com', 'password_for_gmail')
    msg = EmailMessage()
    msg.set_content(message)

    msg['Subject'] = 'TEST'
    msg['From'] = 'valid.username@gmail.com'
    msg['To'] = destination
    server.send_message(msg)

if __name__ == '__main__':
    send_email('msg','destination@email')
</code></pre>
<p>I feel the tutorial is misleading because it assumes without telling you very well that you already have a running server that sends e-mails for you...its odd. The only issue with my script is that I dont know how to make it work without having the cleartext password just written there but alas...at least it sends it? Just make a fake e-mail address or something...</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are root on your system then you may want to install <code>opensmtpd</code>. First this way you don't need to run the server manually (this service is enabled by default so after <code>smtpd</code> installation either start it manually or reboot your machine). Second, you don't need to change the line <code>server = smtplib.SMTP(SERVER)</code>. To conclude, use <code>yum install opensmtpd</code> or the equivalent <code>apt-get</code> command.</p>
</div>
<div class="post-text" itemprop="text">
<p>For whatever reason, I had difficulty passing server and port to the constructor, but not the connect function. This ended up working for me:</p>
<pre><code>    s = smtplib.SMTP(timeout=30) #seconds
    s.connect(EMAIL_HOST, EMAIL_PORT)
    m = MIMEText('see subject')
    m['subject'] = 'sweet subject'
    m['from'] = EMAIL_FROM
    m['to'] = to_list  # comma-separated list of emails
    s.sendmail(m['from'], m['to'].split(','), m.as_string())
    s.quit()
</code></pre>
</div>
<span class="comment-copy">Your first step in debugging... Go to the shell and type 'telnet localhost 25' If that does not work, the problem does not belong in SO</span>
<span class="comment-copy">@MikePennington or they could use Gabriel's answer, which is very helpful. ;)</span>
<span class="comment-copy">I don't understand, <a href="https://docs.python.org/3/library/email.examples.html" rel="nofollow noreferrer">docs.python.org/3/library/email.examples.html</a> this is the first link given by google search and this question doesn't have a clear answer? How does one copy paste some piece of code that will work 100% and send an e-mail?</span>
<span class="comment-copy">Thank you, I was just stomped (don't know that much about smtp), since I could send a mail with sendmail and os.popen, I couldn't see why this would have been any different, but your answer clarifies it I guess :)... Thanks...</span>
<span class="comment-copy">is it possible to not rely on running something before the actual python script starts?</span>
<span class="comment-copy">what should "EMAIL_HOST, EMAIL_PORT" be? can you provide an example?</span>
