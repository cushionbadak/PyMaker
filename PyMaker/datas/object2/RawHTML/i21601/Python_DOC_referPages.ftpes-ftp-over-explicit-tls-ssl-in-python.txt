<div class="post-text" itemprop="text">
<p>I need a python client to do FTPES (explicit), does anyone has experience with any python package that can do this.</p>
<p>I am not able to do this in python, but can connect to FTP server using tools like FileZilla</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>FTP-SSL Explicit is well supported by native Python. After setting up the connection, you can use all the standard ftplib commands. More can be found at:
<a href="http://docs.python.org/2/library/ftplib.html#ftplib.FTP_TLS" rel="noreferrer">http://docs.python.org/2/library/ftplib.html#ftplib.FTP_TLS</a></p>
<p>Here's a basic example for downloading a file:</p>
<pre><code>from ftplib import FTP_TLS
ftps = FTP_TLS('ftp.MySite.com')
ftps.login('testuser', 'testpass')           # login anonymously before securing control channel
ftps.prot_p()          # switch to secure data connection.. IMPORTANT! Otherwise, only the user and password is encrypted and not all the file data.
ftps.retrlines('LIST')

filename = 'remote_filename.bin'
print 'Opening local file ' + filename
myfile = open(filename, 'wb')

ftps.retrbinary('RETR %s' % filename, myfile.write)

ftps.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For me this worked: (login after auth). Taken from <a href="http://nullege.com/codes/show/src%40p%40y%40pypy-HEAD%40lib-python%402.7%40test%40test_ftplib.py/598/ftplib.FTP_TLS/python" rel="nofollow noreferrer">Nullege</a>. They seem to be tests for <a href="https://docs.python.org/3/library/ftplib.html" rel="nofollow noreferrer">ftplib</a>.</p>
<pre><code>self.client = ftplib.FTP_TLS(timeout=10)
self.client.connect(self.server.host, self.server.port)

# enable TLS
self.client.auth()
self.client.prot_p()

self.client.login(user,pass)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can use an sftp client, it is provided with paramiko... however, sftp and ftp over ssl (ftps) are different...</p>
<pre><code>import paramiko as pm
import socket
# sftp client...
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.settimeout(20)
sock.connect((hostname, port))
trans = pm.Transport(sock)
trans.connect(hostkey=None ,username=username, password=password, pkey=None)
chan = trans.open_session()
chan.get_pty()
chan.invoke_shell()
sftp = pm.SFTP.from_transport(trans)
</code></pre>
<p>My googling indicates that ftp over ssl might be available in <a href="http://docs.python.org/library/ftplib.html" rel="nofollow">ftplib</a>, although I haven't tried this mechanism myself...  the FTP_TLS method was only added in python 2.7</p>
</div>
<div class="post-text" itemprop="text">
<p>Standard ftplib does contain everything you need for ftpes (ftps explicit) connection. I didn't find easy way to make implicit connections.</p>
<p>See: <a href="http://docs.python.org/2/library/ftplib.html#ftplib.FTP_TLS" rel="nofollow">http://docs.python.org/2/library/ftplib.html#ftplib.FTP_TLS</a></p>
</div>
<span class="comment-copy">However, for servers requiring reuse of TLS session in data channels, there is a need to subclass FTP_TLS, see workaround here: <a href="https://stackoverflow.com/a/43301750">stackoverflow.com/a/43301750</a>.</span>
