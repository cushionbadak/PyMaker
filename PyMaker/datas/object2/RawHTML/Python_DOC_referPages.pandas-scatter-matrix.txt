<div class="post-text" itemprop="text">
<p>Im trying to plot a scattermatrix with full dataframe and a subset selection of it. I want to plot both in one and the subset as overlay of the fulldataframe in another color. I try to do it like this:</p>
<pre><code>ax1 = scatter_matrix(entireColumns,color='Blue', alpha=0.4, figsize=(20, 20), diagonal='hist')
ax2 = scatter_matrix(selectedPoints,color='Red', alpha=0.4, figsize=(20, 20), diagonal='hist',ax=ax1)
</code></pre>
<p>But I get the error:</p>
<pre><code>     57             ax1 = scatter_matrix(entireColumns,color='Blue', alpha=0.4, figsize=(20, 20), diagonal='hist')#hist_kwds={'bins':5}#'kde#,color=colors
---&gt; 58             ax2 = scatter_matrix(selectedPoints,color='Red', alpha=0.4, figsize=(20, 20), diagonal='hist',ax=ax1)
     59             plt.show()
     60             #parallel_coordinates(entireColumns, subsetColumns[0],color=('#556270', '#4ECDC4', '#C7F464'))

/usr/local/lib/python3.5/dist-packages/pandas/plotting/_misc.py in scatter_matrix(frame, alpha, figsize, ax, grid, diagonal, marker, density_kwds, hist_kwds, range_padding, **kwds)
     82     for i, a in zip(lrange(n), df.columns):
     83         for j, b in zip(lrange(n), df.columns):
---&gt; 84             ax = axes[i, j]
     85 
     86             if i == j:

IndexError: too many indices for array
</code></pre>
<p>Without the ax argument, both are printed:</p>
<p><a href="https://i.stack.imgur.com/aoMlg.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/aoMlg.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>This very much looks like a bug in pandas. Here is how it should probably look like instead:</p>
<p>In <code>pandas/plotting/_tools.py</code> go to <a href="https://github.com/pandas-dev/pandas/blob/cb00deb94500205fcb27a33cc1d0df79a9727f8b/pandas/plotting/_tools.py#L196" rel="nofollow noreferrer">line 196</a>. The code there looks like this:</p>
<pre><code>if ax is None:
    fig = plt.figure(**fig_kw)
else:
    if is_list_like(ax):
        ax = _flatten(ax)
        if layout is not None:
            warnings.warn("When passing multiple axes, layout keyword is "
                          "ignored", UserWarning)
        if sharex or sharey:
            warnings.warn("When passing multiple axes, sharex and sharey "
                          "are ignored. These settings must be specified "
                          "when creating axes", UserWarning,
                          stacklevel=4)
        if len(ax) == naxes:
            fig = ax[0].get_figure()
            return fig, ax
        else:
            raise ValueError("The number of passed axes must be {0}, the "
                             "same as the output plot".format(naxes))
</code></pre>
<p>Replace it by </p>
<pre><code>if ax is None:
    fig = plt.figure(**fig_kw)
else:
    if is_list_like(ax):
        fax = _flatten(ax)
        if layout is not None:
            warnings.warn("When passing multiple axes, layout keyword is "
                          "ignored", UserWarning)
        if sharex or sharey:
            warnings.warn("When passing multiple axes, sharex and sharey "
                          "are ignored. These settings must be specified "
                          "when creating axes", UserWarning,
                          stacklevel=4)
        if len(fax) == naxes:
            fig = fax[0].get_figure()
            if squeeze:
                return fig, fax
            else:
                return fig, ax
        else:
            raise ValueError("The number of passed axes must be {0}, the "
                             "same as the output plot".format(naxes))
</code></pre>
</div>
<span class="comment-copy">The problem is that <code>ax1</code> returned from <code>scatter_matrix</code> is not a single axis object but a 5x5 array of subplots. You therefore cannot assign the whole array of subplots as <code>ax=ax1</code></span>
<span class="comment-copy">@Bazingaa There should be complete logic to allow for <code>ax</code> to be an array. So in principle the code here should work and its a bug in the logic in pandas.plotting that it doesn't.</span>
<span class="comment-copy">Hey, thank you very much. Is it possible to replace it in code, so i do not have to change the package code? Best regards!</span>
<span class="comment-copy">It should be possible to monkey-patch this. I.e. copy the complete <code>_subplots</code> function to your script, do the suggested edits, replace all internal function calls by the respective external ones and finally assign the modified function as <code>pandas.plotting._tools._subplots = _subplots</code>.</span>
