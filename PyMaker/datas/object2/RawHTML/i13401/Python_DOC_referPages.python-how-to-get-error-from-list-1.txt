<div class="post-text" itemprop="text">
<p>Is there a way to return an error for the index value [-1]?</p>
<pre><code>&gt;&gt;&gt;l=[1,2,3]
&gt;&gt;&gt;l[-1]
error:list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not for the built-in list type, but you can define your own class that has stricter indexing rules:</p>
<pre><code>&gt;&gt;&gt; class StrictList(list):
...     def __getitem__(self, index):
...             if index &lt; 0:
...                     raise IndexError("negative integers are forbidden")
...             return list.__getitem__(self, index)
...
&gt;&gt;&gt; seq = StrictList([1,2,3])
&gt;&gt;&gt; seq[-1]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;stdin&gt;", line 4, in __getitem__
IndexError: 'negative integers are forbidden'
</code></pre>
</div>
<span class="comment-copy">No, it's a valid index. It means "access the last element". You would need to wrap the access in an if statement to check if the index is &gt;=0.</span>
<span class="comment-copy">Note however that <code>list</code> methods do <i>not</i> call the <code>__getitem__</code> method to access elements. For instance with the definition above <code>seq[-1] = 0</code> doesn't yield any error.</span>
<span class="comment-copy">You should subclass <a href="https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableSequence" rel="nofollow noreferrer"><code>MutableSequence</code></a>, rather than <code>list</code>, to make sure you're implementing all of the appropriate methods for that protocol.</span>
<span class="comment-copy">The problem with this is that I will have a large number of indexes and decrement to 0. If possible I would like to avoid the extra processing power required for an if statement.</span>
<span class="comment-copy">Well, if you're only going to decrement to zero and not to negative one, why do you need <code>seq[-1]</code> to raise an error? Just use a regular list.</span>
