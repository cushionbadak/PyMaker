<div class="post-text" itemprop="text">
<p>I need some help here.</p>
<p>I have this for loop </p>
<pre><code>for i in range(0,15):
        logging.info('-----  packing iteration %i started  ------' % (i))
        po_selection_list = po_sel.get_po_lists(TrayID,TrayHeight,Materials,TrayName,i) # get po lists for this iteration
        po_count = 0
        for po_list in po_selection_list: # loop through all lists
            if len(po_list) == 0: #if list is empty go to next list
                pass
            else: # else load po's in tray
                po_count += len(po_list)
                functions_library.AddPOs_Stage1(po_list,driver)
                functions_library.AddPOs_trayIDSearch(driver)
                functions_library.AddPOs_Stage2(driver)

                functions_library.ImportParts()
        if po_count == 0: # if no po's were loaded in the tray go to next iteration
            pass
        else: # else pack and sync in netfabb
            functions_library.MovePartsZHeight()
            functions_library.NetfabbPacking(TrayID,TrayHeight,Materials)
            functions_library.RemoveNetfabbExtraParts()
            functions_library.NetfabbSync(driver)
</code></pre>
<p>Imagine if we are running in iteration number 4.
What I need is if <strong>functions_library.AddPOs_trayIDSearch(driver)</strong> returns <strong>False</strong> I want to restart the loop again (iteration number 4)</p>
<p><strong>EDIT</strong></p>
<pre><code>for i in range(0,15):
    logging.info('-----  packing iteration %i started  ------' % (i))
    po_selection_list = po_sel.get_po_lists(TrayID,TrayHeight,Materials,TrayName,i) # get po lists for this iteration
    po_count = 0
    for po_list in po_selection_list: # loop through all lists
        if len(po_list) == 0: #if list is empty go to next list
            pass
        else: # else load po's in tray
            po_count += len(po_list)
            functions_library.AddPOs_Stage1(po_list,driver)
            functions_library.AddPOs_trayIDSearch(driver)
            functions_library.AddPOs_Stage2(driver)

            functions_library.ImportParts()
    if po_count: # if no po's were loaded in the tray go to next iteration
        functions_library.MovePartsZHeight()
        functions_library.NetfabbPacking(TrayID,TrayHeight,Materials)
        functions_library.RemoveNetfabbExtraParts()
        functions_library.NetfabbSync(driver)

### finish the tray ###
functions_library.SelectAll(TrayHeight)
functions_library.MovePartsZHeight()
functions_library.NetfabbPacking(TrayID,TrayHeight,Materials)
functions_library.RemoveNetfabbExtraParts()
functions_library.RemoveCylinders(TrayHeight)
functions_library.NetfabbSync(driver)
functions_library.SetToPrinting(driver)
functions_library.SaveJob(tray_folder,TrayName)
functions_library.NetfabbSlicing(TrayID,tray_folder,TrayName)
logging.info('Tray: '+TrayName+' done!')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Before answering, note that:</p>
<pre><code>if something == 0:
    pass
else:
    do_stuff()
</code></pre>
<p>can be simplified into:</p>
<pre><code>if something:
    do_stuff()
</code></pre>
<p>because Python interprets it as <code>if bool(something) == True: do_stuff()</code>.</p>
<p>For your actual question, you could use a <code>while</code> loop and increment a counter only if the call you’re interested in returns <code>True</code>. You can check that every calls succeded using the <a href="https://docs.python.org/3/tutorial/controlflow.html?highlight=else#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow"><code>for ... else</code></a> construct:</p>
<pre><code>i = 0
while i &lt; 15:
    logging.info('-----  packing iteration %i started  ------' % (i))
    po_selection_list = po_sel.get_po_lists(TrayID,TrayHeight,Materials,TrayName,i) # get po lists for this iteration
    po_count = 0
    for po_list in po_selection_list: # loop through all lists
        if po_list: # load po's in tray
            po_count += len(po_list)
            functions_library.AddPOs_Stage1(po_list,driver)
            if not functions_library.AddPOs_trayIDSearch(driver):
                break
            functions_library.AddPOs_Stage2(driver)

            functions_library.ImportParts()
    else:
        # break didn't occur
        if po_count: # pack and sync in netfabb
            functions_library.MovePartsZHeight()
            functions_library.NetfabbPacking(TrayID,TrayHeight,Materials)
            functions_library.RemoveNetfabbExtraParts()
            functions_library.NetfabbSync(driver)
        i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Is it not easier to use <code>while</code> iterator?</p>
<pre><code>c = 0
while c &lt; 5:
    ...
    result = functions_library.AddPOs_trayIDSearch(...)
    if not result:
        c = 0
    else:
        c -= 1
</code></pre>
</div>
<span class="comment-copy">Are you maybe looking for <code>continue</code>? <a href="https://docs.python.org/2/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow noreferrer">docs.python.org/2/tutorial/…</a></span>
<span class="comment-copy">No because I don't want to skip to iteration 5, I want to re-run iteration 4.</span>
<span class="comment-copy">I don't see where the variable <code>driver</code> comes from. Does it change its value every iteration? The code example as provided doesn't make sense, because if the value for <code>driver</code> doesn't change you'll create an endless loop, iterating all the time for 4.</span>
<span class="comment-copy">It can be simplified to <code>if a != 0: do_stuff()</code>. You have a slight error in the beginning.</span>
<span class="comment-copy">@cezar <code>if a: do_stuff()</code> is more generic than <code>if a != 0: do_stuff()</code> as it accounts for all truthy values, not only integer ones. Check the <code>if po_list</code> in the code to understand.</span>
<span class="comment-copy">I meant <code>something</code>, just took <code>a</code> as shortcut. In order to simplify the if-clause you have to negate the condition.</span>
<span class="comment-copy">@cezar updated the answer to make it clearer.</span>
<span class="comment-copy">Yes, you're right. When comparing to 0, we can check for truthy (or falsy) values. I was thinking in general, not concerning the 0 in particular. But that <code>pass</code> in the if-clause immediately caught my eye. It definitely doesn't belong there. It's very good to point that out.</span>
