<div class="post-text" itemprop="text">
<p>Can somebody explain the 2nd line (<code>unicode</code> is a class defined in the code)?</p>
<pre><code>try:
    unicode
    _unicode = True
except NameError:
    _unicode = False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python 2 defines a <a href="https://docs.python.org/2/library/functions.html#unicode" rel="nofollow"><code>unicode</code> type</a>. Python 3 does not (<a href="https://docs.python.org/3/library/functions.html#func-str" rel="nofollow"><code>str</code></a> has taken this role). Trying to use the name <code>unicode</code> in Python 3 will thus raise a <a href="https://docs.python.org/3/library/exceptions.html#NameError" rel="nofollow"><code>NameError</code> exception</a>.</p>
<p>In other words, using the type name on a line does nothing by itself other than trigger a name lookup. If that name lookup fails, you know that the type is not available:</p>
<pre><code>$ python2.7 -c 'unicode'
$ python3.5 -c 'unicode'
Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
NameError: name 'unicode' is not defined
</code></pre>
</div>
<span class="comment-copy"><code>unicode</code> is not a class defined in the code. It is a Python 2 built-in type.</span>
<span class="comment-copy">You could also access <code>globals()</code> or <code>builtins</code> to check if there is a <code>unicode</code></span>
<span class="comment-copy">i have this class in my code. class unicode(basestring):</span>
<span class="comment-copy">@MohammadYusufGhazi: then the test is redundant, as the <code>basestring</code> name lookup will raise <code>NameError</code> in Python 3. In Python 2, that line is going to mask the built-in type, also an issue. Is this code public somewhere for us to have a look at?</span>
<span class="comment-copy">Dont know if its public. I'm a fresher python developer and I'm trying to understand code from the project on which I'm going to work.</span>
<span class="comment-copy">I have this class in my code. "class unicode(basestring):" Can you elaborate more on your second paragraph. What does name lookup means?</span>
<span class="comment-copy">All variable names are stored in a namespace. Each time you try to use a name, it needs to be looked up in the namespace to get the associated value. <code>foo = 42</code> creates a name in the namespace. <code>if foo: print 'hello'</code> would be a name lookup, retrieving the <code>42</code> integer.</span>
<span class="comment-copy">If you removed <code>foo = 42</code> from your program, <code>if foo:</code> would fail as the name <code>foo</code> was never defined. You'd get a <code>NameError</code> exception.</span>
<span class="comment-copy">Code that uses <code>class unicode(basestring):</code> sounds <i>broken</i>. Without more details on that code I cannot begin to say anything more elaborate than that. Ask a separate question with enough context for us to see what is going on in that code.</span>
<span class="comment-copy">Its a big class. The name lookup explanation helped. I could not understand what kind of statement it was. Thanks.</span>
