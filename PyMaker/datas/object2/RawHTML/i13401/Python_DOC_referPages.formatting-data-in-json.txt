<div class="post-text" itemprop="text">
<p>I'm trying to format a dataset in a json format by adding brackets separated by commas. The goal is to export it to a csv. The dataset has holes in some fields for some records and I get errors if I import them directly.</p>
<p>I have this line</p>
<pre><code>data_json_str = "[" + ','.join(data) + "]"
</code></pre>
<p>But I got this error</p>
<pre><code>TypeError                                 Traceback (most recent call last)
&lt;ipython-input-4-923cc05f5de6&gt; in &lt;module&gt;()
----&gt; 1 data_json_str = "[" + ','.join(data) + "]"

TypeError: sequence item 0: expected str instance, bytes found
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're using Python 3, I presume.</p>
<p>In Python 3, there are two string formats: <a href="https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str" rel="nofollow">str (sequences of Unicode code points)</a> and <a href="https://docs.python.org/3/library/stdtypes.html#bytes" rel="nofollow">bytes (sequences of bytes)</a>. For some reason (like having read the file in binary mode), you ended up with <code>bytes</code> instead of strings in your <code>data</code> object. These can neither be used as arguments to <code>','.join</code> nor passed to <code>json.dumps</code>:</p>
<pre><code>&gt;&gt;&gt; data = [b'abc', b'def']
&gt;&gt;&gt; data_json_str = "[" + ','.join(data) + "]"
Traceback (most recent call last):
  File "python", line 1, in &lt;module&gt;
TypeError: sequence item 0: expected str instance, bytes found

&gt;&gt;&gt; import json
&gt;&gt;&gt; json.dumps(data)
Traceback (most recent call last):
  File "python", line 1, in &lt;module&gt;
TypeError: b'abc' is not JSON serializable
</code></pre>
<p>You must first convert your bytes to unicode strings. If you already know the encoding (it's usually UTF-8), you can write e.g.:</p>
<pre><code>&gt;&gt;&gt; data = [d.decode('utf-8') for d in data]
&gt;&gt;&gt; data
['abc', 'def']
</code></pre>
<p>And then use either string joining or (preferably) <a href="https://docs.python.org/3/library/json.html" rel="nofollow">the JSON library</a> to convert them to a JSON string.</p>
<hr/>
<p><strong>EDIT</strong>: One reason why the data read from a file might be kept in bytes instead of Unicode is when you read from a file with the binary flag set, i.e. <code>open(filename, 'rb')</code> instead of <code>open(filename 'r')</code>. See <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow">the <code>open</code> function reference</a> for more information on how to change the default encoding when reading the file.</p>
<p>So, in the optimal case, the data is read from a text file into Unicode strings:</p>
<pre><code>with open('data.txt', 'r') as f:
    data = f.readlines()
</code></pre>
<p>And then converted to json:</p>
<pre><code>import json
print(json.dumps(data))
</code></pre>
</div>
<span class="comment-copy">Well I think a JSON shouldn't have sequences like <code>[,</code></span>
<span class="comment-copy">Please, provide example of <code>data</code> content. Also, why don't you want to use built in <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code></a> module?</span>
<span class="comment-copy">@MichałSzydłowski it doesn't result in <code>[,</code>, data is joined first by <code>','.join(data)</code> then enclosed in brackets.</span>
<span class="comment-copy">map(str,data) may fix it, i do not know the "data", though</span>
<span class="comment-copy">For your code to work, <code>data</code> would have to be sequence of strings. Obviously it isn't. Please edit your question and describe its format.</span>
<span class="comment-copy">Thanks everyone. Here's a format of a record in my dataset. I'm basically trying to convert it into a nice dataframe or simply export to a csv. But I've been getting errors in python. I pasted the data on vrious online conversion tools but none worked. {"var1":"100027","var2":1437486945732,"var3":1437488538170,"var4":"Op/9.8 (A; OM/6.5.27452/37.6066; U; en) P/2.12.423 V/12.16","var5":"/AF","var6":"/1","var7":"/186","var8":"/76","var9":"/1","var10":"www.google.com","var11":"<a href='http://www.google.com/","var12":"196.46.245.127' rel="nofollow noreferrer">google.com/","var12":"196.46.245.127</a>"}</span>
<span class="comment-copy">There's nothing obviously wrong with the data. What command did you type to receive the representation you just pasted? Can you do <code>print(data)</code> and paste the output of that here instead?</span>
<span class="comment-copy">Thanks. Here's my code. I didn't write it from scratch and tried editing it with my limited knowledge of python.   import pandas as pd import json import numpy as np  with open('data.txt', 'rb') as f:     data = f.readlines()      data = map(lambda x: x.rstrip(), data)  data_json_str = "[" + ','.join(data) + "]" print (data_json_str)  df = pd.read_json(data_json_str)  for index, row in df.iterrows():       print index       if row[9] == u'\U0010ffff': 	row[9] = 'emptyEntry' 	df.ix[index,9] = 'emptyEntry'       print str(df.ix[index,9])  df.to_csv("data-clean1.csv", index=False)</span>
<span class="comment-copy">Sorry I'm not sure how to type the code with the appropriate breaks and indents. I can send it to you directly if it's easier. Thanks for your help!</span>
<span class="comment-copy"><code>import pandas as pd import json import numpy as np   with open('data-2015-7-21.txt', 'rb') as f:     data = f.readlines()      data = map(lambda x: x.rstrip(), data)  data_json_str = "[" + ','.join(data) + "]" print (data_json_str)  df = pd.read_json(data_json_str)  for index, row in df.iterrows():       print index       if row[9] == u'\U0010ffff': 	row[9] = 'emptyEntry' 	df.ix[index,9] = 'emptyEntry'       print str(df.ix[index,9])  df.to_csv("data-clean1.csv", index=False)</code></span>
