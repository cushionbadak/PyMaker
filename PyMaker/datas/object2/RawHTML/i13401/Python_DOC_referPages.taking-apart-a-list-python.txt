<div class="post-text" itemprop="text">
<p>If I have a list like:</p>
<pre><code>X = [0, 2, 3, 4.0, 1, 0, 3, 0, 0, 0, 2, 1, 5, 2, 6, 0, 2.2, 1]
</code></pre>
<p>How would I write code in python that takes this list and finds the number of consecutive positive numbers and then makes a list that has lists of each of those consecutive numbers in it.</p>
<p>for example this example of x would return a number 4 
and it would also return:</p>
<pre><code>[[ 2, 3, 4.0, 1], [3], [ 2, 1, 5, 2, 6], [ 2.2, 1]]. 
</code></pre>
<p>I wrote this to find all the zeros but I do not know where to go from there: </p>
<pre><code> zeros = []
 for i in range(0,len(World)):
      if z[i]==0: 
          zeros.append(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You do not need to find out the indices of zeroes before-hand. You can simply keep another temporary list holding the values that are positive (greater than 0) since the last time 0 was encountered. And then when you encounter a 0 , append that temporary list to the result list, and change that temporary list to a new list. Example -</p>
<pre><code>result = []
temp = []
for i in X:
    if i &lt;= 0:
        if temp:
            result.append(temp)
            temp = []
    else:
        temp.append(i)
if temp:
    result.append(temp)
</code></pre>
<p>Demo -</p>
<pre><code>&gt;&gt;&gt; result = []
&gt;&gt;&gt; temp = []
&gt;&gt;&gt; for i in X:
...     if i &lt;= 0:
...         if temp:
...             result.append(temp)
...             temp = []
...     else:
...         temp.append(i)
...
&gt;&gt;&gt; if temp:
...     result.append(temp)
...
&gt;&gt;&gt; result
[[2, 3, 4.0, 1], [3], [2, 1, 5, 2, 6], [2.2, 1]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no need to fine the zeros. You can simply loop over your list and put the positive numbers in a temporary list until you encounter with a zero, but as a more pythonic approach for such tasks you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><em>itertools.groupby</em></a> :</p>
<pre><code>&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; [list(g) for k,g in groupby(X,key=lambda x:x&gt;0) if k]
[[2, 3, 4.0, 1], [3], [2, 1, 5, 2, 6], [2.2, 1]]
</code></pre>
<p>If you want to do it without <code>itertools</code> module you can use following function which works based on preceding explanation and yields the temp list every time it encounter a zero, and at last returns a generator contains list of positive numbers which you can convert it to a list by calling the <code>list</code> function :</p>
<pre><code>&gt;&gt;&gt; def grouper(li,temp=[]):
...    for i in li:
...        if i&gt;0:
...           temp.append(i)
...        else:
...            if temp: yield temp
...            temp=[]
...    if temp : yield temp
...
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; list(grouper(X))
[[2, 3, 4.0, 1], [3], [2, 1, 5, 2, 6], [2.2, 1]]
</code></pre>
</div>
<span class="comment-copy">Can you explain what you are trying to do in more detail?</span>
<span class="comment-copy">I am trying to write a function in which I input a list and then return the amount of times consecutive numbers appear in that list and then return a list that contains lists of these numbers.</span>
<span class="comment-copy">@Laura pro-tip: when someone asks for more detail, don't just use the same words in a slightly different order!</span>
<span class="comment-copy">Oh, "consecutive positive numbers" means "<i>adjacent</i> positive numbers". That would have made much more sense.</span>
<span class="comment-copy">@Laura Give at least 3 examples with input and expected output.</span>
<span class="comment-copy">OP mentions positive numbers, not just non-zero numbers!</span>
