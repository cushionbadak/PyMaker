<div class="post-text" itemprop="text">
<p>Consider a directory <code>mypackage</code> containing the files <code>__init__.py</code>, <code>module_a.py</code> and <code>module_b.py</code>.</p>
<p>If <code>module_a</code> wants to access <code>module_b</code>, it has to do <code>import mypackage.module_b</code> or <code>import module_b from mypackage</code>. Simply <code>import module_b</code> fails.</p>
<p>Firstly: why?</p>
<p>Secondly: is this a problem?</p>
<p>Thirdly: if it is, what's the best way to deal with this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 uses <em>absolute imports</em>; any unqualified name is seen as a top-level module or package.</p>
<p>If you want to import from within a package, use <code>.</code> relative package prefixes; <code>.</code> is the current package, <code>..</code> the parent, etc.</p>
<p>So from within your <code>mypackage</code> package you can access other modules with:</p>
<pre><code>from . import module_b
</code></pre>
<p>See the <a href="https://docs.python.org/3/tutorial/modules.html#intra-package-references" rel="nofollow"><em>Intra-package References</em> section of the Python tutorial</a> and the <a href="https://docs.python.org/3/reference/simple_stmts.html#the-import-statement" rel="nofollow"><code>import</code> statement reference</a>.</p>
</div>
<span class="comment-copy">So should I just always use <code>from .</code> when importing other scripts?</span>
<span class="comment-copy">@AvivCohn: when importing <i>within a package</i>, using <code>from . import other_module</code> is helpful.</span>
