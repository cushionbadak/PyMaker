<div class="post-text" itemprop="text">
<p>My program takes a text file and splits each sentence into a list using <code>split('.')</code> meaning that it will split when it registers a full stop however it can be inaccurate.</p>
<h1>For Example</h1>
<pre><code>str='i love carpets. In fact i own 2.4 km of the stuff.'
</code></pre>
<h2>Output</h2>
<p><code>listOfSentences = ['i love carpets', 'in fact i own 2', '4 km of the stuff']</code></p>
<h2>Desired Output</h2>
<pre><code> listOfSentences = ['i love carpets', 'in fact i own 2.4 km of the stuff']
</code></pre>
<p>My question is: <strong>How do I split the end of sentences and not at every full stop.</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>If you have sentences both ending with "." and ". ", you can try regex: </p>
<pre><code>import re

text = "your text here. i.e. something."
sentences = re.split(r'(?&lt;!\w\.\w.)(?&lt;![A-Z][a-z]\.)(?&lt;=\.|\?)\s', text)
</code></pre>
<p>source: <a href="https://stackoverflow.com/questions/25735644/python-regex-for-splitting-text-into-sentences-sentence-tokenizing">Python - RegEx for splitting text into sentences (sentence-tokenizing)</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Any regex based approach cannot handle cases like <em>"I saw Mr. Smith."</em>, and adding hacks for those cases is not scalable.  As user <em>est</em> has commented, any serious implementation uses data.</p>
<p>If you need to handle English only then spaCy is better than NLTK:</p>
<pre><code>from spacy.en import English
en = English()
doc = en(u'i love carpets. In fact i own 2.4 km of the stuff.')
for s in list(doc.sents):
    print s.string
</code></pre>
<p>Update: spaCy now supports many languages.</p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way is to split on a dot followed by a space as:</p>
<pre><code>&gt;&gt;&gt; s = 'i love carpets. In fact i own 2.4 km of the stuff.'
&gt;&gt;&gt; s.split('. ')
['i love carpets', 'In fact i own 2.4 km of the stuff.']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not splitting at numbers can be done using the <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow">split</a> function of the <a href="https://docs.python.org/3/library/re.html" rel="nofollow">re</a> module:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = 'i love carpets. In fact i own 2.4 km of the stuff.'
&gt;&gt;&gt; re.split(r'\.[^0-9]', s)
['i love carpets', 'In fact i own 2.4 km of the stuff.']
</code></pre>
</div>
<span class="comment-copy">how do you split?</span>
<span class="comment-copy">listOfSentences = file.split(".")</span>
<span class="comment-copy">Splitting into sentences is a non-trivial task. Maybe you can try Natural Language Toolkit. <a href="http://stackoverflow.com/questions/4576077/python-split-text-on-sentences">Link</a> to the similar question.</span>
<span class="comment-copy">Indeed, also consider abbreviations, e.g. like this one. Tokenisation and sentence splitting is quite an interesting, albeit under-appreciated, task in. NLTK surely has tokenisation and sentence splitting functions. For a specialized solution you can also consider using <i>ucto</i> with python-ucto (<a href="https://github.com/proycon/ucto" rel="nofollow noreferrer">github.com/proycon/ucto</a> , <a href="https://github.com/proycon/python-ucto" rel="nofollow noreferrer">github.com/proycon/python-ucto</a>), which can tokenize and sentence split various languages.  [<i>disclaimer</i>: I am the author of ucto]</span>
<span class="comment-copy">What if the sentence has <code>Mr.</code> (or <code>i.e.</code>) in it?  Your own example yields <code>["your text here", "i.e", "something."]</code>.</span>
<span class="comment-copy">okay but what if it there was a case where there wasn't a space after for example: <code>population of 142,100,.[2] falling to 142,065 at the 2011 Census</code> the [2] stops this from working</span>
<span class="comment-copy">Also what about abbreviations followed by dot? And for example question marks, exclamation marks, etc.?</span>
<span class="comment-copy">You are looking for <a href="http://stackoverflow.com/questions/4576077/python-split-text-on-sentences" title="python split text on sentences">stackoverflow.com/questions/4576077/â€¦</a></span>
