<div class="post-text" itemprop="text">
<p>Have the user guess a number but give hints when there wrong as shown below. </p>
<pre><code>number = input('Enter your number here: ')
def guessTheNumber(number):
 if number &lt;= 10:
 return str('Your number is to small')
 else:
 if number &gt;= 10:
 return str('Your number is to big')
 else:
 if number == 10:
 return str('Your right!')
</code></pre>
<p>Need help fixing errors and actually having it output information as for is giving blanks and errors. Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try these following codes:</p>
<pre><code>number = int(input('Enter your number here: '))
def guessTheNumber(number):
    if number &lt;= 10:
        return 'Your number is to small'

    elif number &gt;= 10:
        return 'Your number is to big'

    elif number == 10:
        return 'Your right!'

print(guessTheNumber(number))
</code></pre>
<ol>
<li>If you want to return some string, you don't need use <code>str()</code> function.</li>
<li><code>else</code> can't be use like that. <a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements" rel="nofollow">For more info</a></li>
<li>Python need indent right? :)</li>
<li>If you define a function, you should call it like <code>guessTheNumber(number)</code>. <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow">For more info</a></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Your else statements are unnecessary and don't know if you pasted your code wrong, but your spacing is all off. Also, you are returning a string but never printing it so that is why you are never seeing it. You want to put a print before calling your function. The following code works:</p>
<pre><code>def guessTheNumber(number):
    if number &lt; 10:
        return str('Your number is to small')
    if number == 10:
        return str('Your right!')
    if number &gt; 10:
        return str('Your number is to big')

number = input('Enter your number here: ')

print(guessTheNumber(number))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ok, I fixed a few things: Instead of using <code>else: if [xxx,yyy]</code> , try elif instead, as it's a lot less confusing.</p>
<p>And also, the indentation in the example you game was off, which made it all the more difficult to read. Try copying and pasting the code into the question box, then highlighting it, and pressing the <code>{}</code> button.</p>
<pre><code>number = input('Enter your number here: ')
def guessTheNumber(number):
   if number &lt;= 10:
       return str('Your number is to small')
   elif number &gt;= 10:
       return str('Your number is to big')
   elif number == 10:
       return str('You're right!')
print guessTheNumber(number)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you forgot to catch and print the return string. Be very careful about indentation in python </p>
<pre><code>number = input('Enter your number here: ')
def guessTheNumber(number):
    if number &lt;= 10:
        return str('Your number is to small')
    if number &gt;= 10:
        return str('Your number is to big')
    if number == 10:
        return str('Your right!')
str = guessTheNumber(number)
print str
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To make your code more "pythonic" the function can be written as:</p>
<pre><code>def guess_the_number(number):
    return ('You are right.', 
            'Your number is too big.', 
            'Your number is too small.')[cmp(number, 10)]
</code></pre>
<p><code>cmp</code> is a comparisaion function it returns <code>-1</code>, <code>0</code> or <code>1</code> depeding if the first argument is smaller, equal or bigger than the second. </p>
<p>This value can then be used as an index for the tuple. On <code>0</code> and <code>1</code> it will return the first or second item (indexes start at 0 not at 1). </p>
<p>Negative indexes are counted from the end backwards, so <code>-1</code> is the last item. Using this you can just put in the return value for <code>-1</code> as the last item.</p>
<p>Additionally I corrected your indentation (should be 4 spaces) and the functions name to fit the typical Python coding style.</p>
</div>
<span class="comment-copy">Your <code>if</code> has two <code>else</code>...</span>
<span class="comment-copy">Sorry if I don't catch on fast a little slow here, but I don't understand D:?</span>
<span class="comment-copy">Note that if <code>number == 10</code>, <code>number &lt;= 10</code> as well, so if you guess 10, your first branch will be taken..</span>
<span class="comment-copy">in python you can use <code>elif</code> instead of else: if, I imagine you want to be using a while loop and printing the messages not returning</span>
<span class="comment-copy">@bradmonster you forgot to hold the return string. Be very careful about indentation in python</span>
<span class="comment-copy">That is clever, but not at all Pythonic (<code>cmp</code> doesn't even exist in Python 3 for that matter). Pythonic doesn't mean "one-lined" it means clean and obvious (to someone with moderate Python experience), and this is neither.</span>
