<div class="post-text" itemprop="text">
<p>It is possible to get index of particular element in list using <code>index()</code> method, following way (borrowed from <a href="https://stackoverflow.com/questions/176918/finding-the-index-of-an-item-given-a-list-containing-it-in-python">here</a>):</p>
<pre><code>&gt;&gt;&gt; ["foo", "bar", "baz"].index('bar')
1 
</code></pre>
<p>Is it possible to apply the same principle to nested structures (if not what is the closest most pythonic way)? The result should looks like this:</p>
<pre><code>In [20]: list
Out[20]: [(0, 1, 2), (3, 4, 5)]
In [21]: list.someMagicFunctionHere(,4,)
Out[20]: 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Search for the element in a container in your list:</p>
<pre><code>def get_nested_index(list_, element):
    for index, container in enumerate(list_):
        if element in container:
             return index

    # If we made it here, it wasn't in any of the containers
    raise ValueError("{element} not in any element in list".format(element=element))
</code></pre>
<p>-</p>
<pre><code>&gt;&gt;&gt; get_nested_index([(0, 1, 2), (3, 4, 5)], 4)
1
</code></pre>
<p>You can read about <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code> here</a> if you haven't seen it before.</p>
</div>
<div class="post-text" itemprop="text">
<p>adding to Navith's solution index...</p>
<pre><code>def get_nested_index(list_, element):
    lt = []
    for index, container in enumerate(list_):
        if element in container:
             t = index, container.index(element)
        lt.append(t)
        t = ()
    return lt

print(get_nested_index([(0, 1, 4, 2), (3, 4, 5)], 4))
</code></pre>
<p>output
[(0, 2), (1, 1)]</p>
</div>
<span class="comment-copy">I would think the pythonic way would be to do some reading then try a few things out till it feels right.</span>
