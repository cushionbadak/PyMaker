<div class="post-text" itemprop="text">
<p>I am trying to run following simple code</p>
<pre><code>import sys

print("Starting Test Python Module");

def testmethod():
    print("From test method")

sys.exitfunc = testmethod
print("Terminating Test Python Module");
</code></pre>
<p>and it prints</p>
<pre><code>C:\Users\athakur\Softwares&gt;python test.py
Starting Test Python Module
Terminating Test Python Module
</code></pre>
<p>I am not able to understand why it does not print "From Test method"</p>
<p>Using atexit works fine though</p>
<pre><code>import atexit

print("Starting Test Python Module");

def testmethod():
    print("From test method")

atexit.register(testmethod)
print("Terminating Test Python Module");
</code></pre>
<p>Outputs</p>
<pre><code>C:\Users\athakur\Softwares&gt;python test.py
Starting Test Python Module
Terminating Test Python Module
From test method
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>sys.exitfunc</code> <a href="https://docs.python.org/3/library/sys.html#sys.executable" rel="nofollow">does not exist</a> in Python 3.x.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/sys.html#sys.exitfunc" rel="noreferrer"><code>sys.exitfunc</code></a> is deprecated since python2.4 and was <a href="https://docs.python.org/3.5/search.html?q=sys.exitfunc&amp;check_keywords=yes&amp;area=default" rel="noreferrer">removed in python3</a>.</p>
</div>
<span class="comment-copy">Yes I am using <code>Python 3.4.3</code>. So this would explain the behavior. But shouldn't python interpreter complaint about it?</span>
<span class="comment-copy">The protection against arbitrary attributes being added to objects of <i>types</i> defined in C apparently doesn't apply to modules. Should it? Possibly.</span>
<span class="comment-copy">@AniketThakur No, you are simply setting an attribute <code>exitfunc</code> to <code>sys</code> module, there is nothing wrong about that. You can do <code>sys.blahblahblah = &lt;something&gt;</code> , and it would work ( as long as something is defined :-) , like it works for most other objects in python) .</span>
