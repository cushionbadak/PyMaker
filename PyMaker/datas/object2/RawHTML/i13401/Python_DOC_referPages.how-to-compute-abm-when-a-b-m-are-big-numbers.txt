<div class="post-text" itemprop="text">
<p>For example, if <code>A = 864927518</code>, <code>B = 1462579282</code> ,<code>M = 193773611</code>, how to compute <code>(A^B)%M</code>?</p>
<p>Is there a simple way?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes: use <a href="https://en.wikipedia.org/wiki/Modular_exponentiation">modular exponentiation</a>. Python's built in <a href="https://docs.python.org/3/library/functions.html#pow"><code>pow</code></a> function allows you to do this with its optional third argument:</p>
<pre><code>&gt;&gt;&gt; pow(A, B, M)
2767533
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>3&gt;&gt; pow(864927518, 1462579282, 193773611)
2767533
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I shall blithely assume that you are using <code>^</code> as the exponentiation operator here (rather than as XOR). You can either use the built-in <code>pow</code> or you can code your own:</p>
<pre><code>import math

def expmod(i, j, m):
  """Compute (i ** j) % m"""

  acc = 1
  mask = 2 ** int(math.ceil(math.log(j, 2)))
  while mask &gt; 0:
    acc = acc * acc
    if mask &amp; j:
      acc = acc * i
      j = j ^ mask
    mask = mask // 2
    acc = acc % m

  return acc
</code></pre>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/8496182/calculating-powa-b-mod-n">Calculating pow(a,b) mod n</a></span>
<span class="comment-copy"><a href="http://stackoverflow.com/q/18804958/995714">Modular exponentiation implementation in Python 3</a>, <a href="http://stackoverflow.com/a/10539256/995714">How did Python implement the built-in function pow()?</a></span>
<span class="comment-copy">How does it run so fast? It's near instantaneous</span>
<span class="comment-copy">@TimCastelijns: By using a well-known equivalent equation.</span>
