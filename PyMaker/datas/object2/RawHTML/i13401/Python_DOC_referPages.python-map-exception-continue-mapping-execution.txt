<div class="post-text" itemprop="text">
<p>The following example is very simple. I want to execute <strong>map()</strong> with a function which can raise Exception. It will be more clearly with an example : </p>
<pre><code>number_list = range(-2,8)

def one_divide_by(n):
    return 1/n

try:
    for number, divide in zip(number_list, map(one_divide_by, number_list)):
        print("%d : %f" % (number, divide))
except ZeroDivisionError:
    # Execution is stopped. I want to continue mapping
    pass
</code></pre>
<p>When I execute this code I get : </p>
<pre><code>-2 : -0.500000
-1 : -1.000000
</code></pre>
<p>It's due to the 0 in my list. I don't want remove this 0 (because in real case I can't know first if I will get Exception).
Do you know how to <strong>continue mapping after the exception</strong> ?</p>
</div>
<div class="post-text" itemprop="text">
<p>you could catch the exception in your function (instead of in the <code>for</code> loop) and return <code>None</code> (or whatever you choose) if <code>ZeroDivisionError</code> is raised: </p>
<pre><code>def one_divide_by(n):
    try:
        return 1/n
    except ZeroDivisionError:
        return None
</code></pre>
<p>if you choose to <code>return None</code> you need to adapt your format string; <code>None</code> can not be formatted with <code>%f</code>.</p>
<p>other values you could return (and that would be compatible with your string formatting) are <code>float('inf')</code> (or <code>float('-inf')</code> depending  on the sign of your numerator) or <code>float('nan')</code> - "<em>inf</em>inity" or "<em>n</em>ot <em>a</em> <em>n</em>umber".</p>
<p><a href="https://stackoverflow.com/questions/1628026/python-infinity-any-caveats">here</a> you will find some of the caveats of using <code>float('inf')</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can move the <code>try/except</code> block inside the function. Example -</p>
<pre><code>def one_divide_by(n):
    try:
        return 1/n
    except ZeroDivisionError:
        return 0   #or some other default value.
</code></pre>
<p>And then call this normally, without a try/except block -</p>
<pre><code>for number, divide in zip(number_list, map(one_divide_by, number_list)):
    print("%d : %f" % (number, divide))
</code></pre>
</div>
<span class="comment-copy">if you know what value to substitute for 'infinite' then use <code>try: return 1/n; except ZeroDivisionError: return yourvalue</code></span>
<span class="comment-copy">I think returning <code>float('nan')</code> is probably the best option here. But I guess that it should be mentioned that you need to use <a href="https://docs.python.org/3/library/math.html?highlight=math.isnan#math.isnan" rel="nofollow noreferrer">math.isnan()</a> to test <code>nan</code>.</span>
<span class="comment-copy">Thank you ! It works</span>
