<div class="post-text" itemprop="text">
<p>Data File 1:</p>
<p>data_20150801.csv</p>
<pre><code>Time                Header  Header  Header  Header 
2015-08-01 07:00    14.4    14.4    14.4    68                              
2015-08-01 07:01    14.4    14.4    14.4    68  
</code></pre>
<p>Data File 2</p>
<p>data2_20150801.csv</p>
<pre><code>Time                Header   Header
2015-08-01 00:00    90       12312
2015-08-01 00:01    232      13213
......
2015-08-01 07:00    1000    1500
2015-08-01 07:01    2312    1245
2015-08-01 07:02    1232    1232
2015-08-01 07:03    1231    1232
</code></pre>
<p>Id like to merge those 2 .csv Files, to get a File That looks like:</p>
<pre><code>Time                Header  Header  Header  Header Header   Header
2015-08-01 07:00    14.4    14.4    14.4    68     1000     1500
</code></pre>
<p>so basically I need to copy the Rows from data2_ and insert them at the right time points in data_
I tried it manually with Notepad ++ but the Problem is, that sometimes there's no entry for one Minute in data2_ so I'd need to check where the missing TimeStep is and skip that point manually. </p>
<p>I did some things in Python but I'm still a noob so I lack the experience on how to start tackling a problem like this?</p>
<p>I'm using a mac and I found that cat command that combines .csv files in a Folder to one cvs file --&gt; is there a way to do this line by line conserving the timestamps?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use Python Pandas to do this quite easily, but its probably an overengineering:</p>
<pre><code>import pandas as pd
d_one = from_csv('data.csv',sep=',',engine='python',header=0)
d_two = from_csv('data2.csv',sep=',',engine='python',header=0)
d_three = pd.merge(d_one, d_two, left_on='timestamp',right_on='timestamp')
d_three.to_csv('output.csv',sep=',')
</code></pre>
<p>I havent had the chance to test this code but it should do what you want, you may need to modify commas for tabs (depending on the file), etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not being a Python expert, I would use two dictionaries, using the date-time stamp as key and a list for the other columns as data.</p>
<p>Load one file into one dictionary, and the other file into the other. Then it's pretty simple to merge the two dictionaries using keys that are the same in both.</p>
<p>As for reading the files, there is a standard <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>cvs</code> module</a> that you can use.</p>
</div>
<div class="post-text" itemprop="text">
<p>Considering the solution that proposed the use of Pandas, I would add "index=False" on the to_csv line, turning it out in</p>
<pre><code>d_three.to_csv('output.csv',sep=',', index=False)
</code></pre>
<p>This will remove the index column.</p>
</div>
<span class="comment-copy">I get an error for the <code>from_csv</code> part <code>from_csv</code>not defined</span>
<span class="comment-copy">Sorry, I meant read_csv</span>
<span class="comment-copy">I adjusted everything and now the output looks like this: <code>0   2015-08-01 07:00    14.4    14.4    14.4    68    2015-08-01 07:00  1000     1500</code> so there's an extra Column left starting with <code>0</code> and the timestamp shows up twice. It doesn't really matter but is there an option to get rid of the first column and the second timestamp column</span>
<span class="comment-copy">The merge I thought sohuld have gotten rid of that. But, yeah, there should be ways to delete that. The first column is the row number index, for reference.</span>
