<div class="post-text" itemprop="text">
<p><a href="https://pypi.python.org/pypi/RestrictedPython" rel="nofollow">RestrictedPython</a> module has a <a href="https://github.com/zopefoundation/RestrictedPython/blob/master/src/RestrictedPython/RCompile.py" rel="nofollow">restricted compiler</a> in which you can compile code and customize some python features. For example, you can replace the builtin <a href="https://pypi.python.org/pypi/RestrictedPython#implementing-a-policy" rel="nofollow">print</a> function.</p>
<p>That's what I need to do. I need to compile some code but defining my own print function. I can't use this restricted compiler because it has a lot of restrictions I don't need at now.</p>
<p>Do you know any other compiler in which I can define my own print function?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use regular Python then; in Python 2 use:</p>
<pre><code>from __future__ import print_function
</code></pre>
<p>or use Python 3, and <code>print()</code> is then a <em>function</em>. You can redefine that function:</p>
<pre><code>from __future__ import print_function
try:
    # Python 2
    from __builtin__ import print as builtin_print
except ImportError:
    from builtins import print as builtin_print

def print(*args, **kw):
    # do something extra with *args or **kw, etc.
    builtin_print(*args, **kw)
</code></pre>
<p>Like any other built-in function you can define your own function using the same name. In the above example I used the <a href="https://docs.python.org/2/library/__builtin__.html" rel="nofollow"><code>__builtin__</code></a> / <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow"><code>builtins</code></a> module to access the original.</p>
<p>If you are using <code>exec()</code>, you can pass in the <code>print()</code> function you defined as an extra name in the namespace you pass in:</p>
<pre><code>exec(code_to_execute, {'print': your_print_function})
</code></pre>
<p>For Python 2, you do need to compile the code <em>first</em> to switch off the <code>print</code> statement and enable the <code>print()</code> function; use the <a href="https://docs.python.org/2/library/functions.html#compile" rel="nofollow"><code>compile()</code> function</a> to produce a code object to pass to the <code>exec</code> statement:</p>
<pre><code>import __future__

code_to_execute = compile(
    code_to_execute_in_string, '', 'exec',
    flags=__future__.print_function.compiler_flag)
</code></pre>
<p>I used the <a href="https://docs.python.org/2/library/__future__.html" rel="nofollow"><code>__future__</code> module</a> to obtain the right compiler flag.</p>
</div>
<span class="comment-copy"><i>Why</i> do you need to replace the <code>print</code> function? I'm pretty sure there's a better/easier way to achieve what you need.</span>
<span class="comment-copy">I have to execute python code in runtime. I'm doing this by using the compile and exec statements. Something I'd like to do is to redirect all prints (from this code) to some predefined function. (security is unneeded)</span>
<span class="comment-copy">More precisely, I'm developing a webpage and I like to redirect all prints to the browser. I've done it by using restricted python, but I can't use it anymore.</span>
<span class="comment-copy">Not sure if that's a problem, but this will not change the behaviour of <code>print</code> in an imported module OP has no control over, right?</span>
<span class="comment-copy">@tobias_k: it would not. You could use <code>import builtins; builtins.print = your_print_function</code> to alter the function <i>everywhere</i> (Python 3 spelling, adjust for Python 2 as needed).</span>
<span class="comment-copy">I like to do it but just in code executed by using exec or eval.</span>
<span class="comment-copy">@SebastianAlvarez: updated to include how to do this with a compiler flag in Python 2.</span>
<span class="comment-copy">That's what I was looking for. Thanks</span>
