<div class="post-text" itemprop="text">
<p>I am creating a list page and I have this concept. this is my data</p>
<pre><code>        List = [
    {'exec_date': datetime.date(2015, 9, 30), 'name': 'AAA', 'status': 'PE'},
    {'exec_date': datetime.date(2015, 10, 29), 'name': 'BBB', 'status': 'DN'}, 
    {'exec_date': datetime.date(2015, 9, 30), 'name': 'CCC', 'status': 'PE'}, 
    {'exec_date': datetime.date(2015, 9, 30), 'name': 'DDD', 'status': 'DN'}, 
    {'exec_date': datetime.date(2015, 9, 7), 'name': 'EEE', 'status': 'DN'}, 
    {'exec_date': datetime.date(2015, 9, 30), 'name': 'FFF', 'status': 'NY'}]
</code></pre>
<p>and I would like to display an output like this</p>
<pre><code>2015-9-7
    1. EEE, DN
2015-9-30
    1. AAA, PE
    2. CCC, PE
    3. DDD, DN
    4. FFF, NY
2015-10-29
    1. BBB, DN
</code></pre>
<p>I am thinking about for loop but I would like to display dates only once and not repeat it.</p>
<p>@Gocht This is the result. as I have noticed. Sept. 30, 2015 repeats 3 times. </p>
<pre><code>    Sept. 30, 2015
        1.Set Task Finished, PE
    Oct. 29, 2015
        1.New Activity for a Task, DN
    Sept. 30, 2015
        1.New Activity from a User, PE
        2.New Activity from a User, DN
    Sept. 7, 2015
        1.New Activity for a Task, DN    
    Sept. 30, 2015
        1.New Activity from a User, NY
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>from django.db.models import F
Model.objects.values('Date').distinct().annotate(name=F('Name'), status=F('Status'))
</code></pre>
<p><strong>EDIT</strong></p>
<p>One option to show this in template is usgin <a href="https://docs.djangoproject.com/en/1.8/ref/templates/builtins/#regroup" rel="nofollow">regroup</a> template tag, and <a href="https://docs.djangoproject.com/en/1.8/ref/templates/builtins/#for" rel="nofollow">forloop</a> to show an index number:</p>
<pre><code>{% regroup List by exec_date as list_data %}

&lt;ul&gt;
{% for exec_date in list_data %}
    &lt;li&gt;{{ exec_date.grouper }}
    &lt;ul&gt;
        {% for item in exec_date.list %}
          &lt;li&gt; {{ forloop.counter }}.{{ item.name }}, {{ item.status }}&lt;/li&gt;
        {% endfor %}
    &lt;/ul&gt;
    &lt;/li&gt;
{% endfor %}
&lt;/ul&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The proper way to sort your list is with the <a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow">sort</a> function as so:</p>
<pre><code>List.sort(key=lambda a: a['exec_date'])
</code></pre>
<p>After the list is properly sorted, you can then iterate over the list items and display them as needed.</p>
</div>
<span class="comment-copy">Hi thanks... I updated my question... This is what I really mean. Now I am trying to seach tutorials how to use annotate and distinct as you suggested... thank you</span>
<span class="comment-copy">yes I helps... this is close to what I am imagining. however. this is the result when I ran it. I will update my question so you would see it... Thanks again @Gocht</span>
<span class="comment-copy">I got it!! I just added .orderby('exec_date')</span>
<span class="comment-copy">Yes, I was thinking you need to change yuor query.</span>
