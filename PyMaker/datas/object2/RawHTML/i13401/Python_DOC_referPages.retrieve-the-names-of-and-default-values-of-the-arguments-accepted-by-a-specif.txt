<div class="post-text" itemprop="text">
<p>Say I have a function, <code>foo</code> which has some arguments...some positional and some keyword:</p>
<pre><code>def foo(a, b=1.0, c=None):
    print a
    print c
    return 2 * b
</code></pre>
<p>Is there another function I can call with <code>foo</code> as an argument (or a method of <code>foo</code> which I can call) that will return to me a list of the positional arguments of <code>foo</code> as well as a list of tuples of the keyword arguments of foo along with their default values?  Specifically, calling:</p>
<pre><code>the_function_i_want(foo)
</code></pre>
<p>should return</p>
<pre><code>(('a',), (('b', 1.0), ('c', None)))
</code></pre>
<p>Or something like that.  To be clear I do <em>not</em> want a way to figure out what values were passed to <code>foo</code> one particular time that it was called.  Instead I want information about the function signature of <code>foo</code> in a programatic way.  </p>
<p>(The use case I have in mind is to automatically make a web form which will be able to submit appropriate data to serve as the arguments of a specified function.  So that if I call <code>web_form(foo)</code> in the appropriate way, it will be able to render a web form with spaces for each of the arguments of <code>foo</code> with the default calling values pre-filled in an appropriate way.)</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you're describing <a href="https://docs.python.org/2/library/inspect.html#inspect.getargspec"><code>inspect.getargspec</code></a>:</p>
<pre><code>&gt;&gt;&gt; from inspect import getargspec
&gt;&gt;&gt; getargspec(foo)
ArgSpec(args=['a', 'b', 'c'], varargs=None, keywords=None, defaults=(1.0, None))
</code></pre>
<p>You can also use <a href="https://docs.python.org/3/library/inspect.html#inspect.signature"><code>signature</code></a> in 3.x:</p>
<pre><code>&gt;&gt;&gt; from inspect import signature
&gt;&gt;&gt; signature(foo)
&lt;Signature (a, b=1.0, c=None)&gt;
</code></pre>
</div>
