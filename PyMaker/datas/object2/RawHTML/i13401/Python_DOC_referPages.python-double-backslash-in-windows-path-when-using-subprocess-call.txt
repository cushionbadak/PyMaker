<div class="post-text" itemprop="text">
<p>I can't get this code to work.</p>
<pre><code>subprocess.call([os.path.normpath(
                   os.path.dirname(
                     os.path.realpath(
                       sys.argv[0]))) + '\mscgen.exe', 
                 '  -T png ' + os.path.normpath(
                                 os.path.dirname(
                                   os.path.realpath(
                                     args.mscInputFilePath)))])
</code></pre>
<p>where</p>
<pre><code>sys.argv[0] == 'D:/Python/mscFromLog/msgFromLog.py'
args.mscInputFilePath == 'D:\\Python\\mscFromLog\\log_files\\my_file.signalling'
</code></pre>
<p>which, given my (probably wrong) use of <code>normpath</code>, <code>dirname</code>, and <code>realpath</code>, expand to the following paths:</p>
<pre><code>'D:\\Python\\mscFromLog\\mscgen.exe'
'D:\\Python\\mscFromLog\\log_files'
</code></pre>
<p>I suspect that passing those double backslashes to Windows is a problem. It certainly chokes on </p>
<pre><code>dir D:\\Python\\mscFromLog\\mscgen.exe
</code></pre>
<p>Note that appending <code>.replace('\\\\', '\\')</code> did not help.</p>
<pre><code>[WinError 2] The system cannot find the file specified
['Traceback (most recent call last):\n',
'  File "D:/Python/mscFromLog/msgFromLog.py", line 248, in GenerateMsc\n
    subprocess.call([os.path.normpath(os.path.dirname(os.path.realpath(sys.argv[0]))) + \'\\\\mscgen.exe\', \'  -T png \' + os.path.normpath(os.path.dirname(os.path.realpath(args.mscInputFilePath)))])\n',
'  File "D:\\Python\\Interpreter\\lib\\subprocess.py", line 560, in call\n
    with Popen(*popenargs, **kwargs) as p:\n',
'  File "D:\\Python\\Interpreter\\lib\\subprocess.py", line 950, in __init__\n
    restore_signals, start_new_session)\n',
'  File "D:\\Python\\Interpreter\\lib\\subprocess.py", line 1220, in _execute_child\n
    startupinfo)\n',
'  File "D:\\Programs\\PyCharm Community Edition 4.5.4\\helpers\\pydev\\pydev_monkey.py", line 299, in new_CreateProcess\n
    return getattr(_subprocess, original_name)(appName, patch_arg_str_win(commandLine), *args)\n',
'FileNotFoundError: [WinError 2] The system cannot find the file specified\n']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Appending <code>.__str__()</code> to string paths that contain delimited backslashes should do the trick.</p>
<p>For example:
<code>args.mscInputFilePath.__str__()</code></p>
<p>Intuitively, that method gives you what you see when you call <code>print()</code> on something, and is the answer to the occasional desire on Windows where you may wish you could store the result of printing a string object.  There are good posts on the difference between <code>__str__</code> and <code>__repr__</code> for more context.</p>
</div>
<span class="comment-copy">It should be double back-slash in <code>'\mscgen.exe'</code></span>
<span class="comment-copy">Or use raw string: <code>r'\mscgen.exe'</code></span>
<span class="comment-copy">@hjpotter92 Since <code>\m</code> is not a recognized escape sequence, it is <a href="https://docs.python.org/2.0/ref/strings.html" rel="nofollow noreferrer">left unchanged</a> in the string, so the problem is not here.</span>
<span class="comment-copy">Even as of Python 3.5 <code>os.path.realpath</code> has yet to be implemented on Windows; it's still just <code>abspath</code> by another name. Use <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">pathlib</a>, e.g. <code>str(pathlib.Path(sys.argv[0]).parent.resolve() / 'mscgen.exe')</code>. Remove the <code>resolve</code> call if you don't care about resolving reparse points (i.e. symbolic links, junctions) to get the real path.</span>
<span class="comment-copy">The <code>\\</code> that you see is just the repr. After reflowing your subprocess call I see that the list should be <code>[some_path, '-T', 'png', some_other_path]</code>. But that shouldn't interfere with finding the executable, so confirm that <code>D:\Python\mscFromLog\mscgen.exe</code> actually exists.</span>
<span class="comment-copy">(A little late on this answer to say the least, but I had a similar issue today and eventually figured it out thanks to a tip from a colleague.)</span>
<span class="comment-copy">And was teh answer as given above?</span>
