<div class="post-text" itemprop="text">
<p>I am trying to implement an abstract class in python. Following is my code:</p>
<pre><code>from abc import ABCMeta, abstractmethod

class Vehicle:
    __metaclass__ = ABCMeta

    def __init__(self, miles):
        self.miles = miles        

    def sale_price(self):
        """Return the sale price for this vehicle as a float amount."""
        if self.miles &gt; 10000:
            return 20.0  
        return 5000.0 / self.miles

    @abstractmethod
    def vehicle_type(self):
        """"Return a string representing the type of vehicle this is."""
        pass

class Car(Vehicle):
    def vehicle_type(self):
        return 'car'

def main():
    veh = Vehicle(10)
    print(veh.sale_price())
    print(veh.vehicle_type())

if __name__ == '__main__':
    main()
</code></pre>
<p>This executes perfectly without giving any error. Is the main() not supposed to throw an error that I <code>Can't instantiate abstract class Base with abstract methods value</code>? What am I doing wrong? I am using python 3.4</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using the Python 2.x method of defining <code>metaclass</code> , For Python 3.x you need to do the following -</p>
<pre><code>class Vehicle(metaclass=ABCMeta):
</code></pre>
<p>This was introduced through <a href="https://www.python.org/dev/peps/pep-3115/" rel="nofollow">PEP 3115 - Metaclasses in Python 3000</a></p>
<hr/>
<p>The issue occurs because for using <code>@abstractmethod</code> decorator it is required that the class’s metaclass be ABCMeta or be derived from it. As given in <a href="https://docs.python.org/3/library/abc.html#abc.abstractmethod" rel="nofollow">the documentation -</a></p>
<blockquote>
<p><strong>@abc.abstractmethod</strong></p>
<p>A decorator indicating abstract methods.</p>
<p><strong>Using this decorator requires that the class’s metaclass is ABCMeta or is derived from it.</strong></p>
</blockquote>
<p>(Emphasis mine)</p>
</div>
<div class="post-text" itemprop="text">
<p>U  include a raise exception in <strong>init</strong> method to use in Python2.x</p>
<pre><code>class Vehicle:
   __metaclass__=abc.ABCMeta
   def __init__(self):
      raise NotImplemetedError('The class cannot be instantiated')
   @abstractmethod
   def vehicletype(self):
       pass
</code></pre>
<p>This will not allow the abstract class to be instantiated.</p>
</div>
<span class="comment-copy">In Python 3 metaclass is not defined this way.</span>
<span class="comment-copy">@AshwiniChaudhary can you please show me the correct way?</span>
<span class="comment-copy">Worked like a charm. I will accept the answer in 6 minutes (as soon as SO allows me to). Thanks</span>
