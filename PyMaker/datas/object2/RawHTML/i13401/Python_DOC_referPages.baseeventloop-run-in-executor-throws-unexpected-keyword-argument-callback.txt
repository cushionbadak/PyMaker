<div class="post-text" itemprop="text">
<p>I am running a function, <code>provision_ec2_node()</code>, via the default <code>asyncio</code> event loop <a href="https://docs.python.org/3.5/library/asyncio-eventloop.html#asyncio.BaseEventLoop.run_in_executor" rel="nofollow">thread executor</a>. The function takes a number of arguments which I pass to the executor via <code>functools.partial()</code>.</p>
<pre><code>task = loop.run_in_executor(
    executor=None,
    callback=functools.partial(
        provision_ec2_node,
        modules=modules,
        host=instance.ip_address,
        identity_file=identity_file,
        cluster_info=cluster_info))
</code></pre>
<p>This code works fine on Python 3.4, and I've been using it like this for several months.</p>
<p>However, I recently upgraded to Python 3.5, and now the above code throws this error:</p>
<pre><code>TypeError: run_in_executor() got an unexpected keyword argument 'callback'
</code></pre>
<p>Looking at the <a href="https://docs.python.org/3/whatsnew/3.5.html#asyncio" rel="nofollow">Python 3.5 release notes concerning <code>asyncio</code></a>, I don't see anything which explains this change of behavior. Furthermore, the 3.5 docs <a href="https://docs.python.org/3.5/library/asyncio-eventloop.html#asyncio-pass-keywords" rel="nofollow">still say</a> that <code>functools.partial()</code> is the correct way to pass a function with keywords to an executor.</p>
<p>What gives?</p>
</div>
<div class="post-text" itemprop="text">
<p>Apparently the second parameter was <a href="https://github.com/python/cpython/commit/111610562141a46f1eaac64d497d79fe13290847#diff-08afa52ab2b1511bee8527814ad44d80L468" rel="nofollow">renamed</a> from <code>callback</code> to <code>func</code>, <s>but the change was not reflected in the docs</s> change is reflected in the docs as of 2015-10-01. That's why it fails.</p>
<p>Either update it to the new name (and lose Python &lt;3.5 compatibility) or pass the parameters as positional ones:</p>
<pre><code>task = loop.run_in_executor(None, functools.partial(...))
</code></pre>
</div>
<span class="comment-copy">Nice catch. I'll try this in a bit and report back. I know <code>asyncio</code> was marked as provisional in 3.4, but it seems strange they would break backwards compatibility over a parameter name. Would you happen to know why this change was made? I'm assuming it wasn't a frivolous change.</span>
<span class="comment-copy">They break backwards compatibility for <code>asyncio</code> almost every release AFAIK. It's experimental and API is not stable yet. About why it was changed... <code>asyncio</code> is developed in separate repo and just merged into main <code>cpython</code> repo. According to source commit it was "<a href="https://github.com/python/asyncio/commit/2798fb43af22c966a0c7ba15258a073cf651a3c2" rel="nofollow noreferrer">to avoid confusion</a>". Which makes sense, since it's a function to execute and not a callback.</span>
<span class="comment-copy">I see. It also looks like the next release of Python 3.4 (3.4.4?) will include all these <code>asyncio</code> changes from 3.5, per the <a href="https://docs.python.org/3/whatsnew/3.5.html#asyncio" rel="nofollow noreferrer">3.5 release notes</a>. So when that happens, you could theoretically be compatible with both 3.5+ and 3.4.4+.</span>
<span class="comment-copy">Thanks for <a href="https://bugs.python.org/issue25284" rel="nofollow noreferrer">reporting the docs issue</a> to the Python issue tracker.</span>
<span class="comment-copy">The doc is fixed</span>
