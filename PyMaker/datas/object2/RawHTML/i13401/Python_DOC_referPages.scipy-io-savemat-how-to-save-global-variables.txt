<div class="post-text" itemprop="text">
<p>I'm trying to use Python like one would do in Matlab. 
Basically I have some Python code for which I have run and it has generated some global variables. 
Say, 
a = 5
b = 3</p>
<p>I would like to save these to a .mat file , that will be openable by Matlab. 
The goal is to be able to see the global variables in Matlab, just as one would when saving to a .mat file in Matlab. </p>
<p>I've seen examples where savemat is used to save dictionaries/arrays, but not where it saves the global variables. </p>
<p>How may I do so? Is this something that scipy just cannot do? </p>
<p>Thanks. </p>
</div>
<div class="post-text" itemprop="text">
<p>You most probably don't want to save globals, but locals (though the variables are local to the interpreter). You can access and update them through the <code>locals()</code> and <code>globals()</code> functions.</p>
<p>From there you can use your preferred method of storage, such as <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow">pickle</a>, <a href="https://docs.python.org/3/library/marshal.html" rel="nofollow">marshal</a>, <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json</a> or others, depending on which level of security you want and which object types you have at hand. However, be wary that messing with those functions may get you into some trouble, since they also report functions and some internal variables.</p>
<p>However, if you intend to (like Matlab) just load and store variables through the GUI, you may want to check the <strong><a href="http://pythonhosted.org/spyder/" rel="nofollow">Spyder IDE</a></strong> (<a href="https://github.com/spyder-ide/spyder" rel="nofollow">GitHub project</a>). It is a very nice IDE, geared toward scientific usage and very similar (in appearance) to Matlab's old interface. Most importantly, it offers a tab/pane named "<strong>Variable explorer</strong>" which tracks what you want to store, and have both a "<strong>Save data as...</strong>" and "<strong>Import data</strong>" buttons and the "Save data as..." dialog supports saving to Spyder data files (<em>.spydata), Matlab files (</em>.mat) and HDF5 (*.h5).</p>
<p>If you want to do this programatically, you may check how Spyder does it.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem with saving all global variables is that you're saving all global variables. </p>
<p>You're going to be saving things like imported modules and everything else in the global namespace.  Many of those things cannot be converted to a format matlab can handle.  For example, how should the module <code>scipy.io</code> be saved to a <code>.mat</code> file?  It's a global variable too!</p>
<p>That having been said, you can retrieve a dict of the global variables by calling <code>globals()</code> and the local variables by calling <code>locals()</code>.</p>
<p>In rare cases, you could pass that directly to <code>scipy.io.savemat</code>.  Normally, you'd need to filter it down to the variables you want to save.</p>
<p>That having been said, there are cases where <code>scipy.io.savemat('filename.mat', locals())</code> might make sense.  It's <em>still far better to be explicit about what you're saving</em>, but there are cases where dumping all local variables could be handy.</p>
<p>For example:</p>
<pre><code>import numpy as np
import scipy.io

def main():
    x = np.arange(100)
    y = np.random.random((10, 10))
    scipy.io.savemat('test.mat', locals())

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python I can save variables, integers and arrays, by name:</p>
<pre><code>In [112]: io.savemat('test.mat',{'i':i,'m':m,'rule':rule})
In [113]: io.loadmat('test.mat')
Out[113]: 
{'__version__': '1.0',
 'i': array([[2]]),
 '__globals__': [],
 'rule': array([[ 1.,  1., ...  1.,  1.]]),
 '__header__': b'MATLAB 5.0 MAT-file Platform: posix, Created on: Tue Sep 29 11:44:23 2015', 
 'm': array([[100]])}
</code></pre>
<p>And get them in a Octave session </p>
<pre><code>octave:5&gt; load '../test.mat'
octave:6&gt; whos
Variables in the current scope:

   Attr Name        Size                     Bytes  Class
   ==== ====        ====                     =====  ===== 
        i           1x1                          4  int32
        m           1x1                          4  int32
        rule        1x100                      800  double

Total is 102 elements using 808 bytes
</code></pre>
<p>When I try the same with <code>io.savemat('test.mat', locals())</code> I get an error about the impossibility of saving a <code>class</code> definition.  The Python environment (globals) contains all kinds of things that are not compatible with a MATLAB/Octave session - things like classes, functions, modules.  When working across languages you want to focus on the variables that are compatible.</p>
</div>
<span class="comment-copy">Dont save them in the matlab file format.... Save them in txt and then read them in matlab using a txt reading code snipet.</span>
<span class="comment-copy">Do you want to save the whole envirionment, or just selected ones?</span>
<span class="comment-copy">Thank you, this is exactly what I wanted to do. It saves matrices too yes?</span>
<span class="comment-copy">Yes, it does. But I'm not sure it will work with all matrices. In particular, there is an "options" button where "Exclude unsupported data types" is selected by default. This option hides, for example, lists with (more precisely which start with) objects like instances of user-created classes. But matrices (and arrays, Pandas DataFrames, etc) are supported.</span>
