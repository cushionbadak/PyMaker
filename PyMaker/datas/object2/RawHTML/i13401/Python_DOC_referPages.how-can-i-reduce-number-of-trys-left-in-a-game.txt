<div class="post-text" itemprop="text">
<p>I am trying to limit the amount of tries a person has when attempting to guess the random number. I get this error code when I run the program and can't figure out what to do next. </p>
<pre><code>Traceback (most recent call last):
  File "C:/Python27/coding/Guess.py", line 34, in &lt;module&gt;
    main()
  File "C:/Python27/coding/Guess.py", line 24, in main
    trys(userGuess)
  File "C:/Python27/coding/Guess.py", line 29, in trys
    trysLeft -= 1
UnboundLocalError: local variable 'trysLeft' referenced before assignment
</code></pre>
<p>The code:</p>
<pre><code>import random    

def main():

    print "Guess a number between 1 and 100."
    randomNumber = random.randint(1,100)
    found = False
    trysLeft = 5

    while not found:

        userGuess = input("Your guess: ")  
        if userGuess == randomNumber:
             print "You got it!"
             found = True

        elif userGuess &gt; randomNumber:
            trys()
            print "Guess lower!"

        else:
            trys()
            print "Guess higher!"

def trys():

    trysLeft -= 1
    print "You have %d trys left." %trysLeft


if __name__ == "__main__":
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you're assigning trysLeft in the function, so it assumes it has local (rather than global) scope. But you actually want to assign the global variable, so you need to declare that trysLeft has global scope. Change your <code>trys()</code> function to the following:</p>
<pre><code>def trys():
    global trysLeft
    trysLeft -= 1
    print "You have %d trys left." %trysLeft
</code></pre>
<p>For more information, see the <a href="https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value" rel="nofollow">FAQ</a></p>
<p>FWIW, the correct way to solve this would be to pass a variable to your function rather than use globals, but that's outside the scope of your question.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have 3 options to fix this:</p>
<ul>
<li>Put trysLeft in a global (not a good idea)</li>
<li>Add function trys() to your class and reference it as self.trysLeft</li>
<li>Pass the variable into the trys() function.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You need to pass <code>trysLeft</code> to the function for it to see it ...</p>
<pre><code>    def trys(trysLeft):
        trysLeft -= 1
        print "You have %d trys left." %trysLeft
        return trysLeft
</code></pre>
<p>and then when you call <code>trys</code> ...</p>
<pre><code>trysLeft = trys(trysLeft)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def trys(self):
    self.trysLeft-=1
</code></pre>
<p>Should do it!</p>
<p>Self is referring to the instance of the class that you are currently in.</p>
<p>Similar to <code>this</code> in java and <code>Me</code> in vba.</p>
</div>
<span class="comment-copy">Yes heavily discourage globals.</span>
<span class="comment-copy">Thanks a lot I got it!</span>
<span class="comment-copy">Of course! But for someone learning to program it's confusing why the code (as written) doesn't work. Explaining that passing arguments is better, doesn't clarify the confusion around why the first method doesn't work.</span>
<span class="comment-copy"><code>self</code> would be used the OP was using a class</span>
<span class="comment-copy">Indeed OP is not. It is coded as if the intention is a class.</span>
