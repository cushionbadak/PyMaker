<div class="post-text" itemprop="text">
<p>I'm finding that python is modifying my path in problematic ways -- in particular, it's pre-pending the path to my github development folder, which results in the wrong libraries being loaded. </p>
<p>In my terminal session, if I run <code>echo $PATH</code> I get:</p>
<pre><code>~$echo $PATH
/Users/Nick/anaconda/bin:/usr/local/bin:/usr/bin:
/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/git/bin:/usr/texbin
</code></pre>
<p>Which is perfect. But when I launch python from that same terminal session (either as <code>python</code> or <code>ipython</code>) and check my PATH from within python, I'm getting:</p>
<pre><code>&gt;&gt;&gt; print(sys.path)
['', '/Users/Nick/anaconda/lib/python3.4/site-packages/Cython-0.22.1-py3.4-
macosx-10.5-x86_64.egg', '/Users/Nick/github/pandas', 
'/Users/Nick/anaconda/lib/python34.zip', '/Users/Nick/anaconda/lib/python3.4',     
'/Users/Nick/anaconda/lib/python3.4/plat-darwin', 
'/Users/Nick/anaconda/lib/python3.4/lib-dynload', 
'/Users/Nick/anaconda/lib/python3.4/site-packages', 
'/Users/Nick/anaconda/lib/python3.4/site-packages/Sphinx-1.3.1-py3.4.egg',
'/Users/Nick/anaconda/lib/python3.4/site-packages/aeosa', 
'/Users/Nick/anaconda/lib/python3.4/site-packages/setuptools-18.0.1-py3.4.egg']
</code></pre>
<p>Where are these coming from and how do I stop them?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>PATH</code> has nothing to do with the Python module search path; that environment variable is used by your <em>shell</em> to find executables, instead.</p>
<p>You need to look at the <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH" rel="nofollow"><code>PYTHONPATH</code> variable</a> here.</p>
<p>If that variable doesn't contain your extra elements, start Python with the <a href="https://docs.python.org/2/using/cmdline.html#cmdoption-S" rel="nofollow"><code>-S</code> command line switch</a> to disable loading <code>site.py</code>; it may be that the extra elements are set by a <code>.pth</code> file. Also see the <a href="https://docs.python.org/2/library/site.html" rel="nofollow"><code>site</code> module documentation</a>:</p>
<blockquote>
<p>A path configuration file is a file whose name has the form <code>name.pth</code> and exists in one of the four directories mentioned above; its contents are additional items (one per line) to be added to <code>sys.path</code>. </p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>While <code>$PATH</code> seems like it may be used by Python, what you actually want to look at is your <code>$PYTHONPATH</code> -- which is used by the import machinery and logic.</p>
<p>You should look into <a href="https://virtualenv.pypa.io/en/latest/" rel="nofollow">using <code>virtualenv</code>ironments</a> to control the pathing of Python module lookups.</p>
</div>
<span class="comment-copy">a ha, thanks Martijn! Any advice on managing PYTHONPATH and dev environments in anaconda?</span>
<span class="comment-copy">@nick_eu: I believe the <code>conda</code> command lets you create virtual environments; but I haven't really used Anaconda myself.</span>
<span class="comment-copy"><code>conda create -n py2k python=2 anaconda</code> or <code>conda create -n py3k python=3 anaconda</code> will create a virtual environment that you can access via <code>source activate py2k</code> or <code>source activate py3k</code>  [run <code>conda update conda</code> and <code>conda update anaconda</code> first] to exit the virtual env, execute <code>source deactivate</code></span>
<span class="comment-copy">@nick_eu: your <code>PYTHONPATH</code> environment variable is not managed by a virtualenv. Clear the variable and leave managing the libraries on your path with the virtualenv instead.</span>
<span class="comment-copy">@nick_eu: Then it is not your PYTHONPATH that is at fault here. Next stop: reading the <code>site</code> module documentation and looking for those <code>.pth</code> files.</span>
