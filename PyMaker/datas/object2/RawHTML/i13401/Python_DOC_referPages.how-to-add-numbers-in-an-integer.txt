<div class="post-text" itemprop="text">
<p>I am a complete (GCSE) beginner in python.
I am trying to add the numbers in an integer. My variable FNT comes out as a different number every time (depending on what I have inputted earlier) and I then need the numbers to add themselves.    E.g. 
 FNT=19
 I now need the number to do this-
 1+9=10
       1+0=1                                                                                                                                                        The numbers need to keep adding themselves until they are a single digit but the number could be different every time. All help is greatly appreciated but, as I said I am a complete beginner and probably won't be able to understand anything too complicated, so would anybody know how to do this?                </p>
</div>
<div class="post-text" itemprop="text">
<p>There are two approaches: the mathematical way and the way that uses the fact that strings are iterables in python.</p>
<ul>
<li><p>The mathematical way uses modulo (<code>%</code>) and integral division (<code>//</code>) to decompose a number into digits:</p>
<pre><code>number = int(input('What number do you want to start with? '))

while number &gt; 9:
    decompose_helper, number = number, 0
    while decompose_helper: # != 0 is implied
        number += decompose_helper % 10
        decompose_helper = decompose_helper // 10

print('Result is', number)
</code></pre>
<p>You can improve this code using the <a href="https://docs.python.org/3/library/functions.html#divmod" rel="nofollow"><code>divmod</code></a> function:</p>
<pre><code>number = int(input('What number do you want to start with? '))

while number &gt; 9:
    decompose_helper, number = number, 0
    while decompose_helper: # != 0 is implied
        decompose_helper, remainder = divmod(decompose_helper, 10)
        number += remainder

print('Result is', number)
</code></pre></li>
<li><p>The iterable string way:</p>
<pre><code>number = input('What number do you want to start with? ')

while len(number) &gt; 1:
    number = str(sum(int(digit) for digit in number))

print('Result is', number)
</code></pre></li>
</ul>
<p>Neither of those code deal with input validation, so if your user enter something else than an integer, the code will crash. You might need to handle that.</p>
<hr/>
<p>I recommend using the mathematical way since it is faster. Timmings (removing <code>input</code> and <code>print</code>) are:</p>
<pre><code>&gt;&gt;&gt; timeit.timeit('math_way("4321234123541234")', setup='from __main__ import math_way', number=10000)
0.06196844787336886
&gt;&gt;&gt; timeit.timeit('str_way("4321234123541234")', setup='from __main__ import str_way', number=10000)
0.10316650220192969
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To sum all the digits of a number, you can try a one-liner like this:</p>
<pre><code>sum(int(chr) for chr in str(number))
</code></pre>
<p>You can apply that repeatedly until the result is less than 10:</p>
<pre><code>res = number
while True:
  res = sum(int(chr) for chr in str(res))
  if res &lt; 10:
    break
</code></pre>
<p><code>res</code> now stores your result.</p>
</div>
<div class="post-text" itemprop="text">
<p>This might not be the most optimized, but it should do it:</p>
<pre><code>def addThem(FNT):
    while FNT &gt;= 10:
        FNT = sum([int(i) for i in list(str(FNT))])
    return FNT
</code></pre>
<p>EDIT: </p>
<p>if FNT = 19, list(str(FNT)) returns ['1', '9']. </p>
<p>The list comprehension [int(i) for i in list(str(FNT))] returns [1, 9] (notice these are now integers)</p>
</div>
<div class="post-text" itemprop="text">
<p>There are better ways of doing this but as a programming exercise this should give you some insight. </p>
<pre><code>while digits&gt;10:
t=0
for c in str(digits):
    t+=int(c)
digits=t        
</code></pre>
<p>convert the input number into a string and iterate over the digits, repeat until the answer is single digit.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is done in java, but its still the same logic to be used  in python.</p>
<p>I made use of a <code>split</code>, to split the numbers, then i converted each of the splitted number to an integer, and added them up. I now used an <code>if statement</code> to check if the sum is greater than or equal to 10. if so, then i repeat the process again. </p>
<p><strong>This is the program</strong></p>
<pre><code>    String num = "19"; //you can make use of any value here
    String array1[] = num.split("");
    int sum = 0;
    for (int i = 1; i &lt;= num.length(); i++) {
        sum = sum + Integer.parseInt(array1[i]); //converting each element to an integer then sum it up.
    }

    if (sum &gt;= 10) {
        String newnum = sum + ""; //converting the sum to a string
        String newarray[] = newnum.split("");
        int newsum = 0;
        for (int i = 1; i &lt;= newnum.length(); i++) {
            newsum = newsum + Integer.parseInt(newarray[i]);
        }
        System.out.println( newsum);
    }else{
         System.out.println(num);
    }
</code></pre>
<p><strong>Output</strong></p>
<pre><code>1
</code></pre>
</div>
<span class="comment-copy">Could you please post a self-contained sample of your code illustrating the issue?</span>
<span class="comment-copy">Not sure if I understand correctly: do you want to add the digits of a number (which will be inputed by a user) and keep repeating the process until you have a result that is a single digit long?</span>
<span class="comment-copy">Thank you so much. This was really helpful.</span>
<span class="comment-copy">Try it with <code>FNT = 10</code>. It would return 10, which is not what we want.</span>
<span class="comment-copy">You're right.  I must have had my head on backwards yesterday</span>
<span class="comment-copy">What about using <code>String num = '99999999999992';</code>? Your output is <code>11</code> instead of (presumably) <code>2</code>. And if <code>String num = "3";</code> there is no output at all.</span>
<span class="comment-copy">Its true, can you tell me the reason why?</span>
<span class="comment-copy">for the second one, you have the <code>println</code> inside the <code>if</code> and for the first one, you seem to be confusing <code>if</code> for a <code>while</code>. (but the logic is kinda flawed since you sort of duplicate your code.)</span>
<span class="comment-copy">i have resolved d issue of it not printing out a single value. Remaining the 99992 part. Thanks a lot for your contribution</span>
