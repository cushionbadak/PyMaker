<div class="post-text" itemprop="text">
<p>This code kind of works but it keeps on giving me a pyramid instead of right aligned triangle.
For example:
I'm trying for something like this:</p>
<pre><code>    *
   **
  ***
 ****
*****
</code></pre>
<h1>Heres my code</h1>
<pre><code>height = int(input("What is your height: "))

count = 1
space_count = height
for rows in range (height):
    for spaces in range (space_count):
        print(end=' ')
    for stars in range (count):
        print ("*", end=' ')
    space_count = space_count - 1
    count = count + 1

    print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The pyramid problem comes from two aspects:
(1) You don't print anything at all in the first print; try</p>
<pre><code>print (" ", end=' ')
</code></pre>
<p>This will give you a triangle, but with inserted spaces:</p>
<pre><code>What is your height: 5
          * 
        * * 
      * * * 
    * * * * 
  * * * * * 
</code></pre>
<p>To get rid of the intervening spaces, switch to a formatted print.  The simple print automatically gives a space between output fields.</p>
</div>
<div class="post-text" itemprop="text">
<p>To use no string addition or multiplication:</p>
<pre><code>height = int(input("What is your height: "))
for row in range(height):
    for s in range(height-row-1):
        print(end=' ')
    for a in range(row+1):
        print('*', end='')
    print()
</code></pre>
<p>However, I'd recommend using one of the following in order to avoid multiple nested loops.</p>
<p>The following will print, for each row, <code>height-row-1</code> spaces (which will start at 4 for the first row and go to 0 for the last) followed by <code>row+1</code> asterisks (which will start at 1 for the first row and go to 5 for the last row):</p>
<pre><code>height = int(input("What is your height: "))
for row in range(height):
    print(' '*(height-row-1) + '*'*(row+1))
</code></pre>
<p>You can also use string methods. The <code>rjust()</code> method will right-justify the given string (in this case, the appropriate number of asterisks for the given row) in a fixed width field of <code>height</code> characters.</p>
<pre><code>height = int(input("What is your height: "))
for row in range(height):
    print(((row+1)*'*').rjust(height))
</code></pre>
<p>Or string formatting, which works similarly to the method above only it uses the <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow">string formatting minilanguage</a>:</p>
<pre><code>height = int(input("What is your height: "))
for row in range(height):
    print(('{:&gt;'+str(height)+'}').format('*'*(row+1)))
</code></pre>
</div>
<span class="comment-copy">Your logic is correct, what is wrong is your understanding of the keyword options of the <code>print</code> function. Your <code>*</code> printing adds a space inbetween each star... Use <code>end=''</code>  instead of <code>end=' '</code> for printing the stars.</span>
<span class="comment-copy">That said, do try to reduce the number of counting variables you have.  You should be able to do everything is terms of the height and row number alone; space_count and count should disappear.</span>
<span class="comment-copy">Quoting the question title: 'no string addition or multiplication' .</span>
<span class="comment-copy">@gboffi - Added that too.</span>
