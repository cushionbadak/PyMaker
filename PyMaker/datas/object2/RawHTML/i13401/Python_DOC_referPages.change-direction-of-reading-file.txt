<div class="post-text" itemprop="text">
<p>I have an adafruit LCD screen and want the buttons to be able to navigate down and up lines to text from a text file.  </p>
<p>I have spent all day trying to work out this problem.</p>
<p>So far this I have this :</p>
<pre><code>if lcd.is_pressed(LCD.UP):
    lcd.clear()
    text = txt.readline()
    lcd.message(("%s") % text)
    print "%s" % text
    time.sleep (0.5)
elif lcd.is_pressed(LCD.DOWN):
    lcd.clear()
    # this is where I need help can you do read line last or somthing
    text = txt.readline() 
    lcd.message(("%s") % text)
    print "%s" % text
    time.sleep (0.5)
</code></pre>
<p>I have all the bits to drive the LCD working but can only go down the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python provides the <a href="https://docs.python.org/3/library/linecache.html" rel="nofollow"><code>linecache</code> module</a> which, while built-in to enable friendly tracebacks, works just fine with most text files. It splits the difference between reading all the lines into memory and reading the file live, and its design is basically ideal for the scenario you're considering (where you're moving between adjacent lines, aiding caching).</p>
<pre><code>import linecache

...

lineno = 0
txtfilename = '...'

...

if lcd.is_pressed(LCD.UP) or lcd.is_pressed(LCD.DOWN):
    lineno += 1 if lcd.is_pressed(LCD.UP) else -1  # These numbers match the behavior in your example, but I think you may want to reverse them, so UP goes up one line...
    lcd.clear()
    text = linecache.getline(txtfilename, lineno)
    lcd.message(("%s") % text)
    print "%s" % text
    time.sleep (0.5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could load the entire file into memory, as an array of lines, and use a pointer (an integer, initially 0). Each time a button is pressed, increment/decrement the pointer and display the corresponding line.</p>
<p>If the file is too large to be loaded at once in memory, you could simply record the last <em>N</em> file pointer positions (using <code>txt.tell()</code>). When the back button is pressed, reset the pointer to the desired position (using <code>txt.seek()</code>) and read the line. When the forward button is pressed, read the line normally and record the pointer position.</p>
</div>
<div class="post-text" itemprop="text">
<p>If your text file isn't too big to fit in memory, the simplest way to do it would be to read the whole file into a list (I assume <code>txt</code> is your open file reference):</p>
<pre><code>text = txt.readlines()
</code></pre>
<p>Now <code>text[0]</code> will be the first line of your file, <code>text[1]</code> the second line, etc. You can set a variable, let's call it <code>line</code>, to 0 and then increase or decrease the value according to the button pressed, and each time send the correct line to the LCD with</p>
<pre><code>lcd.message(("%s") % text[line])
</code></pre>
</div>
<span class="comment-copy">Python and it's included batteries always do wonders.</span>
