<div class="post-text" itemprop="text">
<p>Given a minimum and a maximum number, I would like to obtain a tuple of length n, with each element between minimum and maximum. For instance, if min is 10 and max is 20 and if n is 2, I would like to obtain [(10, 10), (10, 11), ..., (19, 19)]. I'm only interested in the combinations of numbers so if I already had (18, 19), I wouldn't need (19, 18).</p>
<p>I can solve this with a tuple of length 2, but I'm not very sure how to extend this to tuples of length &gt; 2. I'm thinking one method would be to convert each number to a string, then call the iterations.combinations function on it, and then convert it back to an integer. But that seems unnecessarily complex, and wondering if there is a more pythonic way to do it?</p>
<pre><code>fangs = [(s, e) for s in range(min_fang, max_fang) for e in range(min_fang, max_fang) if e &gt;= s]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations_with_replacement" rel="nofollow"><em>combinations with replacement</em></a> here:</p>
<pre><code>from itertools import combinations_with_replacement

fangs = list(combinations_with_replacement(range(min, max), n))
</code></pre>
<p>The <em>with replacement</em> part means that the values from the range are allowed to be used in more than one position in the output, so <code>(10, 10)</code> is valid output.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from itertools import combinations_with_replacement
&gt;&gt;&gt; min, max, n = 10, 20, 2
&gt;&gt;&gt; for combo in combinations_with_replacement(range(min, max), n):
...     print(combo)
... 
(10, 10)
(10, 11)
(10, 12)
(10, 13)
(10, 14)
(10, 15)
(10, 16)
(10, 17)
(10, 18)
(10, 19)
(11, 11)
(11, 12)
(11, 13)
(11, 14)
(11, 15)
(11, 16)
(11, 17)
(11, 18)
(11, 19)
(12, 12)
(12, 13)
(12, 14)
(12, 15)
(12, 16)
(12, 17)
(12, 18)
(12, 19)
(13, 13)
(13, 14)
(13, 15)
(13, 16)
(13, 17)
(13, 18)
(13, 19)
(14, 14)
(14, 15)
(14, 16)
(14, 17)
(14, 18)
(14, 19)
(15, 15)
(15, 16)
(15, 17)
(15, 18)
(15, 19)
(16, 16)
(16, 17)
(16, 18)
(16, 19)
(17, 17)
(17, 18)
(17, 19)
(18, 18)
(18, 19)
(19, 19)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for <code>combinations_with_replacement</code>:</p>
<pre><code>from itertools import combinations_with_replacement
list(combinations_with_replacement(range(min_fang, max_fang), n))
</code></pre>
</div>
<span class="comment-copy">Thank you and this works!</span>
