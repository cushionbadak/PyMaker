<div class="post-text" itemprop="text">
<p>Was using the shorthand for if/else statements, and that works fine by the way.</p>
<pre><code>found_target = True if qo_cplId == cpl_id else False
</code></pre>
<p>Was trying to omit the else part but got error!</p>
<pre><code>found_target = True if aircraft_identifier == qo_squawk
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps you can use:</p>
<pre><code>found_target = (qo_cplId == cpl_id)
</code></pre>
<p>It gives you the same boolean output though, True/False.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, the <code>else</code> part cannot be omitted, because an expression <strong>always</strong> has to produce a value, and a <a href="https://docs.python.org/2/reference/expressions.html#conditional-expressions" rel="nofollow">conditional expression</a> is no exception here. Without the <code>else</code>, what would <code>found_target</code> be set to otherwise?</p>
<p>If you only want to set <code>found_target</code> if the condition is true, just use a regular <code>if</code> <em>statement</em>:</p>
<pre><code>if aircraft_identifier == qo_squawk:
    found_target = True
</code></pre>
<p>Note that the <code>==</code> comparison operator already produces a boolean value, so the first expression can be simplified to:</p>
<pre><code>found_target = qo_cplId == cpl_id
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cannot use the conditional expression (the short-hand you are talking about) without an <code>else</code>.</p>
<p>Every expression in python needs to return something , this includes the conditional expression . But without the <code>else</code> part Python would not know what to return in case when the condition fails.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to use a <a href="https://docs.python.org/3/reference/expressions.html#conditional-expressions" rel="nofollow">conditional expression</a> here but that’s simply not how it works. The syntax there requires the use of <code>else</code>. It’s more like the ternary <code>?:</code> operator in other languages.</p>
<p>If you want to execute a statement conditionally, you have to use a normal if block:</p>
<pre><code>if aircraft_identifier == qo_squawk:
    found_target = True
</code></pre>
<p>You can put that in a single line here (not recommended though)</p>
<pre><code>if aircraft_identifier == qo_squawk: found_target = True
</code></pre>
<hr/>
<p>If you also want to change <code>found_target</code> to <code>False</code> if the condition is not true, then you best assign the result to the variable directly:</p>
<pre><code>found_target = aircraft_identifier == qo_squawk
</code></pre>
<p>And if you don’t want to overwrite <code>found_target</code>’s old value if the condition is not true, you can also do the following using Python’s <code>or</code> operator:</p>
<pre><code>found_target = aircraft_identifier == qo_squawk or found_target
</code></pre>
<p>This is then equivalent to the if statement above.</p>
</div>
<span class="comment-copy">What do you want to be the result if <code>aircraft_identifier</code> is not equal to <code>qo_squawk</code>?</span>
<span class="comment-copy">Then it just passes through and does not modify the value of the found_target variable.</span>
<span class="comment-copy">Sure, but that doesn't actually answer the question stated.</span>
<span class="comment-copy">this is exactly what I was looking for, thank you!</span>
<span class="comment-copy">@JonB: This will not do what you said you wanted it to do.</span>
<span class="comment-copy">"Without the else, what would <code>found_target</code> be set to otherwise?"  Itself -- left unchanged. Of course the 'else' part of the ternary expression is mandatory, not optional, but it's easy to see what the shorthand would have to mean: <code>x = a if p</code> would have the very same semantics as <code>x = a if p else x</code>. Of course, <code>x</code> has to be already defined. <i>However</i> this only makes sense if the expression is the RHS of an assignment, whereas it can occur in many other contexts, where the only sensible default value would be <code>None</code> . In short, it would be a <i>horrible</i> confusing construct.</span>
