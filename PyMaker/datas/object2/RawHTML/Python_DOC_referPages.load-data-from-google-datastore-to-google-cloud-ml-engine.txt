<div class="post-text" itemprop="text">
<p>I was trying to run a ML Engine training job reading data from Cloud Datastore, but a got a permission error:</p>
<pre><code>line 434, in _end_unary_response_blocking raise _Rendezvous(state, None, None, deadline) grpc._channel._Rendezvous: &lt;_Rendezvous of RPC that terminated with (StatusCode.PERMISSION_DENIED, Missing or insufficient permissions.)&gt; The above exception was the direct cause of the following exception: Traceback (most recent call last): File "/usr/lib/python3.5/runpy.py", 
</code></pre>
<p>I ran the same script locally and it run well. 
I searched how to add Datastore permission to Cloud ML but didn't find anything...</p>
</div>
<div class="post-text" itemprop="text">
<p>It's unclear if you are using Cloud ML Engine &amp; Cloud Datastore in the same project, or if you have the Cloud Datastore API enabled.  You can probably follow the instructions at <a href="https://cloud.google.com/ml-engine/docs/tensorflow/working-with-cloud-storage#setup-different-project" rel="nofollow noreferrer">https://cloud.google.com/ml-engine/docs/tensorflow/working-with-cloud-storage#setup-different-project</a> to ensure the service account your Cloud ML Engine workload runs as is able to access Cloud Datastore.</p>
</div>
<span class="comment-copy">Welcome to StackOverflow (SO)! Please take the time to go though <a href="https://stackoverflow.com/help/asking">stackoverflow.com/help/asking</a>. You should show the code and the full traceback. Is the datastore data in the same GCP project?</span>
<span class="comment-copy">You can either use your credential via gCloud or grant datastore access to Cloud ML Service Account in your project. I recommend you to do the later.</span>
<span class="comment-copy">Thanks you guys. I am using the same project for both services. I was trying to do the second option but didn't find how. Finally I resolved the problem loading another service account with a json file and referencing it inside the python task.</span>
