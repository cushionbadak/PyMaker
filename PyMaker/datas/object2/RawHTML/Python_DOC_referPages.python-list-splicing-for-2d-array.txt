<div class="post-text" itemprop="text">
<pre><code>matrix = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
matrix[3][1:] = matrix[3][0:-1]
print(matrix)
</code></pre>
<p>gives the following output:</p>
<pre><code>[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 13, 14, 15]]
</code></pre>
<p>But:</p>
<pre><code>rows = 3
k = 0
matrix[rows-k][1+k:-k] = matrix[rows-k][k:-1-k]
print(matrix)
</code></pre>
<p>gives the following output:</p>
<pre><code>[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 13, 14, 15, 14, 15, 16]]
</code></pre>
<p>Can someone please explain to me what's going on?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you insert rows = 3 and k = 0:</p>
<pre><code>matrix[3][1:0] = matrix[3][0:-1]
</code></pre>
<p>And it is <strong>not the same</strong> like your second line:</p>
<pre><code>matrix[3][1:] = matrix[3][0:-1]
</code></pre>
<p>Added.</p>
<p>In first example you insert some data from <strong>1. position to the end</strong>: </p>
<pre><code>a = [1, 2, 3, 4]
a[1:] = [100, 200, 300]
print(a)
OUTPUT: [1, 100, 200, 300]
</code></pre>
<p>In the second case you insert a value <strong>between the 0. and 1. position</strong>:</p>
<pre><code>a = [1, 2, 3, 4]
a[1:0] = [100, 200, 300]
print(a)
OUTPUT: [1,100, 200, 300, 2, 3, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Interesting question.</p>
<p>This happens because </p>
<pre class="lang-py prettyprint-override"><code>matrix[rows-k][1+k:-k] = matrix[rows-k][k:-1-k]
</code></pre>
<p>is equivalent to </p>
<pre class="lang-py prettyprint-override"><code>matrix[3][1:0] = matrix[3][0:-1]
</code></pre>
<p>which is equivalent to</p>
<pre class="lang-py prettyprint-override"><code>matrix[3][1:1] = matrix[3][0:-1]
</code></pre>
<p>So when you do <code>matrix[3][1:0]</code> =&gt; <code>matrix[index][start:stop:None]</code></p>
<p>Your start value is 1, which is more than your stop value of 0. In case of start &gt;= stop Python sets <code>stop = start</code> and returns an empty slice.</p>
<p>You can check the value of matrix[3][1:1] which is an empty slice like matrix[3][1:0]</p>
<pre class="lang-py prettyprint-override"><code>&gt;&gt;&gt; matrix[3][1:0]
[]
&gt;&gt;&gt; matrix[3][1:1]
[]
</code></pre>
<p>Read more: Python <a href="https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange" rel="nofollow noreferrer">doc</a></p>
<blockquote>
<p>If i is greater than or equal to j, the slice is empty</p>
</blockquote>
</div>
<span class="comment-copy">This doesn't answer the why part. Why do you get <code>[13, 13, 14, 15, 14, 15, 16]</code> this? What does this mean <code>matrix[3][1:0]</code>?</span>
<span class="comment-copy">"In the second case you insert a value between the 0. and 1. position" This statement is not right. a[1:0] returns an empty slice. Try printing this a[1:0] in the shell and you won't get the value b/w 0-1</span>
