<div class="post-text" itemprop="text">
<p>I was writing some lambda functions and couldn't figure this out. Is there a way to have something like <code>lambda x: x if (x&lt;3)</code> in python? As <code>lambda a,b: a if (a &gt; b) else b</code> works ok. So far <code>lambda x: x &lt; 3 and x or None</code> seems to be the closest i have found.</p>
</div>
<div class="post-text" itemprop="text">
<p>A lambda, like any function, must have a return value. </p>
<p><code>lambda x: x if (x&lt;3)</code> does not work because it does not specify what to return if not <code>x&lt;3</code>. By default functions return <code>None</code>, so you could do</p>
<pre><code>lambda x: x if (x&lt;3) else None
</code></pre>
<hr/>
<p>But perhaps what you are looking for is a list comprehension with an <code>if</code> condition. For example:</p>
<pre><code>In [21]: data = [1, 2, 5, 10, -1]

In [22]: [x for x in data if x &lt; 3]
Out[22]: [1, 2, -1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What's wrong with <code>lambda x: x if x &lt; 3 else None</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Sorry to resuscitate a zombie.</p>
<p>I was looking for an answer to the same question, and I found that "filter" provided exactly what I was looking for:</p>
<pre><code>&gt;&gt;&gt; data = [1, 2, 5, 10, -1]
&gt;&gt;&gt; filter(lambda x: x &lt; 3, data)
[1, 2, -1]
</code></pre>
<p>The implementation is the same in both 2.x and 3.x:
<a href="https://docs.python.org/2/library/functions.html#filter" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html#filter</a>
<a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#filter</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can always try to invoke 'filter' for conditional checks. Fundamentally, <code>map()</code> has to work on every occurrence of the iterables, so it cannot pick and choose. But filter may help narrow down the choices. For example, I create a list from 1 to 19 but want to create a tuple <strong>of</strong> squares of only even numbers.</p>
<pre><code>x = list(range(1,20))

y = tuple(map(lambda n: n**2, filter(lambda n: n%2==0,x)))

print (y)
</code></pre>
</div>
<span class="comment-copy">@ ubuntu -- thank you. Not sure why I assumed it should return None without specifying it.</span>
<span class="comment-copy">That's a reasonable assumption since functions return None by default. The important thing to remember is that what follows <code>lambda x:</code> must be an <i>expression</i>, not a statement.</span>
<span class="comment-copy">@root I sometimes find it handy to think of a <code>lambda</code> as though it's actually written as <code>def lambda(x, y): return ...</code></span>
<span class="comment-copy">my understanding is that list comprehension is more appropriate in this scenario</span>
<span class="comment-copy">The question doesn't mention iteration, so I'm not sure what you mean. Can you elaborate?</span>
<span class="comment-copy">u r right, it's just a guess probably. -_-</span>
