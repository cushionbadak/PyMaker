<div class="post-text" itemprop="text">
<p>I was looking in <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" rel="noreferrer">Cristoph Gohlke's python packages</a> and I noticed that there is a package Virtualenv for Python 3.3.</p>
<p>Since there is a package <em>venv</em> in the standard python library v3.3, I was wondering if there is an advantage to install this package separately.</p>
<p>Edit: From the documentation of both packages, <a href="http://pypi.python.org/pypi/virtualenv" rel="noreferrer">virtualenv 1.8.2</a> and <em>venv</em> I can say that the <em>venv</em> standard library package lacks the functionality of:</p>
<ol>
<li><code>--no-site-packages</code> option</li>
<li>choice between setuptools or distribute</li>
<li>inability to install pip, since it is not available in the default python installation</li>
<li>no customization of prompt prefix inside the virtual environment <code>--prompt=PROMPT</code></li>
</ol>
<p>If there are any other differences that I was unable to spot, please write them here.</p>
</div>
<div class="post-text" itemprop="text">
<p>Generally, the virtualenv package is not required when using python3.3 or later, since it was incorporated into the standard library via <a href="http://www.python.org/dev/peps/pep-0405/">PEP 405</a>. As you note in the question, there are some relatively small differences between the latest versions of virtualenv and the venv package in the standard library. In part (e.g. <code>--no-site-packages</code>) this stems from the different implementations. Since <code>venv</code> is in the standard library, it doesn't have to jump through some of the contorted hoops that <code>virtualenv</code> does in order to create a self-contained python installation, such as copying much of python's <code>site</code> module.</p>
<p>The best resource is really to read the PEP thoroughly.</p>
</div>
<div class="post-text" itemprop="text">
<p>for the question</p>
<h1>Is python package virtualenv necessary with venv in the stdlib?</h1>
<h2>(or what are the differences?)</h2>
<ol>
<li><code>--no-site-packages</code> is the default in both. The <code>--system-site-packages</code> option exists, but <a href="https://bugs.python.org/issue24875" rel="nofollow">it's broken</a></li>
<li><a href="https://pythonhosted.org/distribute/" rel="nofollow">distribute is deprecated</a>... nothing to see here</li>
<li>Since Python3.4, ensurepip will provide pip inside the virtualenv. To get it working on Ubuntu/Debian, be sure to install the <code>python3-venv</code> package</li>
<li>No changes here</li>
</ol>
<p>When venv was first announced, I'd hoped that it get into maintenance mode, to provide bug fixes on the "virtualenv for old pythons", and all developments would shift focus on the stdlib venv. I'm not sure about the project goals/roadmap for virtualenv, but I'm afraid that what I hoped is not happening. So, at least for the time being, I'd keep using the original virtualenv.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>pyvenv</strong> was the recommended tool for creating virtual environments for Python 3.3 and 3.4</p>
<p>From python 3.5 onwards use:</p>
<p><strong>python3 -m venv </strong></p>
<p><strong>venv</strong> is an inbuilt module with access to python's internals</p>
<p><strong>pyvenv</strong> is deprecated in 3.6</p>
<p>Source: <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/venv.html</a></p>
</div>
<span class="comment-copy"><i>Since venv is in the standard library, it doesn't have to jump through some of the contorted hoops(...)</i> Venv is purely Python package and does not have any special access to any part of Python compared to any 3rd party purely Python package like virtualenv.</span>
<span class="comment-copy">See minute 14 of Brett Cannon's talk at PyCon13 <a href="http://pyvideo.org/video/1730/python-33-trust-me-its-better-than-27" rel="nofollow noreferrer">pyvideo.org/video/1730/python-33-trust-me-its-better-than-27</a>. He says, "Because it's now directly integrated into python, many of the edge cases you might be used to hitting are now gone, because it's a directly supported thing".</span>
