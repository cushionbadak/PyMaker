<div class="post-text" itemprop="text">
<p>In Python it's annoying to have to check whether a key is in the dictionary first before incrementing it:</p>
<pre><code>if key in my_dict:
  my_dict[key] += num
else:
  my_dict[key] = num
</code></pre>
<p>Is there a shorter substitute for the four lines above?</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative is:</p>
<pre><code>my_dict[key] = my_dict.get(key, 0) + num
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have quite a few options. I like using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="noreferrer"><code>Counter</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; d = Counter()
&gt;&gt;&gt; d[12] += 3
&gt;&gt;&gt; d
Counter({12: 3})
</code></pre>
<p>Or <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="noreferrer"><code>defaultdict</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; d = defaultdict(int)  # int() == 0, so the default value for each key is 0
&gt;&gt;&gt; d[12] += 3
&gt;&gt;&gt; d
defaultdict(&lt;function &lt;lambda&gt; at 0x7ff2fe7d37d0&gt;, {12: 3})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you want is called a defaultdict</p>
<p>See <a href="http://docs.python.org/library/collections.html#collections.defaultdict">http://docs.python.org/library/collections.html#collections.defaultdict</a></p>
</div>
<div class="post-text" itemprop="text">
<p>transform:</p>
<pre><code>if key in my_dict:
  my_dict[key] += num
else:
  my_dict[key] = num
</code></pre>
<p>into the following using <a href="http://docs.python.org/library/stdtypes.html#dict.setdefault" rel="noreferrer"><code>setdefault</code></a>:</p>
<pre><code>my_dict[key] = my_dict.setdefault(key, 0)Â + num
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is also a little bit different <code>setdefault</code> way:</p>
<pre><code>my_dict.setdefault(key, 0)
my_dict[key] += num
</code></pre>
<p>Which may have some advantages if combined with other logic.</p>
</div>
<span class="comment-copy">can you do this same thing for two values?</span>
<span class="comment-copy">can you do it for multiple values? i mean increment more than one value</span>
<span class="comment-copy">Without a loop? As <code>dict</code> doesn't provide a way to access multiple elements in a single expression I don't see how.</span>
<span class="comment-copy">With a loop just like the OP writes in his question, but incrementing two values per key not one</span>
<span class="comment-copy">I think you should ask a new question for that.</span>
<span class="comment-copy">For <code>lambda: 0</code>, you can just say, <code>int</code>.</span>
<span class="comment-copy">@hughdbrown: Thanks, I never knew that.</span>
<span class="comment-copy">@hughdbrown without your comment I would never have understood what a defaultdict was doing. Thank you.</span>
<span class="comment-copy">Very nice solutions, needs to be accepted answer</span>
<span class="comment-copy">It's a pity that the docs don't mention that <code>Counter</code> also supports the default 0 functionality. I have been using Nicola's solution until now, but it's much nicer without it.</span>
