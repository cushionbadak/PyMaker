<div class="post-text" itemprop="text">
<p>I have trouble with distinguishing between \r (0x0d) and \n (0x0a) in my PLY lexer.</p>
<p>A minimal example is the following program</p>
<pre><code>import ply.lex as lex

# token names
tokens = ('CR', 'LF')

# token regexes
t_CR = r'\r'
t_LF = r'\n'

# chars to ignore
t_ignore  = 'abc \t'

# Build the lexer
lexer = lex.lex()

# lex
f = open('foo', 'r')
lexer.input(f.read())
while True:
    tok = lexer.token()
    if not tok: break
    print(tok)
</code></pre>
<p>Now creating a file foo as follows:</p>
<pre><code>printf "a\r\n\r\rbc\r\n\n\r" &gt; foo
</code></pre>
<p>Verifying that it looks ok:</p>
<pre><code>hd foo
00000000  61 0d 0a 0d 0d 62 63 0d  0a 0a 0d                 |a....bc....|
0000000b
</code></pre>
<p>Now I had assumed that I would get some CR and some LF tokens, but:</p>
<pre><code>python3 crlf.py 
WARNING: No t_error rule is defined
LexToken(LF,'\n',1,1)
LexToken(LF,'\n',1,2)
LexToken(LF,'\n',1,3)
LexToken(LF,'\n',1,6)
LexToken(LF,'\n',1,7)
LexToken(LF,'\n',1,8)
</code></pre>
<p>it turns out I only get LF tokens. I would like to know why this happens, and how I should do it instead.</p>
<p>This is Python 3.2.3 on Ubuntu 12.04</p>
</div>
<div class="post-text" itemprop="text">
<p>You open the file in the default mode. In that mode, <code>newline=None</code>, meaning (among other things) that <em>any of</em> <code>\r</code>, <code>\n</code> and <code>\r\n</code> are treated as end of line and converted into a single <code>\n</code> character. See the <a href="http://docs.python.org/3/library/functions.html#open" rel="nofollow">open documentation</a> for details.</p>
<p>You can disable this behavior by passing <code>newline=''</code> to <code>open</code>, which means it'll accept any kind of newline but not normalize them to <code>\n</code>.</p>
</div>
<span class="comment-copy">Thanks! (In retrospect, I don't know why it never occurred to me that the behaviour could be related to something other than PLY).</span>
