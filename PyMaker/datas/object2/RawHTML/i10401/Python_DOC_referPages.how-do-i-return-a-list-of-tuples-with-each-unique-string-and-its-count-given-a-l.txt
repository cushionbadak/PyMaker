<div class="post-text" itemprop="text">
<p>Not sure where to start...
item() gives a dictionary and I don't want that.</p>
<p>I would say I need to loop through the list....</p>
<p>Please someone give me some hints so I can get started!</p>
<p>EDIT:</p>
<pre><code>count_of_names(names)

    counts_of_names(['John', John', 'Catherine', 'John', 'Christopher', 'Catherine']' 
</code></pre>
<p>output:</p>
<pre><code>[('Catherine', 2), ('Christopher', 1), ('John', 3)] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a hard way to do it:</p>
<pre><code>x = [1,3,2,5,6,6,3,2]
x_tuple = []

y = set(x)

for i in y:
    x_tuple.append((i,x.count(i)))

print(x_tuple)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use <a href="https://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter()</code></a> to achieve this. Example:</p>
<pre><code>&gt;&gt;&gt; x = [1,2,3,4,1,1,2,3]
&gt;&gt;&gt; my_list = Counter(x).items()
&gt;&gt;&gt; my_list
[(1, 3), (2, 2), (3, 2), (4, 1)]

# In order to sort the list base based on value of tuple at index `1` and then index `0`
&gt;&gt;&gt; sorted(my_list, key=lambda x: (x[1], x[0]))
[(4, 1), (2, 2), (3, 2), (1, 3)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>set</code> and list comprehension:</p>
<pre><code>def counts_of_names(names):
    return [(name, names.count(name)) for name in set(names)]
</code></pre>
</div>
<span class="comment-copy">sample input and desired output please</span>
<span class="comment-copy">count_of_names(names) would be the function name...so if    counts_of_names(['John', John', 'Catherine', 'John', 'Christopher', 'Catherine']' the output would be '[('Catherine', 2), ('Christopher', 1), ('John', 3)]</span>
<span class="comment-copy">Ahhhhhhhhhhhhhhh. So I create an empty tuple and append everything into it....Sorry, but what does set do?</span>
<span class="comment-copy">The <code>set</code> is an unordered collection with no duplicate elements. You can read it here: <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html#sets</a></span>
<span class="comment-copy">Ah ok. I don't think I need to remove duplicates though, so I shouldn't use it then?</span>
<span class="comment-copy">Terminology point: you don't "create an empty tuple and append everything into it," because in Python tuples are immutable (once you create it, you can't change it -- in particular, you can't append to it). <code>x_tuple</code> here is a <i>list</i> of <i>tuples</i>.</span>
<span class="comment-copy">Your questions said <code>each unique string and its count</code>. So i'm use <code>set</code> to get unique elements , then loop the unique elements and count everyone</span>
<span class="comment-copy">OK, is there any other way to do this without using Counter()?</span>
<span class="comment-copy">To be Frank, there are <code>N</code> number of ways and where <code>N</code> is infinite. It depends on what you desire</span>
<span class="comment-copy">Well, I prefer with if statements and loops. That's what I've really learned so far.</span>
<span class="comment-copy">Hey sorry, but what if I have two unique strings with the same number of counts and I was trying to order it by count? How would I order them by count and then if there is a tie, order them by alphabet?</span>
<span class="comment-copy">@RandomStuff: Updated the answer with the logic of sort. Also, check the answer mentioned by @zhillang. It is same as what you demanded i.e using <code>for</code> and <code>if</code></span>
<span class="comment-copy">Wait how does that work again? I'm not good with so much code on one line :(</span>
<span class="comment-copy"><code>set(names)</code> is to get the unique names in list <code>names</code>.  <code>names.count(name)</code> is to count the occurrence of <code>name</code> in list <code>names</code>.  Use list comprehension to go through the unique names and return the required tuples <code>(name, count)</code>.</span>
<span class="comment-copy">Ahhhh I see. If I were to write this code, I would have the for loop, and then everything else....one line code just confuses me.</span>
