<div class="post-text" itemprop="text">
<p>The exact question to this problem is:
*Create a file with a 20 lines of text and name it “lines.txt”. Write a program to read this a file “lines.txt” and write the text to a new file, “numbered_lines.txt”, that will also have line numbers at the beginning of each line.
Example: 
Input file: “lines.txt”</p>
<pre><code>Line one
Line two
</code></pre>
<p>Expected output file:</p>
<pre><code>1 Line one
2 Line two
</code></pre>
<p>I am stuck, and this is what I have so far. I am a true beginner to Python and my instructor does not make things very clear. Critique and help much appreciated.</p>
<pre><code>file_object=open("lines.txt",'r')
for ln in file_object:
    print(ln)

count=1
file_input=open("numbered_lines.txt",'w')
for Line in file_object:
    print(count,' Line',(str))
    count=+1
file_object.close
file_input.close
</code></pre>
<p>All I get for output is the .txt file I created stating lines 1-20. I am very stuck and honestly have very little idea about what I am doing. Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Good first try, and with that, I can go through your code and explain what you did right (or wrong)</p>
<pre><code>file_object=open("lines.txt",'r')
for ln in file_object:
    print(ln)
</code></pre>
<p>This is fine, though generally you want to put a space before and after assignments (you are assigning the results of <code>open</code> to <code>file_object) and add a space after a</code>,` when separating arguments, so you might want to write that like so:</p>
<pre><code>file_object = open("lines.txt", 'r')
for ln in file_object:
    print(ln)
</code></pre>
<p>However, at this point the internal reference in the <code>file_object</code> have reached the end of the file, so if you wish to reuse the same object, you need to <a href="https://docs.python.org/3/library/io.html#io.IOBase.seek" rel="nofollow"><code>seek</code></a> back to the beginning position, which is <code>0</code>.  As your assignment only states write to the file (and not on the screen), the above loop should be omitted from the file (but I get what you want to do, you want to see the contents of the file immediately though sometimes instructors are pretty strict on what they accept).  Moving on:</p>
<pre><code>count=1
file_input=open("numbered_lines.txt",'w')
for Line in file_object:
</code></pre>
<p>Looks pretty normal so far, again, minor formatting issues.  In Python, typically we name all variables lower-case, as names with Capitalization are generally reserved for class names (if you wish to, you may <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow">read about them</a>).  Now we enter into the loop you got</p>
<pre><code>    print(count,' Line',(str))
</code></pre>
<p>This prints not quite what you want.  as <code>' Line'</code> is enclosed inside a quote, it is treated as a string literal - so it's treated literally as text and not code.  Given that you had assigned <code>Line</code>, you want to take out the quotes.  The <code>(str)</code> at the end simply just print out the string object and it definitely is not what you want.  Also, you forgot to specify the <code>file</code> you want to print to.  By default it will print to the screen, but you want to print it to the the <code>numbered_lines.txt</code> file which you had opened and assigned to <code>file_input</code>.  We will correct this later.</p>
<pre><code>    count=+1
</code></pre>
<p>If you format this differently, you are assigning <code>+1</code> to <code>count</code>.  I am guessing you wanted to use the <code>+=</code> operator to increment it.  Remember this on your quiz/tests.</p>
<p>Finally:</p>
<pre><code>file_object.close
file_input.close
</code></pre>
<p>They are meant to be called as functions, you need to invoke them by adding parentheses at the end with arguments, but as <code>close</code> takes no arguments, there will be nothing inside the parentheses.  Putting everything together, the complete corrected code for your program should look like this</p>
<pre><code>file_object = open("lines.txt", 'r')
count = 1
file_input = open("numbered_lines.txt", 'w')
for line in file_object:
    print(count, line, file=file_input)
    count += 1
file_object.close()
file_input.close()
</code></pre>
<p>Run the program.  You will notice that there is an extra empty line between every line of text.  This is because by default the <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow"><code>print</code></a> function adds a new line <code>end</code> character; the line you got from the file included a new-line character at the end (that's what make them lines, right?) so we don't have to add our own here.  You can of course change it to an empty string.  That line will look like this.</p>
<pre><code>    print(count, line, file=file_input, end='')
</code></pre>
<p>Naturally, other Python programmers will tell you that there are Pythonic ways, but you are just starting out, don't worry too much about them (although you can definitely pick up on this later and I highly encourage you to!)</p>
</div>
<div class="post-text" itemprop="text">
<p>You have all the right parts, and you're almost there:</p>
<p>When you do</p>
<pre><code>for ln in file_object:
    print(ln)
</code></pre>
<p>you've exhausted the contents of that file, and you won't be able to read them again, like you try to do later on.</p>
<p>Also, <code>print</code> does not write to a file, you want <code>file_input.write(...)</code></p>
<p>This should fix all of that:</p>
<pre><code>infile = open("lines.txt", 'r')
outfile = open("numbered_lines.txt", 'w')

line_number = 1
for line in infile:
    outfile.write(str(line_number) + " " + line)

infile.close()
outfile.close()
</code></pre>
<p>However, here is a more pythonic way to do it:</p>
<pre><code>with open("lines.txt") as infile, open("numbered_lines.txt", 'w') as outfile:
    for i, line in enumerate(infile, 1):
        outfile.write("{} {}".format(i, line))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The right way to open a file is using a <code>with</code> statement:</p>
<pre><code>with open("lines.txt",'r') as file_object:
    ... # do something
</code></pre>
<p>That way, the context manager introduced by <code>with</code> will close your file at the end of "something " or in case of exception.</p>
<p>Of course, you can close the file yourself if you are not familiar with that. Not that <code>close</code> is a method: to call it you need parenthesis:</p>
<pre><code>file_object.close()
</code></pre>
<p>See the chapter 7.2. <a href="https://docs.python.org/3.5/tutorial/inputoutput.html" rel="nofollow">Reading and Writing Files</a>, in the official documentation. </p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>In the first loop you're printing the contents of the input file.  This means that the file contents have already been consumed when you get to the second loop.  (Plus the assignment didn't ask you to print the file contents.)</p></li>
<li><p>In the second loop you're using <code>print()</code> instead of writing to a file.  Try <code>file_input.write(str(count) + " " + Line)</code>  (And <code>file_input</code> seems like a bad name for a file that you will be <em>writing</em> to.)</p></li>
<li><p><code>count=+1</code> sets count to <code>+1</code>, i.e. <em>positive one</em>.  I think you meant <code>count += 1</code> instead.</p></li>
<li><p>At the end of the program you're calling <code>.close</code> instead of <code>.close()</code>.  The parentheses are important!</p></li>
</ol>
</div>
<span class="comment-copy">You never use <code>file_input</code>.</span>
<span class="comment-copy">Look into the "write" function for files.  Also, the last two lines should be file_object.close() and file_input.close().</span>
<span class="comment-copy">Thank you all for your responses, I really appreciate it and it helped a ton!!</span>
<span class="comment-copy">@W.Lawson The official documentation does have more to say <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">on Input/Output</a> and it probably will teach you things that your instructor forgot to.  Do give other tutorials a look, and by your effort you are already ahead of the rest of the student crowd that have asked questions before they even tried.</span>
<span class="comment-copy">@metatoaster Alright, thank you very much for your assistance!</span>
<span class="comment-copy">Thank you so much for the in depth help, I really needed it... This might be a stupid question but do you know of any websites with guides or videos that is a good aid when first learning python?</span>
<span class="comment-copy">There are a number (good on you for not posting this as a new question as SO frowns upon asking for external resources as a question): <a href="https://wiki.python.org/moin/BeginnersGuide/Programmers" rel="nofollow noreferrer">a wiki entry</a> for all the possible resources, <a href="https://www.codecademy.com/lrn/python" rel="nofollow noreferrer">code academy</a> might be a bit intense but it seems comprehensive, and <a href="http://www.learnpython.org/" rel="nofollow noreferrer">learn python</a> may also work for you too. If you are up for a bit more challenge, <a href="https://learnpythonthehardway.org/" rel="nofollow noreferrer">learn python the hard way</a>.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print</code></a> actually can write to a file in Python 3, with the <code>file</code> keyword argument.</span>
<span class="comment-copy">@metatoaster: I stand corrected! Thanks for pointing that out</span>
