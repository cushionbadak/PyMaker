<div class="post-text" itemprop="text">
<p>I have a list of string elements like <code>user_contract = ['ZNZ6','TNZ6','ZBZ6']</code></p>
<p>I have a data set which has nested list structure like <code>data = [[1,2,3],[4,5,6],[7,8,9]]</code></p>
<p>I want to assign each of the <code>user_contract</code> strings as variable names for each of the <code>data</code> nested list, in the respective order. </p>
<p>I know I can do this manually by typing <code>ZNZ6, TNZ6, ZBZ6 = data</code>. I don't think this is flexible enough, and I would have to manually change this line every time I change the names in <code>user_contract</code>.</p>
<p>Is there a way where I can make use of the <code>user_contract</code> variable to assign data to each of its elements?</p>
</div>
<div class="post-text" itemprop="text">
<p>This code can help you: </p>
<pre><code>user_contract = ['ZNZ6','TNZ6','ZBZ6']
data = [[1,2,3],[4,5,6],[7,8,9]]
dictionary = dict(zip(user_contract, data))
print(dictionary)
</code></pre>
<p>It creates a dictionary from the two lists and prints it:</p>
<pre><code>python3 pyprog.py 
{'ZBZ6': [7, 8, 9], 'ZNZ6': [1, 2, 3], 'TNZ6': [4, 5, 6]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>exec</code> to evaluate expressions and assign to variables dynamically:</p>
<pre><code>&gt;&gt;&gt; names = ','.join(user_contract)
&gt;&gt;&gt; exec('{:s} = {:s}'.format(names, str(data)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a dictionary comprehension to assign the values:</p>
<pre><code>myvars = {user_contract[i]: data[i] for i in range(len(user_contract))}
</code></pre>
<p>Then you can access the values like so</p>
<pre><code>myvars['TNZ6']
&gt; [1, 2, 3]
</code></pre>
</div>
<span class="comment-copy">Use a dictionary for this: <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html#dictionaries</a></span>
<span class="comment-copy">wonderful, thank you.</span>
