<div class="post-text" itemprop="text">
<p>I've to ask 1 question about python and dll functions which I'm a bit frustrated about.   The question is - Can I load dll functions from windows using python? I heard of Ctype to do that, but I can’t find good tutorials for this.  Is there another way to use dll files from windows to get extra functionality? </p>
<p>I want to call some dll to work with mouse events. I used pyautogui but it is not that useful for me. I wonder if python is good for windows applications? I know it runs on Windows however there are good dll function that can provide better functionality for windows then python original libraries.  Well that’s my opinion what I think. Anyways, is it worth to work with dlls with python after all? Or I better study C# for that because I love python for simplicity and don’t  want to  move to C# yet.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes you can. The <code>ctypes</code> library is indeed what you need. The official doc is here <a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow">https://docs.python.org/3/library/ctypes.html</a> . 
Loading DLLs pretty straightforward, but calling the functions inside can be a pain depending on the arguments types. Handling old C style error return codes is also cumbersome compared to the exception handling and general low overhead code style in Python.</p>
<p>99% of the time it is way easier and better to use an appropriate existing module that either implements what you need or wraps the appropriate DLL for you. For example search in PyPI which is the central repository of Python expternal modules. That's my advice.</p>
</div>
<span class="comment-copy">This isn't a discussion site. Specific question and answers here. You should remove the question.</span>
<span class="comment-copy">It is a question otherwise it won’t sound like a question.  I am asking about python and dll import. And the part of question is opinion otherwise question is not a question if you don’t ask about.</span>
<span class="comment-copy">No, this question really is off topic here. Please don't tell me you skipped over reading the articles at the <a href="https://stackoverflow.com/help">help center</a> that explain this. Bear in mind that you are new here (welcome!) and don't yet know clearly what this site is about.</span>
<span class="comment-copy">what is windows api for python used then</span>
<span class="comment-copy">ctypes function pointers allow defining the function prototype <code>restype</code>, <code>argtypes</code>, and <code>errcheck</code>. If the <code>errcheck</code> function raises exceptions, then code that consumes ctypes-wrapped APIs doesn't have to worry about error return codes.</span>
<span class="comment-copy">True, but converting the return codes to exceptions requires writing code. So you end up having a "DLL style to Python style" ctypes wrapper on one hand, and your actual application using your wrapper on the other hand. As I mentioned, this can be a cumbersome process for most  libraries.</span>
<span class="comment-copy">Generally there's a small number of <code>errcheck</code> functions to write (maybe only one). The OP mentioned the Windows API. In that case, a <code>check_zero</code> function is needed, since most functions return either <code>FALSE</code> or a <code>NULL</code> pointer/handle. It may also need a <code>check_invalid</code> function for the handful of functions that return <code>INVALID_HANDLE_VALUE</code> instead of <code>NULL</code>. To get an exception, load the DLL with <code>use_last_error=True</code> and on error raise <code>ctypes.WinError(ctypes.get_last_error())</code>.</span>
<span class="comment-copy">The tedious part is manually converting function prototypes and structures if you don't have a way to automate this (e.g. ctypesgen).</span>
