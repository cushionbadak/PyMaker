<div class="post-text" itemprop="text">
<p>I am working on a listing in django project. The scenario is that When i click on FAQ listing page then it redirects me to the listings where i get all faq. Now i have to search using different keywords. There is total five keywords through which i can search for particular results. Code is</p>
<pre><code>questions = Help.objects.all().filter().values('id','question','description','status','created','modified').order_by('-id')
if 'question' in ajax_data:
    #add filter for question
if 'description' in ajax_data:
    #add filter for description
if 'status' in ajax_data:
    #add filter for status
if 'created' in ajax_data:
    #add filter for created
if 'modified' in ajax_data:
    #add filter for modified
questions = Help.objects.all().filter(#add all conditions here dynamically after applying filters).values('id','question','description','status','created','modified').order_by('-id')
</code></pre>
<p>First when page refresh it executes first query which returns all data, now using ajax filters have to be applied, i have done all ajax code just want logic of this search. Search should perform like if i enter question only it should filter according to question, but if i search using question, status and created filed it should apply filter for all these three keywords.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>questions = Help.objects.all()
filters = {}
if 'question' in ajax_data:
    filters['question'] = ajax_data.get('question')
if 'description' in ajax_data:
    filters['description'] = ajax_data.get('description')
if 'status' in ajax_data:
    filters['status'] = ajax_data.get('status')
if 'created' in ajax_data:
    filters['created'] = ajax_data.get('created')
if 'modified' in ajax_data:
    filters['modified'] = ajax_data.get('modified')
questions = questions.filter(**filters).values('id','question','description','status','created','modified').order_by('-id')
</code></pre>
<p>Check this link <a href="https://docs.python.org/3/glossary.html#term-argument" rel="nofollow">https://docs.python.org/3/glossary.html#term-argument</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>request.GET.get('filter_name')</code></p>
<p>e.g if you have a filter by title:</p>
<pre><code>query = Model.objects.all()
title = request.GET.get('title')    
if title:
    query = query.filter(title__icontains=title)

...and so on
</code></pre>
<p>note that your url should contain get parameters like <code>http://myurl.com/?title=abc</code></p>
<p><strong>EDIT</strong>
    for one query filter you can use <code>Q</code> object from <code>django.db.models</code> </p>
<pre><code>filter = Q()
if title:
    filter &amp;= Q(title__icontains=title)
if category:
    filter &amp;= Q(category__icontains=category)
query = query.filter(filter)
</code></pre>
</div>
<span class="comment-copy">but in this how can i use contains or greater than less than operators</span>
<span class="comment-copy">you can use like filters['created__gt'],filters['created__lt'] etc.</span>
<span class="comment-copy">But this function will always execute multiple queries for keywords, like if i apply three filters then it will execute queries three times, is it not possible to create filter conditions in each if statement and finally execute query with that condition</span>
<span class="comment-copy">check te edit @Pankaj</span>
<span class="comment-copy">Error global name Q is not defined</span>
<span class="comment-copy">did you import Q? @Pankaj</span>
<span class="comment-copy">Nice, but it is working for exact lookups not for like matches, I have also used title__icontains</span>
