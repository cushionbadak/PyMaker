<div class="post-text" itemprop="text">
<p>I have two tuples - one with the keys and another one with a collection of variables of different types (list, float64, int and array) generate with the help of the following formula from a dictionary:</p>
<pre><code>keys, values = zip(*[(key, value) for (key, value) in data_dict.items()])
</code></pre>
<p>Now I would like to retrieve the variables from the list of values and give them names from the list of keys. How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to create variables in the global scope from your dictionary, perhaps you could update it like this:</p>
<pre><code>globals().update(data_dict)
</code></pre>
<p>without unpacking the dict.</p>
<p>I'm not sure if this is what you're looking for.</p>
</div>
<div class="post-text" itemprop="text">
<p>If it's really not possible to store your key/value pairs in a <code>dict</code> and serialise them to data file in that format, you can use <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow"><code>exec</code></a> to dynamically construct assignment statements</p>
<pre><code>&gt;&gt;&gt; key = 'foo_var'
&gt;&gt;&gt; val = 'foo_val'
&gt;&gt;&gt; exec('{key} = \'{val}\''.format(key=key, val=val))
&gt;&gt;&gt; foo_var
'foo_val'
</code></pre>
<p>I'd explore the <code>dict</code> approach first though, in case that can work for you. There are lots of good reasons to avoid runtime code generation using <code>exec</code> and <code>eval</code> where possible.</p>
</div>
<span class="comment-copy">What do you mean <i>"give them names"</i>? Why don't you just <i>use the dictionary?</i></span>
<span class="comment-copy">I need those variables once again because I run the code once a day and I use spyder data file (it saves all the variables I use to a dictionary) to keep my variables updated.</span>
<span class="comment-copy">Could you give some more context? If it saves them all to a dictionary, <i>why not use the dictionary?</i></span>
<span class="comment-copy">there is a code that I run on a daily basis. in order not to recalculate the values, that were already calculated, I store them in a spyder datafile, which, in turn, saves all the variables I use to a dictionary. I need to unpack this dictionary into the variables again so that I can run the code again next day without any adjustments.</span>
<span class="comment-copy">That's exactly what I was looking for! Thanks a lot!</span>
