<div class="post-text" itemprop="text">
<p>In the below part of code <strong>v</strong>   is a list of characters. </p>
<pre><code>import collections
import csv
import sys


with open("prom output.csv","r") as f:
    cr = csv.reader(f,delimiter=",")
    d=collections.defaultdict(lambda : list())
    header=next(cr)    

    for r in cr:
        d[r[0]].append(r[1])   


with open("sorted output.csv","w") as f:
    cr = csv.writer(f,sys.stdout, lineterminator='\n')
    od = collections.OrderedDict(sorted(d.items()))

    for k,v in od.items():  
        cr.writerow(v)  
</code></pre>
<p>My output looks like    </p>
<p><a href="https://i.stack.imgur.com/tbveK.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/tbveK.png"/></a></p>
<p>I want to map all the characters of my input into an integer, so that instead of a table with characters i get a table with numbers. I tried to use the built in function <strong>ord()</strong> but it doesnt work, since it only accepts single characters as input and not lists. Can you help?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have a list of letters that you want converting into numbers try:</p>
<pre><code>&gt;&gt;&gt; [ord(l) for l in letters]
[97, 98, 99, 100, 101, 102, 103]
</code></pre>
<p>or </p>
<pre><code>&gt;&gt;&gt; list(map(ord, letters))
[97, 98, 99, 100, 101, 102, 103]
</code></pre>
<p>Or if you're dealing with capitalized column headings and want the corresponding index</p>
<pre><code>&gt;&gt;&gt; letters = ['A', 'B', 'C', 'D', 'E']
&gt;&gt;&gt; [ord(l.lower()) -96 for l in letters]
[1, 2, 3, 4, 5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map()</code></a> to apply an operation to each item in a list:</p>
<pre><code>a = ['a', 'b', 'c']
b = map(lambda c: ord(c), a)

print b
&gt;&gt;&gt; [97, 98, 99]
</code></pre>
</div>
<span class="comment-copy">so v is just a list of characters? i.e. <code>['a', 'b', 'c', 'd', 'e', 'f', 'g']</code></span>
<span class="comment-copy">How about v = [ord(i) for i in v] ?</span>
<span class="comment-copy">it actually works. thanks</span>
