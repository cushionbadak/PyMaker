<div class="post-text" itemprop="text">
<p>I'm new to python and trying a program to do the following:</p>
<ol>
<li><p>Open all folder and subfolders in a directory path</p></li>
<li><p>Identify the HTML files</p></li>
<li><p>Load the HTML in BeautifulSoup</p></li>
<li><p>Find the first body tag</p></li>
<li><p>If the body tag is immediately followed by &lt; Google Tag Manager&gt; then continue</p></li>
<li><p>If not then add &lt; Google Tag Manager&gt; code and save the file.</p></li>
</ol>
<p>I'm not able to scan all subfolders within each folder.
I'm not able to set seen() if &lt; Google Tag Manager&gt; appears immediately after the body tag.
Any help to perform the above tasks is appreciated.</p>
<p>My code attempt is as follows:</p>
<pre><code>  import sys
  import os
  from os import path
  from bs4 import BeautifulSoup

  directory_path = '/input'

  files = [x for x in os.listdir(directory_path) if path.isfile(directory_path+os.sep+x)]

  for root, dirs, files in os.walk(directory_path):
      for fname in files:
      seen = set()
      a = directory_path+os.sep+fname
      if fname.endswith(".html"):
          with open(a) as f:
              soup = BeautifulSoup(f)
              for li in soup.select('body'):
                if li in seen:
                    continue
                else:
                    seen.add("&lt;!-- Google Tag Manager --&gt;&lt;noscript&gt;&lt;iframe src='//www.googletagmanager.com/ns.html?id=GTM-54QWZ8'height='0' width='0' style='display:none;visibility:hidden'&gt;&lt;/iframe&gt;&lt;/noscript&gt;&lt;script&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-54QWZ8');&lt;/script&gt;&lt;!-- End Google Tag Manager â€”&gt;\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So you can install the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow">iglob</a> library for python. With iglob you can recursively traverse the main directory you specify and the sub-directories and list all the files with a given extension. Then open up the HTML file, read all the lines, traverse through the lines manually until you find "" for the tag as some users who may use a frame work might have other content inside the body tag. Either way, loop through the lines looking for the start of the body tag, then check the next line, if the text as you specified "Google Tag Manager" is not in the next line, write it out. Please keep in mind I wrote this in the event you will always have the Google Tag Manager tags right after the body tag. </p>
<p>Please keep in mind that:</p>
<ol>
<li>In the event the Google Tag Manager text is not directly after the body tag, this code will add it anyways, so if Google Tag manager is somewhere in the Two body tags, and works, this could break the functionality of your Google Tag Manager.</li>
<li>I am using Python 3.x for this, so if you are using Python 2, you might have to translate this to that version of python. </li>
<li>Replace the 'Path.html' with the variable path so that it rewrite the file it is looking at with the modifications. I put  in 'path.html' so that i could see the output and compare to original while I was writing the script.</li>
</ol>
<p>Here is the code:</p>
<pre><code>import glob

types = ('*.html', '*.htm') 
paths = []

for fType in types:
    for filename in glob.iglob('./**/' + fType, recursive=True):
        paths.append(filename)
#print(paths)

for path in paths:
    print(path)
    with open(path,'r') as f:
        lines = f.readlines()

    with open(path, 'w') as w:
        for i in range(0,len(lines)):
            w.write(lines[i])
            if "&lt;body&gt;" in lines[i]:
                if "&lt;!-- Google Tag Manager --&gt;" not in lines[i+1]:
                    w.write('&lt;!-- Google Tag Manager --&gt; &lt;!-- End Google Tag Manager --&gt;\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My take on it, might have some bugs:</p>
<p>edited to add: I have since realized that this code does not ensure <code>&lt;!-- Google Tag Manager --&gt;</code> is the first tag after <code>&lt;body&gt;</code>, instead it ensures it is the first comment after <code>&lt;body&gt;</code>. Which is not what the question asked for.</p>
<pre><code>import fnmatch
import os
from bs4 import BeautifulSoup, Comment
from HTMLParser import HTMLParser


def get_soup(filename):
  with open(filename, 'r') as myfile:
    data=myfile.read()
  return BeautifulSoup(data, 'lxml')


def write_soup(filename, soup):
  with open(filename, "w") as file:
    output = HTMLParser().unescape(soup.prettify())
    file.write(output)


def needs_insertion(soup):
  comments = soup.find_all(text=lambda text:isinstance(text, Comment))
  try:
    if comments[0] == ' Google Tag Manager ':
      return False  # has correct comment
    else:
      return True  # has comments, but not correct one
  except IndexError:
    return True  # has no comments


def get_html_files_in_dir(top_level_directory):
  matches = []
  for root, dirnames, filenames in os.walk(top_level_directory):
      for filename in fnmatch.filter(filenames, '*.html'):
          matches.append(os.path.join(root, filename))
  return matches


my_html_files_path = '/home/azrad/whateveryouneedhere'
for full_file_name in get_html_files_in_dir(my_html_files_path):
  soup = get_soup(full_file_name)

  if needs_insertion(soup):
    soup.body.insert(0, '&lt;!-- Google Tag Manager --&gt; &lt;!-- End Google Tag Manager --&gt;')
    write_soup(full_file_name, soup)
</code></pre>
</div>
<span class="comment-copy">Hm, is step 5 missing an object (i.e. followed by <i>what</i>)?</span>
<span class="comment-copy">added the missing info. thanks!</span>
<span class="comment-copy">Now for something completely different ... what does the best effort code produce, that is not matching your expectation, what does work already? That would be great addition to the question, so others can more easily help you exactly where you are stuck. Oh and do not close a resource like a, when using a context manager (with). Leaving the block, will release the resource. Next hint: Try correct formating, this code as is will not even run (due to indentation) sample both for loops with same indent albeit nested.</span>
<span class="comment-copy">Also for path manipulations, I would work with os.path.join() instead of string concat with os.sep (using os.path.sep should also be clearer if it absolutely has to be explicit concat).</span>
<span class="comment-copy">... and maybe check your expectation with the actions you take on the seen set. Checking for existence of one thing <code>li</code> inside a set, and if not there Insert something else " a constant string" into that set is not a really interesting operation inside a loop.</span>
<span class="comment-copy">I think you have the same typo from the original question. Double check the 'dash characters' in your version of <code>&lt;!-- End Google Tag Manager --&gt;</code>.</span>
<span class="comment-copy">Yes, I apologize for that, I just copy pasted his tags into the write function. I fixed it now.</span>
<span class="comment-copy">Thank you so much for the help! I keep getting a PermissionError: [Errno 13] Permission denied: 'C:/Users/../Desktop/..' error. Is because I don't have write permissions to that folder in Windows. How do i change that?</span>
<span class="comment-copy">If you have full permission on your computer there shouldn't be any sort of permission error.What OS are you testing this on? If you are on linux, you might need to give yourself permission for that specific folder, but that is sort of odd that you would need to do so if it is not a system folder.</span>
<span class="comment-copy">I'm testing this on Windows. The permission error occurs on line with open(paths,'r') as f:.</span>
<span class="comment-copy">Thanks so much for your help!. I get the following error when running the code: "UnicodeEncodeError: 'ascii' codec can't encode character u'\u201c' in position 11496: ordinal not in range(128)". Can you please help me debug?</span>
<span class="comment-copy">Sorry, I'm a noob and the ability to troubleshoot that error sight unseen is beyond my capabilities. Also I just realized that my answer is not correct in that it does not actually ensure that the <code>&lt;!-- Google Tag Manager --&gt;</code> is the very first tag after &lt;body&gt;. The code as written ensure it is the first comment after &lt;body&gt;. Good luck with your project!</span>
<span class="comment-copy">Perhaps try replacing <code>output = HTMLParser().unescape(soup.prettify())</code> with <code>output = HTMLParser().unescape(soup.encode('utf-8'))</code></span>
