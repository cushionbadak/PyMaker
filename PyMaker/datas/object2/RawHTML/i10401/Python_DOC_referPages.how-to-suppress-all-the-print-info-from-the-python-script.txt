<div class="post-text" itemprop="text">
<p>Is there an easy way to suppress all the print info from the python script globally ?</p>
<p>Have a scenario where I had put lot of print info in the script for debug purpose, but when the user runs I don't want the script to print all the infos.</p>
<p>So only when I pass a command line argument like debug=1 or something like that, the print needs to provide the info else it shouldn't print. </p>
<p>Tried simply like, </p>
<pre><code>if sys.argv[1]:
  debug=1
else:
  debug=0

if debug:
  print "Enabled debugging" 
</code></pre>
<p>But for this I need to include the if condition everywhere, instead is there any easy way to shutdown the print info globally ? Share in your comments.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You will have to redirect stdout to /dev/null.
Below is the OS agnostic way of doing it.</p>
<pre><code>import os
import sys
f = open(os.devnull, 'w')
sys.stdout = f
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is why you should use the built-in <a href="https://docs.python.org/3/library/logging.html" rel="nofollow"><code>logging</code></a> library rather than writing print statements everywhere.</p>
<p>With that, you can call <code>logger.debug()</code> wherever you need to, and configure at application level whether or not the debug logs are actually output.</p>
</div>
<span class="comment-copy">You should consider using logging module</span>
<span class="comment-copy">Might want to explain what's going on.</span>
<span class="comment-copy">This is a good approach but does not answer/help him here.</span>
<span class="comment-copy">I can try changing.. if I use logging.debug("I am using debug option"), how do I control the verbosity from the command line ?</span>
<span class="comment-copy">There are bunch of tutorial on the logging, you should refer them.</span>
