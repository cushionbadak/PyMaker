<div class="post-text" itemprop="text">
<p>I'm trying to mock a call of method <code>extra_get()</code> which usually returns a list of dicts. As far as I understand from the Mock <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock" rel="nofollow">docs</a>, if I want to return iterable, I should set side_effect param.</p>
<pre><code>client.extra_get = mock.Mock(
            **{'side_effect': [{'foo': 'bar'}]})
</code></pre>
<p>But then the following code calls that mocked method:</p>
<pre><code>extra = client.extra_get(request, type_id)
result = {x.key: x.value for x in extra}
return result
</code></pre>
<p>And the dict comprehention fails because <code>extra</code> there is not a list, but dict <code>{'foo': 'bar'}</code>.
What I'm doing wrong? How can I make Mock method return a list of dicts?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with mock.patch.object(client, 'extra_get', return_value=[{...}, {...}]) as mock_get:
  # fill in the rest
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect" rel="nofollow noreferrer"><code>side_effect</code></a> takes a list, so you can return a different thing each time (<i>"If side_effect is an iterable then each call to the mock will return the next value from the iterable"</i>). Either use <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.return_value" rel="nofollow noreferrer"><code>return_value</code></a>, which takes a single thing to return every time, or provide a list of lists of dictionaries.</span>
<span class="comment-copy">@jonrsharpe tried it initially. But if I use <code>client.extra_get.return_value = mock.Mock(**{'return_value': [{'foo': 'bar'}]})</code> I'm getting <code>TypeError: 'Mock' object is not iterable</code> error.</span>
<span class="comment-copy">Please give a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> demonstrating that issue, then.</span>
