<div class="post-text" itemprop="text">
<p>i have one csv file that include the list of file:
nome
Desert
Hydrangeas
Jellyfish
Koala
Lighthouse
Penguins
Tulips
I would like to create one script with python for copy this list of file from one directory to another directory, i can do this :</p>
<pre><code>import csv
import os
import shutil
source = os.listdir("C:\Test")
destination = "C:\Test1"
with open('semplice1.csv') as csvfile:
       reader = csv.DictReader(csvfile)
       for row in reader:
           print(row['nome'])
</code></pre>
<p>in this wway i can print the name of the file.
Can you help me to complete the code for copy only the list file?
Thanks.<code>enter code here</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I resolve my problem with this code:</p>
<pre><code>import csv
import os
import shutil

source = "C:\Test"
destination = "C:\Test1"

with open('semplice1.csv') as csvfile:
       reader = csv.DictReader(csvfile)
       for row in reader:
           print(row['nome'])
           shutil.copyfile(os.path.join(source, row['nome']), os.path.join(destination, row['nome'])) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that <code>os.listdir()</code> returns a <em>list</em> of files contained in the directory that you give it - in this case "C:\test".</p>
<p>Later on, when you then try and concatenate <code>source</code> with the individual files, you are therefor attempting to combine a list with a str. This is why you are getting the <code>TypeError</code>.</p>
<p>If all of the files are contained directly in "C:\test", then you can drop the <code>os.listdir()</code> and do:</p>
<pre><code>import csv
import os
import shutil

source = "C:\Test"
destination = "C:\Test1"

with open('semplice1.csv') as csvfile:
       reader = csv.DictReader(csvfile)
       for row in reader:
           print(row['nome'])
           a = row['nome']
           shutil.copyfile(os.path.join(source, a), destination)
</code></pre>
<p>Note the use of <code>os.path.join()</code> also as a better solution for building filepaths up.</p>
</div>
<span class="comment-copy">Have you tried <a href="https://docs.python.org/3/library/shutil.html#shutil.copy" rel="nofollow noreferrer"><code>shutil.copy()</code></a> or <code>shutil.copytree()</code>?</span>
<span class="comment-copy">I can't resolve :-(</span>
<span class="comment-copy">Can you include a few lines from the CSV file you are parsing so that we know what the format is?</span>
<span class="comment-copy">Is the goal to copy files from "C:\Test" to some other directory? Or to copy files from multiple sub-directories, e.g. "C:\Test\XXX" to another location?</span>
<span class="comment-copy">Yes i can parsing the list name fro mmy CSV ven i use the following code: import csv import os import shutil source = os.listdir("C:\Test") destination = "C:\Test1" with open('semplice1.csv') as csvfile:        reader = csv.DictReader(csvfile)        for row in reader:            print(row['nome'])            a = str(row['nome'])           # shutil.copyfile(source + row['nome'],destination)</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/how-to-answer">How to Answer</a> I try to run the script that correct me but i have the error :     shutil.copyfile(os.path.join(source, ['nome']), destination)   File "C:\Python27\lib\ntpath.py", line 85, in join     result_path = result_path + p_path TypeError: cannot concatenate 'str' and 'list' objects &gt;&gt;&gt;</span>
<span class="comment-copy">Sorry, there was a small typo in the script - should work now.</span>
