<div class="post-text" itemprop="text">
<p>Let's say I want to accept anything I can call <code>int()</code> on, or anything I can call <code>str()</code> on. How do I do that with the new type hints ?</p>
<p>Annotating with <code>typing.SupportsInt</code> doesn't work, as mypy will warn against passing a string.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't, not with type hinting. Type hinting can't say anything about the <em>contents</em> of a string, only that it must <em>be</em> a string.</p>
<p>Note that <em>everything</em> in Python can be converted to a string (as <code>__repr__</code> is always available); so for 'can be converted to a string' can be handled by <code>typing.Any</code>.</p>
<p>For <code>int()</code>, you can only specify specific hooks and types again; you can specify you'll accept objects that have a <a href="https://docs.python.org/3/reference/datamodel.html#object.__int__" rel="nofollow"><code>__int__()</code></a>  method, but if you also accept strings, you can't specify what is <em>in</em> that string.</p>
<p>So:</p>
<pre><code>AcceptableToInt = Union[SupportsInt, str, bytes, bytearray]
</code></pre>
<p>would let you check on what types <code>int()</code> accepts, but not if they'll throw a <code>ValueError</code> exception when you actually try.</p>
</div>
<span class="comment-copy">I don't want to know it's a valid value to be converted, only that the operation is allowed. In that sense, I want to allow a value that can cast a ValueError, but not a TypeError.</span>
<span class="comment-copy">@e-satis: then just specify the types that <code>int()</code> accepts, so <code>Union[str, SupportsInt, ...]</code> type union.</span>
<span class="comment-copy">So basically a mix between typing.SupportsInt and str and bool ?</span>
<span class="comment-copy">Just tried it, it doesn't work for custom type just defining __int__. Duck typed class will not be considered a valid input, only the one explicitly subclassing SupportsInt</span>
<span class="comment-copy">@e-satis that may well be a bug then.</span>
