<div class="post-text" itemprop="text">
<p>I have this script:</p>
<pre><code>accounts = open("accounts.txt").readlines()

y = [x.strip().split(":") for x in accounts]

for account in y:
    print ("Trying with: %s:%s" % (account[0], account[1]))
</code></pre>
<p>the file accounts.txt is structred like this:</p>
<pre><code>email1@email.com:test1
email2@email.com:test2
email3@gmail.com:test3
</code></pre>
<p>How can i add to the print "Trying with... bla bla" the current line of the account? An output like:</p>
<pre><code>Trying with: email1@email.com:test1 @1
Trying with: email2@email.com:test1 @2
Trying with: email3@email.com:test1 @3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate()</code></a>, with the <code>start</code> argument as suggested by @JonClements:</p>
<pre><code>for i, account in enumerate(y, start=1):
    print ("Trying with: %s:%s @%d" % (account[0], account[1], i))
</code></pre>
<p>You can also use unpacking to make the line more readable:</p>
<pre><code>for i, (mail, name) in enumerate(y, start=1):
    print ("Trying with: %s:%s @%d" % (mail, name, i))
</code></pre>
<p>Finally, as @idjaw notified it, there is <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow">a better way to format string</a> which is recommended over the old style:</p>
<pre><code>for i, (mail, name) in enumerate(y, start=1):
    print("Trying with: {}:{} @{}".format(mail, name, i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a>:</p>
<pre><code>for position, account in enumerate(y):
    print ("Trying with: %s:%s @%d" % (account[0], account[1], position))
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/522563/accessing-the-index-in-python-for-loops">Accessing the index in Python 'for' loops</a></span>
<span class="comment-copy">However, I would directly use string formatting here and just do: <code>"Trying with: {}:{} @{}".format(account[0], account[1], i)</code></span>
<span class="comment-copy">You can skip the <code>i + 1</code> as <code>enumerate</code> takes a start argument: <code>enumerate(y, start=1)</code> is somewhat more explicit to what you're using <code>i</code> for.</span>
<span class="comment-copy">Also - new style string formatting wasn't introduced in Python 3 - it's been around since Python 2.6</span>
<span class="comment-copy">thanks it worked!</span>
<span class="comment-copy">@JonClements Good points, thank you very much for the info!</span>
<span class="comment-copy">thanks! it has worked!</span>
