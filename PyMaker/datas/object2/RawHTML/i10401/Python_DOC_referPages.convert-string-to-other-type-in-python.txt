<div class="post-text" itemprop="text">
<p>Hi everyone I have a simple problem but I don't find the solution, I have a function that returns something like that</p>
<pre><code>[[4, 'adr', 0, 0, 1, '2016-04-05T13:00:01'], [115, 'adr', 0, 0, 1, '2016-04-05T14:00:01'], [226, 'adr', 0, 0, 1, '2016-04-05T15:00:01'], [337, 'adr', 0, 0, 1, '2016-04-05T16:00:01']]
</code></pre>
<p>when I check de type of this variable <code>type(data)</code>say that is a string <code>&lt;type 'str'&gt;</code>
I want to create a loop to get each element like this </p>
<p>item 1 <code>[4, 'adr', 0, 0, 1, '2016-04-05T13:00:01']</code></p>
<p>item 2 <code>[115, 'adr', 0, 0, 1, '2016-04-05T14:00:01']</code></p>
<p>I try to convert the string in a list, a tuple... but nothing work, any idea how to change the string to any type that I can do a loop and get the items</p>
<p>when I try to convert in a tuple or string I have this result</p>
<pre><code>('[', '[', '4', ',', ' ', "'", 'a', 'd', 'r', "'", ',', ' ', '0', ',', ' ', '0', ',', ' ', '1', ',', ' ', "'", '2', '0', '1', '6', '-', '0', '4', '-', '0', '5', 'T', '1', '3', ':', '0', '0', ':', '0', '1', "'", ']', ',', ' ', '[', '1', '1', '5', ',', ' ', "'", 'a', 'd', 'r', "'", ',', ' ', '0', ',', ' ', '0', ',', ' ', '1', ',', ' ', "'", '2', '0', '1', '6', '-', '0', '4', '-', '0', '5', 'T', '1', '4', ':', '0', '0', ':', '0', '1', "'", ']', ',', ' ', '[', '2', '2', '6', ',', ' ', "'", 'a', 'd', 'r', "'", ',', ' ', '0', ',', ' ', '0', ',', ' ', '1', ',', ' ', "'", '2', '0', '1', '6', '-', '0', '4', '-', '0', '5', 'T', '1', '5', ':', '0', '0', ':', '0', '1', "'", ']', ',', ' ', '[', '3', '3', '7', ',', ' ', "'", 'a', 'd', 'r', "'", ',', ' ', '0', ',', ' ', '0', ',', ' ', '1', ',', ' ', "'", '2', '0', '1', '6', '-', '0', '4', '-', '0', '5', 'T', '1', '6', ':', '0', '0', ':', '0', '1', "'", ']', ']')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You might consider to use <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow">literal_eval from ast</a> module.</p>
<pre><code>In [8]: from ast import literal_eval

In [9]: a = "[[4, 'adr', 0, 0, 1, '2016-04-05T13:00:01'], [115, 'adr', 0, 0, 1, '2016-04-05T14:00:01'], [226, 'adr', 0, 0, 1, '2016-04-05T15:00:01'], [337, 'adr', 0, 0, 1, '2016-04-05T16:00:01']]"

In [10]: type(a)
Out[10]: str

In [11]: b = literal_eval(a)

In [12]: type(b)
Out[12]: list

In [13]: b
Out[13]: 
[[4, 'adr', 0, 0, 1, '2016-04-05T13:00:01'],
 [115, 'adr', 0, 0, 1, '2016-04-05T14:00:01'],
 [226, 'adr', 0, 0, 1, '2016-04-05T15:00:01'],
 [337, 'adr', 0, 0, 1, '2016-04-05T16:00:01']]
</code></pre>
<p>Then you have a proper list and can easily iterate on it to get it's element.</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest, and most dangerous, solution would be to do</p>
<pre><code>eval( data )
</code></pre>
<p>Dangerous because you have to trust there is nothing malicious in that data.</p>
<p>You could write a regex to verify that the string/data is properly formatted; not knowing what that format is, I can't help with that.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/ast.html#ast.literal%5Feval" rel="nofollow">ast.literal_eval</a>:</p>
<pre><code>import ast
myteststr = "[[4, 'adr', 0, 0, 1, '2016-04-05T13:00:01'], [115, 'adr', 0, 0, 1, '2016-04-05T14:00:01'], [226, 'adr', 0, 0, 1, '2016-04-05T15:00:01'], [337, 'adr', 0, 0, 1, '2016-04-05T16:00:01']]"
pyobj = ast.literal_eval(myteststr)
print(pyobj)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hi everyone I finally resolve the problem like this</p>
<pre><code>data = {}
data = {'names': []}
for item in project_name:
  data['names'].append(item)
  data.update({item: {}})
  jobs_running = []
  jobs_pending = []
  for row in all_rows:
    if (str(item) == row[1]):
      parsed_t = dp.parse(str(row[5]))
      t_in_seconds = parsed_t.strftime('%s')

      jobs_running.append([ (t_in_seconds), (row[3]) ])
      jobs_pending.append([ (t_in_seconds), (row[4]) ])
      data[item].update({'jobs_running': jobs_running})
      data[item].update({'jobs_pending': jobs_pending})
</code></pre>
<p>So my data structure is like this <a href="http://i.stack.imgur.com/aPANZ.png" rel="nofollow">see image</a></p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/1894269/convert-string-representation-of-list-to-list-in-python">Convert string representation of list to list in Python</a></span>
