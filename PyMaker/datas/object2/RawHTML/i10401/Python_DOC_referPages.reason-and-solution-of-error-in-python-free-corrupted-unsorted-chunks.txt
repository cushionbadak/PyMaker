<div class="post-text" itemprop="text">
<p>I created a service using Python which connects to SQL Azure using <code>pymssql</code> and only makes <code>SELECT</code> queries. After 1 day (or a bit more), the connection begins to fail in queries and finally the service ends with the error: </p>
<pre><code>Error in `python': free(): corrupted unsorted chunks: 0x0000000000ff2460
</code></pre>
<p>I am not be sure if there is only one error or more (maybe the first error provokes more errors).</p>
<p>The code of connection is here:</p>
<pre><code>  connectionDb = pymssql.connect(host=self.HOST_DATA_BASE, user=self.USER_DATA_BASE, password=self.PASSWORD_DATA_BASE, database=self.DATA_BASE_NAME)    
</code></pre>
<p>and I execute the query in the next form:</p>
<pre><code>  cursor=connectionDb.cursor()
  cursor.execute("select * from vehicles") 
  rows = cursor.fetchall()

  if (rows!=None):
     return rows
</code></pre>
<p>Initially, the connection works fine. The problem occurs after a time of inactivity.</p>
<p>I tried to simplify the queries but I donÂ´t believe that is the reason of error.</p>
<p>*Maybe it is possible bug in <code>pymssql</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>@APRocha, It seems to be not a bug of pymssql, it's an error from glibc when python free some malloc memory. </p>
<p>Did you close the connection after done the sql opertion per request? If not, I suggest you do, or using SQLAlchemy with pymssql to manage the connections in a pool.</p>
<p>Otherwise, I think you can try to use <code>gc.collect()</code> to release the unreferenced memory at intervals, please refer to the <a href="https://docs.python.org/3/library/gc.html" rel="nofollow">document</a> as reference.</p>
<p>Hope it helps.</p>
</div>
<span class="comment-copy">Did you try a web search with the error message, or part of it?  I did and there are hits, but I did not try to followup.</span>
<span class="comment-copy">yes i try, but the context of errors is different, i see only with make extensions between c++ and python</span>
<span class="comment-copy">thanks, I think first use the gc.collect() by intervals, and after maybe i try to close and open the connection by intervals too.</span>
<span class="comment-copy">Hi @APRocha, did this solved your problem? I am facing the same issue while using this library but <code>gc.collect()</code> didn't solve it. Did someone figure why it happens?</span>
<span class="comment-copy">Well, really i don't resolve completely this issue, i change the library and the process, i can only say change library.</span>
<span class="comment-copy">I have exact the same problem also using pymssql and the problem persists with the use of <code>gc.collect()</code>. I have no idea how to avoid this.</span>
