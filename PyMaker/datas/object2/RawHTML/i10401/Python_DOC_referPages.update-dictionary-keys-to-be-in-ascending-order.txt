<div class="post-text" itemprop="text">
<p>I have a dictionary:</p>
<pre><code>A = {'cat': {0: {'variable_1': 'xxx', 'variable_2': 'yyy'},
             1: {'variable_1': 'ttt', 'variable_2': 'kkk'}},
     'dog': {0: {'variable_1': 'xxx', 'variable_2': 'ppp'},
             1: {'variable_1': 'qqq', 'variable_2': 'www'}},
     'fox': {0: {'variable_1': 'xxx', 'variable_2': 'zzz'},
             1: {'variable_1': 'yyy', 'variable_2': 'uuu'},
             3: {'variable_1': 'ccc', 'variable_2': 'jjj'}}}
</code></pre>
<p>I want to make the second level key automated ascend
like this:</p>
<pre><code>{'cat': {0: {'variable_1': 'xxx', 'variable_2': 'yyy'},
         1: {'variable_1': 'ttt', 'variable_2': 'kkk'}},
 'dog': {2: {'variable_1': 'xxx', 'variable_2': 'ppp'},
         3: {'variable_1': 'qqq', 'variable_2': 'www'}},
 'fox': {4: {'variable_1': 'xxx', 'variable_2': 'zzz'},
         5: {'variable_1': 'yyy', 'variable_2': 'uuu'},
         6: {'variable_1': 'ccc', 'variable_2': 'jjj'}}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Regular dictionaries are unordered, so you will need to use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow"><em>OrderedDict</em></a>.</p>
<p>A global <em>counter</em> variable can keep track of the total number of entries.</p>
<p>The <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow"><em>sorted</em></a> function will take a list of key/value tuples and sort them according to the key.</p>
<pre><code>&gt;&gt;&gt; from collections import OrderedDict
&gt;&gt;&gt; A = {'cat': {0: {'variable_1': 'xxx', 'variable_2': 'yyy'},
                 1: {'variable_1': 'ttt', 'variable_2': 'kkk'}},
         'dog': {0: {'variable_1': 'xxx', 'variable_2': 'ppp'},
                 1: {'variable_1': 'qqq', 'variable_2': 'www'}},
         'fox': {0: {'variable_1': 'xxx', 'variable_2': 'zzz'},
                 1: {'variable_1': 'yyy', 'variable_2': 'uuu'},
                 3: {'variable_1': 'ccc', 'variable_2': 'jjj'}}}

&gt;&gt;&gt; OA = OrderedDict()
&gt;&gt;&gt; count = 0
&gt;&gt;&gt; for animal, info in sorted(A.items()):
        OA[animal] = OrderedDict()
        for i, variables in sorted(info.items()):
            OA[animal][count] = variables
            count += 1

&gt;&gt;&gt; OA
OrderedDict([
   ('cat', OrderedDict([(0, {'variable_2': 'yyy', 'variable_1': 'xxx'}), 
                        (1, {'variable_2': 'kkk', 'variable_1': 'ttt'})])),
   ('dog', OrderedDict([(2, {'variable_2': 'ppp', 'variable_1': 'xxx'}), 
                        (3, {'variable_2': 'www', 'variable_1': 'qqq'})])),
   ('fox', OrderedDict([(4, {'variable_2': 'zzz', 'variable_1': 'xxx'}),
                        (5, {'variable_2': 'uuu', 'variable_1': 'yyy'}),
                        (6, {'variable_2': 'jjj', 'variable_1': 'ccc'})]))
])
</code></pre>
<p>If needed you can sort the innermost variables and stored them in an OrderedDict as well.</p>
</div>
<div class="post-text" itemprop="text">
<p>As martineau mentioned, If you want to keep a data set sorted, you'll want to use a collection/data type that preserves order. For a record like this, you can use tuples or namedtuples. These will allow you to keep data sorted, and having them in a list allows them compatibility with built in functions that allow to you insert future data into an sorted set.</p>
</div>
<div class="post-text" itemprop="text">
<p>if u don't need to keep the orderï¼Œu can copy the dict to other dict. A global variable can keep the second level key.</p>
<pre><code># coding=utf-8

A={'cat':{0:{'variable_1':'xxx','variable_2':'yyy'},1:{'variable_1':'ttt','variable_2':'kkk'}},
    'dog':{0:{'variable_1':'xxx','variable_2':'ppp'},1:{'variable_1':'qqq','variable_2':'www'}},
  'fox':{0:{'variable_1':'xxx','variable_2':'zzz'},1:{'variable_1':'yyy','variable_2':'uuu'},3:{'variable_1':'ccc','variable_2':'jjj'}}}

B = dict()
index = 0
for key in A:
    animal = A[key]
    B[key] = dict()
    for i in animal:
        B[key][index] = animal[i]
        index += 1
print(B)
</code></pre>
<p>output:</p>
<pre><code>{
'dog': {
 0: {'variable_1': 'xxx', 'variable_2': 'ppp'}, 
 1: {'variable_1': 'qqq', 'variable_2': 'www'}
}, 
'fox': {
 2: {'variable_1': 'xxx', 'variable_2': 'zzz'}, 
 3: {'variable_1': 'yyy', 'variable_2': 'uuu'}, 
 4: {'variable_1': 'ccc', 'variable_2': 'jjj'}
}, 
'cat': {
 5: {'variable_1': 'xxx', 'variable_2': 'yyy'}, 
 6: {'variable_1': 'ttt', 'variable_2': 'kkk'}
}
}
</code></pre>
</div>
