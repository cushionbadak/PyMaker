<div class="post-text" itemprop="text">
<p>I need to translate chunks of matlab code into Python. My code seems to be 'unreachable' though. Any idea why this is happening? 
Also: am I doing it right? I'm a real newbie.</p>
<p>Matlab code:</p>
<pre><code>function Dir = getScriptDir()
    fullPath = mfilename('fullpath');
    [Dir, ~,~] = fileparts(fullPath);
end

function [list,listSize] = getFileList(Dir)
    DirResult = dir( Dir );
    list = DirResult(~[DirResult.isdir]); % select files
    listSize = size(list);
end
</code></pre>
<p>My Python code: </p>
<pre><code>def Dir = getScriptDir():
    return os.path.dirname(os.path.realpath(__file__)
def getFileList(Dir):
    list = os.listdir(Dir)
    listSize = len(list)
    getFileList() = [list, listSize]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your syntax is incorrect. If I'm reading this correctly, you're trying to get the names of the files in the same directory as the script and print the number of files in that list.</p>
<hr/>
<p>Here's an example of how you might do this (based on the program you gave):</p>
<pre><code>import os

def getFileList(directory = os.path.dirname(os.path.realpath(__file__))):
    list = os.listdir(directory)
    listSize = len(list)
    return [list, listSize]

print(getFileList())
</code></pre>
<hr/>
<p>Output example:</p>
<pre><code>[['program.py', 'data', 'syntax.py'], 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Remember that you need to return variables from a python-function to get their results. </p>
<p>More on how to define your own functions in python: <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow">https://docs.python.org/3/tutorial/controlflow.html#defining-functions</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Your function definitions were incorrect. I have modified the code you provided. You can also consolidate the <code>getScriptDir()</code> functionality into the <code>getFileList()</code> function.</p>
<pre><code>import os

def getFileList():
    dir = os.path.dirname(os.path.realpath(__file__))
    list = os.listdir(dir)
    listSize = len(list)
    fileList = [list, listSize]
    return fileList

print(getFileList())
</code></pre>
<p><strong>Returns: (in my environment)</strong></p>
<pre><code>[['test.py', 'test.txt', 'test2.py', 'test2.txt', 'test3.py', 'test4.py', 'testlog.txt', '__pycache__'], 8]
</code></pre>
<p>Your script functions - including getScriptDir(modified):</p>
<pre><code>import os

def getScriptDir():
    return os.path.dirname(os.path.realpath(__file__))

def getFileList(dir):
    dir = os.path.dirname(os.path.realpath(__file__))
    list = os.listdir(dir)
    listSize = len(list)
    fileList = [list, listSize]
    return fileList


dir = getScriptDir()

print(getFileList(dir))
</code></pre>
</div>
<span class="comment-copy"><code>getFileList() = [list, listSize]</code> does not seems like correct code. Maybe <code>return [list, listSize]</code> ? Also, using camelCase named functions is violates python code standart</span>
<span class="comment-copy">@IlyaBoltnev What is "standart"?</span>
<span class="comment-copy">@IlyaBoltnev can the upper case characters impact my code? it won't work if I don't change it?</span>
<span class="comment-copy">@glglgl i mean pep8, thec code style standart</span>
<span class="comment-copy">@IlyaBoltnev It was meant as a slight hint that standard is written with two "d". Just trying to be a smartass. :-P</span>
<span class="comment-copy">The solution of @ode2k works, too (sorry, I can't comment on your post yet because of my reputation), but the "getScriptDir" function isn't necessary. It's easier to use a keyword argument to set the directory (plus, the function is now re-usable with other directories).</span>
<span class="comment-copy">thank you both, i needed that information also for the rest of the code :)))</span>
