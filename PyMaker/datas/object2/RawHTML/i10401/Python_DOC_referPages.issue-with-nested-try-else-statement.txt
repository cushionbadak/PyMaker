<div class="post-text" itemprop="text">
<p>I am a beginner programmer and am writing a program that converts letter grades to GPA, or GPA to letter grades as entered by the user. I reference two functions to do the conversions in other programs. I am using the try statement to start by assuming it is a letter grade to convert to GPA, and that doesn't work i try the function to convert from GPA to letter grade.</p>
<p>My program works, the only problem is that my else statement always executes, even if I enter something that is not a letter grade or GPA. I am guessing it is something easy that I am not seeing.</p>
<pre><code>#Convert a letter grade to GPA, or GPA to letter grade

from grade_points_to_letter import gpa_converter
from letter_grade_to_grade_point import letter_converter

grade = input('Enter a letter grade or GPA to convert: ')  

while grade != '':
    try:
        grade = grade.upper()
        conversion = letter_converter(grade)
        try:
            conversion = gpa_converter(float(grade))
        except:
            print('You did not enter a valid letter grade or GPA')
    except:
        pass
    else:
        print('Your converted grade is:', conversion)
    grade = input('Enter a letter grade or GPA to convert: ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your inner <code>try-except</code> will swallow any exceptions, which means that even if <code>gpa_converter</code> raises an exception, the outermost <code>try</code> suite will still be 'successful' and thus the <code>else</code> clause will execute. </p>
<p>There are several ways to fix this, but the way that involves the least amount of refactoring would probably be to re-raise the exception in the innermost <code>except</code> clause.</p>
<pre><code>while grade != '':
    try:
        grade = grade.upper()
        conversion = letter_converter(grade)
        try:
            conversion = gpa_converter(float(grade))
        except:
            print('You did not enter a valid letter grade or GPA')
            raise 
    except:
        pass
    else:
        print('Your converted grade is:', conversion)
    grade = input('Enter a letter grade or GPA to convert: ')
</code></pre>
<p>Edit: Okay, based off your comments, what you're actually going for is something like this:</p>
<pre><code>while grade != '':
    grade = grade.upper()

    try:
        conversion = letter_converter(grade)
    except Exception:
        try:
            conversion = gpa_converter(float(grade))
        except Exception:
            print('You did not enter a valid letter grade or GPA')
        else:
            print('Your converted grade is:', conversion)
    else:
         print('Your converted grade is:', conversion)            

    grade = input('Enter a letter grade or GPA to convert: ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use an else statement with try catch. However, checkout how the docs recommends using try catch else. Catch should take an error. You should figure out what kind of error you want to catch. </p>
<p><a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow">https://docs.python.org/3/tutorial/errors.html</a></p>
<p>Another thing you can do is use a debugger to see what you're getting in each block. Just put the following code in the block you want to check out:</p>
<p>import pdb; pdb.set_trace()</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're trying to catch exceptions raised by functions on invalid inputs, probably you would like to rewrite the code to something like this:</p>
<pre><code>while grade != '':
    try:
        grade = grade.upper()
        conversion = letter_converter(grade)
    except:
        try:
            conversion = gpa_converter(float(grade))
        except:
            print('You did not enter a valid letter grade or GPA')
            conversion = None
    if conversion:
        print('Your converted grade is:', conversion)
</code></pre>
<p>Also it is recommended to specify expected exceptions,
for example:</p>
<pre><code>except(TypeError, ValueError):
    pass
</code></pre>
<p>so you won't miss bugs, that you may be not aware of.</p>
</div>
<span class="comment-copy">I don't think an else statement is meant to be used with a try\except statement.</span>
<span class="comment-copy">my (limited) understanding is that the else statement is only supposed to executed if the try statement worked.</span>
<span class="comment-copy">It means your <code>try</code> blocks doesn't throw any error. The only place I can see that might throw an error is in <code>letter_converter</code>; what do you have in there?</span>
<span class="comment-copy">It is just a bunch of if statements (programmed much earlier when i was learning if statements....) if it is not one of the letter grades i put in there it just gives up an error</span>
<span class="comment-copy">My thinking is maybe since the first letter function didn't work it went straight to the second try statement.  Maybe it thinks this successful and the else statement triggers?</span>
