<div class="post-text" itemprop="text">
<p>I have an json array that looks like this:</p>
<pre><code>{
        "inventory": [
            {
                "Name": "katt"
            },
            {
                "Name": "dog"
            }
        ]
}
</code></pre>
<p>And now I want to access this array in a program that I'm creating and remove a element, for example "Name": "dog".
I'm not super familiar with how to work with json in python, but so far I have tried something like this:</p>
<pre><code>import json

jsonfile = open("viktor.json", "r")
jsonObj = json.load(jsonfile)

jsonfile.close()

counter = 0
for item in range(len(jsonObj["inventory"])):
    print(jsonObj["inventory"][counter])
    print(type(jsonObj["inventory"][counter]))
    if jsonObj["inventory"][counter] == argOne:
        print("hej")
counter += 1
</code></pre>
<p>So first I read from the json and stores the data in a variable.
Then I want to loop through the whole variable and see if I can find any match, and if so, I want to remove it. I think I can use a pop() method here or something?
But I can't seem to get my if-statement to work properly since the jsonObj["inventory"][counter] is a dict and argOne is a string.</p>
<p>What can I do instead of this? Or what I'm missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>Making the change suggested by @arvindpdmn (to be more pythonic).</p>
<pre><code>for index, item in enumerate(jsonObj["inventory"]):
    print(item)
    print(type(item))  # Here we have item is a dict object
    if item['Name'] == argOne:  # So we can access their elements using item['key'] syntax
        print(index, "Match found")
</code></pre>
<p>The <code>for</code> loop is responsible to go through the array, which contains <code>dict</code> objects, and for each <code>dict</code> it will create a <code>item</code> variable that we use to try to get a match.</p>
<p><strong>edit</strong>
In order to remove the element if it is in the list, I suggest you to use this:</p>
<pre><code>new_list = []
for item in jsonObj["inventory"]:
    if item['Name'] is not argOne:  # add the item if it does not match
        new_list.append(item)
</code></pre>
<p>This way you will end with the list you want (new_list).</p>
<pre><code># Or shorter.. and more pythonic with comprehensions lists.
new_list = [item for item in jsonObj['inventory'] if item['Name'] is not argOne]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow">filter</a>:</p>
<pre><code>In [11]: import json

In [12]: with open("viktor.json", "r") as f:
    ...:     jsonObj = json.load(f)
    ...:     

In [13]: argOne = 'katt' #Let's say

In [14]: jsonObj['inventory'] = list(filter(lambda x: x['Name'] != argOne, jsonObj['inventory']))

In [15]: jsonObj
Out[15]: {'inventory': [{'Name': 'dog'}]}
</code></pre>
</div>
<span class="comment-copy">I presume the argOne is a name you're looking for in the dict, if so,     <code>if jsonObj["inventory"][counter]['Name'] == argOne:</code> should works.</span>
<span class="comment-copy">Yes, <code>jsonObj["inventory"][counter]</code> will be a dict. If you are comparing value of <code>Name</code>, try this: <code>jsonObj['inventory'][counter]['Name'] == argOne</code>.</span>
<span class="comment-copy">@slackmart it's exactly that I'm looking for. Will try that</span>
<span class="comment-copy">In fact, use of <code>range(len())</code> is not pythonic. Improve it by looping on item: <code>for item in jsonObj['inventory']: ...</code>. Variable <code>counter</code> is not needed.</span>
<span class="comment-copy">@arvindpdmn recommendation is okay, but the syntax will change to <code>if item['Name'] == argOne:</code></span>
<span class="comment-copy">Great thanks mate! Can I also ask how to get the index of the match so I instead of my print("hej")  Kan use the item.pop(x) and remove the element from the object?</span>
<span class="comment-copy">Glad to help you!</span>
<span class="comment-copy">use the enumerate function : <code>for index, item in enumerate(jsonObj["inventory"]) :</code>.</span>
<span class="comment-copy">@TonySuffolk66: <code>enumerate</code> will bring me an index, and the dict element itself, but in this code, I don't see the need to use it.</span>
<span class="comment-copy">change the <code>is not </code> by <code>!=</code> I'm sleepy</span>
<span class="comment-copy">Can you just explain for me hot the line jsonObj['inventory'] = list(filter(lambda x: x['Name'] != argOne, jsonObj['inventory']))  works?</span>
<span class="comment-copy">@anderssinho Please read: <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#filter</a></span>
<span class="comment-copy">Thanks, will do that! :)</span>
