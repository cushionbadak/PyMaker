<div class="post-text" itemprop="text">
<p>So this just blew my mind. I am working on a python code where I create a list, append it to a master list and clear the first list to add some more elements to it. When I clear the first list, even the master list gets cleared. I worked on a lot of list appends and clears but never observed this.</p>
<pre><code>list1 = []
list2 = []
list1 = [1,2,3]
list2.append(list1)
list1
[1, 2, 3]
list2
[[1, 2, 3]]
del list1[:]
list1
[]
list2
[[]]
</code></pre>
<p>I know this happens with appending dictionaries but I did not know how to deal with lists. Can some one please elaborate?</p>
<p>I am using Python2.7</p>
</div>
<div class="post-text" itemprop="text">
<p>Passing a <code>list</code> to a method like <code>append</code> is just passing a <em>reference</em> to the same <code>list</code> referred to by <code>list1</code>, so that's what gets appended to <code>list2</code>. They're still the same <code>list</code>, just referenced from two different places.</p>
<p>If you want to cut the tie between them, either:</p>
<ol>
<li>Insert a copy of <code>list1</code>, not <code>list1</code> itself, e.g. <code>list2.append(list1[:])</code>, or</li>
<li>Replace <code>list1</code> with a fresh <code>list</code> after <code>append</code>ing instead of clearing in place, changing <code>del list1[:]</code> to <code>list1 = []</code></li>
</ol>
<p>Note: It's a little unclear, but if you want the <em>contents</em> of <code>list1</code> to be added to <code>list2</code> (so <code>list2</code> should become <code>[1, 2, 3]</code> not <code>[[1, 2, 3]]</code> with the values in the nested <code>list</code>), you'd want to call <code>list2.extend(list1)</code>, not <code>append</code>, and in that case, no shallow copies are needed; the values from <code>list1</code> at that time would be individually <code>append</code>ed, and no further tie would exist between <code>list1</code> and <code>list2</code> (since the values are immutable <code>int</code>s; if they were mutable, say, nested <code>list</code>s, <code>dict</code>s, etc., you'd need to copy them to completely sever the tie, e.g. with <a href="https://docs.python.org/3/library/copy.html#copy.deepcopy" rel="noreferrer"><code>copy.deepcopy</code></a> for complex nested structure).</p>
</div>
<div class="post-text" itemprop="text">
<p>So basically here is what the code is doing:</p>
<h3>Before delete</h3>
<p><a href="https://i.stack.imgur.com/T41Sv.png" rel="noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/T41Sv.png"/></a></p>
<h3>After deleting</h3>
<p><a href="https://i.stack.imgur.com/uuiDI.png" rel="noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/uuiDI.png"/></a></p>
<p>In short, both lists names are pointing to the same list object.</p>
<p><a href="http://www.pythontutor.com/visualize.html#code=list1%20%3D%20%5B%5D%0Alist2%20%3D%20%5B%5D%0Alist1%20%3D%20%5B1,2,3%5D%0Alist2.append(list1%29%0Adel%20list1%5B%3A%5D&amp;cumulative=false&amp;curInstr=4&amp;heapPrimitives=false&amp;mode=display&amp;origin=opt-frontend.js&amp;py=2&amp;rawInputLstJSON=%5B%5D&amp;textReferences=false" rel="noreferrer">code visualization source</a></p>
</div>
<span class="comment-copy">This might provide some insight: <a href="https://docs.python.org/2/library/copy.html" rel="nofollow noreferrer">docs.python.org/2/library/copy.html</a></span>
