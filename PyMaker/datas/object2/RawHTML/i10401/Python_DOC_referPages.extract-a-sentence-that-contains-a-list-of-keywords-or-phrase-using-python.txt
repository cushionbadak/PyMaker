<div class="post-text" itemprop="text">
<p>I have used the following code to extract a sentence from file(the sentence should contain some or all of the search keywords)</p>
<pre><code>search_keywords=['mother','sing','song']
with open('text.txt', 'r') as in_file:
    text = in_file.read()
    sentences = text.split(".")

for sentence in sentences:
    if (all(map(lambda word: word in sentence, search_keywords))):
        print sentence
</code></pre>
<p>The problem with the above code is that it does not print the required sentence if one of the search keywords do not match with the sentence words. I want a code that prints the sentence containing some or all of the search keywords. It would be great if the code can also search for a phrase and extract the corresponding sentence.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems like you want to count the number of <code>search_keyboards</code> in each sentence. You can do this as follows:</p>
<pre><code>sentences = "My name is sing song. I am a mother. I am happy. You sing like my mother".split(".")
search_keywords=['mother','sing','song']

for sentence in sentences:
    print("{} key words in sentence:".format(sum(1 for word in search_keywords if word in sentence)))
    print(sentence + "\n")

# Outputs:
#2 key words in sentence:
#My name is sing song
#
#1 key words in sentence:
# I am a mother
#
#0 key words in sentence:
# I am happy
#
#2 key words in sentence:
# You sing like my mother
</code></pre>
<p>Or if you only want the sentence(s) that have the most matching <code>search_keywords</code>, you can make a dictionary and find the maximum values:</p>
<pre><code>dct = {}
for sentence in sentences:
    dct[sentence] = sum(1 for word in search_keywords if word in sentence)

best_sentences = [key for key,value in dct.items() if value == max(dct.values())]


print("\n".join(best_sentences))

# Outputs:
#My name is sing song
# You sing like my mother
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly, you should be using <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any()</code></a> instead of <code>all()</code>.</p>
<pre><code>if (any(map(lambda word: word in sentence, search_keywords))):
    print sentence
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So you want to find sentences that contain at least one keyword. You can use <a href="https://docs.python.org/3/library/functions.html?highlight=any#any" rel="nofollow">any()</a> instead of <a href="https://docs.python.org/3/library/functions.html?highlight=all#all" rel="nofollow">all()</a>.</p>
<p>EDIT:
If you want to find the sentence which contains the most keywords:</p>
<pre><code>sent_words = []
for sentence in sentences:
    sent_words.append(set(sentence.split()))
num_keywords = [len(sent &amp; set(search_keywords)) for sent in sent_words]

# Find only one sentence
ind = num_keywords.index(max(num_keywords))
# Find all sentences with that number of keywords
ind = [i for i, x in enumerate(num_keywords) if x == max(num_keywords)]
</code></pre>
</div>
<span class="comment-copy">You mean <code>any()</code> rather than <code>all()</code>?</span>
<span class="comment-copy">suppose the search_keywords are three.... then the code should try to print the sentence containing all keywords...otherwise it should check for the presence of two....otherwise one keyword</span>
<span class="comment-copy">I've written and edited an answer the hopefully answers your question fully</span>
<span class="comment-copy">This code prints several sentences containing any of the search keywords. But what I want is the sentence that contains most of the search keywords as the best answer.</span>
<span class="comment-copy">This will prints several sentences containing any of the search keywords. But what I want is the sentence that contains most of the search keywords as the best answer.</span>
<span class="comment-copy">I edited the code.</span>
