<div class="post-text" itemprop="text">
<p>In my code, user uploads file which is saved on server and read using the server path. I'm trying to delete the file from that path after I'm done reading it. But it gives me following error instead:</p>
<p><code>An error occurred while reading file. [WinError 32] The process cannot access the file because it is being used by another process</code></p>
<p>I'm reading file using <code>with</code>, and I've tried <code>f.close()</code> and also <code>f.closed</code> but its the same error every time.</p>
<p>This is my code:</p>
<pre><code>f = open(filePath)
    with f:
        line = f.readline().strip()
        tempLst = line.split(fileSeparator)

        if(len(lstHeader) != len(tempLst)):
            headerErrorMsg = "invalid headers"
            hjsonObj["Line No."] = 1
            hjsonObj["Error Detail"] = headerErrorMsg
            data['lstErrorData'].append(hjsonObj)
            data["status"] = True

            f.closed
            return data                                                  

    f.closed
</code></pre>
<p>after this code I call the remove function:</p>
<pre><code>os.remove(filePath)
</code></pre>
<p><strong>Edit:</strong> using <code>with open(filePath) as f:</code> and then trying to remove the file gives the same error. </p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of:</p>
<pre><code> f.closed
</code></pre>
<p>You need to say:</p>
<pre><code>f.close()
</code></pre>
<p><code>closed</code> is just a boolean property on the file object to indicate if the file is actually closed.</p>
<p><code>close()</code> is method on the file object that actually closes the file.</p>
<p>Side note: attempting a file delete after closing a file handle is not 100% reliable. The file might still be getting scanned by the virus scanner or indexer.  Or some other system hook is holding on to the file reference, etc...  If the delete fails, wait a second and try again.</p>
</div>
<div class="post-text" itemprop="text">
<p>This</p>
<pre><code>import os

path = 'path/to/file'

with open(path) as f:
  for l in f:
    print l,

os.remove(path)
</code></pre>
<p>should work, with statement will automatically close the file after the nested block of code</p>
<p>if it fails, File could be in use by some external factor. you can use Redo pattern.</p>
<pre><code>while True:
  try:
    os.remove(path)
    break
  except:
    time.sleep(1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use below code:</p>
<pre><code>import os
os.startfile('your_file.py')
</code></pre>
<p>To delete after completion:</p>
<pre><code>os.remove('your_file.py')
</code></pre>
</div>
<span class="comment-copy">Your indentation is wrong. Please fix it. It is relevant. Also, put <code>os.remove(filePath)</code> together with the rest, so that we see its indentation as well. It is also relevant.</span>
<span class="comment-copy">it's even better with <code>with open(filePath) as f:</code>. As soon as <code>f</code> goes out of scope it is closed.</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre I WAS using <code>with open(filePath) as f:</code> before I changed it. It still gives same error. I've tried <code>f.close()</code> too</span>
<span class="comment-copy">Believe me when I say I've tried every available solution including this one</span>
<span class="comment-copy">@TahreemIqbal: What happens if you put a short time delay (eg <a href="https://docs.python.org/3/library/time.html#time.sleep" rel="nofollow noreferrer"><code>time.sleep(1)</code></a>) before attempting to remove the file? Are you <i>certain</i> that the process that originally writes the file to disk has closed the file?</span>
<span class="comment-copy">Editing my answer to show redo pattern</span>
<span class="comment-copy">@PM2Ring <code>with open(path) as f:</code> is supposed to close the file right? I have tried the exact code provided by @Nima and bunch of other solutions too. I don't know why it won't work. But it isn't.</span>
<span class="comment-copy">Yes, once the code leaves the <code>with</code> block the file will be closed. But my 2nd sentence was talking about the <i>server</i> code that writes the file to disk, not the code you use to read the file.</span>
<span class="comment-copy">You should format your code properly</span>
