<div class="post-text" itemprop="text">
<p>I look up in a table if keys have associated arrays, or not. By design, my <code>table.__getitem__()</code> somtimes returns <code>None</code> rather than <code>KeyError</code>-s.  I would like this value to be either <code>None</code>, or the numpy array associated with <code>w</code>.</p>
<pre><code>value = table[w] or table[w.lower()]
# value should be a numpy array, or None
if value is not None:
    stack = np.vstack((stack, value))
</code></pre>
<p>Only if I go with the above code, and the first lookup is a match, I get :</p>
<pre><code>ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
</code></pre>
<p>and if I go with <code>value = table[w].any() or table[w.lower()].any()</code>, then if it's a mismatch, I expectedly bump into :</p>
<pre><code>AttributeError: 'NoneType' object has no attribute 'any'
</code></pre>
<p>I must be missing the correct way to do this, how to do ?</p>
</div>
<div class="post-text" itemprop="text">
<p>IIUC this should work:</p>
<pre><code>value = table[w]
if value is None:
    value = table[w.lower()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if type(value) is numpy.ndarray:
    #do numpy things
else
    # Handle None
</code></pre>
<p>Though the above would work, I would suggest to keep signatures simple and consistent, ie table[w] should always return numpy array. In case of None, return empty array. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3.5/library/stdtypes.html#dict.get" rel="nofollow"><code>dict.get</code></a>.</p>
<blockquote>
<p>Return the value for key if key is in the dictionary, else default. If default is not given, it defaults to None, so that this method never raises a KeyError.</p>
</blockquote>
<pre><code>value = table.get(w, table.get(w.lower()))
</code></pre>
<p>So if <code>table[w]</code> is not there you will get <code>table[w.lower()]</code> and if that's not there you'll get <code>None</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The question is answered, but other folks who encounter this error may want a general solution.  With the idea of being explicit in mind we can use the function <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">isinstance</a>.  Here is a working example.</p>
<pre><code>import numpy as np

a = np.array([1,2,3])
b = None
for itm in [a,b]:
    isinstance(itm,np.ndarray)
</code></pre>
<p>So in the context of the question</p>
<pre><code>value = table[w]
if not isinstance(value,np.ndarray):
    value = table[w.lower()]
</code></pre>
</div>
<span class="comment-copy">Obvious repost of <a href="http://stackoverflow.com/questions/36783921">this other question</a>, because the correct answer there doesn't satisfy my need. I'd want a shorter way than <code>if table[w] is not None: ... elif table[w.lower()] is not None: ... else</code>, if possible.</span>
<span class="comment-copy">@Goyo: <code>v = a or b</code> raises the <code>ValueError</code> if <code>a</code> is an array (not if <code>a</code> is <code>None</code> and <code>b</code> is an array though)</span>
<span class="comment-copy">a = None .... isinstance(a, (type(None)))  # True .... if a is anything else, it will return false.  Obviously only useful to branch between None and if you can guarantee that 'a' will be some incarnation of an array</span>
<span class="comment-copy">@Nikana Your question is not clear. " I would like this value to be either <code>None</code>..." when do you want it to be None? "or the numpy array associated with <code>w</code>" What's the associated array? <code>table[w]</code>? <code>table[w.lower()]</code>? The errors you are getting are to be expected but I do not understand what you want to achieve.</span>
<span class="comment-copy">@Goyo: I want value to be None if table returns none on w, and none on w.lower(). Else, to be the first non-None value (so yes, ideally, table[w]).</span>
<span class="comment-copy">Perfect, thanks.</span>
<span class="comment-copy">so do I have one such block with w and another with w.lower() ? that's quite verbose, isn't it ?</span>
<span class="comment-copy">Ooh, interesting. Though... what happens if the default value is None, does it fail, or accept that ? And why would it default to the default if the first does return something, i.e. None ?</span>
<span class="comment-copy">@NikanaReklawyks Every function in Python implicitly returns <code>None</code> if nothing else is specified: the default value is what is assigned if the first returns <code>None</code></span>
<span class="comment-copy">Note that OP mentioned that their <code>__getitem__</code> implementation won't always raise a <code>KeyError</code>. Also <code>table.get(w.lower())</code> won't be lazily evaluated.</span>
<span class="comment-copy">OP says it <b>sometimes</b> returns <code>None</code> instead of <code>KeyError</code> so I assumed <code>table</code> is just a normal <code>dict</code> filled with numpy arrays and <code>None</code>s. But good point on the laziness.</span>
<span class="comment-copy">Sorry but this has very little to do with the question. The question is about the <code>value = ???</code> part.</span>
<span class="comment-copy">This is the same answer as your accepted answer just more explicit.  The problem is that you cannot check to see if an array == None (the error you observed).  But you can use the is instance that I showed above.  I edited the above comment.</span>
<span class="comment-copy">I can very much check if <code>value == None</code>, that's what the accepted answer does. What I would have loved is a one liner that assigns the first non-None value out of <code>[table[w], table[w.lower()]]</code> if any, or else None. The accepted answer does that perfectly, in 3 lines. I don't understand your contribution.</span>
<span class="comment-copy">using <code>is</code> works in this case, but using == throws the ValueError you saw above.  Good Python code is explicit.  I am showing you how to test if value is an array not if it is None... which is better Python code.  I refer you to the Zen of Python if this is still hard to understand.</span>
