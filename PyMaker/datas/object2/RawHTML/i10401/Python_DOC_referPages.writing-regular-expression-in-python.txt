<div class="post-text" itemprop="text">
<p>I am weak in writing regular expressions so I'm going to need some help on the one. I need a regular expression that match to <code>section 7.01</code> and then <code>(a)</code></p>
<p>Basically with <code>section</code> can be followed by any number like <code>6.1</code>/<code>7.1</code>/<code>2.1</code></p>
<p>Examples:</p>
<pre><code>SECTION 7.01. Events of Default. If any of the following events
("Events of Default") shall occur:
          (a) any Borrower shall fail to pay any principal of any Loan when and
     as the same shall become due and payable, whether at the due date thereof
     or at a date fixed for prepayment thereof or otherwise;
</code></pre>
<p>I am trying to write an regular expression which can give me groups which contains these</p>
<p>Group 1</p>
<pre><code>SECTION 7.01. Events of Default. If any of the following events
("Events of Default") shall occur:
</code></pre>
<p>Group 2</p>
<pre><code>(a) any Borrower shall fail to pay any principal of any Loan when and
     as the same shall become due and payable, whether at the due date thereof
     or at a date fixed for prepayment thereof or otherwise;
</code></pre>
<p>Also there can be more points after <code>(a)</code> like <code>b</code> and so on.</p>
<p>Please help me out in writing an regular expression.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following approach, however, multiple <strong>assumptions</strong> are made. The section headers must begin with <code>SECTION</code> and end with a colon <code>:</code>. Secondly the sub-sections must begin with <em>matching</em> parenthesis', and end with a semi-colon. </p>
<pre><code>import re
def extract_groups(s):
    sanitized_string = ''.join(line.strip() for line in s.split('\n'))
    sections = re.findall(r'SECTION.*?:', sanitized_string)
    sub_sections = re.findall(r'\([a-z]\).*?;', sanitized_string)
    return sections, sub_sections
</code></pre>
<p><strong>Sample Output:</strong></p>
<pre><code>&gt;&gt;&gt; s = """SECTION 7.01. Events of Default. If any of the following events
("Events of Default") shall occur:
          (a) Whether at the due date thereof
     or at a date fixed for prepayment thereof or otherwise;

          (b) Test;
SECTION 7.02. Second section:"""
&gt;&gt;&gt; print extract_groups(s)
(['SECTION 7.01. Events of Default. If any of the following events("Events of Default") shall occur:', 'SECTION 7.02. Second section:'], 
['(a) Whether at the due date thereofor at a date fixed for prepayment thereof or otherwise;', '(b) Test;'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I got this to work:</p>
<pre><code>s = """
SECTION 7.01. Events of Default. If any of the following events
("Events of Default") shall occur:
          (a) any Borrower shall fail to pay any principal of any Loan when and
     as the same shall become due and payable, whether at the due date thereof
     or at a date fixed for prepayment thereof or otherwise;
"""

r = r'(SECTION 7\.01\.[\s\w\.()"]*:)[\s]*(\(a\)[\s\w,]*;)'
mo = re.search(r, s)
print('Group 1: ' + mo.group(1))
print('Group 2: ' + mo.group(2))
</code></pre>
<p>If you wanted to make it generic, so you could grab the any number or section, you could try:</p>
<pre><code>r = r'(SECTION [1-9]\.[0-9]{2}\.[\s\w\.()"]*:)[\s]*(\([a-z]\)[\s\w,]*;)'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In an effort to help you learn, should you have to write another set of regex, I would recommend you check out the docs below:
<a href="https://docs.python.org/3/howto/regex.html#regex-howto" rel="nofollow">https://docs.python.org/3/howto/regex.html#regex-howto</a></p>
<p>This is the "easy" introduction to python regex. Essentially, you're going to define a pattern, and use the above link as a reference to build your pattern as you need it. Then, call the pattern to apply it to whatever needs processing. </p>
</div>
<span class="comment-copy">Can we see what you've tried?</span>
<span class="comment-copy">^(?!().* i was trying to include everything from section till (a) but instead it is skipping ("Events of Default") and including (a)</span>
<span class="comment-copy">i wrote this also -&gt; ^\s*&lt;backslash&gt;(([a-z]|a[a-z]|i[ivx]{0,2}|v[ivx]{0,2}|x[ivx]{0,2})&lt;backslash&gt;) but this is also not giving what i want.</span>
<span class="comment-copy">Hmm, unless you strip away any newlines, and capture as a single string, I would recommend context sensitive parsing that tracks what nested level you are at.</span>
<span class="comment-copy">Its fine, i can strip the newlines but isn't we can give <code>re.M</code> flag in regex to enable multi-line parsing?</span>
<span class="comment-copy">Thank You very much.</span>
<span class="comment-copy">How to modify the sub_section regex if it ends with <code>or</code> keyword instead of <code>;</code> for some?</span>
<span class="comment-copy">Interesting, this complicates the requirements somewhat, what if there are <code>or</code>'s inside of the sub-sections that end with <code>;</code>. With the flattened string that we use here, it is difficult to derive the context of the <code>or</code> (simple word? or end delimiter?).</span>
<span class="comment-copy">I get it what are You saying but what if strings ends in two ways one with <code>;</code> and other with this pattern <code>; or</code>. Then how we can modify the above expression to accommodate this change? I tried these versions -&gt; <code>\([a-z]\).*?;|?or</code> or <code>\([a-z]\).*(?;|?or)</code> but non of them worked</span>
<span class="comment-copy">But what about if i add one more point after <code>a</code>? try adding a point (b) and it should match to that point also in separate group.</span>
<span class="comment-copy">if i write just <code>[\s]*(\([a-z]\)[\s\w,]*;)</code> then it captures all the points <code>(a)</code>, <code>(b)</code> but how to achieve the same thing with section in it?</span>
<span class="comment-copy">You might want to try capturing a section and its points together with the regex, then use a string split to chop out all the points individually</span>
