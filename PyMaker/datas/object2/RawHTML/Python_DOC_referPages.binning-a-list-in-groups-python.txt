<div class="post-text" itemprop="text">
<p>I have a list:</p>
<pre><code> l = [2.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0, 12.0,96.0, 192.0, 480.0, 360.0, 504.0, 300.0]
</code></pre>
<p>I want to group the elements in list in group size difference of <strong>10</strong>. (i.e, 0-10,10-20,20-30,30-40...etc)</p>
<p>For eg:</p>
<p>Output that I'm looking for is: </p>
<pre><code>[ [2,4,5,6,7,8,10],[12],[96],[192],[300],[360],[480],[504] ]
</code></pre>
<p>I tried using:</p>
<pre><code>list(zip(*[iter(l)] * 10))
</code></pre>
<p>But getting wrong answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>itertools.groupby</code> to group together after dividing(//) it by 10</p>
<pre><code>from itertools import groupby
l = [2.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0, 12.0,96.0, 192.0, 480.0, 360.0, 504.0, 300.0]

groups = []
for _, g in groupby(l, lambda x: (x-1)//10):
    groups.append(list(g))      # Store group iterator as a list

print(groups)
</code></pre>
<p>Output:</p>
<pre><code>[[2.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0], [12.0], [96.0], [192.0], [480.0], [360.0], [504.0], [300.0]] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A defaultdict might not be bad for this, it's not in one pass, but you can sort the keys to keep everything in place. The integer divide by 10 will bin everything for you</p>
<pre class="lang-py prettyprint-override"><code>groups = defaultdict(list)

for i in l:
    groups[int((i-1)//10)].append(i)

groups_list = sorted(groups.values())
groups_list[[2.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0], [12.0], [96.0], [192.0], [300.0], [360.0], [480.0], [504.0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Even though, an answer is accepted, here is another way :</p>
<pre><code>l = [2.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0, 12.0,96.0, 192.0, 480.0, 360.0, 504.0, 300.0]
l1 = [int(k) for k in l]
l2 = list(list([k for k in l1 if len(str(k))==j]) for j in range(1,len(str(max(l1))) +1))
</code></pre>
<p><strong>OUTPUT</strong> :</p>
<pre><code>l2 = [[2, 4, 5, 6, 7, 8], [10, 12, 96], [192, 480, 360, 504, 300]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It can be sub listed using dictionary : the key for dict will be value-1/10 if same key comes value will be appended:</p>
<pre><code>gd={}
for i in l:
    k=int((i-1)//10)
    if k in gd:
        gd[k].append(i)
    else:
        gd[k]=[i]
print(gd.values())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can loop over you list l and create a new list using extend and an if condition:</p>
<pre><code>smaller_list = []
larger_list = []
desired_result_list = []

for element in l:
    if element &lt;= 10:
    smaller_list.extend([element])
else:
    larger_list.append([element])

desired_result_list.extend(larger_list + [smaller_list])
</code></pre>
</div>
<span class="comment-copy">try <a href="https://stackoverflow.com/a/8866125/7540911">rounding</a></span>
<span class="comment-copy">It looks like op wants ordered output. so you can sort initial list <code>l</code> to achieve this.</span>
<span class="comment-copy">you could have just done <code>sorted(groups.values())</code> :). I like your answer the best</span>
<span class="comment-copy">@hansolo thanks, I was thinking about that after I submitted and then the edits rolled through</span>
