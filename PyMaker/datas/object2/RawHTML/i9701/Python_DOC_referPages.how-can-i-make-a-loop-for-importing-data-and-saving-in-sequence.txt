<div class="post-text" itemprop="text">
<p>I have a xls file and the first column consist of many rows for example </p>
<pre><code>MN
TN
RMON
BNE
RMGS
HUDGD
YINT
</code></pre>
<p>Then I want to pass each cell (the value of it) to a function </p>
<pre><code>mystruc1 = make_structure("MN")
mystruc2 = make_structure("TN")
mystruc3 = make_structure("RMON")
mystruc4 = make_structure("BNE")
mystruc5 = make_structure("RMGS")
mystruc6 = make_structure("HUDGD")
mystruc7 = make_structure("YINT")
</code></pre>
<p>So each time the value of one cell will go to the function </p>
<p>Then I want to pass the output of it to another function </p>
<pre><code>out = Bio.PDB.PDBIO()
out.set_structure(mystruc1)
out.save( "MN001.pdb" )
out.set_structure(mystruc2)
out.save( "MN002.pdb" )
out.set_structure(mystruc3)
out.save( "MN003.pdb" )
out.set_structure(mystruc4)
out.save( "MN004.pdb" )
out.set_structure(mystruc5)
out.save( "MN005.pdb" )
out.set_structure(mystruc6)
out.save( "MN006.pdb" )
out.set_structure(mystruc7)
out.save( "MN007.pdb" )
</code></pre>
<p>this is how if i do it manually. I want to avoid doing it manually </p>
</div>
<div class="post-text" itemprop="text">
<p>You can construct the filename using str.format, <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">Format String Syntax</a> </p>
<pre><code>&gt;&gt;&gt; filename = '{}{:04}.pdb'
&gt;&gt;&gt; filename.format('MN', 1)
'MN0001.pdb'
&gt;&gt;&gt; filename.format('MN', 352)
'MN0352.pdb'
&gt;&gt;&gt; 
</code></pre>
<p>You can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> while iterating over the sheet's rows to help construct the filename.</p>
<pre><code>import xlrd
filename = '{}{:04}.pdb'
workbook = xlrd.open_workbook('test.xls')
for sheet in workbook.sheets():
    for n, row in enumerate(sheet.get_rows()):
        col_0 = row[0].value
        print filename.format(col_0, n)
</code></pre>
<hr/>
<p>If you only want to iterate over the first column.</p>
<pre><code>for sheet in workbook.sheets():
    for n, value in enumerate(sheet.col_values(0, start_rowx=0, end_rowx=None)):
        print filename.format(value, n)
</code></pre>
<hr/>
<p>Or you can access the cel values directly.</p>
<pre><code>for sheet in workbook.sheets():
    for i in xrange(sheet.nrows):
        rowi_col0 = sheet.cell_value(i, 0)
        print filename.format(rowi_col0, i)
</code></pre>
<hr/>
<p>Once you have extracted a cel's value you can pass it to any function/method - similar to passing the cel value to the str.format method.</p>
<pre><code>mystruc = make_structure(value) 
</code></pre>
<p>To automate processing the cel values, add your process to the loop.</p>
<pre><code>for sheet in workbook.sheets():
    for i in xrange(sheet.nrows):
        rowi_col0 = sheet.cell_value(i, 0)
        #print filename.format(col_0, i)
        my_structure = make_structure(rowi_col0)
        out = Bio.PDB.PDBIO()
        out.set_structure(my_structure)
        out.save(filename.format(rowi_col0, i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't have comment privileges to ask for clarification, so I'm going to answer this best I can and hopefully you can clarify if I'm going in the wrong direction.</p>
<p>From what you wrote, I'm assuming that you have some column, 'MN' and you want to name a bunch of files starting from 'MN001.pdb' all the way to 'MN0xx.pdb' (where xx is the last row you're working with.</p>
<p>One way you can achieve this is by working with a loop that has a counter and iterates with each iteration of your second for loop.</p>
<pre><code>colname = "MN"

for sheet in workbook.sheets():
    counter = 0
    for row in range(sheet.nrows):
        # pass your code here
        counter += 1
        s_counter = str(counter)
        s = ''
        if len(s_counter) &lt; 2:
            s = '0' + s
        elif len(s_counter) &lt; 3:
            s = '00' + s
        ...
        out.save(s + '.pdb')
</code></pre>
</div>
<span class="comment-copy">@nik - now see the edit. -you may want to take the time to work through <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow noreferrer">The Tutorial</a> in the docs and practice the examples?</span>
<span class="comment-copy">@nik, maybe a missing paren on the last line??, sorry but that should have been obvioius.</span>
<span class="comment-copy">@nik You should read about the Format String Syntax in the link I provided and play with it till you are familiar with how it works.  You can pass str.format anything you want, you don't have to pass it the individual cel value - see my first example in the answer.  You can also construct simple strings with the <code>+</code> operator - <code>'foo' + str(004) + '.pdb'</code> but str.format is more flexible, especially when you have an indeterminate number of leading zeroes (or any other character).</span>
<span class="comment-copy">@nik, the row and column indexing is zero based - row zero is the first row in the sheet and column zero is the first column in the sheet.  The values you are passing to the format string look correct if you want the sequence number to start at one instead of zero.</span>
<span class="comment-copy">I liked and accepted your answer. I have one more question to ask. I have a bunch of now data with the .pdb format. I want to convert it to mol2 or sdf or something like this. I found I can use pymol or babel but do you have by any chance an idea how use them? I read their web, I could not figure it out</span>
<span class="comment-copy">Do you want to pass the cell index (as formatted in excel), or pass the value of the cell? I'm not sure what you're asking. By output, do you mean the value of the cell?</span>
