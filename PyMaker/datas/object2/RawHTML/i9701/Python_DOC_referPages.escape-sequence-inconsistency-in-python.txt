<div class="post-text" itemprop="text">
<p>I am using Python 3 and I wanted to see the difference between the raw/real representation and the string representation of using escape sequences for single-quotes and double-quotes, so I created the following script:</p>
<pre><code>raw = "%r" % "\'\""
str = "%s" % "\'\""

print(raw)
print(str)
</code></pre>
<p>print(str) returns (as expected):</p>
<pre><code>'"
</code></pre>
<p>Now I expected the print(raw) to return:</p>
<pre><code>'\'\"'
</code></pre>
<p>However it returns:</p>
<pre><code>'\'"'
</code></pre>
<p>Why is there only one backslash present in the print(raw) statement, shouldn't there be two, as this would reflect value that I have parsed into the formatted string? I'm sorry for the stupid question..</p>
</div>
<div class="post-text" itemprop="text">
<p><code>r</code> doesn't stand for <code>raw</code>, it stands for <code>repr</code>. <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel="nofollow noreferrer">Using <code>%r</code> invokes <code>repr()</code></a> on the object. Quoting the <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr()</code> doc</a>:</p>
<blockquote>
<p>this function makes an attempt to return a string that would yield an object with the same value when passed to eval()</p>
</blockquote>
<p>The source-code strings <code>'\'"'</code> and <code>"\'\""</code> are two representations of  equivalent objects.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>... print(raw) ...</p>
</blockquote>
<p>Nope. The "r" stands for "representation", not "raw". But how the string literal was written is lost as soon as the code is compiled, and cannot be retrieved regardless.</p>
</div>
<span class="comment-copy">You want to create a raw literal: <code>r"\'\""</code></span>
<span class="comment-copy">I see now that they can be seen as equivalent, but do you have any idea why one backslash remained over the other? Or is this a quirk of Python?</span>
<span class="comment-copy">I don't think there is any guarantee which representation is chosen, as long it represents the string object. The two shortest possible representations would be: <code>'\'"'</code> and <code>"'\""</code>. (Remember that <code>'</code> and <code>"</code> are equivalent in Python, unlike Bash or C.) As to why <code>repr()</code> chooses the <code>'...'</code> form over the <code>"..."</code>, I have no idea.</span>
