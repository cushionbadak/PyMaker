<div class="post-text" itemprop="text">
<p>Hi I am new to using pandas coming from a SAS background and I am trying to segment a continuous variable into bands using the following code. </p>
<pre><code>var_range = df['BILL_AMT1'].max() - df['BILL_AMT1'].min()
a= 10
for i in range(1,a):
    inc = var_range/a
    lower_bound = df['BILL_AMT1'].min() + (i-1)*inc
    print('Lower bound is '+str(lower_bound))
    upper_bound = df['BILL_AMT1'].max() + (i)*inc
    print('Upper bound is '+str(upper_bound))
    if (lower_bound &lt;= df['BILL_AMT1'] &lt; upper_bound):
        df['bill_class'] = i
    i+=1
</code></pre>
<p>I am expecting the code to check if the value of <code>df['BILL_AMT1']</code> is within the current loops boundings and set a <code>df['bill_class']</code> accordingly.</p>
<p>I get the following error:</p>
<pre><code>ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
</code></pre>
<p>I think that the if condition is evaluating correctly but the error is due to assigning a new column a value of the for loops counter. </p>
<p>Can anyone explain what is going wrong or suggest an alternative.</p>
</div>
<div class="post-text" itemprop="text">
<p>To avoid the <code>ValueError</code>, change</p>
<pre><code>if (lower_bound &lt;= df['BILL_AMT1'] &lt; upper_bound):
    df['bill_class'] = i
</code></pre>
<p>to</p>
<pre><code>mask = (lower_bound &lt;= df['BILL_AMT1']) &amp; (df['BILL_AMT1'] &lt; upper_bound)
df.loc[mask, 'bill_class'] = i
</code></pre>
<hr/>
<p>The <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">chained comparison</a> <code>(lower_bound &lt;= df['BILL_AMT1'] &lt; upper_bound)</code> is equivalent to </p>
<pre><code>(lower_bound &lt;= df['BILL_AMT1']) and (df['BILL_AMT1'] &lt; upper_bound)
</code></pre>
<p>The <code>and</code> operator causes the two boolean Series <code>(lower_bound &lt;= df['BILL_AMT1'])</code>,  <code>(df['BILL_AMT1'] &lt; upper_bound)</code> to be evaluated in a boolean context -- i.e. reduced to a single boolean value. Pandas <a href="http://pandas.pydata.org/pandas-docs/stable/gotchas.html#using-if-truth-statements-with-pandas" rel="nofollow noreferrer">refuses to reduce</a> Series to a single boolean value.</p>
<p>Instead, to return a boolean Series, use the <code>&amp;</code> operator instead of <code>and</code>:</p>
<pre><code>mask = (lower_bound &lt;= df['BILL_AMT1']) &amp; (df['BILL_AMT1'] &lt; upper_bound)
</code></pre>
<p>and then to assign values to the <code>bill_class</code> column where <code>mask</code> is True, use <code>df.loc</code>:</p>
<pre><code>df.loc[mask, 'bill_class'] = i
</code></pre>
<hr/>
<p>To bin the data in <code>df['BILL_AMT1']</code>, you could remove the Python <code>for-loop</code> entirely, and as <a href="https://stackoverflow.com/questions/40854269/looping-if-statements-for-each-row-in-a-dataframe-in-pandas/40854439?noredirect=1#comment68925683_40854439">DSM suggests</a>, use <code>pd.cut</code>:</p>
<pre><code>df['bill_class'] = pd.cut(df['BILL_AMT1'], bins=10, labels=False)+1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>IIUC, this should be the fix to your code:</p>
<pre><code>mx, mn = df['BILL_AMT1'].max(), df['BILL_AMT1'].min()
rng = mx - mn
a = 10

for i in range(a):
    inc = rng / a
    lower_bound = mn + i * inc
    print('Lower bound is ' + str(lower_bound))
    upper_bound = mn + (i + 1) * inc if i + 1 &lt; a else mx
    print('Upper bound is ' + str(upper_bound))
    ge = df['BILL_AMT1'].ge(lower_bound)
    lt = df['BILL_AMT1'].lt(upper_bound)
    df.loc[ge &amp; lt, 'bill_class'] = i
</code></pre>
<hr/>
<p><strong><em>however</em></strong><br/>
I'd do this</p>
<pre><code>df['bill_class'] = pd.qcut(df['BILL_AMT1'], 10, list(range(10)))
</code></pre>
</div>
<span class="comment-copy">@DSM: Yes, totally my mistake.</span>
<span class="comment-copy">Much better. :-)  Although we should probably recommend one of the vectorized ways (whether pd.cut or np.digitize -- I see you've already got at least one pd.cut answer to cite..)</span>
<span class="comment-copy">Thanks. I ended up using the method @DMS suggested as i don't really understand the .loc and mask stuff fully.</span>
