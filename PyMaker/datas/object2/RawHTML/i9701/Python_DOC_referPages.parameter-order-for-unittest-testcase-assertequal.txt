<div class="post-text" itemprop="text">
<p>Is it <code>assertEqual(actual, expected)</code> or <code>assertEqual(expected, actual)</code>?</p>
<p>On the one hand I'm seeing lots of code using <code>assertEqual(actual, expected)</code>. This includes <a href="https://docs.python.org/3/library/unittest.html#basic-example" rel="noreferrer">examples in the unittest docs</a> and <a href="https://docs.djangoproject.com/en/1.10/topics/testing/overview/#writing-tests" rel="noreferrer">examples in the Django docs</a>.</p>
<p>However, this test <code>assertEqual('foo', 'bar')</code> is giving me the output</p>
<pre><code>- foo
+ bar
</code></pre>
<p>Which happens to be the same as for a PHPUnit test with <code>assertEquals( 'foo', 'bar' );</code></p>
<pre><code>-'foo'
+'bar'
</code></pre>
<p>And PHPUnit has <code>$expected</code> as first parameter, followed by <code>$actual</code>. This diff is also what I'd expect for <code>expected, actual</code>.</p>
<p>So is all this Python code I'm seeing doing it wrong?</p>
<p>I checked the definition of the unittest method, though that has the extremely helpful <code>first, second</code> parameter names.</p>
</div>
<div class="post-text" itemprop="text">
<p>As per the <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual" rel="nofollow noreferrer"><code>assertEqual</code></a> document:</p>
<blockquote>
<p>Test that <strong>first and second are equal</strong>. If the values do not compare equal, the test will fail.</p>
</blockquote>
<p>So, you may put expected and actual at any place and it will return the same result. But it is the common practice to use <em>actual</em> result as the first argument and <em>expected</em> result as the second argument.  It is also demonstrated in <a href="https://docs.python.org/3/library/unittest.html#basic-example" rel="nofollow noreferrer">Python 3's Unittest Example</a>:</p>
<pre><code>s = 'hello world'
self.assertEqual(s.split(), ['hello', 'world'])
</code></pre>
</div>
