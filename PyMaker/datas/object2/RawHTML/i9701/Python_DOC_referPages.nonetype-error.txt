<div class="post-text" itemprop="text">
<p>I'm new to Python, I've looked at other code but have no idea how to remove the nonetype error from mine,</p>
<pre><code>tutorial = input("Do you want to do the tutorial? 1 is yes and 0 is no, this will be the same for everything")
if tutorial &lt;1:
    print("That isn't valid")
if tutorial&gt;0:
    print("That isn't valid")
if tutorial == 1:
    print("In battle you can use either sword, magic or items. Sword damage will be between your minimum and maximum damage, magic will be constant and can be used to heal or attack, items can be used to boost attack, restore health or armour")
</code></pre>
<p>I get this error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;string&gt;", line 250, in run_nodebug
  File "C:\Users\Bas\Desktop\Game.py", line 50, in &lt;module&gt;
    tutorial = input("Do you want to do the tutorial? 1 is yes and 0 is no, this will be the same for everything")
TypeError: 'NoneType' object is not callable
</code></pre>
<p>Heres the full code:</p>
<pre><code>playerhealth = 100
playerlow = 10
playerhigh = 30
playerarmour = 50
playermagic = 20
level = 0
xptonextlevel = 200
itemuse = 0

rookhealth = 100
rooklow = 10
rookhigh = 20
rookarmour = 100

medichealth = 150
mediclow = 10
medichigh = 30
medicarmour = 50

rushhealth = 20
rushlow = 10
rushhigh = 10
rusharmour = 30

drillerhealth = 30
drillerlow = 50
drillerhigh = 80
drillerarmour = 20

dragonhealth = 200
dragonlow = 150
dragonhigh = 250
dragonarmour = 150
dragonmagic = 100
dragonl = 45

godhealth = 300
godlow = 250
godhigh = 350
godarmour = 250
godmagic = 200
godl = 50

magehealth = 100
magearmour = 0
magemagic = 50
magel = 10

tutorial = input("Do you want to do the tutorial? 1 is yes and 0 is no, this will be the same for everything")
if tutorial &lt;1:
    print("That isn't valid")
if tutorial&gt;0:
    print("That isn't valid")
if tutorial == 1:
    print("In battle you can use either sword, magic or items. Sword damage will be between your minimum and maximum damage, magic will be constant and can be used to heal or attack, items can be used to boost attack, restore health or armour")

se = input("Input 1 for story or 0 for endless")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You get this error because the identifier <code>input</code> has been assigned the value <code>None</code>. Somewhere in your code, the following line must have been executed.</p>
<pre><code>input = None
</code></pre>
<p><code>NoneType</code> is the type of the singleton constant <a href="https://docs.python.org/3/library/constants.html#None" rel="nofollow noreferrer"><code>None</code></a>.
You will get the same error if you try to do this:</p>
<pre><code>&gt;&gt;&gt; None("Do you want to do the tutorial?")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'NoneType' object is not callable
</code></pre>
<p>Python does not prevent you from overriding built-in functions with new values. Sometimes it can be useful to redefine for instance the function <code>print</code>. But in normal circumstances it's a bad idea to use <code>input</code>, <code>list</code>, <code>int</code> etc. as variable names, since that can cause bugs such as this one.</p>
<p>You can reduce the likelyhood of accidentaly overwriting an identifier by using a dictionary instead of declaring a very long list of variables.</p>
<pre><code>gamestate = {
    'playerhealth': 100,
    'playerlow': 10,
    'playerhigh': 30,
    'input': None,
    'else': 42,
    ...
</code></pre>
<p>You can use any string as a dictionary key without worrying about shadowing built-ins.</p>
</div>
<span class="comment-copy">Do you have a variable called input?</span>
<span class="comment-copy">Is that <i>all</i> your code? Because it seems like you must have done something to your <code>input</code> function. Maybe you assigned input to something somewhere in the rest of your code, and you ultimately are shadowing the <i>builtin</i> <code>input</code>.</span>
<span class="comment-copy">@idjaw i just added all of it</span>
<span class="comment-copy">@Llione Can't replicate. Something is going on in your environment. You must have done something that is still affecting your environment.</span>
<span class="comment-copy">@marts: <code>input</code> exists in Python 2, it's just always wrong (it's equivalent to <code>eval(input(...))</code> on Python 3). On Python 2, you need to use <code>raw_input</code> to avoid implicitly <code>eval</code>-ing the string entered by the user.</span>
