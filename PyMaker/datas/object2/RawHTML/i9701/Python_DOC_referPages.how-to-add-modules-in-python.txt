<div class="post-text" itemprop="text">
<p>In Java, we have a main class who calls the classes and methods when needs. I'm trying to build a Python app with the same style: main file and few .py files with extra functionality.</p>
<p>I can import those files using</p>
<pre><code>import &lt;filename without .py&gt;
</code></pre>
<p>What if I want to put all those files into a <code>lib</code> folder? I want to build a package for PyPI with my app.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>app/
  main.py
  lib/
    __init__.py
    foo.py
    bar.py

#main.py
from lib import foo
foo.SomeClass()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, place a <code>__init__.py</code> in the directory the modules are in. Then - if your directory's name is <code>lib</code> - <code>import</code> your file like below from your main file.</p>
<pre><code>import lib.foo
lib.foo.hello() # Calls the hello() function in the lib/foo.py file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Place all Python files into your lib directory then also add a file called <code>__init__.py</code> in that directory. This file is to be left empty.</p>
<ol>
<li>Create a directory: <code>mkdir lib</code></li>
<li>Create an empty file in this directory: <code>touch __init__.py</code></li>
<li>Create the other modules you want to include in your package in this
same directory</li>
<li><p>In your shell (e.g. bash) add <code>lib</code> to your <code>$PYTHONPATH</code>:</p>
<p><code>export PYTHONPATH="$PYTHONPATH:/path/to/lib"</code></p></li>
<li><p>import all modules in <code>lib</code>: Be sure to be one directory level above <code>lib</code>, then: <code>&gt;&gt;&gt; from lib import *</code></p></li>
</ol>
</div>
<span class="comment-copy">I don't get your question. You can put files wherever you want. You can create folders (which is pretty much the same as package in Python) wherever you want. You then define <code>setup.py</code> file and you can gather all files into one package format (wheel or whatever).</span>
<span class="comment-copy">Basic packaging tips from docs: <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html#packages</a>  Is that what you look for?</span>
<span class="comment-copy">I guess it may works... Thanks.</span>
<span class="comment-copy">I tried your solution few days ago, and it doesn't works... I tried it now, and it works. Python is magic. Thanks!</span>
<span class="comment-copy">It is the magic :)</span>
<span class="comment-copy">your answer would be better if you included an example.</span>
<span class="comment-copy">Your answer seems good, but please, include an example ;-)</span>
