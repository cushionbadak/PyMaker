<div class="post-text" itemprop="text">
<p>I have two inputs lists <code>a</code> and <code>b</code> and a function which takes two inputs, let's say</p>
<pre><code>def f(x, y): return x*y
</code></pre>
<p>How do I use <code>map()</code> for this setup? I tried</p>
<pre><code>map(f, zip(a,b))
</code></pre>
<p>and got </p>
<blockquote>
<p>TypeError: f() takes exactly 2 arguments (1 given)</p>
</blockquote>
<p>It makes sense because I need to unpack the zipped input. How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>map</code> doesn't unpack the iterables as your function argument, but instead as a more general way for dealing with such problems you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.starmap" rel="noreferrer"><code>starmap()</code></a> function from <code>itertools</code> module which should be used instead of <code>map()</code> when argument parameters are already grouped in tuples from a single iterable:</p>
<pre><code>from itertools import starmap

starmap(f, zip(a,b))
</code></pre>
<p>Here is an example:</p>
<pre><code>In [2]: a = range(5)

In [3]: b = range(5, 10)

In [7]: from itertools import starmap

In [8]: list(starmap(f, zip(a,b)))
Out[8]: [0, 6, 14, 24, 36]
</code></pre>
<p>As another option your can just pass the iterables to map separately without zipping them.</p>
<pre><code>In [13]: list(map(mul, a, b))
Out[13]: [0, 6, 14, 24, 36]
</code></pre>
<p>Also as a more pythonic way for multiplying two variable you can use <code>operator.mul()</code> instead of creating a custom function:</p>
<pre><code>In [9]: from operator import mul

In [10]: list(starmap(mul, zip(a,b)))
Out[10]: [0, 6, 14, 24, 36]
</code></pre>
<p>Here is the benchmark:</p>
<pre><code>In [11]: %timeit list(starmap(mul, zip(a,b)))
1000000 loops, best of 3: 838 ns per loop

In [12]: %timeit list(starmap(f, zip(a,b)))
1000000 loops, best of 3: 1.05 Âµs per loop
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <strong>lambda</strong> function to handle this situation where: </p>
<pre><code>Map(lambda (x,z): function(x,z), zip(listA, listB))
</code></pre>
<p>I know this is an old post but probably will help somebody else in future.</p>
<p>PD: Sorry any typo I'm from my phone.</p>
</div>
<span class="comment-copy"><code>map(f, a, b)</code>.</span>
<span class="comment-copy"><code>def f(x): return x[0]*x[1]</code></span>
