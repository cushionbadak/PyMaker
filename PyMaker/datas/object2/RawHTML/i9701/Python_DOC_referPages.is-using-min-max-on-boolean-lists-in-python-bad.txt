<div class="post-text" itemprop="text">
<p>So I have a condition I want to happen only when all items in a list evaluate to true. An example of this might be something like a list of functions which return a boolean (not actually my situation but easier to explain):</p>
<pre><code>def foo():
    # do something
def bar():
    # do something
def baz():
    # do something

fncs = [foo, bar, baz]
if &lt;every element in [fnc() for fnc in fncs] evaluates to true&gt;:
    # do something
</code></pre>
<p>I know I can definitely do this:</p>
<pre><code>all_true = True
for fnc in fncs:
    if not fnc():
        all_true = False
if all_true:
    # do something
</code></pre>
<p>But, I was wondering if this is poor form:</p>
<pre><code>if min([fnc() for fnc in fncs]):
    # do something
</code></pre>
<p>Alternatively, I could try to select all false elements during list comprehension and check whether the list is occupied (this works because bool(arr) where arr is a list returns False if and only if arr is empty):</p>
<pre><code>if not [None for fnc in fncs if not fnc()]:
    # do something
</code></pre>
<p>I feel like the "min" is a lot cleaner than the last method, and while the first one is easiest to understand for novices it should be pretty clear what's going on. I could alternately make it clearer through aliasing:</p>
<pre><code>all_true = min
if all_true([fnc() for fnc in fncs]):
    # do something
</code></pre>
<p>I'm sure I missed other ways to do this as well. I'm wondering what method would be most desirable.</p>
<p>Thanks for the help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>min</code> is not "bad", but it <em>is</em> unclear what you are trying to do and will do unnecessary work. You should use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">all</a> instead.</p>
<pre><code>if all(fnc() for fnc in fncs):
    # do something
</code></pre>
<p>This will return <code>True</code> if all values are <code>True</code>, and <code>False</code> otherwise.  It has the added benefit of quitting early if any value is <code>False</code>, unlike <code>min</code> which must run through the entire sequence at least once.</p>
<p>If you find that you need to evaluate if the are all <code>False</code>, I recommend <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">any</a> (well, <code>not any(...)</code>, specifically) which has a similar "quit as soon as possible" behavior.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're probably looking for <strong><a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">all</a></strong> built-in function:</p>
<pre><code>print all(f() for f in [foo, bar, baz])
</code></pre>
</div>
<span class="comment-copy">Most languages have an <code>every</code> function that checks if every item in the list satisfies a predicate. I imagine python has such a function.</span>
<span class="comment-copy">Use the <code>all</code> function to see if everything in an iterable is true.</span>
<span class="comment-copy">There is also <code>any</code> which checks if any of the items in an iterable are true</span>
<span class="comment-copy">Here's a list of pythons built in functions: <a href="https://docs.python.org/3/library/functions.html#built-in-functions" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#built-in-functions</a></span>
<span class="comment-copy">Any reason why you can't use <code>foo() and bar() and baz()</code>?</span>
