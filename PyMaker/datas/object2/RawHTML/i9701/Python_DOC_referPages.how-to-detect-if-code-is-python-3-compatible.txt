<div class="post-text" itemprop="text">
<p>I'm doing static code analysis using openstack/bandit. Do have a lot of repositories, some of those are in python 2 other in python 3. How can I detect if code is syntactically compatible with python 3 without running the code.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's one thing you might want to do. I think it's the easiest way you can know if code is compatible at least syntaxically.</p>
<p>Have a python3 program load the python modules (without executing them). If the code is compatible, it will load the module, if it isn't... it will raise a syntax error.</p>
<p>Use the <code>ast</code> module.</p>
<pre><code>def test_source_code_compatible(code_data):
    try:
        return ast.parse(code_data)
    except SyntaxError as exc:
        return False

ast_tree = test_source_code_compatible(open('file.py').read())
if not ast_tree:
    print("File couldn't get loaded")
</code></pre>
<p>If the code can't be loaded it will raise a <code>SyntaxError</code> error.</p>
<p>Documentation of the <a href="https://docs.python.org/2/library/ast.html" rel="noreferrer">Ast Module</a></p>
<p>If the abstract syntax tree can't be loaded, then you may have to check for python2 methods that don't exists in python3 or methods that changed their behaviour. </p>
<p>For example the division in python3 and python2 works differently. In python2, the division divide in integers so the result of a division will be different if you don't use the same division scheme. In that case, you'll have to look if the module is importing <code>from __future__ import division</code> to have the same behaviour in python2 and python3.</p>
<p>Here's an exhaustive list of things that you might want to handle:</p>
<p><a href="http://python-future.org/compatible_idioms.html" rel="noreferrer">http://python-future.org/compatible_idioms.html</a></p>
<p>Loading the ast of the module will give you right away things that absolutely can't work.. but knowing if code that can be parsed will work in python3 is subject to many false positive. It's hard even impossible to accurately detect if code will actually work 100% in python2 and 3 without actually running it and comparing the results.</p>
</div>
<div class="post-text" itemprop="text">
<p>Basic validation would be if the 2to3 tool prints any diffs (s. <a href="https://docs.python.org/3/library/2to3.html" rel="noreferrer">https://docs.python.org/3/library/2to3.html</a> for basic usage)</p>
<p>on a simple file like a.py:</p>
<pre><code>import urllib2

print "printing something"
</code></pre>
<p>you'd get:</p>
<p><code>&gt; 2to3 a.py</code></p>
<pre><code>RefactoringTool: Skipping optional fixer: buffer
RefactoringTool: Skipping optional fixer: idioms
RefactoringTool: Skipping optional fixer: set_literal
RefactoringTool: Skipping optional fixer: ws_comma
RefactoringTool: Refactored a.py
--- a.py    (original)
+++ a.py    (refactored)
@@ -1,4 +1,4 @@
-import urllib2
+import urllib.request, urllib.error, urllib.parse

-print "printing something"
+print("printing something")

RefactoringTool: Files that need to be modified:
RefactoringTool: a.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://www.jetbrains.com/pycharm/" rel="nofollow noreferrer">Pycharm</a> IDE for this. Just open the python files in the pycharm editor, it will show warnings if the code is not compatible to Python2 or Python3.</p>
<p>Here is the screenshot where it shows print command syntax warning.
<a href="https://i.stack.imgur.com/LMM4W.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/LMM4W.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the "compileall" module like so:</p>
<pre><code>python3.6 -m compileall -q .
</code></pre>
<p>Modify appropriately for the python version you want to use.</p>
<p>Python3 (since 3.something) puts compiled modules into a <code>__pycache__</code> directory, with a arch-specific extension, so they won't conflict with Python2 or other Python3 versions.</p>
<p>The given command will just show errors, and will recurse from the current directory. Use <code>python3.6 -m compileall --help</code> to reveal ALL the OPTIONS.</p>
</div>
<span class="comment-copy">If the code is compatible, it will load the module and execute all of the top-level code in that module.</span>
<span class="comment-copy">@vaultah that's ridiculous. Didn't I write <i>without executing them</i> ?</span>
<span class="comment-copy">Maybe you should write how you'd load them.</span>
<span class="comment-copy">@StefanPochmann well it's written in the answer.</span>
<span class="comment-copy">@Lo√ØcFaure-Lacroix It's somewhat written <i>now</i>, not originally. And you still don't show how <code>code_data</code> came to be.</span>
<span class="comment-copy">;-) Same idea, I just can't post answers for some reason. :D +1</span>
<span class="comment-copy">I think that would give a lot of false answers when fed Python 3 code. For example I just tried it and it wants to replace <code>print(42)</code> with <code>print((42))</code>, ouch. So you'd see a diff and think it's Python 2?</span>
<span class="comment-copy">@StefanPochmann just verified that, it seems to interpret it (wrongly) as a tuple. <code>print ("testing")</code> is not being modified</span>
<span class="comment-copy">Could it be the case that 2to3 assumes that input code is always in python2?</span>
<span class="comment-copy">That could very well be the case.  The link in this question is called <code>25.4. 2to3 - Automated Python 2 to 3 code translation</code> -  <a href="https://docs.python.org/2/library/2to3.html" rel="nofollow noreferrer">docs.python.org/2/library/2to3.html</a></span>
<span class="comment-copy">Minimum Individual cost is $89/year.</span>
<span class="comment-copy">@SDsolar this future <a href="https://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html" rel="nofollow noreferrer">supported in community edition</a></span>
