<div class="post-text" itemprop="text">
<p>I am tying to concatenate all mpeg files together in one new file in windows 7, I adjusted the environment variables and running the code from python shell but it gives invalid syntax. Any help as I am new to Python and ffmpeg library?</p>
<p>My code:</p>
<pre><code>ffmpeg -f concat -i &lt;(for f in glob.glob("*.mpeg"); do echo "file '$PWD/$f'"; done) -c copy output.mpeg
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Your example code is mix or <code>Python</code> code and <code>Bash</code> code so it can't run in <code>Python Shell</code> nor in <code>Bash Shell</code> :)</p>
<p>On Linux it works in <code>Bash</code> as two commands:<br/>
(<em>Windows probably doesn't have <code>printf</code> command</em>)</p>
<pre><code>printf "file '%s'\n" *.wav &gt; input.txt 

ffmpeg -f concat -i input.txt -c copy output.mpeg
</code></pre>
<p><code>Python</code> version which doesn't need <code>Bash</code>:</p>
<pre><code>#!/usr/bin/env python3

import os
import sys
import glob
import subprocess

# get Current Working Directory (CWD)
pwd = os.getcwd()

# get list of files 
if len(sys.argv) &gt; 1:
    #filenames = sys.argv[1:] # Linux
    filenames = glob.glob(sys.argv[1]) # Windows
else:
    filenames = glob.glob("*.mpg")

#print(filenames)

# generate "input.txt" file
with open("input.txt", "w") as f:
    for name in filenames:
        f.write("file '{}/{}'\n".format(pwd, name))
        #f.write("file '{}'\n".format(name))

# run ffmpeg 
subprocess.run('ffmpeg -f concat -i input.txt -c copy output.mpeg', shell=True)
</code></pre>
<p>And you can run it with or without argument ie. <code>"*.wav"</code></p>
<pre><code>python script.py *.wav
</code></pre>
<p>(tested only on Linux)</p>
<hr/>
<p><code>printf</code> (and other <code>Bash</code> commands) for Windows: <a href="http://gnuwin32.sourceforge.net/packages/coreutils.htm" rel="nofollow noreferrer">GnuWin32</a></p>
<p>More on <a href="http://gnuwin32.sourceforge.net/" rel="nofollow noreferrer">GnuWin32</a></p>
</div>
<span class="comment-copy">it is not Python code so why do you run it in Python Shell ? It is Bash code so run it in Bash console/terminal.</span>
<span class="comment-copy">@furas thanks for your reply. I found similar code in the ffmpeg library,where shall I run it, could you please help me?</span>
<span class="comment-copy">Do you use Linux (or Mac) ? Do you know what Bash is ?</span>
<span class="comment-copy">I am using windows 7</span>
<span class="comment-copy">where did you get this code - it looks like mix of Python code (<code>for... glob()</code>) with <code>Bash</code> code. <code>Bash</code> needs rather <code>for f in "*.mpeg";</code> But to run it on Windows you will need some <code>Bash</code> - ie. <code>Cygwin</code>. So maybe better use python only to run <code>for ... glob</code> and save result in file and later use this file with <code>ffmpeg</code> in <code>cmd.exe</code>. And then you will no need <code>Bash</code></span>
<span class="comment-copy">Thanks a lot for your reply. But it shows an error: Traceback (most recent call last):   File "C:\Users\SMH\Desktop\files\myscript.py", line 37, in &lt;module&gt;     subprocess.run('ffmpeg -f concat -i input.txt -c copy output.mpeg', shell=True) AttributeError: 'module' object has no attribute 'run' Any help?</span>
<span class="comment-copy">what python version do you use ? Python 2 ?</span>
<span class="comment-copy">Try <code>call</code> instead of <code>run</code> - more <a href="https://docs.python.org/3/library/subprocess.html#call-function-trio" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html#call-function-trio</a></span>
<span class="comment-copy">Great, no error is showing up but there no output file, no sure why?</span>
<span class="comment-copy">did you get <code>input.txt</code> file ? Check what you have inside. And then run <code>ffmpeg -f concat -i input.txt -c copy output.mpeg</code> in cmd.exe to see messages - maybe there are errors ie. you need install codec, or system can't find <code>ffmeg</code>,  etc.</span>
