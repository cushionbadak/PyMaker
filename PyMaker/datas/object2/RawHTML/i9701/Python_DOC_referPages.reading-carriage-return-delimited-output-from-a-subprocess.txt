<div class="post-text" itemprop="text">
<p>I need to read output, line by line, of a program that uses carriage returns (<code>\r</code>) to make its output. The program runs for a long time, so I need to read the output as the program runs. I know how to do this when each item of output appears on a new line (as detailed <a href="https://stackoverflow.com/questions/8980050/persistent-python-subprocess">here</a>), but I can't seem to get it to work with carriage returns.</p>
<p>Here is the code I used to try and get it to work (run on a linux system)</p>
<pre><code>import subprocess

command = ["printf", "".join(["Return count: " + str(x) + "\\r" for x in range(10)]) + "\n"]
proc = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
buf = bytearray()
out = proc.stdout
while True:
    c = out.read()
    if c == b"":
        break
    if c == "\r":
        print(buf)
        buf = bytearray()
    else:
        buf += c

print("Done")
</code></pre>
<p>However the code simply exits immediately, printing <code>Done</code>.</p>
<p>I want the code to print:</p>
<pre><code>Return code: 1
Return code: 2
Return code: 3
</code></pre>
<p>etc. What do I need to modify to get this to work?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to get byte by byte you need to pass a number of bytes to get to <a href="https://docs.python.org/3/library/io.html#io.RawIOBase.read" rel="nofollow noreferrer"><code>read</code> method</a>:</p>
<pre><code>c = out.read(1)
</code></pre>
<p>Otherwise, it will read whole content.</p>
</div>
<span class="comment-copy">That was it. Thanks! I'll accept very shortly.</span>
<span class="comment-copy">To read the output line-by-line, wouldn't one want to use <code>for line in out:</code>?</span>
<span class="comment-copy">@martineau Because it's delimited by carriage returns not newlines. You know how some terminal programs (like apt-get's progress bar) update the line in place. I'm dealing with a program that does that.</span>
