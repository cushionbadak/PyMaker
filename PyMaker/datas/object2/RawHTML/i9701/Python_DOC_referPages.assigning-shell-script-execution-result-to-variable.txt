<div class="post-text" itemprop="text">
<p>I have shell script. Which has :</p>
<pre><code>./dtapi get_probability decision_tree simulated_diabetes_incidence_data_new.txt  AGE 70 weight 34 height 5.5 sex 0 ds1 34
</code></pre>
<p>Now I am trying to execute this shell script withing python script and store the result into some variable. test.py contains -</p>
<pre><code>import os, sys
result = os.system("sh cmd_dtapi.sh")
print "Result is : ", result
</code></pre>
<p>But it behaves like this:</p>
<pre><code>python test.py 
{"risk_of_disease":"2.122e-314"}Result is :  0
</code></pre>
<p>Result get printed directly, assignment takes <code>0</code> .</p>
<p>How can I store the result into some variable?</p>
<p><strong>Update</strong></p>
<p>After following answer - </p>
<pre><code>import subprocess
import json
result_process_output = subprocess.check_output("sh cmd_dtapi.sh")
result_json = json.loads(result_process_output)
result = result_json["risk_of_disease"]
print "Result is : ", result    
</code></pre>
<p>Gives</p>
<pre><code>Traceback (most recent call last):
  File "test.py", line 3, in &lt;module&gt;
    result_process_output = subprocess.check_output("sh cmd_dtapi.sh")
  File "/usr/lib/python2.7/subprocess.py", line 566, in check_output
    process = Popen(stdout=PIPE, *popenargs, **kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1327, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/os.html#os.system" rel="nofollow noreferrer">Here</a> is despcription of <code>os.system()</code>:</p>
<blockquote>
<p>Execute the command (a string) in a subshell. This is implemented by calling the Standard C function system(), and has the same limitations. Changes to sys.stdin, etc. are not reflected in the environment of the executed command. If command generates any output, it will be sent to the interpreter standard output stream.</p>
</blockquote>
<p>Which means, that your shell prints <code>{risk_of_disease":"2.122e-314"}</code> to standard output.</p>
<p>As for <code>os.system()</code> returning <code>0</code>:</p>
<blockquote>
<p>On Windows, the return value is that returned by the system shell after running command. The shell is given by the Windows environment variable COMSPEC: it is usually cmd.exe, which returns the exit status of the command run; on systems using a non-native shell, consult your shell documentation.</p>
</blockquote>
<p>So return code of your shell script was <code>0</code> and it is assigned to <code>result</code>. So technically you are already storing result in variable.</p>
<p>@edit:</p>
<p>To resolve problem, you'd need to use <code>subprocess</code> module which allows for more detailed manipulation of system calls.</p>
<pre><code>import subprocess
import json
result_process_output = subprocess.check_output("sh cmd_dtapi.sh", shell=True)
result_json = json.loads(result_process_output)
result = result_json["risk_of_disease"]
print "Result is : ", result
</code></pre>
</div>
<span class="comment-copy">look into the subprocess module <a href="http://stackoverflow.com/questions/4760215/running-shell-command-from-python-and-capturing-the-output" title="running shell command from python and capturing the output">stackoverflow.com/questions/4760215/â€¦</a> <a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow noreferrer">docs.python.org/2/library/subprocess.html</a></span>
<span class="comment-copy">it describes <code>os.system</code> but it doesn't resolve problem.</span>
<span class="comment-copy">@furas Does this seem like proper resolution?</span>
<span class="comment-copy">@TomaszPlaskota: I am using <code>python 2.7.6</code>. When I tried it, I get <code>OSError: [Errno 2] No such file or directory</code> full error trace in question</span>
<span class="comment-copy">@TomaszPlaskota now it looks good :)</span>
<span class="comment-copy">@user123 - you need <code>shell=True</code> - <code>check_output("sh cmd_dtapi.sh", shell=True)</code> or you have to split command to list <code>["sh", "cmd_dtapi.sh"]</code> - <code>check_output(["sh", "cmd_dtapi.sh"])</code></span>
