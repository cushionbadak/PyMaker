<div class="post-text" itemprop="text">
<p>Write a Python function that will take a the list of 100 random integers between 0 and 1000 and return the maximum value. (Note: there is a builtin function named max but pretend you cannot use it.)</p>
<p>Here's what I tried:</p>
<pre><code>import random

list = []
for i in range(100):
    list.append(random.randint(0,1000))          

def max(list):
    #sort list from least to greatest
    answer = list.sort()
    #get last item in list (max value)
    list.pop()

    return max  

print (max(list))
</code></pre>
<p>As you can see, what I'm confused about is how to correctly use the sort and pop methods to return the max value within the max function. I'm currently getting:</p>
<pre><code>ParseError: bad input on line 12
</code></pre>
<p>Which is this line: </p>
<pre><code>list.pop()
</code></pre>
<p>Not sure how to correct this. Thanks. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>my_list.sort()</code> sorts the list itself. If you want to store your sorted list in <code>answer</code>, you should use:</p>
<pre><code>answer = sorted(my_list)
</code></pre>
<p>You can also use a list comprehension to generate your first list as follows:</p>
<pre><code>&gt;&gt;&gt; random
&gt;&gt;&gt; 
&gt;&gt;&gt; my_list = [random.randint(0, 1000) for i in range(100)]
&gt;&gt;&gt; answer = sorted(my_list)
&gt;&gt;&gt; answer.pop()
996  # This should be different each time
</code></pre>
<p>Now, your function can be:</p>
<pre><code>def max(my_list):
    # sort list from least to greatest
    answer = sorted(my_list)
    # get last item in list (max value)
    max = answer.pop()

    return max
</code></pre>
<p>If you still want to use the same list, you can do:</p>
<pre><code>my_list.sort()
max = my_list.pop()
</code></pre>
<p><strong>Note that:</strong> I prefer to call the list <code>my_list</code> because <code>list</code> is a python keyword.</p>
</div>
<div class="post-text" itemprop="text">
<p>1) Your indentation was off</p>
<p>2) You managed to overwrite 2 Python builtins in 4 lines of code (<code>max()</code> and <code>list()</code>))</p>
<p>3) <code>my_list.sort()</code> does not return a list. It operates in place sorting the list in-place. On the contrary, <code>sorted(my_list)</code> does return a list so you can either do <code>my_list.sort()</code> or <code>my_list = sorted(my_list)</code>.</p>
<p>4) Your <code>return</code> was just wrong.</p>
<p>See the code below:</p>
<pre><code>a_list = []
for i in range(100):
    a_list.append(random.randint(0, 1000))

def my_max(my_list):
    return sorted(my_list)[-1]  # here, the list we passed gets sorted and its last item is retrieved (item with index -1)

print(my_max(a_list))
</code></pre>
<p>Other interesting answers (hats off to @Rob) that feature a bit of cockiness:</p>
<pre><code>def my_max(my_list):
    return min(l, key:lambda i: 1/i)
</code></pre>
<p>or</p>
<pre><code>def my_max(my_list):
    return min(l, key:lambda i: -i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I usually try to avoid using names that are have a predefined function / built-in names, this helps to avoid problems quite often. Like this it should work.</p>
<pre><code>import random

my_list = []
for i in range(100):
    my_list.append(random.randint(0,1000))          

def my_max(my_list):
    #sort list from least to greatest
    my_list.sort()
    #get last item in list (max value)
    my_max = my_list.pop()

    return my_max

print my_max(my_list)
</code></pre>
</div>
<span class="comment-copy">There's actually a builtin <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max()</code></a> function in python. You could just do this: <code>print(max(list))</code> -- you don't need to define a <code>max()</code> function.</span>
<span class="comment-copy">Please don't call your list <code>list</code> (it's the name of built-in type; while Python wouldn't prevent you from using the name for something else, this has the potential for causing lots of confusion).</span>
<span class="comment-copy">@csinchok we can't use the max() function for this assignment.</span>
<span class="comment-copy">If your instructor appreciates alternative answers: <code>def max(l): return -min(-i for i in l)</code> or <code>def max(l): return min(l, key=lambda i:-i)</code></span>
<span class="comment-copy">@Robáµ© this is so evil-genius-like. Hahaha nice! How about <code>def max(l): return min(l, key=lambda i:1/i</code>?</span>
<span class="comment-copy">So then to store the sorted list, and to store the last item of that sorted list in answer, I would do answer = sorted(list)                                               pop(list)  ? Trying that still gave me the parse error.</span>
<span class="comment-copy">How weird is it that when i ran my code i got <code>996</code> too? Can this be a coincidence?</span>
<span class="comment-copy">Just run the code many times :)</span>
<span class="comment-copy">Yeah this is what I was going for. Thanks for the explanation!</span>
<span class="comment-copy">@ettanany I wasn't suggesting that the output is the same every time. I just found the coincidence interesting but if you actually do the math it is not that unlikely at all.</span>
