<div class="post-text" itemprop="text">
<p>I tried to match js and php url with python re
but expression below doesn't work, anyone can help me?</p>
<pre><code>import re, urllib2
response = urllib2.urlopen('https://www.cnn.com')
s = response.read()
p = re.compile(r'^(http|https|//).+?\.(js|php)$')
m = p.findall(s)

for i in m:
    print i
</code></pre>
<p>Also, some Web pages use <code>//</code>, not <code>http</code> or <code>https</code>. Is there any way to match those, too?</p>
</div>
<div class="post-text" itemprop="text">
<p>You seem to want to match URLs that end with file extensions <code>js</code> and <code>php</code>, that may start with <code>http</code>, <code>https</code> or <code>//</code>.</p>
<p>Use</p>
<pre><code>import re
s = "https://www.cnn.com/1.js!! http://www.cnn.com/2.php; //some.site.com/3.js,"
res = re.findall(r'(?:\bhttps?:)?//\S*\.(?:js|php)\b', s)
print(res)
</code></pre>
<p>See the <a href="http://ideone.com/b4CEXk" rel="nofollow noreferrer">Python demo</a></p>
<p><strong>Details</strong>:</p>
<ul>
<li><code>(?:\bhttps?:)?</code> - an optional sequence of 

<ul>
<li><code>\b</code> - a leading word boundary</li>
<li><code>https?:</code> - <code>http</code>, 1 or 0 (=optional) <code>s</code>, and a <code>:</code></li>
</ul></li>
<li><code>//</code> - a literal char sequence <code>//</code></li>
<li><code>\S*</code> -  zero or more non-whitespace symbols</li>
<li><code>\.</code> - a dot</li>
<li><code>(?:js|php)</code> - <code>js</code> or <code>php</code> literal char sequences</li>
<li><code>\b</code> - a trailing word boundary</li>
</ul>
</div>
<span class="comment-copy">If you are actually parsing URLs, you might look into <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">docs.python.org/3/library/urllib.parse.html</a>. If you're practicing regexes ... forge ahead.</span>
<span class="comment-copy">Try <code>re.compile(r'\b(https?)://(.+?)\.(js|php)\b')</code></span>
<span class="comment-copy">hi ,thank you for your answer! some webpage use '//' ,not http or https ,is there any way to match it.</span>
<span class="comment-copy">Try <code>re.compile(r'\b(https?|//).+?\.(js|php)\b')</code></span>
