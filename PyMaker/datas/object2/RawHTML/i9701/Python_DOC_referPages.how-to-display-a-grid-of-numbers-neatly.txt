<div class="post-text" itemprop="text">
<p>I have written a simple program that simulates a magic card trick. I didn't feel the need to post the entire program, as it is running smoothly, the problem I have is finding a way to display 6 grids of numbers for the user to choose from.</p>
<p>I wrote it using Python 2.7</p>
<p>In the code example below I have just shown 2 of the grids, and how I print them, this is actually an improvement to how it was as I added the (\n) next line. The data is displayed in a very unorganized looking fashion. It just looks untidy. If I play with the spacing and get it <em>kinda</em> nice looking, this is all easily undone by the end user having different window dimensions.</p>
<p><strong>Is there something built into Python to display a grid of numbers or a table neatly?
Or an additional module for displaying a grid of numbers that is fairly simple to use?</strong></p>
<p>A table wouldn't require any headings or anything, I just want to display the numbers. And the program doesn't need to interact with the numbers in the grids or tables afterwards, for now I can do that side of things by gathering input from the user.</p>
<p>Each grid has 32 numbers so it could be divided into a 4 x 8 table or grid   </p>
<pre><code>GRID_1 = ['32....33....34....35 \n36....37....38....39',
          '40....41....42....43 \n44....45....46....47',
          '48....49....50....51 \n52....53....54....55',
          '56....57....58....59 \n60....61....62....63']

GRID_2 = ['8.....9.....10....11 \n12....13....14....15',
          '24....25....26....27 \n28....29....30....31',
          '40....41....42....43 \n44....45....46....47',
          '56....57....58....59 \n60....61....62....63']

print ("\n\nHere is Grid Number: 1\n\n")
print (GRID_1)
print ("\n\nHere is Grid Number: 2\n\n")
print (GRID_2)
</code></pre>
<p>I hope I have provided enough info to get a reasonable solution, I apologize for not putting the whole program into my question, I just wanted to keep the focus on the area I am looking at. I am fairly new to this site so if there's anything I could do better, I appreciate the feedback. </p>
</div>
<div class="post-text" itemprop="text">
<p>This is a function that takes an iterable of values and prints them in a grid of width 4</p>
<pre><code>def grid_print(it):
    for x in zip(*[iter(it)]*4):
        print('{:&lt;4}{:^6}{:^6}{:^6}'.format(*x))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's a library for that </p>
<p><a href="https://docs.python.org/2/library/pprint.html" rel="nofollow">Data pretty printer Python 2</a></p>
<p><a href="https://docs.python.org/3/library/pprint.html" rel="nofollow">Data pretty printer Python 3</a></p>
</div>
<span class="comment-copy">This was more what I needed, as it requires no extra modules, it gave me neat appearance but it still doubles up in one section</span>
<span class="comment-copy">What do you mean by doubles up? you might consider putting an empty call to <code>print</code> after calls to <code>grid_print</code></span>
<span class="comment-copy">It is fine now, by adding (\n) in a few  key places to drop the 'doubled up' lines down it displays the numbers in a neat grid, this function was very helpful, I implemented it into the whole program, just changing the grid numbers accordingly, and it works nicely. This was just what I was looking for, The grids are now neatly displayed and it looks perfect. Thank you for your help, I am new to the site so don't understand how to do the voting side of things (I hear people say upvoting etc but I dont see this option on my account yet)  In any case Thank you sir</span>
<span class="comment-copy">I don't think you have enough rep to upvote yet, but if you find an answer solved your problem, you can click the tick (check mark) beneath the vote counter to mark the answer as "accepted"</span>
<span class="comment-copy">I checked out the link ,pretty printer looks like a really good set of tools, but maybe a little complex for my understanding - I couldn't see anything relating to tables on the docs page</span>
