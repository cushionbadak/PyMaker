<div class="post-text" itemprop="text">
<p>I have url <code>https://cars.mail.ru/reviews/renault/?year=2010-2016</code>
and I should open from there</p>
<pre><code>https://cars.mail.ru/reviews/renault/sandero_stepway/2015/143355/
https://cars.mail.ru/reviews/renault/sandero/2015/147850/
https://cars.mail.ru/reviews/renault/sandero/2012/147529/
https://cars.mail.ru/reviews/renault/duster/2014/147433/
https://cars.mail.ru/reviews/renault/logan/2011/146991/
https://cars.mail.ru/reviews/renault/duster/2015/146645/
</code></pre>
<p>I need to open all this links and next to the next page and open there all links.
How can I do it fast?
If I use </p>
<pre><code>models = ['11', '12', '14', '15', '16', '17', '18', '19', '20', '21', '25', '30', '4', '5', '6', '9',
     'avantime', 'clio', 'clio_rs', 'duster', 'espace', 'estafette', 'express', 'fluence',
     'fuego', 'grand_espace', 'grand_scenic', 'kangoo', 'kaptur', 'koleos', 'laguna', 'latitude',
     'logan', 'mascott', 'master', 'megane', 'megane_rs', 'modus', 'safrane', 'sandero', 'sandero_stepway',
     'scenic', 'symbol', 'trafic', 'twingo', 'vel_satis']
years = ['2010', '2011', '2012', '2013', '2014', '2015', '2016']
pattern = 'https://cars.mail.ru/reviews/renault/'

for model in models:
    for year in years:
        for i in range(143350, 143360):
            res = pattern + model + '/' + year + '/' + str(i)
            try:
                page = urllib2.urlopen(res).read()
                print page
                soup = BeautifulSoup(page, 'html.parser')
            except:
                continue
</code></pre>
<p>It takes so much time</p>
</div>
<div class="post-text" itemprop="text">
<p>You are doing</p>
<pre><code>len(models) * len(years) * (143360 - 143350) # 3220
</code></pre>
<p>HTTP requests. If each only takes one second, you are busy for almost an hour.</p>
<p>You can try <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer"><code>multiprocessing</code></a>.</p>
</div>
<span class="comment-copy">It test example. I have <code>for i in range(0, 150000):</code> in real data</span>
<span class="comment-copy">Even worse. That's 483,00,000 requests. That's nothing Python code can fix, you will have to reduce the number of requests.</span>
