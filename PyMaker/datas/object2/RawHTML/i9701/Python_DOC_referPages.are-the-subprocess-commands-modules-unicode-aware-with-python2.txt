<div class="post-text" itemprop="text">
<p>Is the stdout/stderr captured from the various functions in the subprocess or the commands module for Python2 guaranteed to be a standard string, or is it possible under certain conditions that a Unicode object is returned? ... And if a standard Python2 string <em>is</em> returned, what happens if the subprocess outputs Unicode? </p>
<p>Or getting to the point more directly, what's the best way to robustly handle a Python2 subprocess call which may output Unicode characters?</p>
<p>And would it be substantially different if it was Python3?</p>
</div>
<div class="post-text" itemprop="text">
<p>A subprocess output will always<sup>†</sup> be bytes in both Python 2 (called "<code>str</code>" here) and Python 3 (called "<code>bytes</code>" here).  It is not possible for a subprocess to output unicode, because a "unicode object" is a concept that is internal to Python.  The output is always bytes.  </p>
<p>If the bytes are a representation of textual data, then you have to know what encoding is used by the subprocess before you can decode the output.  Different subprocesses could output different encodings, so there is no one correct answer here.  </p>
<p><sup>†</sup><sub>There is one weird edge case to be aware of here.  If you launch the subprocess using the kwarg <code>universal_newlines=True</code>, then the output will be automatically decoded using the encoding returned by <a href="https://docs.python.org/3/library/locale.html#locale.getpreferredencoding" rel="nofollow noreferrer"><code>locale.getpreferredencoding</code></a> function.</sub></p>
</div>
