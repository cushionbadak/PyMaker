<div class="post-text" itemprop="text">
<p>I am using the following code:</p>
<pre><code>f.write(str(foo) + '            ' + str(bar) + '\n')
</code></pre>
<p>The problem is that the number of letters in <code>foo</code> is different for each value and I get the following output:</p>
<pre class="lang-none prettyprint-override"><code>Account Category            DORMANT
Last Made Update            21/12/2013
Mortgages Partly Satisfied          0
</code></pre>
<p>The problem is that because I am using same amount of space (<code>'         '</code>) for all the values and  <code>Mortgages Partly Satisfied</code> is longer string, so the value <code>0</code> goes to the right. What I would like the output to be is:</p>
<pre class="lang-none prettyprint-override"><code>Account Category            DORMANT
Last Made Update            21/12/2013
Mortgages Partly Satisfied  0
</code></pre>
<p>My question is: Is there a way to insert the second value <code>bar</code> after certain amount of columns so the values will always be aligned?</p>
<p>I hope I was clear enough.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's probably best to use string formatting with the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>str.format</code></a> method, like so:</p>
<pre><code>items = [
    ('Account Category', 'DORMANT'),
    ('Last Made Update', '21/12/2013'),
    ('Mortgages Partly Satisfied', '0'),
]
for label, value in items:
    f.write('{:28} {}\n'.format(label, value))
</code></pre>
<p>The <code>:28</code> is the width specifier. See <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow noreferrer">format string docs</a> for more info.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python lets you add padding for strings by specifying the number of characters a given field should use. This can be used when writing to your file as follows:</p>
<pre><code>data = [["Account Category", "DORMANT"], ["Last Made Update", "21/12/2013"], ["Mortgages Partly Satisfied", "0"]]

with open('output.txt', 'w') as f:
    for v1, v2 in data:
        f.write("{:28} {}\n".format(v1, v2))
</code></pre>
<p>Giving you:</p>
<pre class="lang-none prettyprint-override"><code>Account Category             DORMANT
Last Made Update             21/12/2013
Mortgages Partly Satisfied   0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>ljust</code> function, that returns the string left justified.</p>
<p>Just, try it:</p>
<pre><code>f.write(str(foo).ljust(40) + str(bar) + '\n')
</code></pre>
<p>You can also check other methods in the <a href="https://docs.python.org/2/library/string.html#string.ljust" rel="nofollow noreferrer">docs</a></p>
<p>This is going to give you the next output:</p>
<pre><code>Last Made Update                        21/12/2013
Account Category                        DORMANT
Mortgages Partly Satisfied              0
</code></pre>
</div>
<span class="comment-copy">learn <a href="https://pyformat.info/" rel="nofollow noreferrer">PyFormat.info</a> - ie. <a href="https://pyformat.info/#string_pad_align" rel="nofollow noreferrer">Padding and aligning strings</a></span>
