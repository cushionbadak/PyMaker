<div class="post-text" itemprop="text">
<p>I am trying to teach myself Python's async functionality. To do so I have built an async web scraper. I would like to limit the total number of connections I have open at once to be a good citizen on servers. I know that semaphore's are a good solution, and the asyncio library has a <a href="https://docs.python.org/3/library/asyncio-sync.html#semaphores" rel="nofollow noreferrer">semaphore</a> class built in. My issue is that Python complains when using <code>yield from</code> in an <code>async</code> function as you are combining <code>yield</code> and <code>await</code> syntax. Below is the exact syntax I am using...</p>
<pre><code>import asyncio
import aiohttp

sema = asyncio.BoundedSemaphore(5)

async def get_page_text(url):
    with (yield from sema):
        try:
            resp = await aiohttp.request('GET', url)
            if resp.status == 200:
                ret_val = await resp.text()
        except:
            raise ValueError
        finally:
            await resp.release()
    return ret_val
</code></pre>
<p>Raising this Exception:</p>
<pre><code>File "&lt;ipython-input-3-9b9bdb963407&gt;", line 14
    with (yield from sema):
         ^
SyntaxError: 'yield from' inside async function
</code></pre>
<p>Some possible solution I can think of...</p>
<ol>
<li>Just use the <code>@asyncio.coroutine</code> decorator</li>
<li>Use threading.Semaphore? This seems like it may cause other issues</li>
<li>Try this in the beta of Python 3.6 for <a href="https://docs.python.org/3.6/whatsnew/3.6.html#pep-525-asynchronous-generators" rel="nofollow noreferrer">this</a> reason.</li>
</ol>
<p>I am very new to Python's async functionality so I could be missing something obvious.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>async with</code> statement to get an asynchronous context manager:</p>
<pre><code>#!/usr/local/bin/python3.5
import asyncio
from aiohttp import ClientSession


sema = asyncio.BoundedSemaphore(5)

async def hello(url):
    async with ClientSession() as session:
        async with sema, session.get(url) as response:
            response = await response.read()
            print(response)

loop = asyncio.get_event_loop()
loop.run_until_complete(hello("http://httpbin.org/headers"))
</code></pre>
<p>Example taken from <a href="https://pawelmhm.github.io/asyncio/python/aiohttp/2016/04/22/asyncio-aiohttp.html" rel="noreferrer">here</a>. The page is also a good primer for <code>asyncio</code> and <code>aiohttp</code> in general.</p>
</div>
<div class="post-text" itemprop="text">
<p>OK, so this is really silly but I just replaces <code>yield from</code> with <code>await</code> in the semaphore context manager and it is working perfectly.</p>
<pre><code>sema = asyncio.BoundedSemaphore(5)

async def get_page_text(url):
    with (await sema):
        try:
            resp = await aiohttp.request('GET', url)
            if resp.status == 200:
                ret_val = await resp.text()
        except:
            raise ValueError
        finally:
            await resp.release()
    return ret_val
</code></pre>
</div>
<span class="comment-copy">I find the example very interesting, however something surprises me.  It is this line:    async with sema, session.get(url) as response:    How come you are using sema, session... on the same context manager? What does that line do? Can you explain a little?</span>
<span class="comment-copy">Nothing special going on there, I think this answer will help: <a href="https://stackoverflow.com/questions/3024925/python-create-a-with-block-on-several-context-managers" title="python create a with block on several context managers">stackoverflow.com/questions/3024925/â€¦</a></span>
<span class="comment-copy">Even better, you can use the <code>async with</code> statement: <code>async with sema: [...]</code></span>
<span class="comment-copy">Async is also interesting for me, I found your topic interesting and vote to leave it here. BTW, could you share you whole code for ex on github?</span>
<span class="comment-copy">Yes, I will do that and post a link in the comments a little later.</span>
<span class="comment-copy">@EugeneLisitsky Here is the code... <a href="https://github.com/brucepucci/asyncio_scraper" rel="nofollow noreferrer">github.com/brucepucci/asyncio_scraper</a>. I am trying to get all of the links that start with "gid" in this file structure... <a href="http://gd2.mlb.com/components/game/mlb/year_2016/" rel="nofollow noreferrer">gd2.mlb.com/components/game/mlb/year_2016</a></span>
