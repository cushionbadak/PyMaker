<div class="post-text" itemprop="text">
<p>For example, when :</p>
<pre><code>name = input('Please enter your name:\n')
</code></pre>
<p>and input : <code>William</code></p>
<p>after I close the python shell the variable "name" is gone. How can i save this information so that i can use it for next time?</p>
</div>
<div class="post-text" itemprop="text">
<p>Reading and writing to files: <a href="https://docs.python.org/3.5/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">Python 3.5 documentation</a></p>
<pre><code>filename = 'names.txt'
name = str(input('Give me your name, now!\nName: '))
with open(filename, 'w') as f: f.write(name)
with open(filename, 'r') as f: original_name = str(f.read()).strip()
</code></pre>
<p>Storing information in a SQLite3 database: <a href="https://docs.python.org/3.5/library/sqlite3.html" rel="nofollow noreferrer">Python 3.5 Documentation</a></p>
<pre><code>import sqlite3
name = str(input('Give me your name, now!\nName: '))
with sqlite3.connect('names.db') as conn:
    cur = conn.cursor()
    cur.execute(
        'CREATE TABLE IF NOT EXIST Name (person_name TEXT);'
        'INSERT INTO Name VALUES ({});'.format(name)
    )
    conn.commit()

    original_name = cur.execute(
        'SELECT * FROM Name'
    ).fetchall()[0]
</code></pre>
<p>Storing/serializing actual Python objects into files (with the ability to reload them): <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">Python 3.5 Documentation</a></p>
<pre><code>import pickle
name = str(input('Give me your name, now!\nName: '))
with open('names.pkl', 'wb') as f:
    pickle.dump(name, f)
with open('names.pkl', 'rb') as f:
    original_name = pickle.load(f)
</code></pre>
</div>
<span class="comment-copy">you can write it to file. <code>f = open('myfile','w') f.write(name) f.close()</code> then read  justit from file</span>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/3/library/persistence.html" rel="nofollow noreferrer">Python's data persistence modules</a>.  More specifically, <code>pickle</code> and <code>shelve</code> are very easy to get started with, and <code>sqlite3</code> is quite powerful.</span>
