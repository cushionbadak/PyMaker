<div class="post-text" itemprop="text">
<p>I am trying to get a list after segmenting a word into it's constituents such as suffixes and prefixes (i.e. morphemes or affixes).</p>
<p>I have tried using regular expressions, with the <code>re.findall</code> function.<br/>
(Shown below)</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; affixes = ['meth','eth','ketone', 'di', 'chloro', 'yl', 'ol']
&gt;&gt;&gt; word = 'dimethylamin0ethanol'
&gt;&gt;&gt; re.findall('|'.join(affixes), word)

['di', 'meth', 'yl', 'eth', 'ol']
</code></pre>
<p>However, I need the sections in which it does not match to be included. For instance, the above example would be desired to output:</p>
<p><code>['di', 'meth', 'yl', 'amin0', 'eth', 'an', 'ol']</code></p>
<p>Does anyone know how to extract these segments in the list?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer"><code>re.split()</code></a> capturing the "delimiters":</p>
<pre><code>In [1]: import re

In [2]: affixes = ['meth', 'eth', 'ketone', 'di', 'chloro', 'yl', 'ol']

In [3]: word = 'dimethylamin0ethanol'

In [4]: [match for match in re.split('(' + '|'.join(affixes) + ')', word) if match]
Out[4]: ['di', 'meth', 'yl', 'amin0', 'eth', 'an', 'ol']
</code></pre>
<p>The list comprehension here is to filter the empty string matches.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

affixes = ['meth','eth','ketone', 'di', 'chloro', 'yl', 'ol']
word = 'dimethylamin0ethanol'

# found = ['amin0', 'an', 'di', 'meth', 'yl', 'eth', 'ol']
found = re.findall('|'.join(affixes), word)

# not_found = [('', 'di'), ('', 'meth'), ('', 'yl'), ('amin0', 'eth'), ('an', 'ol')] 
not_found = re.findall(r'(.*?)(' + '|'.join(affixes) + ')', word)

# We need to modify extract the first item out of each tuple in not_found 
# ONLY when it does not equal "".
all_items = map(lambda x: x[0], filter(lambda x: x[0] != "", not_found)) + found

print all_items
# all_items = ['amin0', 'an', 'di', 'meth', 'yl', 'eth', 'ol']
</code></pre>
<p>Assumption: Your final list does not require a particular order.</p>
</div>
