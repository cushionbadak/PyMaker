<div class="post-text" itemprop="text">
<p>For example, if I have the following string:</p>
<pre><code>fruits = "The apples are $3.00, the oranges are $2.00, and the grapes are $10000."
</code></pre>
<p>I want to extract a list of the prices like so:</p>
<pre><code>['$3.00', '$2.00', '$10000']
</code></pre>
<p>So far, I've done this:</p>
<pre><code>def extract_prices(s):
    prices = []
    for i in range(len(s)):
      if s[i] == '$':
        prices.append(s[i], s.find(' '))
</code></pre>
<p>I feel like the last line is giving me problems. I don't know how to get the index for the space that comes after the price, and how to stop it there. </p>
<p>Any hints? Thank you for reading over this! Sorry if my explanations aren't clear. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a regex:</p>
<pre><code>&gt;&gt;&gt; fruits = "The apples are $3.00, the oranges are $2.00, and the grapes are $10000."
&gt;&gt;&gt; re.findall(r'(\$[\d.]+)', fruits)
['$3.00', '$2.00', '$10000.']
</code></pre>
<p>Or, if you want to be more specific to only include the <code>.</code> if there are digits:</p>
<pre><code>&gt;&gt;&gt; re.findall(r'(\$\d+(?:\.\d+)?)', fruits)
['$3.00', '$2.00', '$10000']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Split the string and look for the dollar sign:</p>
<pre><code>&gt;&gt;&gt; fruits = "The apples are $3.00, the oranges are $2.00, and the grapes are $10000."
&gt;&gt;&gt; result = [item.strip(',.!?') for item in fruits.split() if '$' in item]
&gt;&gt;&gt; result
['$3.00', '$2.00', '$10000']
</code></pre>
<p>Remember to strip punctuation from each item.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the following regex:</p>
<pre><code>re.findall('\$\d+\.?\d+', fruits)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; re.findall('\$\d+\.?\d+', fruits)
['$3.00', '$2.00', '$10000']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want only adjust your original code, use</p>
<pre><code>  if s[i] == '$':
    lastPos = s.find(',', i)
    if lastPos == -1:
        lastPos = len(s)
    prices.append(s[i:lastPos])
</code></pre>
<p>instead of your lines</p>
<pre><code>  if s[i] == '$':
    prices.append(s[i], s.find(' '))
</code></pre>
</div>
<span class="comment-copy">Take a look at regex <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a> module</span>
<span class="comment-copy">Sorry, what part of that would be helpful? It's kind of long, and I don't know where to start :o Thank you for the reply!</span>
<span class="comment-copy">Regular expressions are extremely useful for string parsing. Consider looking up a tutorial on them</span>
<span class="comment-copy">You should really use regex for this, but note that <code>s.find</code> can take a second parameter that tells it were to start searching, and you could feed it <code>i + 1</code> or else it will always return the first instance of a space.</span>
<span class="comment-copy">Thank you for all the help! I wish I could use that method, but I haven't learned it all.. I think I'll try to edit the s.find portion of the code. Thanks again!</span>
<span class="comment-copy">Note that the last element has an extraneous period.</span>
<span class="comment-copy">Could be extraneous or ambiguous!</span>
<span class="comment-copy">What if it was <code>...and the grapes are $10000.00."</code>?</span>
<span class="comment-copy">Agreed. Edited.</span>
<span class="comment-copy">It might not be necessary to put the whole thing in a capturing group - <code>r'\$ ... ?'</code> seems to work fine.</span>
<span class="comment-copy">Note that this will also match things like <code>$10/1</code>, because of the <code>.</code>.</span>
<span class="comment-copy">@TigerhawkT3 Edited, thanks :)</span>
