<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2580136/does-python-support-short-circuiting">Does Python support short-circuiting?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Is the following code using <code>if ... and ...:</code> safe, i.e. are we sure the <strong>first condition is tested first</strong> and that, if the key is not present, the second condition is ignored?</p>
<pre><code>d = {'a': 1}
if 'b' in d and d['b'] == 2:
    print 'hello'
</code></pre>
<p>It seems that yes, because this generates no error. But is it true for all Python versions?</p>
<p>Will it never generate a <code>KeyError: 'b'</code>?</p>
<hr/>
<p>PS: this is probably more pythonic, with no ambiguity:</p>
<pre><code>if 'b' in d:
    if d['b'] == 2:
        ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, it is called a <em>short circuit and</em>. </p>
<p>Both python2 (<a href="https://docs.python.org/2/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow noreferrer">Link to the doc</a>) and python3.x(<a href="https://docs.python.org/3/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow noreferrer">Link to the doc</a>) support short circuit <code>and</code> and <code>or</code></p>
</div>
<span class="comment-copy">Yes. Both <code>and</code> and <code>or</code> are <i>guaranteed</i> by the language to short-circuit (as I illustrate in <a href="http://stackoverflow.com/a/36551857/4014959">this answer</a>), it's not just an implementation detail. Also note that the <code>all</code> and <code>any</code> functions short-circuit; to get the full benefit of that behaviour you should feed them generators.</span>
<span class="comment-copy">More pythonic way, you can do <code>if d.get('b', None) == 2:</code>, it will get None if key b not exist</span>
<span class="comment-copy">@Skycc if you want the default value to be <code>None</code> from <code>get()</code> then it should be <code>if d.get('b')</code> since this will automatically return <code>None</code> if it's not found. The second argument is for defining a custom default value.</span>
<span class="comment-copy">@Skycc And in Python 3 (or Python 2 with <code>from __future__ import print_function</code>) you could eliminate the <code>if</code> and just do <code>d.get('b') == 2 and print('hello')</code> although some people will object to that style on readability grounds.</span>
<span class="comment-copy">@PM2Ring : I would <b>never</b> have found <a href="http://stackoverflow.com/questions/2580136/does-python-support-short-circuiting">the question you marked as duplicate</a> because I didn't know the right keyboard was "shortcircuiting". Already knowing this keyword is equivalent to knowing the answer because then it's straightforward to find in the doc, so I find it a bit hard to see this as a "duplicate" ;) Moreover, this duplicate question is pretty obscure (no example of what shortcircuiting is in the question...)</span>
<span class="comment-copy">Thanks. Can you add a reference link and/or example code?</span>
<span class="comment-copy">@Basj I have updated the answer with doc links. Hope it helps</span>
