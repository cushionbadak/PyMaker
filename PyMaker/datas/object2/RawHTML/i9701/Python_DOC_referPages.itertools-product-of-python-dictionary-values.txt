<div class="post-text" itemprop="text">
<p>I have a Python dictionary with strings as keys and numpy arrays as values:</p>
<pre><code>dictionary = {'first': np.array([1, 2]), 'second': np.array([3, 4])}
</code></pre>
<p>Now I want to use the <code>itertools</code> <code>product</code> to create the following list:</p>
<pre><code>requested = [(1, 3), (1, 4), (2, 3), (2, 4)]
</code></pre>
<p>As normally done when the items passed to <code>product</code> are numpy arrays.</p>
<p>When I do the following:</p>
<pre><code>list(product(list(dictionary.values())))
</code></pre>
<p>I get the following output instead:</p>
<pre><code>[(array([3, 4]),), (array([1, 2]),)] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><em>itertools.product()</em></a> function expects the arguments to be unpacked into separate arguments rather than kept in a single mapping view.  Use the <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer"><code>*</code> operator</a> to do the unpacking:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; dictionary = {'first': np.array([1, 2]), 'second': np.array([3, 4])}
&gt;&gt;&gt; list(product(*dictionary.values()))
[(1, 3), (1, 4), (2, 3), (2, 4)]
</code></pre>
</div>
<span class="comment-copy">Unpack the dictionary values: <code>list(product(*dictionary.values()))</code></span>
<span class="comment-copy">That solved it, thanks!</span>
