<div class="post-text" itemprop="text">
<pre><code># Create a class called "Loan":
# Data fields in the Loan class include: Annual Interest Rate(Float),\
# Number of years of loan(Float), Loan Amount(Float), and Borrower's Name(string)
class Loan:
    # Create the initializer or constructor for the class with the above data fields.
    # Make the data fields private. 
    def __init__(self, annualInterestRate, numberOfYears, loanAmount, borrowerName):
        self.__annualInterestRate=annualInterestRate
        self.__numberOfYears=numberOfYears
        self.__loanAmount=loanAmount
        self.__borrowerName
    # Create accessors (getter) for all the data fields: 
    def getannualInterestRate(self):
        return self.__annualInterestRate
    def getnumberOfYears(self):
        return self.__numberOfYears
    def getloanAmount(self):
        return self.__loanAmount
    def getborrowerName(self):
        return self.__borrowerName
    # Create mutators (setters) for all the data fields:
    def setannualInterestRate(self):
        self.__annualInterestRate=annualInterestRate
    def setnumberOfYears(self):
        self.__numberOfYears=numberOfYears
    def setloanAmount(self):
        self.__loanAmount=loanAmount
    def setborrowerName(self):
        self.borrowerName=borrowerName
    # Create a class method: getMonthlyPayment - 
    def getMonthlyPayment(self,loanAmount, monthlyInterestRate, numberOfYears):
        monthlyPayment = loanAmount * monthlyInterestRate / (1
        - 1 / (1 + monthlyInterestRate) ** (numberOfYears * 12))
        return monthlyPayment;
    # Create a class method: getTotalPayment - 
    def getTotalPayment(self):
        monthlyPayment = self.getMonthlyPayment(float(self.loanAmountVar.get()), 
        float(self.annualInterestRateVar.get()) / 1200, 
        int(self.numberOfYearsVar.get()))
        self.monthlyPaymentVar.set(format(monthlyPayment, '10.2f'))
        totalPayment = float(self.monthlyPaymentVar.get()) * 12 \
        * int(self.numberOfYearsVar.get())
        self.totalPaymentVar.set(format(totalPayment, '10.2f'))

def main():
    loan1=Loan()
    print(input(float("Enter yearly interest rate, for exmaple, 7.25: ", loan1.annualInterestRate())))
    print(input(float("Enter number of years as an integer: ", loan1.getnumberOfYears())))
    print(input(float("Enter loan amount, for example, 120000.95: ", loan1.getloanAmount())))
    print(input(float("Enter a borrower's name: ", loan1.getborrowerName())))

    print("The loan is for", loan1.getborrowerName())
    print("The monthly payment is", loan1.getMonthlyPayment())
    print("The total payment is", loan1.getTotalPayment())

    print(input("Do you want to change the loan amount? Y for Yes OR Enter to Quit"))

    print(input(float("Enter a new loan amount: ")))
    print("The loan is for", loan1.getborrowerName())
    print("The monthly payment is", loan1.getMonthlyPayment())
    print("The total payment is", loan1.getTotalPayment())

main()
</code></pre>
<p>For some reason my program is not running. <strong>I'm trying to allow the user to change the loan amount and reprint the new loan information.</strong> I don't know what I'm doing wrong, and classes/OOP is new to me, so I'm struggling dearly as I've been doing procedural-only for the past year. I am aware that this is filled with <em>numerous errors</em>... but I have nowhere to begin. All the tutorials for classes online are extremely vague and theoretical, and do not broach specific examples/scenarios like the one I'm facing with.</p>
<p>Any help would be appreciated.  </p>
</div>
<div class="post-text" itemprop="text">
<p>The error message generated by the interpreter is more than enough. </p>
<pre><code>TypeError: __init__() takes exactly 5 arguments (1 given)
</code></pre>
<p>You need to pass whatever input you are taking from the user as arguments into the class constructor <code>Loan()</code>. The other methods are just for returning class variables, but all the initialization is done in your constructor.</p>
<p>Also, your constructor definition is wrong, correct this line :</p>
<pre><code>self.__borrowerName=borrowerName
</code></pre>
</div>
<span class="comment-copy">you define the Loan constructor to need 4 args.  You dont define Loan with any args in your main.</span>
<span class="comment-copy">I changed <code>Loan()</code> in main to <code>Loan(self, annualInterestRate, numberOfYears, loanAmount, borrowerName)</code> and it gave me the error: <code>"self is not defined"</code>...</span>
<span class="comment-copy">You don't need to pass <code>self</code> to a class method when calling it, you only need to include it when you are defining class methods. Please read more here : <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html</a></span>
<span class="comment-copy">I can't understand what the tutorials are saying. They're speaking at a level so theoretical that all of my practical concerns are moot unless I already know what to look for. For example, your statement "you don't need to pass <code>self</code> to a class method when calling it"...what does that mean? Where does it apply in my code?</span>
<span class="comment-copy">self is an interal thing. When defining classes you need self tso the classes function understands scope variables and functions.  When creating an instance of said class, you will skip the self variable as that is defined implicitly, and you will need to define all the variables thereafter.</span>
<span class="comment-copy">Comments are not for extended discussion; this conversation has been <a href="http://chat.stackoverflow.com/rooms/129427/discussion-on-answer-by-jarvis-loan-calculator-using-classoop-not-running-in-p">moved to chat</a>.</span>
