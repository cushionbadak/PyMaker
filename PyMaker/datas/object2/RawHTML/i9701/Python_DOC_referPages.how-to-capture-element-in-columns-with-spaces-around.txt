<div class="post-text" itemprop="text">
<p>Example</p>
<pre><code>  300       january      10       20     
  300       februari    120,30    10     
  300       march       20,30     10     
  300,10     april       20,30    10     
  300       may         420,10    10,46  
</code></pre>
<p>I want to reorder columns.<br/>
The first thing I do is to separate the columns between the text using a separator. p.e.<br/>
<code>(?&lt;=\S)(\s{2,})(?=\S)</code> or<br/>
<code>(?&lt;=\S)(\s{1,})(?=\S)</code></p>
<p>Then I want to to put the columns in a list like this:</p>
<pre><code>  |300   |   |january |    | 10   |  |20   | 
  |300   |   |februari|    |120,30|  |10   | 
  |300   |   |march   |    |20,30 |  |10   | 
  |300,10|   | april  |    | 20,30|  |10   | 
  |300   |   |may     |    |420,10|  |10,46| 
</code></pre>
<p>expected output:</p>
<pre><code>mylist = [['300   ','january ',' 10   ','20   ']
          ['300   ','februari','120,30','10   '],
          ['300   ','march   ','20,30 ','10   '],
          ['300,10',' april  ',' 20,30','10   '],
          ['300   ','may     ','420,10','10,46']]
</code></pre>
<p>I have no idea how to capture the spaces.</p>
<p>I tried this to capture the spaces after use of the separator:</p>
<pre><code>#find the max length of an element in a column
lengte_temp = [[len(x) for x in row] for row in mylist]
maxlengthcolumn = max(l[len(mylist[0])-1] for l in length_temp)

#add spaces to elements
for b in range(0,len(mylist)):
  if length_temp[b][len(mylist[-1])-1] &lt; maxlengthcolumn:
    mylist[b][len(mylist[-1])-1] = mylist[b][len(mylist[-1])-1] + ' '*(maxlengthcolumn-length_temp[b][len(mylist[-1])-1])
</code></pre>
<p>but this removes the spaces before the elements in a column.</p>
<p>How can I capture the elements in a list as in my example above?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that you're working with strings, you can use `ord' to obtain the ascii values, and split your string where alphas and numerics begin and end.</p>
<p>To break it down:</p>
<ol>
<li>Intake each line in text one at time (from what I've read it looks like your original text could be a .txt?) to import your can use file i/o methods (more about that <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">here</a> and <a href="https://developers.google.com/edu/python/dict-files" rel="nofollow noreferrer">here</a>)</li>
<li>Pass each line as a string and convert to ascii values using <code>ord()</code>, store these values in a separate variable</li>
<li>Set up logic to see where words/numbers begin (you should be looking for a pattern of an alpha, or numeric, followed by 0 or more alpha/numeric(s) followed by spaces, and after those series of spaces, you should find another alpha or numeric. Store the locations of each beginning (beginning defined as the first in the string, or the first alpha/numeric to follow after a series of spaces)</li>
<li>Index the line of text your currently working with and pull out desired strings. </li>
</ol>
<p>This might be unclear, so see the psuedo code below:</p>
<pre><code>strings_start = [5, 12, 22]  # this would be where the words/numbers begin in the string that holds a line of your text
# we'll assume you have some variable, line, which holds the current line of the text you're parsing in a loop
for i in range(len(strings_start)):
    if i &lt; len(strings_start) - 1 # subtract 1 because indexes start at 0
        string_list[i] = line[i: i + 1]
    else:
        string_list[i] = line[i:]
</code></pre>
</div>
<span class="comment-copy">The <code>csv</code> module?</span>
<span class="comment-copy">@Chris_Rands, It seems to me that the csv module doesn't respect spaces as in in my example. (It removes the spaces and joins the string afterwards putting a fix number of space between the elements)</span>
<span class="comment-copy">Can't you just use the str.split() method? If I'm not mistaken it preserves spaces.</span>
<span class="comment-copy">@Zafi, just checked it. No it doesn't preserves spaces. First line: <code>['300', 'january', '10', '20']</code></span>
<span class="comment-copy">@Zafi maybe I can do it using slices?</span>
