<div class="post-text" itemprop="text">
<p>Suppose that you have hundreds of numpy arrays and you want to calculate correlation between each of them. I calculated it with the help of nested for loops. But, execution took huge time(20 minutes!). One way to make this calculation more efficient is to calculate one half of the correlation table diagonal, copy it to other half and make diagonal line equal to 1. What I mean is that, correlation(x,y)=correlation(y,x) and correlation(x,x) is always equal to 1. However, with these corrections, code will also take much time(approx 7-8 minutes). Any other suggestions?</p>
<pre><code>My code
for x in data_set:
    for y in data_set:
        correlation = np.corrcoef(x,y)[1][0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am quite sure you can achieve must faster results by creating a 2-D array and calculating its correlation matrix (as opposed to calculate pair wise correlations one by one).</p>
<p>From numpy's corrcoef documentation the input can be:
" 1-D or 2-D array containing multiple variables and observations. Each row of m represents a variable, and each column a single observation of all those variables."
<a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.corrcoef.html" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/reference/generated/numpy.corrcoef.html</a> </p>
</div>
<span class="comment-copy">Have you considered using <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer"><code>multiprocessing</code></a> since this is a fairly parallel problem?</span>
<span class="comment-copy">No, I don't know anything about that package. Can you write a faster solution to this problem with help of multiprocessing?</span>
<span class="comment-copy">Can you explain what is dataset, possibly providing a minimal reproducible example?</span>
<span class="comment-copy">Dataset is python dictionary in which, keys are names and values are pandas Dataframe which holds numerical data. Also, note that, dictionary is saved into pickle and each time, I load that data from pickle.</span>
<span class="comment-copy">This might help - <a href="http://stackoverflow.com/questions/30995062/correlate-a-single-time-series-with-a-large-number-of-time-series" title="correlate a single time series with a large number of time series">stackoverflow.com/questions/30995062/â€¦</a></span>
<span class="comment-copy">Good idea! I will think about it.</span>
