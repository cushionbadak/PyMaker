<div class="post-text" itemprop="text">
<p>I am trying to figure out why the second string of "peptide_seq" bypasses the first <code>if</code> statement? The three strings are supposed to go through the <code>if</code> statements and return the following statements:</p>
<blockquote>
<p>Convert the string to uppercase.</p>
<ul>
<li>Strings that contain any character that is not A C G T or U should return: "not an unambiguous nucleotide".</li>
<li>Strings that contain ACGU should return "DNA".</li>
<li>Strings that contain ACGT should return "RNA".</li>
</ul>
</blockquote>
<pre><code>def nuc_ac_check(string):
    input_string = string.upper()

    if ('d') in input_string:
        return "not an unambiguous nucleic acid"
    elif ('A' and 'C' and 'G' and 'U') in input_string:
        return "Rna"
    elif ('A' and 'C' and 'G' and 'T') in input_string:
        return "Dna"

Rna_seq = "GGUACGGCUUGGUAUCCCACUCAGUGGCACCUGUGGCCU"
peptide_seq= "acgsdtushnsdses"
Dna_seq = "ggatacgatc"

print ('the rna seq variable is: ' + nuc_ac_check(Rna_seq))
print ('the peptide seq variable is: ' + nuc_ac_check(peptide_seq))
print ('the Dna seq variable is: ' + nuc_ac_check(Dna_seq))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First condition should be fixed in following way:</p>
<pre><code> if ('D') in input_string:
    return "not an unambigious nucleic acid"
</code></pre>
<p>Notice the upper case 'D' in the condition.</p>
<p><strong>Update:</strong>
Full code, using Holloway and rassar comments:
<strong>Update 1:</strong>
Full code, using Holloway and rassar, and Copperfield comments:</p>
<pre><code>def nuc_ac_check(string):
    input_string = string.upper()

    rna_letter = ['A', 'C', 'G', 'U']
    dna_letter = ['A', 'C', 'G', 'T']

    if ('D') in input_string:
        return "not an unambigious nucleic acid"
    elif all(letter in rna_letter for letter in input_string):
        return "Rna"
    elif all(letter in dna_letter for letter in input_string):
        return "Dna"
    return "Nothing of everything above"

Rna_seq = "GGUACGGCUUGGUAUCCCACUCAGUGGCACCUGUGGCCU"
peptide_seq= "acgsdtushnsdses"
Dna_seq = "ggatacgatc"
weird_string = "AGCTEXF"

print ('the rna seq variable is: ' + nuc_ac_check(Rna_seq))
print ('the peptide seq variable is: ' + nuc_ac_check(peptide_seq))
print ('the Dna seq variable is: ' + nuc_ac_check(Dna_seq))
print ('the weird string variable is: ' + nuc_ac_check(weird_string))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>.upper() will convert everything in the UPPERCASE. And other conditions like  <code>('A' and 'C' and 'G' and 'T')</code> will always give the one char, so you need to update the if clauses. 
You should try something like this.</p>
<pre><code>def containsAny(seq, aset):
    """ Check whether sequence seq contains ANY of the items in aset. """
    for c in seq:
        if c in aset: return True
    return False

def nuc_ac_check(string):
    input_string = string.upper() # update it as per your need

    if ('d') in input_string:
        return "not an unambigious nucleic acid"
    elif containsAny(input_string,['A','C','G','U']):
        return "Rna"
    elif containsAny(input_string,['A','C','G','T']):
        return "Dna"

Rna_seq = "GGUACGGCUUGGUAUCCCACUCAGUGGCACCUGUGGCCU" peptide_seq= "acgsdtushnsdses" Dna_seq = "ggatacgatc"

print ('the rna seq variable is: ' + nuc_ac_check(Rna_seq)) print ('the peptide seq variable is: ' + nuc_ac_check(peptide_seq)) print ('the Dna seq variable is: ' + nuc_ac_check(Dna_seq))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't say:</p>
<pre><code>elif ('A' and 'C' and 'G' and 'T') in input_string:
</code></pre>
<p>You have to say:</p>
<pre><code>elif 'A' in input_string and 'C' in input_string and 'G' in input_string and 'T' in input_string:
</code></pre>
<p>Or you could make it more concise:</p>
<pre><code>elif all(letter in input_string for letter in ('A', 'C', 'G', 'T')):
</code></pre>
<p>So try this:</p>
<pre><code>if all(letter in input_string for letter in ('A', 'C', 'G', 'U')):
    return "Rna"
elif all(letter in input_string for letter in ('A', 'C', 'G', 'T')):
    return "Dna"
else:
    return "not an unambiguous nucleic acid"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not certain what you are trying to do, but this may do the job:</p>
<pre><code>dna_set = set("ATGC")
rna_set = set("AUGC")
nucleotide_set = set("ATGCU")

def nuc_ac_check(string):
    str_set = set(string.upper())

    if str_set - nucleotide_set != set():
        return "Not an unambiguous nucleic acid"
    if str_set == rna_set:
        return "RNA"
    if str_set == dna_set:
        return "DNA"
    return "Not DNA or RNA"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>just asking if the string have <code>"d"</code> or <code>"D"</code> in it is not good enough to rule out a invalid string, because it may contain <code>"E"</code>, <code>"Z"</code>, <code>"X"</code>, <code>"1"</code>, <code>"@"</code> or any other possible character, the best solution for this in my opinion is to use a <a href="https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">set</a> which will reduce anything you give to it to only its distinct elements</p>
<p>for example</p>
<pre><code>&gt;&gt;&gt; set("111122222222ddddddddRRRRRRRDDDDD")
{'D', '1', 'd', '2', 'R'}
&gt;&gt;&gt;  
</code></pre>
<p>then you only need to compare against the set of valid option to see if there is any match</p>
<pre><code>RNA = set("ACGU")
DNA = set("ACGT")

def nuc_ac_check(string):
    d_r_na = set(string.upper())

    if d_r_na == DNA:
        return "DNA"
    elif d_r_na == RNA:
        return "RNA"
    else:
        return "not an unambiguous nucleotide"


Rna_seq = "GGUACGGCUUGGUAUCCCACUCAGUGGCACCUGUGGCCU"
peptide_seq= "acgsdtushnsdses"
Dna_seq = "ggatacgatc"

print('the rna seq variable is: ' + nuc_ac_check(Rna_seq))
print('the peptide seq variable is: ' + nuc_ac_check(peptide_seq))
print('the Dna seq variable is: ' + nuc_ac_check(Dna_seq))
</code></pre>
<p>and the output is</p>
<pre><code>the rna seq variable is: RNA
the peptide seq variable is: not an unambiguous nucleotide
the Dna seq variable is: DNA
</code></pre>
</div>
<span class="comment-copy"><code>input_string = string.upper()</code> you turned everything to upper. of course <code>'d'</code> will never hit...</span>
<span class="comment-copy">Note that <code>('A' and 'C' and 'G' and 'U')</code> is simply <code>'U'</code>, which I guess is not what you want.</span>
<span class="comment-copy">That makes a lot more sense. Thanks so much!!</span>
<span class="comment-copy">this can't rule out "AGCTEXF" for example, it would incorrectly mark it as dna</span>
<span class="comment-copy">@Copperfield, code is fixed. It is not an optimal way, but should work.</span>
<span class="comment-copy">cleaner to use <code>all(letter in input_string for letter in ('A', 'C', 'G', 'T'))</code></span>
<span class="comment-copy">@Holloway thanks...didn't know about that function :)</span>
<span class="comment-copy">If I was to say any letter in the first statment except A C G T U would it look like this:  if all(letter in input_string for letter in ('B', 'D', 'E', 'F', 'H', 'I', 'J','K', 'L', 'M', 'N', 'O', 'P', 'Q','R', 'S', 'V', 'X', 'Y', 'Z' )):         return "not an unambigious nucleic acid"</span>
<span class="comment-copy">would that work?</span>
<span class="comment-copy">ah it didnt. I used "any" and it worked. Thank you rassar and Holloway</span>
