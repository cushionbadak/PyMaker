<div class="post-text" itemprop="text">
<p>So I'm currently trying to unpack a struct that has the following format, written in C:</p>
<pre><code>{
    volatile bool
    volatile float
    bool
}
</code></pre>
<p>I have sent this out using the UDP library</p>
<pre><code> Udp.write(((byte*)&amp;pm), sizeof(struct PressureMonitor));
</code></pre>
<p>And on the other end, I am using Python to receive the Datapacket.</p>
<pre><code>import socket
import time
import struct

UDP_IP = '192.168.1.222'
UDP_PORT = 8742

sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) 

sock.bind((UDP_IP, UDP_PORT))
while True:
    data, addr = sock.recvfrom(1024) 
    print(len(data))
    print(struct.unpack('cfc',data))
    time.sleep(.01)
</code></pre>
<p>len(data) gives me a length of 6, which is expected. However, I'm running into issues on the next line. Given that the struct is formatted boolean, float, boolean, 'cfc' should be the right format string. However, it is erroring and telling me that it should be a 9 byte piece of data, which is completely baffling me. I could (as suggested by someone) simply replace the struct by a float/double array, but I feel like it would be better for me if I can figure out what is wrong with this.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to tell <code>struct.unpack</code> that your data isn't padded. </p>
<p>The format string <code>'cfc'</code> doesn't contain a byte order / alignment character, which is equivalent to specifying <code>'@'</code> as the byte order / alignment character, so you get native byte ordering and native alignment. Float data is 4 bytes wide and should be aligned on a 4 byte boundary, but since you have a one byte bool before your float 3 padding bytes get added after that first bool to ensure the float is correctly aligned.</p>
<p>You can specify native byte ordering with no padding with a <code>'=cfc'</code> format string. But it would be better to explicitly indicate the correct byte ordering. If the data is being sent from an Intel machine, that would be <code>'&lt;cfc'</code>. Please see <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">Byte Order, Size, and Alignment</a> in the <code>struct</code> module docs for details.</p>
</div>
<span class="comment-copy">Thanks! Just so I can better understand what's going on, what does a native and non-native byte order mean? I can't really find a good explanation of it.</span>
<span class="comment-copy">@VoidShredder The Wikipedia article on <a href="https://en.wikipedia.org/wiki/Endianness" rel="nofollow noreferrer">Endianness</a> has a good explanation of the byte order issue, so please read that article.</span>
