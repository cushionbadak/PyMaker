<div class="post-text" itemprop="text">
<p>I'm still pretty new to python so forgive me if this is extremely simple or extremely the wrong way of thinking about this. </p>
<p>I have python 2.7 installed. From what I understand when I run the following code, it lists the directories where it looks for modules. </p>
<pre><code>Python 2.7.12 (default, Oct 11 2016, 14:42:58) 
[GCC 4.2.1 Compatible Apple LLVM 7.3.0 (clang-703.0.31)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import sys
&gt;&gt;&gt; print '\n'.join(sys.path)

/usr/local/lib/python2.7/site-packages
/usr/lib/python2.7/site-packages
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/readline
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages
</code></pre>
<p>I have another directory that appears to have a bunch of python modules I installed in it. "/Library/Python/2.7/site-packages"</p>
<p>I guess I need to do one of two things:</p>
<p>(1) direct python to look in this additional folder for modules. <strong>How do I do that?</strong></p>
<p>(2) install the modules in one of the folders it is already directing to. I've been using pip to install modules, and I think pip is installing to this additional director. <strong>How do I check if pip is installing to this folder? How do I change where pip install packages to?</strong></p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>This stuff is setup by <a href="https://docs.python.org/3/library/site.html" rel="nofollow noreferrer"><code>site.py</code></a>.  You can find out which <code>site.py</code> by entering the interpreter with:</p>
<pre><code>python -v
</code></pre>
<p>Alternatively, import <code>site</code> in the interactive interpreter and check the <code>site.__file__</code> attribute.</p>
<p>There's also a helpful script in <code>site.py</code> which you can run with </p>
<pre><code>python -m site
</code></pre>
<p>What you want to see in the output there is your user site, something like</p>
<pre><code>USER_BASE: '/home/&lt;your_username&gt;/.local' (exists)
USER_SITE: '/home/&lt;your_username&gt;/.local/lib/python2.7/site-packages' (exists)
ENABLE_USER_SITE: True
</code></pre>
<p>When you <code>pip install</code> a package, use <code>pip install --user</code>, which will install modules to your user space.  <strong>Don't install stuff with <code>sudo pip install</code>.</strong>  Don't munge the <code>sys.path</code> manually like the "quick fix" from <a href="https://stackoverflow.com/questions/40982880/directing-python-to-look-in-another-folder-for-modules/40983129#comment69175602_40982880">jmd_dk</a> suggests.  <strong>Do it properly.</strong> </p>
<p>If, after reading the <a href="https://docs.python.org/3/library/site.html#site.USER_SITE" rel="nofollow noreferrer">site documentation</a> and <a href="https://www.python.org/dev/peps/pep-0370/" rel="nofollow noreferrer">PEP370</a>, you are still having trouble setting up the user site correctly, then it is acceptable to add a line like this in your bash profile:</p>
<pre><code>export PYTHONPATH=/home/&lt;your_username&gt;/.local/lib/python2.7/site-packages
</code></pre>
<p>If you have both a Python 3 and a Python 2 installation, beware that the <code>PYTHONPATH</code> environment variable will be seen by both interpreters.  In this case, it is strongly recommend to enable the <code>site.USER_SITE</code> separately for each interpreter (or use virtual environments) to provide adequate namespacing of installed packages.  </p>
</div>
<span class="comment-copy">A quick fix is to just append directories to <code>sys.path</code> in your code, e.g. <code>sys.path.append('/Library/Python/2.7/site-packages')</code>. This should be done before doing <code>import</code>s which rely on this directory.</span>
<span class="comment-copy">to see where any given library installed with pip is located use the pip show command: <code>C:\Users\...&gt;pip show numpy</code> look for the line <code>location:</code></span>
<span class="comment-copy">thanks, @jmd_dk, that works for me!  Thanks. Any way to tell it to permanently refer to this directory, rather than having to put in my code?</span>
<span class="comment-copy">@user1500158 add it to the <a href="https://en.wikipedia.org/wiki/Environment_variable" rel="nofollow noreferrer">system PYTHONPATH variable</a></span>
<span class="comment-copy">thanks for the info.  I didn't know adding sudo to the front of that line of code "put the module in the wrong place". Am I thinking about this correctly?</span>
<span class="comment-copy">Yeah, you're thinking about it incorrectly.  You should install python modules with your user account, not with the root account.  And <code>jmd_dk</code> comment is harmful, if I was a moderator I would delete it.</span>
<span class="comment-copy">thanks for the clarity!</span>
