<div class="post-text" itemprop="text">
<p>I am working on a compute server which runs a linux. The machine is used by several users so I don't have and won't get root privileges. 
I need to install <code>Keras</code> which you would normally do by using <code>pip</code></p>
<p>Now, pip is not installed and the <code>root</code> won't install it for me either unless I beg him for probably a month or so. I tried to locally install pip with the python installation scrip <code>Python352/bin/python3.5 get-pip.py --user</code></p>
<p>This unfortunately throws me an <code>no permission error /etc</code>. This is not exactly what I expected from installing the tool locally. Is it somehow possible to make an installation of pip that does not try to touch anything outside my local directory?</p>
</div>
<div class="post-text" itemprop="text">
<p>For installing <code>pip</code> as user without sudo access, check: <a href="https://askubuntu.com/questions/363300/how-to-install-pip-python-to-user-without-root-access">How to install pip (python) to user without root access</a>.</p>
<hr/>
<p>Also, you need a virtual environment and for that you may use <a href="http://pypi.python.org/pypi/virtualenv" rel="nofollow noreferrer"><code>virtualenv</code></a>. As the <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/" rel="nofollow noreferrer">virtual environment doc</a> says:</p>
<blockquote>
<p>A Virtual Environment is a tool to keep the dependencies required by different projects in separate places, by creating virtual Python environments for them. It solves the “Project X depends on version 1.x but, Project Y needs 4.x” dilemma, and keeps your global site-packages directory clean and manageable.</p>
</blockquote>
<p><strong>How it fits you?</strong></p>
<ol>
<li>You don't need to be root, in order to use it</li>
<li>You may install multiple versions of libraries in different virtual environment without worrying about the version conflicts.</li>
<li>You need not to worry about the libraries you install to mess up with the configuration of the other users using the system</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>I had the similar case as you and I chose the Anaconda. You can download Anaconda file from this <a href="https://www.anaconda.com/download/#linux" rel="nofollow noreferrer">page</a> using <code>wget</code>. You will happily find the file to be a <code>.sh</code> file. </p>
<p>Use the following command to install Anaconda (for Python3):</p>
<pre><code>bash ./Anaconda3-5.0.1-Linux-x86_64.sh
</code></pre>
<p>Use the following command to install other <em>software</em> (SOFTWARE_NAME) by pip:</p>
<pre><code>anaconda3/bin/pip install SOFTWARE_NAME
</code></pre>
<p>Hope it could help you.</p>
</div>
<span class="comment-copy">Create a virtual environment and do your stuff within that</span>
<span class="comment-copy">Are you sure <code>pip</code> is not already installed? <a href="https://docs.python.org/3/installing/" rel="nofollow noreferrer">Since 3.4, <code>pip</code> comes default with the binary installers of python</a>.</span>
<span class="comment-copy">I tried <code>python3.5 get-pip.py --user</code> using on my Linux Mint 17 system and did not get the permission error (as normal user without write rights on <code>/etc</code> and using 3.5.2)</span>
<span class="comment-copy">Then this might be some over-strict restriction on this shared system. I think they want to contain all user-tools in a folder than can simply deleted after some time when the user is inactive.</span>
<span class="comment-copy">For installing pip, try: <a href="http://askubuntu.com/questions/363300/how-to-install-pip-python-to-user-without-root-access">How to install pip (python) to user without root access</a></span>
<span class="comment-copy">And how do you propose the OP installs <code>virtualenv</code>? Using <code>pip install virtualenv</code>? Without detailed instructions how to do that , this is just a repeat of your other comment, not an answer.</span>
