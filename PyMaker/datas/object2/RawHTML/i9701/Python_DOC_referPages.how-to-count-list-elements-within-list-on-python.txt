<div class="post-text" itemprop="text">
<p>I sorted lists within list on python. but I need to count list elements too. following list:</p>
<pre><code>fruit = [
    ['Apple', 'S+'], ['Apple', 'S+'], ['Apple', 'B+'],
    ['Grape', 'B+'], ['Grape', 'C+']
]
</code></pre>
<p>result:</p>
<pre><code>{'Apple':{'total':3, 'S+':2, 'B+':1}, 'Grape':{'total':2, 'B+':1, 'C+':1}}
</code></pre>
<p>I got above result through several for and while. but I want simple way. Is there beautiful and simple way to get result above thing ?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">itertools.groupby</a> is fun.</p>
<pre><code>&gt;&gt;&gt; result = {}
&gt;&gt;&gt; for k, v in groupby(fruit,lambda x:x[0]):
...     value = list(v)
...     result[k] = {'total':len(value)}
...     for i,j in groupby(value, lambda x:x[1]):
...         result[k].update({i:len(list(j))})
</code></pre>
<p>Output:</p>
<pre><code>{'Grape': {'total': 2, 'C+': 1, 'B+': 1}, 'Apple': {'total': 3, 'S+': 2, 'B+': 1}}
</code></pre>
<p>N.B.</p>
<p>Though, not needed here, it is always wise to sort the collection before applying groupby. For this example:</p>
<pre><code>fruit = sorted(fruit, key= lambda x:(x[0],x[1]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something approaching what you want, using <code>collections.defaultdict</code> and <code>collections.Counter</code>.</p>
<p>I tried to make it as pythonic as possible.</p>
<pre><code>import collections

fruit = [
    ['Apple', 'S+'], ['Apple', 'S+'], ['Apple', 'B+'],
    ['Grape', 'B+'], ['Grape', 'C+']
]


d = collections.defaultdict(lambda : [collections.Counter(),0])

for k,v in fruit:
    d[k][0][v]+=1
    d[k][1]+=1

print(dict(d))  # convert to dict for readability when printing
</code></pre>
<p>result:</p>
<pre><code>{'Grape': [Counter({'B+': 1, 'C+': 1}), 2], 'Apple': [Counter({'S+': 2, 'B+': 1}), 3]}
</code></pre>
<p>details:</p>
<ul>
<li>create a dictionary that defaults to creating a 2-element list when key doesn't exist. This element list is made of a <code>collections.Counter</code> object and an integer (for global count)</li>
<li>loop on the "tuples", and count elements and total.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>unique, counts = numpy.unique(fruits, return_counts=True)
</code></pre>
<p><code>return_counts</code> was added to <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.unique.html" rel="nofollow">unique</a> in numpy 1.9.0 </p>
</div>
