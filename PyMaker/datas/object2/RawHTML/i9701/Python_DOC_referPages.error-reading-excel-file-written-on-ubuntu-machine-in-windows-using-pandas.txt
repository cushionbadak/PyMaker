<div class="post-text" itemprop="text">
<p>I am using Pandas for data analysis. In one of the programs, I had to write an Excel sheet and I accomplished using <code>pd.to_excel()</code>. This was executed on an <strong>Ubuntu machine.</strong></p>
<p>Now I was trying to read the written excel file on a <strong>Windows machine</strong>. I am using <code>pd.read_excel()</code>.</p>
<p>I am getting the following error:</p>
<pre><code>IOError: [Errno 22] invalid mode ('rb') or filename: 'C:\\Users\\Harshavardhan R\\Downloads\\Kerala Energy Project\\Bottom-Up Modelling\threshold variation\\outputs\x07c1.xlsx'
</code></pre>
<p>The source is:</p>
<pre><code>df = pd.read_excel('C:\Users\Harshavardhan R\Downloads\Kerala Energy Project\Bottom-Up Modelling\threshold variation\outputs\ac1.xlsx')
</code></pre>
<p>I can vouch that the file is present as I have opened it and checked.</p>
<p>Why is the file name changed to <code>x07c1.xlsx</code> in the error message? How would I avoid this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>The error you are getting is due to how Windows normally expects file paths to look (with the <code>\</code>) versus how Ubuntu expects them (with <code>/</code>).</p>
<p>Your path, as written, has <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-literals" rel="nofollow noreferrer">escape sequences</a>, specifically a <code>\t</code> (tab) and <code>\a</code> (BEL). </p>
<p>The second one is why you see <code>\x07c1.xlsx</code>. The <code>\x07</code> is the ASCII representation of <code>BEL</code>. If you look closely at the path you'll also notice a hidden tab character as well. This can be seen when there is only one slash instead of two:</p>
<pre><code>\\Bottom-Up Modelling\threshold variation\\
                     ^^ This is a tab, not a "t"
</code></pre>
<hr/>
<p>You can fix this by doing a one of a couple different things. The easiest, is to make the path a raw string. Do this by putting an <code>r</code> in front of your string:</p>
<pre><code>df = pd.read_excel(r'C:\Users\Harshavardhan R\Downloads\Kerala Energy Project\Bottom-Up Modelling\threshold variation\outputs\ac1.xlsx')
</code></pre>
<p>This reads the string literally as it exists. One note: A raw string can not end with a single backslash.</p>
<p>Another option is to escape your backslashes by making each backslash into two:</p>
<pre><code>df = pd.read_excel('C:\\Users\\Harshavardhan R\\Downloads\\Kerala Energy Project\\Bottom-Up Modelling\\threshold variation\\outputs\\ac1.xlsx')
</code></pre>
<p>This works, but requires that you perform this step every time you use the path.</p>
<p>A final option is to use forward slashes. Windows can handle forward slashes just fine, it's just not the standard convention of the operating system</p>
<pre><code>df = pd.read_excel('C:/Users/Harshavardhan R/Downloads/Kerala Energy Project/Bottom-Up Modelling/threshold variation/outputs/ac1.xlsx')
</code></pre>
<hr/>
<p>Personally, I'd go with the raw string. It's a single character and the path doesn't "look weird" to you or other developers. </p>
</div>
<span class="comment-copy">Try using forward slashes (/) as you are in Windows (or) add a raw string <code>r</code> at the beginning of specifying the file path.</span>
<span class="comment-copy">Checked all three methods and all of them work. Sticking with the raw string format.</span>
