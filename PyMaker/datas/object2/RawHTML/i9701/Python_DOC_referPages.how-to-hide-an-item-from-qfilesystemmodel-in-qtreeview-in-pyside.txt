<div class="post-text" itemprop="text">
<p>I cannot figure out how to hide an item or a row from <code>QFileSystemModel</code>?
After using <code>removeRows</code> nothing happens. I've also tried </p>
<pre><code>    self.model.beginRemoveRows(QtCore.QAbstractItemModel.index(), 0, 10)
    self.model.endRemoveRows()
</code></pre>
<p>With no result. How can I do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>QFileSystemModel doesnt follow the conventional functions for removing items, I guess because it is so potentially destructive.</p>
<p>you need to call <code>self.model.remove(index)</code> for each one. This will permanently delete the files. 
You also need to call <code>self.model.rmdir(index)</code> if it happens to be a folder.</p>
<p>see 
<a href="http://doc.qt.io/qt-4.8/qfilesystemmodel.html#remove" rel="nofollow noreferrer">http://doc.qt.io/qt-4.8/qfilesystemmodel.html#remove</a></p>
<p>If you are just trying to hide the rows, then you can add a list of filters e.g. ["*.cpp", "*.h"] via <a href="http://doc.qt.io/qt-4.8/qfilesystemmodel.html#setNameFilters" rel="nofollow noreferrer">QFileSystem.setNameFilters</a>, which uses <a href="http://doc.qt.io/qt-4.8/qdir.html#setNameFilters" rel="nofollow noreferrer">QDir::setNameFIlters</a>. </p>
<p>If you are doing something more specialised, then you can use <code>QSortFilterProxy</code>. Either use it directly with a QRegExp, or subclass and implement <code>filterAcceptsRow()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>As an aside: You're never supposed to call the <code>beginXxx</code> and <code>removeXxx</code> methods as the user of a model. The model itself is supposed to invoke those.</p>
<p>This is an error in the PySide wrapper's API design. In C++, those methods are protected. Python has no concept of a protected method per se, and the implementers of PySide evidently chose to expose protected methods using unadorned names in spite of Python conventions. In Python, it might be conventional to prefix protected methods with a single underscore <code>_</code>. The private methods use a double underscore <code>__</code>, but that wouldn't matter since they wouldn't propagate into they Pythonic API from C++.</p>
</div>
<span class="comment-copy">Thanks, I've got to read a little more on this subject. But cannot I just hide an item from the view? Because, in fact, that's what I'm trying to do.</span>
<span class="comment-copy">QFileSystemModel supports simple name filters (added to answer), or use more complex ones with QSortFilterProxy. Don't think you can just remove row 1.</span>
<span class="comment-copy">The <a href="http://docs.python.org/3/reference/expressions.html#atom-identifiers" rel="nofollow noreferrer">double-underscore</a> isn't merely a convention - it's part of the language specification. Double-underscored names are automatically mangled in order to avoid clashes between "private" attributes of base and derived classes. There is no real convention for single-underscored names - for example, the standard library <a href="https://docs.python.org/3/library/collections.html#collections.somenamedtuple._make" rel="nofollow noreferrer">namedtuple</a> class uses them as part of its public API.</span>
