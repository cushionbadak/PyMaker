<div class="post-text" itemprop="text">
<p>Programs like <code>resize</code> ask the terminal about its size. And ultimately they will send some (ANSI) escape sequences to stdout and expect the terminal to react on those by itself returning some bytes.</p>
<p>The effect of the mechanism is visible with this interactive Python snippet:</p>
<pre><code>&gt;&gt;&gt; print('\x1b[21;t')
</code></pre>
<p>Gnome-terminal will insert visibly something related to the window title on stdin.</p>
<p><strong>Which script snippet will provoke the terminal to write it’s size (in characters)?</strong> If the size is returned invisible, some simple transformation should be done to see something. Shell, Python, Perl, whatever language is fine. As this will be terminal specific, any common terminal emulator is fine (e.g. xterm, gnome-terminal, terminator, ...).</p>
<p>Clarification: I don’t care about programs which tell me the size. I know about TIOCGWINSZ, which does not work over serial lines. I want to see code which uses escape sequences, which actually works over serial lines.</p>
</div>
<div class="post-text" itemprop="text">
<p>The following program saves the current cursor position; moves the cursor to 999,999; queries the terminal for the current position; and restores the cursor position.</p>
<p>Assuming that your terminal is smaller than 999x999, this effectively queries the size of the terminal.</p>
<pre><code>import sys
print('\033[s\033[999;999H\033[6n\033[u')
print(repr(next(sys.stdin)))
</code></pre>
<p>Resources:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/ANSI_escape_code</a></li>
<li><a href="https://stackoverflow.com/questions/31619962/vt100-ansi-escape-sequences-getting-screen-size-conditional-ansi">VT100 ANSI escape sequences: getting screen size, conditional ANSI</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>I lifted this technique from the GNU source of <code>stty(1)</code> at <a href="http://code.metager.de/source/xref/gnu/coreutils/src/stty.c#1739" rel="nofollow noreferrer">http://code.metager.de/source/xref/gnu/coreutils/src/stty.c#1739</a>.  I tested it on OS X, and I could not guarantee it would work elsewhere, but its worth a try.</p>
<pre><code>import fcntl
import termios
import struct

pad = "0" * 8
s = fcntl.ioctl(1, termios.TIOCGWINSZ, pad)
sz = struct.unpack('hhhh', s)
print("rows: {} columns: {}, xpixels: {}, ypixels: {}". format(*sz))
</code></pre>
<p>on my machine gives:</p>
<pre><code>rows: 24 columns: 80, xpixels: 1200, ypixels: 600
</code></pre>
<p>Edit:  The source code for <code>os.get_terminal_size</code> is in <code>Modules/posixmodule.c</code> with a function called <code>get_terminal_size</code>.  One of the mechanisms is that shown above, but there are others depending on macros <code>TERMSIZE_USE_IOCTL</code> and <code>TERMSIZE_USE_CONIO</code>, the CONIO route is used for Windows. </p>
</div>
<span class="comment-copy">The <code>stty</code> program reports the number of columns and rows, you could look at the GNU source <a href="http://code.metager.de/source/xref/gnu/coreutils/src/stty.c#get_win_size" rel="nofollow noreferrer">code.metager.de/source/xref/gnu/coreutils/src/…</a>.  It uses <code>ioctl</code>.</span>
<span class="comment-copy">So you aren't interested in <a href="https://docs.python.org/3/library/os.html#os.get_terminal_size" rel="nofollow noreferrer">os.get_terminal_size</a>?</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/35688348/how-do-i-determine-size-of-ansi-terminal">How do I determine size of ANSI terminal?</a></span>
<span class="comment-copy">It correctly returns the rows &amp; columns for me in both konsole and xterm in Linux, but it returns 0 for the dimensions in pixels in konsole.</span>
<span class="comment-copy">What does this <code>ioctl()</code> do? – The terminal size (e.g. over serial lines) is not known to the kernel.</span>
<span class="comment-copy">Does not work over serial line.</span>
<span class="comment-copy">Do a <code>man ioctl</code> if you want to know what it does.  The <code>1</code> is the standard output file descriptor.  If you are using some sort of emulator then I would expect the emulator to inform the server end of any change in size.  Does <code>stty -a</code> work?  If so, then work back from the source code of that, as I did.</span>
<span class="comment-copy">Did you try <code>os.get_terminal_size</code> (or <code>shutil.get_terminal_size</code>) as @PM2Ring suggested?</span>
