<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/40644096/argparse-differentiate-between-no-options-option-invoked-and-option-invoked">Argparse - differentiate between no options, option invoked, and option invoked with argument?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>How do I add an optional argument which has a default value and can be called with another value or which can be called without value (and has the default one).
So I have this argument</p>
<pre><code>    parser.add_argument("-a", "--automatic", type=int, default=8)
</code></pre>
<p>and I would like to be able to call.
<code>My_script.py -a</code>   if I want an automatic mode with 8 as argument, but I also want to do for example <code>My_script.py -a 10</code> if I want an automatic mode with 10 (or any other number) as argument.
The problem is that I get expected one argument when I run with <code>My_script.py -a</code>. If I don't want to specify the 8, I am also not allowed to specify the -a and then I have to run <code>My_script.py</code>, which is not what I want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Add <code>nargs='?'</code> and <code>const=8</code>. From <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">the documentation</a>:</p>
<blockquote>
<p>ArgumentParser objects usually associate a single command-line argument with a single action to be taken. The nargs keyword argument associates a different number of command-line arguments with a single action.</p>
<p>...</p>
<p><code>'?'</code>. One argument will be consumed from the command line if possible, and produced as a single item. If no command-line argument is present, the value from <a href="https://docs.python.org/3/library/argparse.html#default" rel="nofollow noreferrer">default</a> will be produced. Note that for optional arguments, there is an additional case - the option string is present but not followed by a command-line argument. In this case the value from <a href="https://docs.python.org/3/library/argparse.html#const" rel="nofollow noreferrer">const</a> will be produced.</p>
</blockquote>
</div>
<span class="comment-copy">If passing nothing is equivalent to passing <code>-a</code> without a value, why allow the latter? It just makes it easier to make mistakes/ambiguity in the parsing. <code>nargs='?'</code> sort of works (you have to manually replace <code>None</code> with <code>8</code> when it happens, because if provided without an argument, it's not the default case, so it stores <code>None</code>), but it's a bad idea.</span>
<span class="comment-copy">That seems ambiguous. How is the parser supposed to tell whether the thing after <code>-a</code> is a value for the <code>-a</code> option, or a positional argument? Whether or not argparse supports this, I don't think this is a good interface.</span>
<span class="comment-copy">Play with <code>nargs='?'</code> and give it <code>default</code> and <code>const</code> parameters.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/40644096/argparse-differentiate-between-no-options-option-invoked-and-option-invoked" title="argparse differentiate between no options option invoked and option invoked">stackoverflow.com/questions/40644096/â€¦</a></span>
<span class="comment-copy">@user2357112: Well, <code>argparse</code> does accept <code>--</code> to mean "done with switches, positionals follow", but yeah, not everyone knows about that, and the ambiguity of <code>nargs='?'</code> (or worse, <code>'*'</code> or <code>'+'</code>), causes all sorts of problems.</span>
<span class="comment-copy">That's not enough, you need to pass <code>const</code> too, as @hpaulj notes, or passing the switch without a value stores <code>None</code>, not the <code>default</code> value.</span>
<span class="comment-copy">Right you are, @ShadowRanger. I've updated my answer. Thanks to you and hpaulj for the correction.</span>
