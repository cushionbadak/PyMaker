<div class="post-text" itemprop="text">
<p>What is the Pythonic way of writing a single-line but long string in program:</p>
<pre><code>s = 'This is a long long string.'
</code></pre>
<p>Additionally, the string may need to be formatted with variables:</p>
<pre><code>s = 'This is a {} long long string.'.format('formatted')
</code></pre>
<h2>Existing Solution 1</h2>
<pre><code>s = 'This is a long '\
        'long '\
        'string.'
</code></pre>
<p>Additional trailing <code>\</code> characters make reformatting very difficult. Joining two lines with a <code>\</code> gives an error.</p>
<h2>Existing Solution 2</h2>
<pre><code>s = 'This is a long \
long \
string.'
</code></pre>
<p>Except for a similar problem as above, subsequent lines must be aligned at the very beginning, which gives awkward readability when the first line is indented.</p>
</div>
<div class="post-text" itemprop="text">
<p>For long strings where you don't want \n characters, use 'string literal concatenation':</p>
<pre><code>s = (
    'this '
    'is '
    'a '
    'long '
    'string')
</code></pre>
<p>Output:</p>
<blockquote>
<p>This is a long string</p>
</blockquote>
<p>And it can be formatted as well:</p>
<pre><code>s = (
    'this '
    'is '
    'a '
    '{} long '
    'string').format('formatted')
</code></pre>
<p>Output:</p>
<blockquote>
<p>This is a formatted long string</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Here's the PEP8 guideline:
<a href="https://www.python.org/dev/peps/pep-0008/#maximum-line-length" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0008/#maximum-line-length</a></p>
<p>Wrap long lines in parenthesis.</p>
<p>Use a maximum of 72 characters per line for long lines of text.</p>
<p>If you have any operators in your string, place the line breaks before them.</p>
<p>Other than that, as long as you're not obscuring what's going on, it's pretty much up to you on how you want to do it.</p>
</div>
<span class="comment-copy">Not a duplicate.. this appears to be about single line long strings, while that stackoverflow question is for multi-line strings.</span>
<span class="comment-copy">@chris I don't think this is a duplicate to the other question being referenced. This is about single-line strings, not multi-line ones.</span>
<span class="comment-copy">Agree with @rgilligan – the question being referred to is for <i>multi-line</i> strings, please re-open this question.</span>
<span class="comment-copy">I actually voted to close this as primarily opinion-based, not as a duplicate of that question. I agree that it is different. However, this <i>has</i> been asked before, e.g. <a href="https://stackoverflow.com/questions/2058925/how-can-i-break-up-this-long-line-in-python" title="how can i break up this long line in python">stackoverflow.com/questions/2058925/…</a>. It probably shouldn't be reopened.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/lexical_analysis.html#string-literal-concatenation" rel="nofollow noreferrer">Reference</a>.</span>
<span class="comment-copy">This one looks the best at the moment, but it doesn't work with formatting command in text editors such as vim's <code>gq</code> when you modify the string. Also, you may need to write multiple <code>.format</code>, one for each element you need to format.</span>
<span class="comment-copy">Just do s = (...).format() and you should be good.</span>
<span class="comment-copy">@Cyker: That is incorrect, you only write one <code>.format()</code>.</span>
<span class="comment-copy">@rgilligan All right. It works and by giving it a second look I now understand why. This looks cool. Thank you very much.</span>
