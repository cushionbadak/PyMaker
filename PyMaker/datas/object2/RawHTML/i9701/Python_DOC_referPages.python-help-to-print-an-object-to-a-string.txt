<div class="post-text" itemprop="text">
<p>so I have a project that is pretty straight forward. It's a simple BMI calculator and should just simply print, </p>
<p>"The BMI for (name) is (BMI), (status, like if they're underweight, overweight etc.)</p>
<pre><code>name = str(input("What is your name? "))
age = int(input("What is your age? "))
weight_float = float(input("What is your weight in pounds? "))
height_float = float(input("What is your height in inches? "))

Pounds2Kilogram = weight_float * 0.453592
Inches2Meter = height_float * 0.0254

weight = Pounds2Kilogram
height = Inches2Meter


class calcBMI:

    def __init__(self, name, age, weight, height):
        self.__name = name
        self.__age = age
        self.__weight = weight
        self.__height = height

    def getBMI(self):
        return self.__weight / (self.__height **2)

    def getStatus(self):
        if BMI &lt; 18.5:
            self.__getStatus = "Underweight"
        elif 18.5 &lt; BMI &lt; 24.9:
            self.__getStatus = "Normal"
        elif 25.0 &lt; BMI &lt; 29.9:
            self.__getStatus = "Overweight"
        elif BMI &gt; 30:
            self.__getStatus = "Obese"

    def getName(self):
        return self.__name

    def getAge(self):
        return self.__age

    def getWeight(self):
        return self.__weight

    def getHeight(self):
        return self.__height

    def __str__(self):
        return "The BMI for", + self.__name(), + "is", + self.__getBMI()

    def PrintBMI(self):
        print(self.__str__())

a = caclBMI     
print(a)
</code></pre>
<p>I keep getting: </p>
<pre><code> &lt;class '__main__.calcBMI'&gt;
</code></pre>
<p>I know that means I need to convert the object to a string and I'm sure I'm missing something simple. </p>
<p>Thanks for helping if you do so choose to.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<pre><code>a = caclBMI
</code></pre>
</blockquote>
<p>You've rebound <code>a</code> to the class. You need to instantiate the class instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you're not actually instantiating the object. You need to instantiate an instance of <code>CalcBMI</code></p>
<pre><code>...

my_calc_bmi = CalcBMI(my_name, my_age, ...)
print "String representation is: ", my_calc_bmi
print "Or converting explicitly: %s" % (str(my_calc_bmi))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just implement <code>__str__</code> and <code>__repr__</code> methods.</p>
<p><a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer">https://docs.python.org/3/reference/datamodel.html#object.<strong>str</strong></a></p>
<p><a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer">https://docs.python.org/3/reference/datamodel.html#object.<strong>repr</strong></a></p>
<pre><code>class calcBMI:
    def __str__(self):
        return "The BMI for {} is {}".format(self.__name, self.getBMI())

    def __repr__(self):
        return 'calcBMI({}, {}, {), {})'.format(self.__name, self.__age, self.__height, self.__weight)

...

a = calcBMI("Zogzog", 123, 210, 176)
print(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have problem in the following method:</p>
<pre><code>def __str__(self):
        return "The BMI for " + self.__name + " is " + str(self.getBMI())
</code></pre>
<p>Since <code>self.getBMI()</code> is returning <code>float</code> value, you need to convert it to <code>string</code>.</p>
<p>Moreover, you need to instantiate the class instead as follows:</p>
<pre><code>a = caclBMI(name, age, weight, height)
</code></pre>
<p>For example:</p>
<pre><code>a = calcBMI('Alex', 25, 100, 60)
print(a)
</code></pre>
<p>It outputs:</p>
<pre><code>The BMI for Alex is 0.027777777777777776
</code></pre>
</div>
<span class="comment-copy">what are you getting when you try to print?</span>
<span class="comment-copy">The call to <code>__getBMI()</code> in <code>__str__()</code> probably doesn't work since it's not defined.</span>
<span class="comment-copy">It looks like you're not actually instantiating the object. You need to instantiate an instance of <code>CalcBMI</code></span>
<span class="comment-copy">Also note that <code>__str__</code> method as defined above returns a 4-tuple (if anything) instead of a string.</span>
<span class="comment-copy"><code>__str__</code> has problem in syntax, OP used both comma and plus sign which doesn't make sense!</span>
<span class="comment-copy">It looks like OP has implemented <code>__str__()</code></span>
<span class="comment-copy">you would be correct @theorifice</span>
<span class="comment-copy">yeah, but incorrectly</span>
<span class="comment-copy">now I'm getting TypeError: 'str' object is not callable,</span>
<span class="comment-copy">I have a = calcBMI(name, age, weight, height)</span>
<span class="comment-copy">make sure you are using - <code>self.__name</code> and <code>str(self.getBMI())</code>. if not, please update your code and we will be able to check.</span>
<span class="comment-copy"><code>return "The BMI for",  self.__name,  "is",  str(self.__getBMI())</code></span>
<span class="comment-copy">I get the error, <b>AttributeError: 'calcBMI' object has no attribute '<i>calcBMI</i>_getBMI'</b></span>
