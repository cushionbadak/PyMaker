<div class="post-text" itemprop="text">
<p>Let's say I have the following <code>2D</code> <code>NumPy</code> array consisting of four rows and three columns:</p>
<pre><code>&gt;&gt;&gt; a = numpy.array([[True, False],[False, False], [True, False]])
&gt;&gt;&gt; array([[ True, False],
       [False, False],
       [ True, False]], dtype=bool)
</code></pre>
<p>What would be an efficient way to generate a <code>1D</code> array that contains the logic or of all columns (like <code>[True, False]</code>)?</p>
<p>I searched the web and found someone referring to <code>sum(axis=)</code> to calculate the <code>sum</code>. </p>
<p>I wonder if there is some similar way for logic operation?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, there is. Use <code>any</code>:</p>
<pre><code>&gt;&gt;&gt; a = np.array([[True, False],[False, False], [True, False]])
&gt;&gt;&gt; a
array([[ True, False],
       [False, False],
       [ True, False]], dtype=bool)
&gt;&gt;&gt; a.any(axis=0)
array([ True, False], dtype=bool)
</code></pre>
<p>Note what happens when you change the argument <code>axis</code> to <code>1</code>:</p>
<pre><code>&gt;&gt;&gt; a.any(axis=1)
array([ True, False,  True], dtype=bool)
&gt;&gt;&gt; 
</code></pre>
<p>If you want logical-and use <code>all</code>:</p>
<pre><code>&gt;&gt;&gt; b.all(axis=0)
array([False, False], dtype=bool)
&gt;&gt;&gt; b.all(axis=1)
array([ True, False, False], dtype=bool)
&gt;&gt;&gt; 
</code></pre>
<p>Also note that if you leave out the <code>axis</code> keyword argument, it works across every element:</p>
<pre><code>&gt;&gt;&gt; a.any()
True
&gt;&gt;&gt; a.all()
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>NumPy has also a <a href="https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.ufunc.reduce.html" rel="nofollow noreferrer"><code>reduce</code></a> function which is similar to Python's <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>reduce</code></a>. It's possible to use it with NumPy's <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/routines.logic.html#logical-operations" rel="nofollow noreferrer">logical operations</a>. For example:  </p>
<pre><code>&gt;&gt;&gt; a = np.array([[True, False],[False, False], [True, False]])
&gt;&gt;&gt; a
array([[ True, False],
       [False, False],
       [ True, False]])
&gt;&gt;&gt; np.logical_or.reduce(a)
array([ True, False])
&gt;&gt;&gt; np.logical_and.reduce(a)
array([False, False])
</code></pre>
<p>It also has the <code>axis</code> parameter:</p>
<pre><code>&gt;&gt;&gt; np.logical_or.reduce(a, axis=1)
array([ True, False,  True])
&gt;&gt;&gt; np.logical_and.reduce(a, axis=1)
array([False, False, False])
</code></pre>
<p>The idea of <code>reduce</code> is that it cumulatively applies a function (in our case <code>logical_or</code> or <code>logical_and</code>) to each row or column.</p>
</div>
<span class="comment-copy">Looks like you forgot to include <code>b</code> in your example: <code>b = np.array([[True, True],[False, False], [True, False]])</code></span>
