<div class="post-text" itemprop="text">
<p>Sometime, I can't identify when or what's causing it, pdb will not help you with code like:</p>
<pre><code>try:
    foo()
except Exception as e:
   import pdb; pdb.set_trace()
</code></pre>
<p>You end up with the usual prompt, but trying to access <code>e</code> will lead to:</p>
<pre><code>(pdb) e
*** NameError: name 'e' is not defined.
</code></pre>
<p>It's not all the time of course, and it happens on linux, windows, my machine, my colleague machine...</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, the target of an <code>except .. as target</code> statement is cleared when the suite exits. From the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-try-statement" rel="noreferrer"><code>try</code> statement documentation</a>:</p>
<blockquote>
<p>When an exception has been assigned using as <code>target</code>, it is cleared at the end of the except clause. This is as if</p>
<pre><code>except E as N:
    foo
</code></pre>
<p>was translated to</p>
<pre><code>except E as N:
    try:
        foo
    finally:
        del N
</code></pre>
<p>This means the exception must be assigned to a different name to be able to refer to it after the except clause. Exceptions are cleared because with the traceback attached to them, they form a reference cycle with the stack frame, keeping all locals in that frame alive until the next garbage collection occurs.</p>
</blockquote>
<p>Calling <code>pdb.set_trace()</code> effectively exits the block, so the implicit <code>finally</code> suite above is executed.</p>
<p>Bind the exception to a different name:</p>
<pre><code>try:
    foo()
except Exception as e:
   exception = e
   import pdb; pdb.set_trace()
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; try:
...     foo()
... except Exception as e:
...    exception = e
...    import pdb; pdb.set_trace()
...
--Return--
&gt; &lt;stdin&gt;(5)&lt;module&gt;()-&gt;None
(Pdb) e
*** NameError: name 'e' is not defined
(Pdb) exception
NameError("name 'foo' is not defined",)
</code></pre>
</div>
<span class="comment-copy">Confirmed to be Python 3 only; it works (as expected) in Python 2.</span>
