<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4937491/matrix-transpose-in-python">Matrix Transpose in Python</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>Suppose I create a list of list of integers to reflect a 3 x 3 matrix:</p>
<p>matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] to reflect the matrix:</p>
<p>1 2 3</p>
<p>4 5 6</p>
<p>7 8 9</p>
<p>In math literature and readings, we usually refer entries of a matrix in (x,y) form. So if we wanted to know the entry in the 1st row, 3rd column, we would consider (0, 2) entry of the matrix, the entry being the value 3. </p>
<p>Naturally one could mistake matrix[0][2] to be the same as well when it actually returns the value 7. To get the value 3, we would have to switch the list entry positions to matrix[2][0]. </p>
<p>Besides manipulating the construction of the matrix, creating another data structure, or creating another list of list, is there a way in Python to switch the entry positions? so that:</p>
<p>modifiedList[x][y] == originalList[y][x]</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.3/library/functions.html#zip" rel="nofollow">zip</a> :</p>
<blockquote>
<p>Make an iterator that aggregates elements from each of the iterables</p>
</blockquote>
<pre><code>list(zip(*matrix))
[(1, 4, 7), (2, 5, 8), (3, 6, 9)]
</code></pre>
<p><code>*</code> is used to pass list of elements (<a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow">unpacking the arguments</a>), rather than single list. So the effect of <code>*</code> above is that, the arguments of zip will be: (1, 4, 7), (2, 5, 8), (3, 6, 9), that is:</p>
<pre><code>list(zip((1, 4, 7), (2, 5, 8), (3, 6, 9))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That's known as a transposition. If you're using numpy ndarray, all you need is to call <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.transpose.html#numpy.ndarray.transpose" rel="nofollow">ndarray.transpose</a> to get a view with the axis swapped. If you really want the list of lists form, it's not that hard to do a transposition:</p>
<pre><code>&gt;&gt;&gt; list(map(list,zip(*matrix)))
[[1, 4, 7], [2, 5, 8], [3, 6, 9]]
</code></pre>
<p>Note that numpy's view does what you ask for, give a view that doesn't alter the underlying data structure but only the indexing. The zip way creates a full set of new lists. You could also create a proxy object that has getitem mapped to another behaviour, but numpy already has that in a more efficient form (for numeric matrices). </p>
</div>
