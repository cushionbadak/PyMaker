<div class="post-text" itemprop="text">
<p>I am creating a Rock, Paper, Scissors game. The game has a main menu which I need to be able to return to from each sub menu. I've tried a few different method I could think of as well as looked here and elsewhere online to determine a method of solving my problem.</p>
<p>I want the user to be able to select an option from the main menu, go to the selected sub menu, then be prompted with an option to return to the main menu. For example, Select the rules sub menu, then return to the main menu. Or, select to play a round of Rock, Paper, Scissors, then select to play again or return back to the main menu.</p>
<pre><code># random integer
from random import randint

# list for weapon
WEAPON = ["Rock", "Paper", "Scissors"]

# module to run the program
#def main():
#    menu()

def main():
menuSelect = ""
print("\tRock, Paper, Scissors!")

# main menu
print("\n\t\tMain Menu")
print("\t1. See the rules")
print("\t2. Play against the computer")
print("\t3. Play a two player game")
print("\t4. Quit")

menuSelect = int(input("\nPlease select one of the four options "))

while menuSelect &lt; 1 or menuSelect &gt; 4:
    print("The selection provided is invalid.")
    menuSelect = int(input("\nPlease select one of the four options "))

if menuSelect == 1:
    rules()
elif menuSelect == 2:
    onePlayer()
elif menuSelect == 3:
    twoPlayer()
elif menuSelect == 4:
    endGame()

# display the rules to the user
def rules():

print("\n\t\tRules")
print("\tThe game is simple:")
print("\tPaper Covers Rock")
print("\tRock Smashes Scissors")
print("\tScissors Cut Paper")
print("")

# one player mode
def onePlayer():
again = ""
player = False

print("\n\tPlayer VS Computer")

while player == False:
    player = input("\nSelect your weapon: Rock, Paper, or Scissors\n")
    player = player.lower()

    computer = WEAPON[randint(0,2)]
    computer = computer.lower()

    if player == computer:
        print(player," vs ",computer)
        print("It's a tie!\n")
    elif player == "rock":
        if computer == "paper":
            print(player," vs ",computer)
            print("Paper covers rock! You lose!\n")
        else:
            print("Rock smashes",computer,". You win!\n")     
    elif player == "paper":
        if computer == "scissors":
            print(player," vs ",computer)
            print("Scissors cut paper! You lose!\n")
        else:
            print("Paper covers",computer,". You win!\n")
    elif player == "scissors":
        if computer == "rock":
            print(player," vs ",computer)
            print("Rock smashes scissors! You lose!\n")
        else:
            print("Scissors cut",computer,". You win!\n")
    else:
        print("invalid input")

    again = input("Would you like to play again? Yes or no\n")
    again = again.lower()

    if again == "yes" or "y":
        player = False
    elif again == "no" or "n":
        main()


# two player mode
def twoPlayer():
fight = False
player1 = ""
player2 = ""

print("\n\tPlayer VS Player")

while fight == False:
    player1 = input("\nSelect your weapon: Rock, Paper, or Scissors\n")
    player1 = player1.lower()
    player2 = input("\nSelect your weapon: Rock, Paper, or Scissors\n")
    player2 = player2.lower()

    if player1 == player2:
        print(player1," vs ",player2)
        print("It's a tie!\n")
    elif player1 == "rock":
        if player2 == "paper":
            print(player1," vs ",player2)
            print("Paper covers rock! Player 2 wins!\n")
        else:
            print("Rock smashes",player2,". Player 1 wins!\n")     
    elif player1 == "paper":
        if player2 == "scissors":
            print(player1," vs ",player2)
            print("Scissors cut paper! Player 2 wins!\n")
        else:
            print("Paper covers",player2,". Player 1 wins!\n")
    elif player1 == "scissors":
        if player2 == "rock":
            print(player1," vs ",player2)
            print("Rock smashes scissors! Player 2 wins!\n")
        else:
            print("Scissors cut",player2,". Player 1 wins!\n")
    else:
        print("invalid input")

    again = input("Would you like to play again? Yes or no\n")
    again = again.lower()

    if again == "yes" or "y":
        player = False
    elif again == "no" or "n":
        main()

def endGame():
print("Thank you for playing!")

main()
</code></pre>
<p>Currently my only test is within the onePlayer() module. The idea behing my code is to ask the user if they want to continue playing. If they don't then I want the program to bring them back to the main menu.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are using <code>player</code> variable for two works, instead of that you can use another variable to just check the condition and another to take user input.</p>
<p>Also you can check the condition like : <strong><em><code>if again in ["yes","y"]</code></em></strong></p>
<pre><code>def main():
    menuSelect = ""
    print("\tRock, Paper, Scissors!")

# main menu
    print("\n\t\tMain Menu")
    print("\t1. See the rules")
    print("\t2. Play against the computer")
    print("\t3. Play a two player game")
    print("\t4. Quit")

    menuSelect = int(input("\nPlease select one of the four options "))

    while menuSelect &lt; 1 or menuSelect &gt; 4:
        print("The selection provided is invalid.")
        menuSelect = int(input("\nPlease select one of the four options "))

    if menuSelect == 1:
        rules()
    elif menuSelect == 2:
        onePlayer()
    elif menuSelect == 3:
        twoPlayer()
    elif menuSelect == 4:
        endGame()

# display the rules to the user
def rules():

    print("\n\t\tRules")
    print("\tThe game is simple:")
    print("\tPaper Covers Rock")
    print("\tRock Smashes Scissors")
    print("\tScissors Cut Paper")
    print("")

# one player mode
def onePlayer():
    again = ""
    player = False

    print("\n\tPlayer VS Computer")

    while player == False:
        player = input("\nSelect your weapon: Rock, Paper, or Scissors\n")
        player = player.lower()

        #computer = WEAPON[randint(0,2)]
        #temporary
        computer = "paper"
        computer = computer.lower()

        if player == computer:
            print(player," vs ",computer)
            print("It's a tie!\n")
        elif player == "rock":
            if computer == "paper":
                print(player," vs ",computer)
                print("Paper covers rock! You lose!\n")
            else:
                print("Rock smashes",computer,". You win!\n")     
        elif player == "paper":
            if computer == "scissors":
                print(player," vs ",computer)
                print("Scissors cut paper! You lose!\n")
            else:
                print("Paper covers",computer,". You win!\n")
        elif player == "scissors":
            if computer == "rock":
                print(player," vs ",computer)
                print("Rock smashes scissors! You lose!\n")
            else:
                print("Scissors cut",computer,". You win!\n")
        else:
            print("invalid input")

        again = input("Would you like to play again? Yes or no\n")
        again = again.lower()

        if again=="yes" or again=="y":
            player = False
        else:
            player = True
            main()


main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do a try and except command. If they say no your code should be quit(). If they say yes put a continue command and it will restart the whole thing.</p>
</div>
<div class="post-text" itemprop="text">
<p>put your main method in a <code>while (True):</code> loop, and if option 4 is called, use <code>break</code> like this: </p>
<pre><code>elif menuSelect == 4:
        break
</code></pre>
<p>add an indent to </p>
<pre><code>again = input("Would you like to play again? Yes or no\n")
again = again.lower()

if again == "yes" or "y":
    player = False
else:
    main() 
</code></pre>
<p>and rather than calling <code>main()</code> just set <code>player = True</code> also, your Weapon array has not been defined. easy fix, just add <code>WEAPON = ["rock", "paper", "scissors"]</code> to the beginning of your <code>onePlayer():</code> method. I can see another problem, change</p>
<pre><code>if again == "yes" or "y":
</code></pre>
<p>to </p>
<pre><code>if again == "yes" or again == "y":
</code></pre>
<p>one last thing, don't forget your imports! (put it at the top of your code.)</p>
<pre><code>from random import randint
</code></pre>
<p>BTW, the <code>break</code> statement just tells python to leave whatever for loop or while loop it's in.</p>
</div>
<span class="comment-copy">check the again condition everytime in your while loop.</span>
<span class="comment-copy">I have updated the code a little, but the program still remains in the while loop. This code is inside the while loop.</span>
<span class="comment-copy">please update your code with proper identation and <code>WEAPON</code> is not defined anywhere.</span>
<span class="comment-copy">Understood. In attempt to keep things simple, I omitted part of the code. I will update in full.</span>
<span class="comment-copy">Now, I'm not certain what "if again in ["yes","y"]" means. That particular syntax is foreign to me. However, your adjustment to my code worked like a charm! it's exactly what I was looking for. Thank you very much for your help!</span>
<span class="comment-copy">Read about <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow noreferrer">ControlFlows</a></span>
<span class="comment-copy">I am creating this program for a class I am taking. Unfortunately what you suggested was not taught. I looked up your suggestion, but I'm not sure how I can implement this to solve my problem.</span>
<span class="comment-copy">Thank you very much for your feedback! Your response is really easy to understand for someone like me who is relatively new to programming and I greatly appreciate that.</span>
