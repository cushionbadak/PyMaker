<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3437059/does-python-have-a-string-contains-substring-method">Does Python have a string 'contains' substring method?</a>
<span class="question-originals-answer-count">
                    17 answers
                </span>
</li>
</ul>
</div>
<p>This is my code:</p>
<pre><code>for post in socket("news", start=currentTime):
    if post["body"] == 'xyz' and post["author"] == 'admin' and post["url"] == 'latestnews':
        try: 
 print ("Found it!")
(...)
</code></pre>
<p>It's working, but only if <code>post["body"]</code> is <em>"xyz"</em>. If <code>post["body"]</code> is <em>"Bla bla bla xyz"</em> then it's not working. What should I do if I want my script to dispaly <em>"Found it!"</em> even if <code>post["body"]</code> contains </p>
<blockquote>
<p>"Lorem ipsum dolor sit amet, eum ne maiorum volutpat, ei has erat
  eruditi, autem fierent evertitur at has <strong>xyz</strong> Case simul persius id
  mei, soleat laoreet assentior ea mel. Meis assum contentiones in cum,
  est ornatus salutandi id. Sanctus labores ius ne."</p>
</blockquote>
<p>Sorry, but I'm new to Python :-/</p>
</div>
<div class="post-text" itemprop="text">
<p>All you have to do is change your ordering. You can use the operator 'in' to check if a string contains another string.</p>
<pre><code>if 'xyz' in 'oiurwernjfndj xyz iekjerk':
    print True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can probably just use in operator or str.find: <a href="https://docs.python.org/3/reference/expressions.html#in" rel="nofollow">https://docs.python.org/3/reference/expressions.html#in</a> <a href="https://docs.python.org/2/library/stdtypes.html?highlight=index#str.find" rel="nofollow">https://docs.python.org/2/library/stdtypes.html?highlight=index#str.find</a></p>
<p>Basically, you would do </p>
<pre><code>if(xyz in post["body"] ...) { 
// OR 
if(post["body"].find('xyz') != -1 and ... ) {
</code></pre>
<p>The in operator is probably the fastest way.</p>
<p>The .find will return a number between 0 and string length -1 (to tell you the location of the string. However, if it cannot find the string, it returns a -1. So if it returns -1, then it isn't there, so anything other than -1 means it is.</p>
</div>
<span class="comment-copy">You want <code>in</code> not <code>==</code>.</span>
<span class="comment-copy">@Jan: Morgan knows better than to write a full answer to a common dupe. :)</span>
<span class="comment-copy">Thank you @MorganThrapp :-)</span>
<span class="comment-copy">No, this is incredibly un-idiomatic. Use <code>in</code>.</span>
<span class="comment-copy">Yeah, you are right, all my years not coding python I've gotten so used to doing indexof operations.</span>
