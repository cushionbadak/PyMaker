<div class="post-text" itemprop="text">
<p>let's say i have something similar to:</p>
<pre><code>def worker(name):
    time.sleep(10)
    print name
    return

thrs = []
for i in range(1000):
    t1 = threading.Thread(target=worker, args=(i,))
    thrs.append(t1)

for t in thrs:
    t.start()
</code></pre>
<p>Is there way to specify how many threads can run in parallel? in the above case, all 1000 will run in parallel</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done using <a href="https://docs.python.org/2/library/multiprocessing.html#module-multiprocessing.dummy" rel="noreferrer"><code>multiprocessing.dummy</code></a> which provides a threaded version of the <a href="https://docs.python.org/2/library/multiprocessing.html" rel="noreferrer"><code>multiprocessing</code></a> api.</p>
<pre><code>from multiprocessing.dummy import Pool

pool = Pool(10)
result = pool.map(worker, range(1000))
</code></pre>
<p>In python 3, <a href="https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor" rel="noreferrer"><code>concurrent.futures.ThreadPoolExecutor</code></a> usually provides a nicer interface.</p>
</div>
<span class="comment-copy">Is it  <code>threads.append(t1)</code>, I think  <code>thrs.append(t1)</code> right ?</span>
<span class="comment-copy">I don't understand the question ... you have specified how many threads you want: 1000, if you want another number, can't you change this?</span>
<span class="comment-copy">@maxymoo They're not sure how many are possible</span>
<span class="comment-copy">Need manage CPU and RAM processes. And <code>for t in thrs:    t.start()</code> not parallel function.</span>
<span class="comment-copy">i have 1000 things that needs to be run. but i want them to run at like 10 at a time or what not. i suppose i can just run then join and run then join until no more is left but i was trying to see if there is something that already does that</span>
