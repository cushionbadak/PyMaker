<div class="post-text" itemprop="text">
<p>I am working with CSV file data that I need to split into to dictionaries. I am using the following code:</p>
<pre><code>ga_session_data = {}
ga_pageviews_data = {}

file = open('files/data.csv', 'r')

for line in file:
    page, sessions, pageviews = line.split(',')
    sessions = int(sessions.strip())
    pageviews = int(pageviews.strip())
    ga_session_data = {page: sessions}
    ga_pageviews_data = {page: pageviews}    

file.close()

print(ga_session_data)
print(ga_pageviews_data)
</code></pre>
<p>For some reason I cannot print all of the data that is stored in the dictionaries outside of the loop. It only prints the first line from each. </p>
</div>
<div class="post-text" itemprop="text">
<p>You are not adding anything to the initial, empty dictionaries. You are <strong>replacing</strong> them each time with a <em>new</em> dictionary:</p>
<pre><code>ga_session_data = {page: sessions}
ga_pageviews_data = {page: pageviews}    
</code></pre>
<p>That's two new dictionaries, each with <em>one</em> key-value pair. In the end, after the last line in the file has been processed, what remains is the information from that last line in the file, and everything that was processed before it has been replaced.</p>
<p>If you wanted to add to the initial dictionaries, use assignment to a key:</p>
<pre><code>ga_session_data[page] = sessions
ga_pageviews_data[page] = pageviews
</code></pre>
<p>You could inline the <code>int()</code> conversion into the assignment expression:</p>
<pre><code>for line in file:
    page, sessions, pageviews = line.split(',')
    ga_session_data[page] = int(sessions)
    ga_pageviews_data[page] = int(pageviews)
</code></pre>
<p>Note that <code>int()</code> doesn't care much about extra whitespace around the digits, so the <code>str.strip()</code> calls are not needed.</p>
<p>Next, I'd not re-invent the CSV reading wheel; use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module</a>:</p>
<pre><code>import csv

ga_session_data = {}
ga_pageviews_data = {}

with open('files/data.csv', 'r') as csvfile:
    reader = csv.reader(csvfile)
    for row in reader:
        page, sessions, pageviews = row
        ga_session_data[page] = int(sessions)
        ga_pageviews_data[page] = int(pageviews)
</code></pre>
<p>I also used the file object as a context manager, so you don't have to explicitly call <code>file.close()</code> on it anymore.</p>
</div>
<div class="post-text" itemprop="text">
<h1>The issue</h1>
<p>It is printing the entire dictionary. Your problem lies in your loop as you're creating the dictionaries:</p>
<pre><code>ga_session_data = {page: sessions}
ga_pageviews_data = {page: pageviews} 
</code></pre>
<p>This will create a new dictionary after every iteration of the loop, so at the end you JUST have a dictionary with the last page corresponding to the last session. </p>
<h1>The solution</h1>
<p>Use this syntax instead in your loop:</p>
<pre><code>ga_session_data = {}
ga_pageviews_data = {} 
    for line in file:
        page, sessions, pageviews = line.split(',')
        sessions = int(sessions.strip())
        pageviews = int(pageviews.strip())
        ga_session_data[page] = sessions
        ga_pageviews_data[page] = pageviews 
</code></pre>
<p>And now your code will ADD to the dictionary rather than simply creating a new one. This is because you defined the dictionary at the top, and the syntax at the end of the loop is creating a new key-value pair within the same dictionary, rather than creating a new dictionary and assigning it to the same variable as you were before.</p>
</div>
<div class="post-text" itemprop="text">
<p>In each iteration of the loop you create new dictionaries with single item.</p>
<p>To fix this, inside the <code>for</code> loop, change:</p>
<pre><code>ga_session_data = {page: sessions}
ga_pageviews_data = {page: pageviews}    
</code></pre>
<p>To:</p>
<pre><code>ga_session_data[page] = sessions
ga_pageviews_data[page] = pageviews
</code></pre>
</div>
<span class="comment-copy">It doesn't print the first line. It'll print the <b>last</b> line.</span>
<span class="comment-copy">Thanks. Just started to learn Python this week so just trying to get the basics figured out.</span>
