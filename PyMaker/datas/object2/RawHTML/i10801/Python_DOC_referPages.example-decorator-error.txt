<div class="post-text" itemprop="text">
<p>I'm trying to understand Python decorators and have written this code:</p>
<pre><code>def hello_world(fn):
    print('hello world')
    fn()
    pass

@hello_world
def decorate():
    print('hello decoatrion')
    return

decorate()
</code></pre>
<p>I was aiming to print 'hello world' before 'hello decoration', but the output is the following:</p>
<pre class="lang-none prettyprint-override"><code>hello world
hello decoatrion
Traceback (most recent call last):
  File "test_decortor.py", line 11, in &lt;module&gt;
    decorate()
TypeError: 'NoneType' object is not callable
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Decorator syntax is shorthand for</p>
<pre><code>decorated = decorate(decorated)
</code></pre>
<p>So if you have:</p>
<pre><code>def hello_world(fn):
    print('hello world')
    fn()
    pass

def decorate():
    print('hello decoatrion')
    return

decorate = hello_world(decorate)
</code></pre>
<p>You should see what the problem is (also note that <code>pass</code> does nothing here).</p>
<pre><code>def hello_world(fn):
    def says_hello():
        print('hello world')
        return fn()
    return says_hello

def decorate():
    print('hello decoration')

decorate = hello_world(decorate)
</code></pre>
<p>will do what you want. Or you could write it:</p>
<pre><code>@hello_world
def decorate():
    print('hello decoration')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The decorator must <strong>return the decorated function</strong>. You probably wanted something along these lines:</p>
<pre><code>def hello_world(fn):
    def inner():
        print('hello world')
        fn()
    return inner

@hello_world
def decorate():
    print('hello decoatrion')
    return

decorate()
#output: hello world
#        hello decoatrion
</code></pre>
</div>
<span class="comment-copy">OK, so what's your question?</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/739654/how-can-i-make-a-chain-of-function-decorators-in-python">How can I make a chain of function decorators in Python?</a></span>
<span class="comment-copy">Your decorator is returning <code>None</code>, not the decorated function. Check out <a href="https://docs.python.org/3/whatsnew/2.4.html#pep-318-decorators-for-functions-and-methods" rel="nofollow noreferrer">these examples</a>, as well as <a href="https://www.python.org/dev/peps/pep-0318/" rel="nofollow noreferrer">PEP 318 - Decorators for Functions, Methods and Classes</a> itself.</span>
<span class="comment-copy">Documentation reference: <a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
