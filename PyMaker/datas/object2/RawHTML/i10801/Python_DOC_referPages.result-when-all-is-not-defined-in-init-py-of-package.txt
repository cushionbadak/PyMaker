<div class="post-text" itemprop="text">
<p>I am just learning and practicing python,on the way,i am reading about python packages and how to import into other modules or package at <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow">Modules</a> ,I assume the following scenario ,</p>
<p>I have package as ,</p>
<pre><code>Video/
    __init__.py
    formats/
        __init__.py 
        mkv.py  
        mp4.py
    length/
        __init__.py
        morethan20min.py
        lessthan20min.py
</code></pre>
<p>and in no </p>
<pre><code>__init__.py
</code></pre>
<p>I have not defined</p>
<pre><code>__all__
</code></pre>
<p>what happens if i have an import statement as,</p>
<pre><code>import Video.format.mkv
import Video.formats.* 
</code></pre>
<p>Since I have already imported mkv module in first statement,what exactly happens after execution of second import statement,I didnt get the concept after reading on the mentioned link.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you do</p>
<pre><code>from whatever_package import *
</code></pre>
<p>first, if the package's <code>__init__.py</code> hasn't been run yet, it will be run. (If you've already done <code>import whatever_package.something_specific</code>, the package's <code>__init__.py</code> will have already been run.)</p>
<p>Then, if <code>whatever_package.__init__</code> does not define an <code>__all__</code> list, the import will pick up all <em>current</em> contents of the <code>whatever_package</code> object*. That'll be anything defined in <code>__init__.py</code> and any submodules that have already been explicitly imported by any code that has executed in your program. For example, if <code>whatever_package</code>'s <code>__init__.py</code> is empty, you do</p>
<pre><code>import whatever_package.something_specific
from whatever_package import *
import whatever_package.other_thing
</code></pre>
<p>and no other import statements relating to <code>whatever_package</code> exist in your program, then the <code>import *</code> will pick up <code>something_specific</code>, but not any other submodules of <code>whatever_package</code>, such as <code>other_thing</code>.</p>
<hr/>
<p>*excluding anything that begins with an underscore, as is standard for any <code>import *</code> with no <code>__all__</code> list, whether you're importing from a package or a normal module.</p>
</div>
<span class="comment-copy">The correct name is <code>__init__.py</code>, not <code>__init.py__</code>.</span>
<span class="comment-copy">You won't get an error, its just redundant you either get everything from Video.format or you get something specific. It's like saying I want just one person, but you then take everyone. So no point in taking the one person in the first place.</span>
<span class="comment-copy">Also, you can't do <code>import Video.formats.*</code>. <code>*</code> imports only work with the <code>from</code> form of the import statement.</span>
<span class="comment-copy">But they have mentioned like,If <b>all</b> is not defined, the statement import Video.format.*  does not import all submodules from the package Video.format into the current namespace;</span>
<span class="comment-copy">okay gt it..Thanks guys</span>
<span class="comment-copy">What happens if <code>something_specific.__init__</code> is not empty</span>
<span class="comment-copy">@user6654733: The import will pick up anything defined by <code>__init__.py</code>.</span>
<span class="comment-copy">@user6654733: then what is the advantage of having * notation in import statement?it is useful only when we define <code>__all__</code>??</span>
<span class="comment-copy">It's pretty much never useful. You should pretty much never use <code>from x import *</code>, just import explicitly whatever you need.</span>
<span class="comment-copy">okay..gt it..thanks to all for clear explanations.</span>
