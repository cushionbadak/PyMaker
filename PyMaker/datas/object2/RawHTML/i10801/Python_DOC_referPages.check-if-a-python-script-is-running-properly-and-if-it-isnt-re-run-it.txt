<div class="post-text" itemprop="text">
<p>I have a script which is really buggy and every couple of hours it stops due to an error. I don't code in Python but I know the basics so I would like to know how can I make a script that check another script for errors and if it's true just re-run it?
Sorry for not giving any examples but I think you get the idea and because I'm not good at Python doing this is easier than trying to understand the script and edit it. Any help is greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>By far the simplest way is to just wait for it to exit and always restart it when it crashes; the following <code>bash</code> loop will do nothing while the program is running, and will restart it as soon as it exits:</p>
<pre class="lang-bash prettyprint-override"><code>while true
do
    python buggy_script.py arguments
    echo oops, restarting...
done
</code></pre>
<p>And that's it. It'll run forever, until you kill the bash script that's running it.</p>
<p>PS. Of course this assumes you are on OS X or Linux; if you're on Windows, use an equivalent batch or PowerShell script.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create a daemon for the script.</p>
<p>Basically keep the main functionality in a loop that will run forever.
<code>
import logging
import time
if __name__ == '__main__':
    while True:
        //log errors
        logging.basicConfig(filename='log_file.log', level=logging.DEBUG)
        // use try except to handle exceptions
        try:
            // your code statements and function calls
        except Exception as e:
            // log the error for debugging
            logging.error(str(e))
        // sleep the program if you want it to for desired amount of time.
        time.sleep(delay)
</code></p>
<p>The level of logging I set is debug. You can set it to any other of your own choice. </p>
<p>References : </p>
<p>Logging Docs - <a href="https://docs.python.org/3/library/logging.html" rel="nofollow">https://docs.python.org/3/library/logging.html</a></p>
<p>Handling exceptions - <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow">https://docs.python.org/3/tutorial/errors.html#handling-exceptions</a></p>
</div>
<span class="comment-copy">And where's the script contents? Please review <a href="http://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">This is what tools like <a href="http://supervisord.org/" rel="nofollow noreferrer">supervisord</a> and similar are for. Well, not really, the script should be fixed, but a process controller can at least do the monitoring and restarting.</span>
<span class="comment-copy">The contents are irrelevant, I'm asking for a way to check if a script stopped no matter what the error is</span>
<span class="comment-copy">I'd suggest using PowerShell instead of batch; batch looks horrible to me.</span>
<span class="comment-copy">Sure, PowerShell then. Anything with a loop will do.</span>
