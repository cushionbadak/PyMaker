<div class="post-text" itemprop="text">
<p>Lets say I created a class object someClassObject in function A, and threw that object into a function B:</p>
<pre><code>functionB(someClassObject)
</code></pre>
<p>How do I retain all the modifications I've made in function B to someClassObject so I can continue using someClassObject in function A if my function B cannot return anything?</p>
<p>My function B is a recursive function and I can't think of anyways to have it return my someClassObject</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm pretty sure that happens by default when you create a class:</p>
<pre><code>Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; class A:
...   def __init__(self, x):
...     self.x = x
...
&gt;&gt;&gt; def modA(objA):
...   objA.x = 9
... 
&gt;&gt;&gt; def createA():
...   a = A(2)
...   print(a.x)
...   modA(a)
...   print(a.x)
... 
&gt;&gt;&gt; createA
&lt;function createA at 0x7ff7acee2a60&gt;
&gt;&gt;&gt; createA()
2
9
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you pass a class object (generally any object) around, it stays one single object so all changes to it are visible for all references to it.</p>
<p>for example in</p>
<pre><code>def B(cls):
    cls.value=2

def A():
    class C(object):
        value=1
    B(C)
    return C.value
</code></pre>
<p>A() returns 2</p>
</div>
<div class="post-text" itemprop="text">
<p>I presume you meant instance of a class when you meant class object, in Python even a class is an object and you can pass them like instances.
In Python all objects are passed by reference meaning when you pass an instance to a function you only pass a reference and all changes you make to the object will be preserved.</p>
<p>If you meant instance of a class than the example is:</p>
<pre><code>class Foo():

    def __init__(self):
        self.x = 1

def functionB(foo):

    foo.x += 1
    if foo.x &lt; 10:
        functionB(foo)



def functionA():
    some_instance_of_Foo = Foo()

    functionB(some_instance_of_Foo)

    print(some_instance_of_Foo.x)

if __name__ == "__main__":
   functionA()  # 10
</code></pre>
</div>
<span class="comment-copy">What did you try? (Objects <i>are</i> passed as references by default, any modifications you do within <code>B</code> <i>should</i> be visible to <code>A</code>.. <a href="https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference" rel="nofollow noreferrer">see here</a>.)</span>
