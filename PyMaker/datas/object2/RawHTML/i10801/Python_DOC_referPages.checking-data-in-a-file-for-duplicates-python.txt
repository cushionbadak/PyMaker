<div class="post-text" itemprop="text">
<p>I am trying to make a list of topics for another project to use and I am storing the topics in <code>Topics.txt</code>. However, when the topics are stored in the file, I do not want duplicate topics. So when I am saving my topics to my <code>Topics.txt</code> file, I also save them to a <code>Duplicates.txt</code> file. What I want to do is create a conditional statement that won't add topics to <code>Topics.txt</code> if the topics are in the <code>Duplicates.txt</code>. My problem is, I don't know how I could create a conditional statement that could check if the topic is listed in <code>Duplicates.txt</code>. A problem may arise if you scan for keywords such as "music", seeing that "electro-music" contains the word "music". </p>
<pre><code>Entry = input("Enter topic: ")
Topic = Entry + "\n"
Readfilename = "Duplicates.txt"
Readfile = open(Readfilename, "r")
Readdata = Readfile.read()
Readfile.close()
if Topic not in Duplicates:
    Filename = "Topics.txt"
    File = open(Filename, "a")
    File.append(Topic)
    File.close()
    Duplicate = Topic + "\n"
    Readfile = open(Readfilename, "a")
    Readfile.append(Topic)
    Readfile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can read a file line by line which would result in a solution like this one</p>
<pre><code>Entry = input("Enter topic: ")
Topic = Entry + "\n"
Readfilename = "Duplicates.txt"
found=False
with open(Readfilename, "r") as Readfile:
    for line in Readfile:
        if Topic==line:
            found=True
            break # no need to read more of the file

if not found:
    Filename = "Topics.txt"
    with open(Filename, "a") as File:
        File.write(Topic)

    with open(Readfilename, "a") as Readfile:
        Readfile.write(Topic)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can store your topics in a set. A set is collection of unique items.</p>
<pre><code>topics = {'Banjo', 'Guitar', 'Piano'}
</code></pre>
<p>You can check for membership using:</p>
<pre><code>&gt;&gt;&gt; 'Banjo' in topics
True
</code></pre>
<p>You add new things to a set via <code>.add()</code></p>
<pre><code>topics.add('Iceskating')
&gt;&gt;&gt; topics
set(['Banjo','Guitar', 'Piano', 'Iceskating'])
</code></pre>
<p>Python 3 Docs on sets <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow">here</a>. The tutorial page on sets is <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow">here</a>.</p>
</div>
<span class="comment-copy">Can you add some examples and example code?</span>
<span class="comment-copy">How do you store the topics? One per line?</span>
<span class="comment-copy">I'm not sure a plain text file really suits your needs here. A SQLite table could have distinct enforcement and also perform keyword search</span>
<span class="comment-copy">I store each topic one per line with "\n" and then strip the "\n" when I got to read the topic with my other program.</span>
<span class="comment-copy">How could this be transformed to exclude capitalized variations of the topic?</span>
<span class="comment-copy">@Capattax have a look at the <a href="https://docs.python.org/3/library/stdtypes.html#string-methods" rel="nofollow noreferrer">string methods</a> - they can do many useful things, normally strings are compared case-sensitively (<code>"a"=="A"</code> evaluates to <code>False</code>)</span>
<span class="comment-copy">This is useful for checking for duplicates on one file, but I have two programs that add topics to the <code>Topics.txt</code>. The first program adds topics manually, while the other program crawls pages for topics. So if I had two sets, one set for each program, they would only add duplicates to their respective sets. They would not be able to identify duplicates from the other set.</span>
<span class="comment-copy">The nice thing about a set is if you have duplicates in your original data it will remove them. So if you have a list <code>['one', 'two', 'two', 'three']</code> and you copy it into a set, that set will be <code>['one', 'two', 'three']</code>.</span>
<span class="comment-copy">To add to this, it seems like what you're doing is at risk of being too involved to use simple .txt files to store your data. I'm going to second @cricket_007s earlier suggestion of using an SQLite table.</span>
<span class="comment-copy">I used @janbrohl 's method and I was able to successfully store the topics in both files and it would not store duplicates. While storing a topic, I could also store topics containing that topic (ie. "music" and "electromusic")</span>
<span class="comment-copy">@Capattax if you want to add more info to the topics either use <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">sqllite</a> or have a look at <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> / <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a></span>
