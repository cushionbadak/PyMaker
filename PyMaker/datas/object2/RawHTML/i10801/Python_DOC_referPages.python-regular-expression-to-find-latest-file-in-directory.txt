<div class="post-text" itemprop="text">
<p>I have one directory which contains below files for example purpose.</p>
<pre><code>Directory:
ERROR_AM_INMAG_Export_2016-07-25.csv
AM_INMAG_Export_2016-07-26_done.csv 
ERROR_AM_INMAG_Export_2016-07-27.csv
AM_INMAG_Export_2016-07-28_done.csv 
AM_INMAG_Export_2016-07-29.csv
file1
file2
fileN
</code></pre>
<p>Here how can i retrieve file which starts with ""AM_INMAG_Export_" and it should have latest timestamp using <strong>Python</strong>.
for example: "AM_INMAG_Export_2016-07-29.csv" is the file I want to retrieve.
<strong>BUT "fileN" is the latest modified file in the directory.</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Filter the files that match your desired prefix and then sort.</p>
<pre><code>&gt;&gt;&gt; files = """ERROR_AM_INMAG_Export_2016-07-25.csv
... AM_INMAG_Export_2016-07-26_done.csv
... ERROR_AM_INMAG_Export_2016-07-27.csv
... AM_INMAG_Export_2016-07-28_done.csv
... AM_INMAG_Export_2016-07-29.csv
... file1
... file2
... fileN""".split('\n')
&gt;&gt;&gt; files
['ERROR_AM_INMAG_Export_2016-07-25.csv', 'AM_INMAG_Export_2016-07-26_done.csv ', 'ERROR_AM_INMAG_Export_2016-07-27.csv', 'AM_INMAG_Export_2016-07-28_done.csv ', 'AM_INMAG_Export_2016-07-29.csv', 'file1', 'file2', 'fileN']
&gt;&gt;&gt; filtered_files = [ x for x in files if x.startswith('AM_INMAG_Export_')]
&gt;&gt;&gt; sorted_files = sorted(filtered_files,reverse=True)
&gt;&gt;&gt; sorted_files[0]
'AM_INMAG_Export_2016-07-29.csv'
</code></pre>
<hr/>
<p><strong>Update</strong></p>
<p>Filter filenames with a regexp and then sort.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt;
&gt;&gt;&gt; files = [
...   'ERROR_AM_INMAG_Export_2016-07-25.csv',
...   'AM_INMAG_Export_2016-07-26_done.csv',
...   'ERROR_AM_INMAG_Export_2016-07-27.csv',
...   'AM_INMAG_Export_2016-07-28_done.csv',
...   'AM_INMAG_Export_2016-07-21.csv',
...   'AM_INMAG_Export_2016-07-25.csv',
...   'AM_INMAG_Export_2016-07-29.csv',
...   'file1',
...   'file2',
...   'fileN'
... ]
&gt;&gt;&gt;
&gt;&gt;&gt; file_re = re.compile(r'^AM_INMAG_Export_\d{4}-\d{2}-\d{2}.csv$')
&gt;&gt;&gt; filtered_files = [ x for x in files if file_re.match(x)]
&gt;&gt;&gt; sorted_files = sorted(filtered_files,reverse=True)
&gt;&gt;&gt; sorted_files[0]
'AM_INMAG_Export_2016-07-29.csv'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>files = glob.glob('AM_INMAG_Export_*.csv')
sorted_files = sorted(files, key=lambda x: int(x.split('_')[3].split('.')[0]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So it looks like you need to use regex to get the date as a group item. Once you have all of the groups you need to convert that to a python date and then check to see which one has the greatest date.</p>
<pre><code>import re
pat = re.compile("^AM_INMAG_Export_(.+)\.csv$")
matches = pat.match(your_data)
</code></pre>
<p>This is the regular expression you will be looking to use, you could go into more detail around the grouping and get an actual date format you are looking for.</p>
</div>
<div class="post-text" itemprop="text">
<p>use <code>glob</code> to get the files and then sort the file names from the earliest to the oldest file:</p>
<pre><code>files = glob.glob('&lt;YOUR_DIRECTORY&gt;/AM_INMAG_Export_*') # the file prefix + '*' as regex
files.sort(reverse=True) # sort and use 'reverse=True' to get a list of files sorted by the earliest to the oldest
your_precious_file = files[0] # the one with the oldest date
</code></pre>
<p><strong>Note:</strong> the assumption here is that all files have identical prefix and post-fix, and the difference is due to the date.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/glob.html?highlight=glob#glob.glob" rel="nofollow">glob.glob</a></p>
<pre><code>import glob
print( glob.glob('AM_INMAG_Export_????-??-??.csv')[-1] )
</code></pre>
<p>This will work if the time defined in the name is actually the updated time. Otherwise , you should use <a href="https://docs.python.org/3/library/os.html?highlight=os#os.stat" rel="nofollow">os.stat</a> to find </p>
<pre><code>import glob
import os

def find_last_updated(pattern):
    def find_updated(ff):
        return os.stat(ff).st_mtime

    last = None 
    last_updated = 0
    for ff in glob.glob(pattern):
        ff_updated = find_updated(ff)
        if last == None or ff_updated &gt; last_updated :
            last = ff
            last_updated = ff_updated
    return last

print(find_last_updated('AM_INMAG_Export-????-??-??.csv'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A list of files obtained with glob.glob() can be sorted with the sorted statement. See the following example</p>
<pre><code>import os
import glob


def main():
    """
    Sort csv Files.
    """
    for f in sorted(glob.glob(os.path.join('AM_INMAG_Export_*.csv')), reverse=True):
        print("File " + f)


if __name__ == "__main__":
    main()
</code></pre>
</div>
<span class="comment-copy">if "AM_INMAG_Export_2016-07-29.csv" file not present it should not give "AM_INMAG_Export_2016-07-28_done.csv"</span>
<span class="comment-copy">@ThejeshPR: your original question does not make this distinction; you just say <code>retrieve file which starts with ""AM_INMAG_Export_"</code></span>
<span class="comment-copy">Yes, You are right, it can be done by using x.startswith('AM_INMAG_Export_') and not x.endswith('_done.csv').</span>
<span class="comment-copy">He explicitly says the latest file should be derived from the file name and not from the time the files were modified.</span>
<span class="comment-copy">Well, He did not say it <b>explicitly</b> :-) From the example he gave , you can conclude both cases.</span>
