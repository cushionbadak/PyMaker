<div class="post-text" itemprop="text">
<p>I like Enum a lot and I would like to do the following:</p>
<pre><code>class Color(Enum):
    green = 0
    red = 1
    blue = 1

for color in Color:
    print(color.name)
    print(color.value)
</code></pre>
<p>As you can see, there are duplicate values in Color class. What class alternative can I use in this case that supports iterable, name, value?</p>
</div>
<div class="post-text" itemprop="text">
<p>Are you asking how you can have <code>Color.red</code> <em>and</em> <code>Color.blue</code> without <code>blue</code> being an alias for <code>red</code>?</p>
<p>If yes, you'll want to use the <a href="https://pypi.python.org/pypi/aenum" rel="nofollow noreferrer"><code>aenum</code></a><sup>1</sup> library and it would look something like:</p>
<pre><code>from aenum import Enum, NoAlias

# python 3
class Color(Enum, settings=NoAlias):
    green = 0
    red = 1
    blue = 1

# python 2
class Color(Enum):
    _order_ = 'green red blue'
    _settings_ = NoAlias
    green = 0
    red = 1
    blue = 1
</code></pre>
<p>And in use:</p>
<pre><code>for color in Color:
    print(color.name)
    print(color.value)

# green
# 0
# red
# 1
# blue
# 1
</code></pre>
<p>The downside of using <code>NoAlias</code> is by-value lookups are disabled (you can't do <code>Color(1)</code>).</p>
<hr/>
<p><sup>1</sup> Disclosure:  I am the author of the <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">Python stdlib <code>Enum</code></a>, the <a href="https://pypi.python.org/pypi/enum34" rel="nofollow noreferrer"><code>enum34</code> backport</a>, and the <a href="https://pypi.python.org/pypi/aenum" rel="nofollow noreferrer">Advanced Enumeration (<code>aenum</code>)</a>  library.</p>
</div>
<span class="comment-copy">Take a look at: <a href="http://stackoverflow.com/a/1695250/5399734">stackoverflow.com/a/1695250/5399734</a> and other nice answers under that question.</span>
<span class="comment-copy">Awesome !, I was using Enum the built in "enum", but didn't know there exists Enum from "aenum" with NoAlias setting. Thank you!</span>
<span class="comment-copy">@user1502776:  If you don't need the other <code>Enum</code> goodies (iterating through the class, length of the class, etc.) then you may want to use the <code>NamedConstant</code> class from <code>aenum</code>.</span>
