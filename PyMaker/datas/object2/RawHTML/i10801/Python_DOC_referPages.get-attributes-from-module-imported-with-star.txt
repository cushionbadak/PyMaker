<div class="post-text" itemprop="text">
<p>A python script needs a per-user configuration to override (redefine) "default" assignments (e.g. <code>path = "local/path/"</code>) which could by done by importing a custom module's attributes  with <code>from custom_settings import *</code>. I would like to output the ones that are being changed by the custom module.</p>
<p>From within <code>custom_settings</code> its attributes can be obtained with <a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow"><code>dir()</code></a>, e.g. <code>", ".join( (a for a in dir() if not a.startswith("__") ) )</code>.
How can this be done from the importing script if the imported module attributes are bound to the existing namespace?</p>
</div>
<div class="post-text" itemprop="text">
<p>This may not be the neatest solution, and it seems painfully redundant, but you could always simply:</p>
<pre><code>from custom_settings import *
import custom_settings
overridden = ", ".join(a for a in dir(custom_settings) if not a.startswith("__"))
</code></pre>
</div>
<span class="comment-copy">Dear downvoter, what seems to be the problem?</span>
<span class="comment-copy">Thanks, but this does not work as it does not overwrite the attributes in the existing namespace. I.e. it will create <code>custom_settings.path</code>, but not <code>path</code></span>
<span class="comment-copy">@handle Right. you can do <i>both</i></span>
<span class="comment-copy">Ah. Now I get the redundant.</span>
