<div class="post-text" itemprop="text">
<p>I can run one program by typing: <code>python enable_robot.py -e</code> in the command line, but I want to run it from within another program.</p>
<p>In the other program, I imported subprocess and had <code>subprocess.Popen(['enable_robot', 'baxter_tools/scripts/enable_robot.py','-e'])</code>, but I get an error message saying something about a callback. </p>
<p>If I comment out this line, the rest of my program works perfectly fine. </p>
<p>Any suggestions on how I could change this line to get my code to work or if I shouldn't be using subprocess at all? </p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>enable_robot.py</code> requires user input, probably it wasn't meant to run from another python script. you might want to import it as a module: <code>import enable_robot</code> and run the functions you want to use from there.</p>
<p>If you want to stick to the subprocess, you can pass input with <code>communicate</code>:</p>
<pre><code>p = subprocess.Popen(['enable_robot', 'baxter_tools/scripts/enable_robot.py','-e'])
p.communicate(input=b'whatever string\nnext line')
</code></pre>
<p><code>communicate</code> <a href="https://docs.python.org/2/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer">documentation</a>, <a href="https://stackoverflow.com/questions/163542/python-how-do-i-pass-a-string-into-subprocess-popen-using-the-stdin-argument">example</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your program <code>enable_robot.py</code> should meet the following requirements:</p>
<ul>
<li>The first line is a path indicating what program is used to interpret
the script. In this case, it is the python path.</li>
<li>Your script should be executable</li>
</ul>
<h2>A very simple example. We have two python scripts: called.py and caller.py</h2>
<h3>Usage: caller.py will execute called.py using <code>subprocess.Popen()</code></h3>
<h3>File /tmp/called.py</h3>
<pre><code>#!/usr/bin/python
print("OK")
</code></pre>
<h3>File /tmp/caller.py</h3>
<pre><code>#!/usr/bin/python
import subprocess
proc = subprocess.Popen(['/tmp/called.py'])
</code></pre>
<h3>Make both executable:</h3>
<pre><code>chmod +x /tmp/caller.py
chmod +x /tmp/called.py
</code></pre>
<h3>caller.py output:</h3>
<blockquote>
<p>$ /tmp/caller.py </p>
<p>$ OK</p>
</blockquote>
</div>
<span class="comment-copy">Could you paste the error message?</span>
<span class="comment-copy">Why don't you just import and use the functionality, rather than shelling out to it?</span>
<span class="comment-copy">mainly laziness but I'm also unclear on how to run the other program without doing it via command line. Main() doesn't take parameters yet needs -e or -u in command line to run.</span>
<span class="comment-copy">Error message, please...</span>
<span class="comment-copy">If I import it how would I run the function if it still requires a user to type -u or -e? The main method takes no parameters - it uses some type of argument parsing. I'm a newbie to Python, sorry if this is trivial stuff.</span>
<span class="comment-copy">You might want to paste the content of that file then. Usually python programs are written in a way that they only rely on user input if they are run directly from command line <code>https://docs.python.org/3/library/__main__.html</code> but if you want to use other functions you can import those.</span>
<span class="comment-copy">@leojim "main" has no special meaning in python, and usually it is a function, not a method. Are you coming from Java, by chance?</span>
