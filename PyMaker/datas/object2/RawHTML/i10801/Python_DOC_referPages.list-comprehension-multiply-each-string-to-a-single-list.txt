<div class="post-text" itemprop="text">
<p>I have a list of strings and want to get a new list consisting on each element a number of times.</p>
<pre><code>lst = ['abc', '123']
n = 3
</code></pre>
<p>I can do that with a for loop:</p>
<pre><code>res = []
for i in lst:
    res = res + [i]*n
print( res )

['abc', 'abc', 'abc', '123', '123', '123']
</code></pre>
<p><strong>How do I do it with list comprehension?</strong></p>
<p>My best try so far:</p>
<pre><code>[ [i]*n for i in ['abc', '123']  ]
[['abc', 'abc', 'abc'], ['123', '123', '123']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">nested list comprehension</a></p>
<pre><code>&gt;&gt;&gt; lst = ['abc', '123']
&gt;&gt;&gt; n = 3
&gt;&gt;&gt; [i for i in lst for j in range(n)]
['abc', 'abc', 'abc', '123', '123', '123']
</code></pre>
<p>The idea behind this is, you loop through the list twice and you print each of the element thrice. </p>
<p>See <a href="https://stackoverflow.com/q/34835951/4099593">What does "list comprehension" mean? How does it work and how can I use it?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It can also be done as:</p>
<pre><code>&gt;&gt;&gt; lst = ['abc', '123']
&gt;&gt;&gt; n=3
&gt;&gt;&gt; [j for i in lst for j in (i,)*n]
['abc', 'abc', 'abc', '123', '123', '123']
</code></pre>
</div>
<span class="comment-copy">Side comment: I understand that wouldn't be a nested list? e.g. <code>[[1,2],[3,4]]</code>...</span>
<span class="comment-copy">@Luis Yes, To get a nested list you need to add another pair of brackets. Something like this <code>[[i for j in range(n)] for i in lst]</code>. Take an hour off and go through those links. They are one of the best docs and will help you understand list-comps better. All the best.</span>
