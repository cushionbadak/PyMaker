<div class="post-text" itemprop="text">
<p>My code is like this:</p>
<pre><code>import re

s = """
    &lt;contentID&gt;1"""
reg = re.compile("(.|\n)+&lt;contentID&gt;1.*")
m = reg.fullmatch(s)
print(m)
reg = re.compile("[.\n]+&lt;contentID&gt;1.*")
m = reg.fullmatch(s)
print(m)
</code></pre>
<p>Seems like the regex <code>[.\n]</code> does not work, but <code>(.|\n)</code> does. Why? And how to write a RegExp when using brackets in this situation?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of the <code>[.\n]</code> that matches a newline or a literal dot character, use <code>.</code> with <code>re.DOTALL</code> or <code>re.S</code> enabling the <code>.</code> to match newline symbols, too:</p>
<pre><code>reg = re.compile(".*&lt;contentID&gt;1.*", re.DOTALL)
m = reg.fullmatch(s)
print(m)
</code></pre>
<p>See the <a href="https://ideone.com/ruC787" rel="nofollow">Python demo</a></p>
<p>Also, see <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">Python <code>re</code> reference</a>:</p>
<blockquote>
<p><strong><code>[]</code></strong><br/>
         Used to indicate a set of characters. In a set:<br/>
  ...<br/>
<li> Special characters lose their special meaning inside sets. For example, <code>[(+*)]</code> will match any of the literal characters <code>(</code>, <code>+</code>, <code>*</code>, or <code>)</code>.</li></p>
</blockquote>
<p>If you do not use <code>fullmatch</code> but <code>search</code>, you can just use <code>reg = re.compile("&lt;contentID&gt;1")</code> or <code>if "&lt;contentID&gt;1" in s</code>.</p>
</div>
<span class="comment-copy">What the input string and the expected result ?</span>
<span class="comment-copy"><code>[.]</code> matches a literal dot, not any char but a newline. Never use <code>"(.|\n)"</code>, use <code>.</code> with <code>re.S</code>. What do you mean by <i>And how to write a RegExp when using brackets in this situation?</i></span>
