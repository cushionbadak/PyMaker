<div class="post-text" itemprop="text">
<p>I am using the following code to upload a file on server using FTP after editing it:</p>
<pre><code>import fileinput

file = open('example.php','rb+')

for line in fileinput.input('example.php'):
    if 'Original' in line :
        file.write( line.replace('Original', 'Replacement'))

file.close()    
</code></pre>
<p>There is one  thing, instead of replacing the text in its original place, the code adds the replaced text at the end and the text in original place is unchanged.</p>
<p>Also, instead of just the replaced text, it prints out the whole line. Could anyone please tell me how to resolve these two errors?</p>
</div>
<div class="post-text" itemprop="text">
<p>1) <strong>The code adds the replaced text at the end and the text in original place is unchanged.</strong></p>
<p>You can't replace in the body of the file because you're opening it with the <code>+</code> signal.  This way it'll append to the end of the file.</p>
<pre><code>file = open('example.php','rb+')
</code></pre>
<p>But this only works if you want to <strong>append</strong> to the end of the document.</p>
<p>To <strong>bypass</strong> this you may use <a href="https://stackoverflow.com/questions/11696472/seek-function"><code>seek()</code></a> to navigate to the specific line and replace it. Or create 2 files: an <code>input_file</code> and an <code>output_file</code>.</p>
<hr/>
<p>2) <strong>Also, instead of just the replaced text, it prints out the whole line.</strong></p>
<p>It's because you're using:</p>
<pre><code>file.write( line.replace('Original', 'Replacement'))
</code></pre>
<hr/>
<p><strong>Free Code:</strong></p>
<p>I've segregated into 2 files, an inputfile and an outputfile.</p>
<p>First it'll open the <code>ifile</code> and save all lines in a list called <code>lines</code>.</p>
<p>Second, it'll read all these lines, and if <code>'Original'</code> is present, it'll <code>replace</code> it.</p>
<p>After replacement, it'll save into <code>ofile</code>.</p>
<pre><code>ifile = 'example.php'
ofile = 'example_edited.php'

with open(ifile, 'rb') as f:
    lines = f.readlines()

with open(ofile, 'wb') as g:
    for line in lines:
        if 'Original' in line:
            g.write(line.replace('Original', 'Replacement'))
</code></pre>
<p>Then if you want to, you may <a href="http://docs.python.org/library/os.html#os.remove" rel="nofollow noreferrer"><code>os.remove()</code></a> the non-edited file with:</p>
<hr/>
<p><strong>More Info:</strong> <a href="http://www.tutorialspoint.com/python/python_files_io.htm" rel="nofollow noreferrer">Tutorials Point: Python Files I/O</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The second error is how the <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>replace()</code></a> method works. </p>
<p>It returns the <em>entire</em> input string, with only the specified substring replaced. See example <a href="http://www.tutorialspoint.com/python/string_replace.htm" rel="nofollow noreferrer">here</a>.</p>
<p>To write to a specific place in the file, you should <a href="https://stackoverflow.com/questions/11696472/seek-function"><code>seek()</code></a> to the right position first.</p>
<p>I think this issue has been asked before in several places, I would do a quick search of StackOverflow. </p>
<p>Maybe <a href="https://stackoverflow.com/questions/16556944/how-do-i-write-to-the-middle-of-a-text-file-while-reading-its-contents">this</a> would help?</p>
</div>
<div class="post-text" itemprop="text">
<p>Replacing stuff in a file <strong>only</strong> works well if original and replacement have the same size (in bytes) then you can do </p>
<pre><code>with open('example.php','rb+') as f:
    pos=f.tell()
    line=f.readline()
    if b'Original' in line:
        f.seek(pos)
        f.write(line.replace(b'Original',b'Replacement'))
</code></pre>
<p>(In this case <code>b'Original'</code> and <code>b'Replacement'</code> do not have the same size so your file will look funny after this)</p>
<p>Edit:</p>
<p>If original and replacement are not the same size, there are different possibilities like adding bytes to fill the hole or moving everything after the line.</p>
</div>
<span class="comment-copy">Since you are using fileinput why did you not just <code>fileinput.input('example.php', inplace=True)</code>?</span>
<span class="comment-copy">Also what about the other lines?</span>
<span class="comment-copy">@PadraicCunningham  That gave an error. Is there some other way of doing it besides using <code>fileinput</code> at all?</span>
<span class="comment-copy">Yes, <a href="http://stackoverflow.com/questions/30481308/overwritting-characters-from-a-file-in-python/30481339#30481339" title="overwritting characters from a file in python">stackoverflow.com/questions/30481308/â€¦</a></span>
<span class="comment-copy">Not that I know of,  on most systems outside windows both should be atomic operations, personally I prefer the tempfile approach</span>
<span class="comment-copy">Thanks for the answer dot.Py but is there any way to do it without creating two files?</span>
<span class="comment-copy">@SanJeetSingh use ifile in both cases. First it will read in the lines, then it will open example.php output, clearing it and then you write the lines back in, leaving you with an edited file but the possibility of a trashed file if anything goes wrong.</span>
<span class="comment-copy"><code>Replacing stuff in a file only works if original and replacement have the same size (in bytes)</code>. Can you post a source to this info?</span>
<span class="comment-copy">I've just tried <code>s = 'abc'; t = s.replace('a', 'aaa'); print t</code> and it works fine.</span>
<span class="comment-copy">For strings adding/removing parts is no problem as a new one is created anyway but if you want to add or remove some bytes in a file you have to move everything after it - which means reading and writing back of large parts.</span>
