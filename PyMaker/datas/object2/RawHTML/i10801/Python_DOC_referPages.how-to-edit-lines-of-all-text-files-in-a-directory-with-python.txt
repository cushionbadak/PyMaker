<div class="post-text" itemprop="text">
<p>I would like to edit and replace lines of all .txt files in a directory with python for this purpose I am using the following code:</p>
<pre><code>path = '.../dbfiles'
for filename in os.listdir(path):
for i in os.listdir(path):
    if i.endswith(".txt"): 
        with open(i, 'r') as f_in:
            for line in f_in:
               line=tweet_to_words(line).encode('utf-8')  
               open(i, 'w').write(line)
</code></pre>
<p>where <strong><code>tweet_to_words(line)</code></strong> is a predefined function for edition lines of the text file.
Although I am not sure if the logic of the code is right!? I am also facing the following error:</p>
<blockquote>
<p>IOError: [Errno 2] No such file or directory: 'thirdweek.txt'</p>
</blockquote>
<p>but the <strong>'thirdweek.txt'</strong> exist in the directory!
So my question is to see if the method I am using for editing lines in a file is right or not!? and if so how can I fix the error ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should add the base path when you use <code>open</code>:</p>
<pre><code>        with open(path + '/' + i, 'r') as f_in:
</code></pre>
<p>the same goes for:</p>
<pre><code>               open(path + '/' + i, 'w').write(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The glob module is useful for getting files with similar endings:</p>
<pre><code>import glob

print glob.glob("*.txt")  # Returns a list of all .txt files, with path info

for item in glob.glob("*.txt"):
    temp = []  # Might be useful to use a temp list before overwriting your file
    with open(item, "r") as f:
        for line in f:
            print line  # Do something useful here
            temp.append(line)
    with open(item, "w") as f:
        f.writelines(temp)
</code></pre>
</div>
<span class="comment-copy">If the files are not huge (over 1MB), I suggest to first read the file with content = f.readlines(), then apply tweet_to_words to each element. After that open the file again for writing and write back the transformed lines (f.write("".join(content)))</span>
<span class="comment-copy">You need to supply the proper path, as shown in Ohad's answer. And you need different logic to edit the file. Currently your <code>.write</code> call will wipe out all existing contents of the file. Either do what traianus suggests, or even simpler, create a new file containing the edited data.</span>
<span class="comment-copy">Although sting concatenation works, it's safer (&amp;  more portable) to use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join</code></a>.</span>
