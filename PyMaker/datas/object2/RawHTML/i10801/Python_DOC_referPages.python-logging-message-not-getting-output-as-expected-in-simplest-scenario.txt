<div class="post-text" itemprop="text">
<p>I am not getting any output from <code>logging.debug</code> in the simplest possible situation. (I do get output from <code>logger.warn</code>.)</p>
<pre><code>import logging
logger = logging.getLogger()
logger.setLevel(logging.DEBUG)
logger.warn('Logger is warning')
logger.debug('Logger is debugging')
print(logger.getEffectiveLevel(),
      logger.isEnabledFor(logging.DEBUG),
      file=sys.stderr)
</code></pre>
<p>The last line prints the logger's logging level, which shows as <code>logging.DEBUG</code>, and whether the logger is enabled for that level, which is true. yet output appears for <code>log.warn</code> but not for <code>log.debug</code>. What am I missing?</p>
<p>[Python 3.5, OS X 10.11]</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason is that you haven't specified a handler. On Python 3.5, an internal <a href="https://docs.python.org/3.2/library/logging.html#logging.lastResort" rel="nofollow">"handler of last resort"</a> is used when no handler is specified by you, but that internal handler has a level of <code>WARNING</code> and so won't show messages of lower severity. You need to specify a handler and add it like this example:</p>
<pre><code>logger.addHandler(logging.StreamHandler())
</code></pre>
<p>either just before or just after the <code>setLevel</code> statement in your snippet.</p>
</div>
<span class="comment-copy">What is your handler?</span>
<span class="comment-copy">Yup, that worked. Thanks. But my reading of the basic tutorial in the documentation of the logging model [<a href="https://docs.python.org/3/howto/logging.html#logging-basic-tutorial]" rel="nofollow noreferrer">docs.python.org/3/howto/logging.html#logging-basic-tutorial]</a> suggests I can set the level of the default logger with the default handler and not have to add a handler.    [1]: <a href="https://docs.python.org/3/howto/logging.html#logging-basic-tutorial" rel="nofollow noreferrer">docs.python.org/3/howto/logging.html#logging-basic-tutorial</a></span>
