<div class="post-text" itemprop="text">
<p>For example</p>
<pre><code>sentence = "hello world"
stripped1 = sentence.strip()[:4]
stripped2 = sentence.strip()[3:8]
print (stripped1)
print (stripped2)
</code></pre>
<p>Output:</p>
<pre><code>hell
lo worl
</code></pre>
<p>Here strip( ) is a function object. So it should either take parameters or be followed by another object using dot notation. But how is it possible that the function is simply followed by slice notation ? How does strip( ) and slicing work together here ? what is the syntax rule supporting this format ? </p>
</div>
<div class="post-text" itemprop="text">
<p>Python executes <code>_result = sentence.strip()[:4]</code> as several <em>separate</em> steps:</p>
<pre><code>_result = sentence       # look up the object "sentence" references
_result = _result.strip  # attribute lookup on the object found
_result = _result()      # call the result of the attribute lookup
_result = _result[:4]    # slice the result of the call
stripped1 = _result      # store the result of the slice in stripped1
</code></pre>
<p>so <code>[:4]</code> is just more syntax, just like a <code>()</code> call, that can be applied to the outcome of another expression.</p>
<p>There is nothing special about the <code>str.strip()</code> call here, it just returns another string, the stripped version of the value of <code>sentence</code>. The method works fine without passing in any arguments; from the <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow">documentation for that method</a>:</p>
<blockquote>
<p>If omitted or <code>None</code>, the <em>chars</em> argument defaults to removing whitespace.</p>
</blockquote>
<p>so there is no requirement here to pass in arguments.</p>
<p>In this specific example, <code>sentence.strip()</code> returns the <em>exact same string</em>, as there is no leading or trailing whitespace in <code>"hello world"</code>:</p>
<pre><code>&gt;&gt;&gt; sentence = "hello world"
&gt;&gt;&gt; sentence.strip()
'hello world'
&gt;&gt;&gt; sentence.strip() == sentence
True
</code></pre>
<p>so the output of <code>sentence.strip()[:4]</code> is exactly the same as for <code>sentence[:4]</code>:</p>
<pre><code>&gt;&gt;&gt; sentence.strip()[:4] == sentence[:4]
True
</code></pre>
<p>You appear to have missed the call there, as you appear to be confused by the output of <em>just</em> the attribute lookup; <code>sentence.strip</code> (no call), produces a built-in method object:</p>
<pre><code>&gt;&gt;&gt; sentence.strip
&lt;built-in method strip of str object at 0x102177a80&gt;
</code></pre>
</div>
<span class="comment-copy">No, <code>strip()</code> is not a function object. It is the <i>return value of that method</i>. That's just another string, here exactly equal to the original as there is no leading or trailing whitespace.</span>
<span class="comment-copy">"strip( ) is a function object" No it isn't. It's a string. Try it. This is just stripping the whitespace off of that string to produce a new, stripped string, and then slicing it.</span>
<span class="comment-copy">So simple explanation. Thanks so much. @MartijnPieters.</span>
