<div class="post-text" itemprop="text">
<p>I am writing code for an application where performance is important. I am wondering why <code>defaultdict</code> seems to be faster then <code>setdefault</code>.</p>
<p>I would like to be able to use <code>setdefault</code>, mostly because i do not like the print output of the nested <code>defaultdict</code> (see implementation below).</p>
<p>In my code, i need to test if <code>element_id</code> is already a key of the dict.</p>
<p>Here are the two functions that i am testing:</p>
<pre><code>def defaultdictfunc(subcases,other_ids,element_ids):
    dict_name= defaultdict(lambda: defaultdict(lambda: defaultdict(dict)))
    for subcase in subcases:
        for other_id in other_ids:
            for element_id in element_ids: 
                if element_id in dict_name[subcase][other_id]:
                    # error duplicate element_id
                    pass
                else:
                    dict_name[subcase][other_id][element_id]=0
    return dict_name

def setdefaultfunc(subcases,other_ids,element_ids):
    dict_name={}
    for subcase in subcases:
        for other_id in other_ids:
            for element_id in element_ids: 
                if element_id in dict_name.setdefault(subcase,{}).setdefault(other_id,{}):
                    # error duplicate element_id
                    pass
                else:
                    dict_name[subcase][other_id][element_id]=0

    return dict_name
</code></pre>
<p>IPython input and output:    </p>
<pre><code>In [1]: from numpy.random import randint

In [2]: subcases,other_ids,element_ids=(randint(0,100,100),randint(0,100,100),randint(0,100,100))

In [5]: from collections import defaultdict

In [6]: defaultdictfunc(subcases,other_ids,element_ids)==setdefaultfunc(subcases,other_ids,element_ids)
Out[6]: True

In [7]: %timeit defaultdictfunc(subcases,other_ids,element_ids)
10 loops, best of 3: 177 ms per loop

In [8]: % timeit setdefaultfunc(subcases,other_ids,element_ids)
1 loops, best of 3: 351 ms per loop
</code></pre>
<p>Why is <code>setdefaultfunc</code> slower. I thought the underlying code would be the same. Is there a way to improve its speed?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>According to user <a href="https://stackoverflow.com/users/1431750/aneroid">aneroid</a>:</p>
<blockquote>
<p>It would make sense that <code>defaultdict</code> is faster that <code>dict.setdefault()</code> since the former sets its default for the entire dict at creation time, whereas setdefault() does it per element when it is read. One reason to use setdefault is when the default you assign is based on the key (or something) rather than a generic default for the entire dict.</p>
</blockquote>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/collections.html#defaultdict-examples" rel="nofollow noreferrer">The docs</a>, do say, "[using <code>defaultdict</code>] is simpler and faster than an equivalent technique using <code>dict.setdefault()</code>." To work around the printing issue, it is easy (and quick) to convert a <code>defaultdict</code> back to a regular <code>dict</code> by using <code>dict(dict_name)</code>.</span>
<span class="comment-copy">It would make sense that <code>defaultdict</code> is faster that <code>dict.setdefault()</code> since the former sets its default for the entire dict at creation time, whereas <code>setdefault()</code> does it per element when it is read. One reason to use <code>setdefault</code> is when the default you assign is based on the key (or something) rather than a generic default for the entire dict.</span>
<span class="comment-copy">Thanks guys, makes perfect sense now.</span>
