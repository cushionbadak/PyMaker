<div class="post-text" itemprop="text">
<p>I am wondering why <code>python 2.7</code> uses <code>gettimeofday()</code> when running <code>time.time()</code> but yet in <code>python 3.4</code> it does not?</p>
<p>It appears when running strace that it may be querying /etc/localtime</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 will use <code>gettimeofday()</code> when your system has been detected to support this <em>at compile time</em>. However, on POSIX systems it'll only use that if <a href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/clock_gettime.html" rel="nofollow"><code>clock_gettime(CLOCK_REALTIME)</code></a> is not available instead; according to the <a href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/gettimeofday.html" rel="nofollow">POSIX 2008 standard</a> the latter is preferred as <code>gettimeofday()</code> is considered obsolete.</p>
<p>At runtime, you can query what Python thought your system could support at compile time by using the <a href="https://docs.python.org/3/library/time.html#time.get_clock_info" rel="nofollow"><code>time.get_clock_info()</code> function</a>, which returns a <code>namedtuple</code> instance with a <code>implementation</code> field:</p>
<blockquote>
<p><em>implementation</em>: The name of the underlying C function used to get the clock value</p>
</blockquote>
<p>On my OSX 10.11 system, for the <code>'time'</code> clock, that produces <code>gettimeofday()</code>:</p>
<pre><code>&gt;&gt;&gt; time.get_clock_info('time').implementation
'gettimeofday()'
</code></pre>
<p>You can read through the <a href="https://hg.python.org/cpython/file/v3.5.2/Python/pytime.c#l451" rel="nofollow"><code>pygettimeofday()</code> C implementation</a> to see what implementations may be used; on Windows <code>GetSystemTimeAsFileTime()</code> is used for example.</p>
</div>
<span class="comment-copy">do u face any problem with it ?</span>
<span class="comment-copy">Is there any problem with the different implementation? The Python 3 <code>time</code> module was overhauled when the various new clock types were added.</span>
<span class="comment-copy">Yes using the virtual time kernel <a href="https://github.com/littlepretty/VirtualTimeKernel" rel="nofollow noreferrer">github.com/littlepretty/VirtualTimeKernel</a>  Which relies on GToD</span>
<span class="comment-copy">Also the docs are misleading suggesting that if available it should use GToD <a href="https://docs.python.org/3.4/library/time.html" rel="nofollow noreferrer">docs.python.org/3.4/library/time.html</a></span>
<span class="comment-copy">The documentation is not lying; perhaps you need to build Python directly on your system instead? See the <a href="https://hg.python.org/cpython/file/3.5/Python/pytime.c#l451" rel="nofollow noreferrer"><code>pygettimeofday()</code> function</a> specifically.</span>
<span class="comment-copy">Thanks for the info. I will try to force it to use GToD as its clocking mechanism.</span>
<span class="comment-copy">@channon: not sure why you'd need to as I see <a href="https://github.com/littlepretty/VirtualTimeKernel/blob/7d3b11be676df5e828f9c52b34990ebc55330e72/arch/x86/vdso/vclock_gettime.c" rel="nofollow noreferrer">VirtualTimeKernel supports <code>clock_gettime()</code></a>.</span>
<span class="comment-copy">because the virtual time only effects GToD it is in the code for that function</span>
