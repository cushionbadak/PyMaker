<div class="post-text" itemprop="text">
<p>I have a few files with python code and decorators like this:</p>
<pre><code>@trace('api.module.function_name', info=None, custom_args=False)
</code></pre>
<p>The only difference between these decorators is the string 'api.module.function_name' - func name and module are different. And depending on the this param name sometimes this decorator is one-lined, some times it is two- or three-lined.</p>
<p>I want to replace these decorators with the other one - more simple, like "@my_new_decorator".</p>
<p>I thought about some regex but I have no idea if it's possible for such "fuzzy" search. I tried <code>^@trace([A-Za-z0-9]\, custom_args=False)$</code>
But it doesn't work.</p>
<p>Is there a way to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Something like this should work:</p>
<pre class="lang-none prettyprint-override"><code>(\n|^)\s*@trace\(\s*'[^']*',\s*info=None,\s*custom_args=False\s*\)\s*(\r|\n|$)
</code></pre>
<p>See the <a href="https://regex101.com/r/wU7zK5/2" rel="nofollow">demo</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>^@trace\('api\.(.+)\.(.+)', info=None, custom_args=False\)$</code> with a multiline flag.</p>
<p>You may want to use <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow">re.sub</a> :</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; pattern = re.compile('^@trace\('api\.(.+)\.(.+)', info=None, custom_args=False\)$', re.M)
&gt;&gt;&gt; re.sub(pattern, '@my_new_decorator('\1', '\2')', '@trace('api.module.function_name', info=None, custom_args=False)')
@my_new_decorator('module', 'function_name')
</code></pre>
<p>See <a href="https://www.debuggex.com/r/NzIGSGobeLVuPdBj" rel="nofollow">this</a> for the demo of the regex</p>
<p>As you can see <code>\1</code> expand to the first group in the regex <code>(.+)</code></p>
</div>
<span class="comment-copy">Well a regex like that wouldn't work, you'd need something more like <code>^\s*@trace\(.+\)$</code> because you're matching one alphanumeric character and only matching at all if this is all at column 0.</span>
<span class="comment-copy">you might need the multiline flag in your regex : <code>re.M</code></span>
<span class="comment-copy">Thanks, this works too, so upwoting it. :)</span>
