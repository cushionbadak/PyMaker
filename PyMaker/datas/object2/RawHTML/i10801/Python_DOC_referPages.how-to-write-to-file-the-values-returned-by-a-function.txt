<div class="post-text" itemprop="text">
<p>Here;s  the <code>calc_property_statistics</code> function which returns maximum, minimum, and average  values. I need to write them to a file. </p>
<pre><code>def calc_property_statistics(prop, realisation=0):

    values = prop.get_values(realisation)
    maximum = np.max(values)
    minimum = np.min(values)
    average = np.average(values)

    print("maximum: {}, minimum: {}, average: {} for property {}".format(
       maximum,
        minimum,
        average,
        prop))

    return (maximum, minimum, average)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this is the example of function to write return values from other function to file:</p>
<pre><code>def my_func():
    """
    this function return some value
    :return:
    """
    return 'This is some value'


def write_file(data):
    """
    this function write data to file
    :param data:
    :return:
    """
    file_name = r'D:\log.txt'
    with open(file_name, 'wb') as x_file:
        x_file.write(data)


def run():
    data = my_func()
    write_file(data)

run()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>at first it depends from format of file you need to use.</p>
<p>this is example how to write into simple text file with values separated by newline.</p>
<pre><code>x = calc_property_statistics(prop, realisation)
out_file = open('results.txt', 'wb')
out_file.write(x[0]) # maximum
out_file.write('\n')
out_file.write(x[1]) # minimum
out_file.write('\n')
out_file.write(x[2]) # average
out_file.write('\n')
out_file.close()
</code></pre>
<p>or it can be done with one "write"</p>
<pre><code>...
out_file.write('{}\n{}\n{}\n'.format(x[0], x[1], x[2]))
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>f=open('abc.txt','w')
def calc_property_statistics(prop, realisation=0):

    values = prop.get_values(realisation)
    maximum = np.max(values)
    minimum = np.min(values)
    average = np.average(values)

    return (maximum, minimum, average)
#--------------------------------------------------------------
# Main script body

x = calc_property_statistics(project.grid_models['Heterogeneity'].properties['Poro'])
f.write("%s Maximum\n %s Minimum \n %s Average \n" %x)
f.close()
</code></pre>
</div>
<span class="comment-copy">What is your question? Have you had a look at <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/â€¦</a>? Who is going to read the file later (a script or a human)? Why did you tag the question <code>fwrite</code> which has nothing to do with Python?</span>
<span class="comment-copy">That is a nice function, however it has absolutely nothing to do with what you appear to be asking, if you want to know how to write to a file then <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">look at some resources on that</a> before asking here.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/5214578/python-print-string-to-text-file">Python Print String To Text File</a></span>
<span class="comment-copy">This works for strings. In the OP's example, it seems you're dealing with multiple values. Depending on who uses the data later, it might be necessary to take that into account. Also, you don't need to close the file when you're already using a <code>with</code> statement to handle precisely that.</span>
<span class="comment-copy">@Tim Pietzcker thanks for the tip regarding ( with statement ).</span>
<span class="comment-copy">Please take a moment to get acquainted with the editor (click the <code>?</code> button in the editor window).</span>
