<div class="post-text" itemprop="text">
<p>I have the following program. While I run it, I received <code>Memory Error</code>, specifically in <code>Fpred = F.predict(A)</code> (please see below)</p>
<pre><code>import json
data = []
with open('yelp_data.json') as f:
    for line in f:
        data.append(json.loads(line))
star = []
for i in range(len(data)):
    star.append(data[i].values()[10])

attributes = []
for i in range(len(data)):
    attributes.append(data[i].values()[12])


def flatten_dict(dd, separator=' ', prefix=''):
    return { prefix + separator + k if prefix else k : v
         for kk, vv in dd.items()
         for k, v in flatten_dict(vv, separator, kk).items()
         } if isinstance(dd, dict) else { prefix : dd }

flatten_attr = list(flatten_dict(attributes[i], separator = ' ', prefix = '') for i in range(len(attributes)))


from sklearn.feature_extraction import DictVectorizer
v = DictVectorizer(sparse = False)
X = v.fit_transform(flatten_attr)

from sklearn.feature_extraction.text import TfidfTransformer
Transformer = TfidfTransformer()
A = Transformer.fit_transform(X)

from sklearn.linear_model import LinearRegression
from sklearn.cross_validation import train_test_split

from sklearn.neighbors import KNeighborsRegressor
from sklearn.cross_validation import KFold

F = KNeighborsRegressor(n_neighbors = 27)

Ffit = F.fit(A, star)
Fpred = F.predict(A)
Score = F.score(A, star)
print(Score)
</code></pre>
<p>My json file looks like this - </p>
<pre><code>{"business_id": "vcNAWiLM4dR7D2nwwJ7nCA", "full_address": "4840 E Indian School Rd\nSte 101\nPhoenix, AZ 85018", "hours": {"Tuesday": {"close": "17:00", "open": "08:00"}, "Friday": {"close": "17:00", "open": "08:00"}, "Monday": {"close": "17:00", "open": "08:00"}, "Wednesday": {"close": "17:00", "open": "08:00"}, "Thursday": {"close": "17:00", "open": "08:00"}}, "open": true, "categories": ["Doctors", "Health &amp; Medical"], "city": "Phoenix", "review_count": 7, "name": "Eric Goldberg, MD", "neighborhoods": [], "longitude": -111.98375799999999, "state": "AZ", "stars": 3.5, "latitude": 33.499313000000001, "attributes": {"By Appointment Only": true}, "type": "business"}
{"business_id": "JwUE5GmEO-sH1FuwJgKBlQ", "full_address": "6162 US Highway 51\nDe Forest, WI 53532", "hours": {}, "open": true, "categories": ["Restaurants"], "city": "De Forest", "review_count": 26, "name": "Pine Cone Restaurant", "neighborhoods": [], "longitude": -89.335843999999994, "state": "WI", "stars": 4.0, "latitude": 43.238892999999997, "attributes": {"Take-out": true, "Good For": {"dessert": false, "latenight": false, "lunch": true, "dinner": false, "breakfast": false, "brunch": false}, "Caters": false, "Noise Level": "average", "Takes Reservations": false, "Delivery": false, "Ambience": {"romantic": false, "intimate": false, "touristy": false, "hipster": false, "divey": false, "classy": false, "trendy": false, "upscale": false, "casual": false}, "Parking": {"garage": false, "street": false, "validated": false, "lot": true, "valet": false}, "Has TV": true, "Outdoor Seating": false, "Attire": "casual", "Alcohol": "none", "Waiter Service": true, "Accepts Credit Cards": true, "Good for Kids": true, "Good For Groups": true, "Price Range": 1}, "type": "business"}

$ls -l yelp_data.json
</code></pre>
<p>shows the file size is 33524921</p>
<p>The worse I could do is to extract the needed data in a different file and import it to this program? 
What would be good to improve this program to make it run more efficiently? Thank you!!</p>
</div>
<div class="post-text" itemprop="text">
<p>Not performance/memory related but you could replace:</p>
<pre><code>for i in range(len(data)):
    star.append(data[i].values()[10])
</code></pre>
<p>by:</p>
<pre><code>for item in data:
    star.append(item.values()[10])
</code></pre>
<p><code>data</code> being a <code>list</code>, it is iterable. <a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow">https://docs.python.org/3/library/stdtypes.html#list</a></p>
<p>Also in Python 3, indexing dict values no longer work, you will end up with:</p>
<pre><code>    star.append(data[i].values()[10])
TypeError: 'dict_values' object does not support indexing
</code></pre>
<p>Since items in <code>data</code> are json dicts, you may want to search for attributes by name instead of relying on attribute index:</p>
<pre><code>for item in data:
    star.append(item['thekeyyourelookingfor'])
</code></pre>
<p>And then make it single-line:</p>
<pre><code>star = [item['thekeyyourelookingfor'] for item in data]
</code></pre>
<p><strong>EDIT</strong>: actually since <code>json.loads</code> reads the JSON string into a dictionary, the order or attributes is arbitrary, so when you access them by index you will very likely end up with a different attribute than the one you're looking for. Here you want read <code>stars</code> I guess. <strong>I'd even guess that is why your code fails, since you give sklearn input he is not expecting.</strong></p>
</div>
<span class="comment-copy">It's a litter hard to read your code. you'd better give some comments and how big of your <code>yelp_data.json</code>, what's format of each line in the json file.</span>
<span class="comment-copy">Thanks. I am doing that.</span>
<span class="comment-copy">Your code looks like python is not your normal language, but I don't think that is the issue.  You might tag the question with sklearn since, my guess is those function might use lots of memory.  If you can use generators instead of lists, you will not eat up memory.  You might want to delete intermediate lists once you no longer need them</span>
<span class="comment-copy">Thank you. There are always new things for me to learn.</span>
<span class="comment-copy">Try: <code>star = [item.get('stars') for item in data]</code> and <code>attributes = [item.get('attributes') for item in data]</code> and see my EDIT above.</span>
