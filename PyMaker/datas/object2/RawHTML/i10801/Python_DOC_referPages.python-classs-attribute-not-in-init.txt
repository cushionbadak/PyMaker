<div class="post-text" itemprop="text">
<p>I want to know why the following codes work?<br/></p>
<pre><code>#!/usr/bin/env python3

import sys

class Car():
    def __init__(self):    
        pass

if __name__ == '__main__':
    c = Car()
    c.speed = 3
    c.time = 5
    print(c.speed, c.time)
</code></pre>
<p>I accidentally found that I don't have to init attributes in <strong>init</strong>. I learn from every tutor I have to put assignment in <strong>init</strong> like below.</p>
<pre><code>#!/usr/bin/env python3

import sys

class Car():
    def __init__(self):    
        self.speed = 3
        self.time = 5

if __name__ == '__main__':
    c = Car()
    print(c.speed, c.time)
</code></pre>
<p>If there are some official documents can explain this would be better. </p>
</div>
<div class="post-text" itemprop="text">
<p>It's class attributes vs instance attributes vs dynamic attributes. When you do:</p>
<pre><code>class Car():
    def __init__(self):    
        pass

c = Car()
c.speed = 3
c.time = 5
</code></pre>
<p><code>speed</code> and <code>time</code> are dynamic attributes <em>(not sure if this is an official term)</em>. If the <em>usage</em> of the class is such that these attributes are set before calling any other methods of <code>Car</code>, then those methods can use <code>self.speed</code>. Otherwise, you get an error:</p>
<pre><code>&gt;&gt;&gt; d = Car()
&gt;&gt;&gt; d.speed
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'Car' object has no attribute 'speed'
&gt;&gt;&gt;
</code></pre>
<p>This happens because for <code>c</code>, speed and time are attributes on that instance of <code>Car</code>. Their existence or value doesn't propagate across other instances of Car. So when I create <code>d</code> and then try to lookup <code>d.speed</code>, the attribute doesn't exist. As you've said in your own comment, <em>"they spring into existence when they are first assigned to."</em></p>
<blockquote>
<p>I accidentally found that I don't have to init attributes in init. I learn from every tutor I have to put assignment in init like below.</p>
</blockquote>
<p>Your tutors were very wrong or you misunderstood what they meant. In the example you gave, every Car gets the same initial <code>speed</code> and <code>time</code>. Typically, an <code>__init__</code> would look like this:</p>
<pre><code>class Car():
    def __init__(self, speed, time):  # notice that speed and time are
                                      # passed as arguments to init
        self.speed = speed
        self.time = time
</code></pre>
<p>You can then initialise a <code>Car</code> with: <code>c = Car(3, 5)</code>. Or put default values in init if it's optional.</p>
<p>Edit: example adapted <a href="https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables" rel="nofollow">from the docs</a>:</p>
<pre><code>class Dog:

    kind = 'canine'         # class variable shared by all instances

    def __init__(self, name):
        self.name = name    # instance variable unique to each instance

&gt;&gt;&gt; d = Dog('Fido')
&gt;&gt;&gt; e = Dog('Buddy')
&gt;&gt;&gt; d.kind                  # shared by all dogs
'canine'
&gt;&gt;&gt; e.kind                  # shared by all dogs
'canine'
&gt;&gt;&gt; d.name                  # unique to d
'Fido'
&gt;&gt;&gt; e.name                  # unique to e
'Buddy'
&gt;&gt;&gt; d.age = 3               # dynamic attribute/variable, unique to d
&gt;&gt;&gt; d.age
3
&gt;&gt;&gt; e.age                   # e doesn't have it at all
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'Dog' object has no attribute 'age'
</code></pre>
</div>
<span class="comment-copy">Did you read the official documentation on Classes in the Python Tutorial: <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html</a></span>
<span class="comment-copy"><b>data attributes</b> correspond to “instance variables” in Smalltalk, and to “data members” in C++. Data attributes need not be declared; like local variables, they <b>spring into existence when they are first assigned to</b>.</span>
<span class="comment-copy">But I also want to know, in practice, what this feature is used for? It's not class variable, so it can not be shared. It looks like it's used to store some value, and if it's used for store some data, why not used instance variable instead?  instance variable seems more correct to use to store some data.</span>
<span class="comment-copy">It <i>is</i> an instance variable!  Any variable in an instance's namespace is an instance variable --- it doesn't matter how it got there.</span>
<span class="comment-copy">These terms are really confusing...</span>
<span class="comment-copy">So, can I say that a more standard way when creating a class, I have to put initialize instance variables in <b>init</b>, because when c = Car() have some instance variables but another d = Car() does not which would be really inconsistent?</span>
<span class="comment-copy">Yes, that's correct. That way every instance of <code>Car</code> will have those attributes "spring into existence" since "they are first assigned to" in <code>__init__</code>.</span>
