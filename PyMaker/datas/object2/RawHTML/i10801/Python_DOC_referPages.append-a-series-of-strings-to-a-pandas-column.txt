<div class="post-text" itemprop="text">
<p>I'm a Pandas newbie and have written some code that should append a dictionary to the last column in a row.
The last column is named "Holder"</p>
<p>Part of my code, which offends the pandas engine is shown below</p>
<pre><code>df.loc[df[innercat] == -1, 'Holder'] += str(odata)
</code></pre>
<p>I get the error message</p>
<pre><code>TypeError: ufunc 'add' did not contain a loop with signature matching types dtype('S75') dtype('S75') dtype('S75')
</code></pre>
<p>When I run my code replacing the "+=" with "=" the code runs just fine although I only get part of the data I want.
What am I doing wrong? I've tried removing the str() cast and it still works as an assignment, not an append.</p>
<p><strong>Further clarification</strong>:</p>
<pre><code>Math1 Math1_Notes Physics1 Physics1_Notes Chem1 Chem1_Notes Bio1 Bio1_Notes French1 French1_Notes Spanish1 Spanish1_Notes Holder
-1    Gr8 student  0                        0                  0              0                    -1        Foo            NaN
0                  0                        0                  0              0                    -1        Good student   NaN
0                  0                       -1                  So so          0                    0         0              NaN
0                 -1        Not serious    -1                  Hooray        -1                    Voila         0          NaN
</code></pre>
<p>My original dataset contains over 300 columns of data, but I've created an example that captures the spirit of what I'm trying to do. Imagine a college with 300 departments each offering 1(or more) courses. The above data is a micro-sample of that data. So for each student, next to their name or admission number, there is a "-1" indicating that they took a certain course. And in addition, the next column USUALLY contains notes from that department about that student.</p>
<p>Looking at the 1st row of the data above, we have a student who took Math &amp; Spanish and each department added some comments about the student. For each row, I want to add a dict that summarises the data for each student. Basically a JSON summary of each departments entry. Assuming a string of the general form</p>
<pre><code>json_string = {"student name": a, "data": {"notes": b, "Course name": c}}
</code></pre>
<p>I intend my code to read my csv, form a dict for each department and APPEND it to Holder column. Thus for the above student(1st row), there will be 2 dicts namely</p>
<pre><code>{"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}}
{"student name": "Peter", "data": {"notes": "Foo", "Course name": "Spanish1"}}
</code></pre>
<p>and the final contents of Holder for row 1 will be</p>
<pre><code>{"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}} {"student name": "Peter", "data": {"notes": "Foo", "Course name": "Spanish1"}}
</code></pre>
<p>when I can successfully append the data, I will probably add a comma or '|' in between the seperate dicts. The line of code that I have written is </p>
<pre><code>df.loc[df[innercat] == -1, 'Holder'] = str(odata)
</code></pre>
<p>whether or not I cast the above line as str(), writing the assignment instead of the append operator appears to overwrite all the previous values and only write the last value into Holder, something like</p>
<pre><code>-1    Gr8 student  0                        0                  0              0                    -1        Foo            {"student name": "Peter", "data": {"notes": "Foo", "Course name": "Spanish1"}}
</code></pre>
<p>while I want</p>
<pre><code>-1    Gr8 student  0                        0                  0              0                    -1        Foo            {"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}} {"student name": "Peter", "data": {"notes": "Foo", "Course name": "Spanish1"}}
</code></pre>
<p>For anyone interested in reproducing what I have done, the main part of my code is shown below</p>
<pre><code>count = 0
substrategy = 0
for cat in col_array:
    count += 1
    for innercat in cat:        
        if "Notes" in innercat:
            #b = str(df[innercat])
            continue
        substrategy += 1
        c = count
        a = substrategy
        odata = {}
        odata['did'] = a
        odata['id'] = a        
        odata['data'] = {}
        odata['data']['notes'] = b
        odata['data']['substrategy'] = a
        odata['data']['strategy'] = c
        df.loc[df[innercat] == -1, 'Holder'] += str(odata)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>is that what you want?</p>
<pre><code>In [190]: d1 = {"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}}

In [191]: d2 = {"student name": "Peter", "data": {"notes": "Foo", "Course name": "Spanish1"}}

In [192]: import json

In [193]: json.dumps(d1)
Out[193]: '{"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}}'

In [194]: df
Out[194]:
   Investments_Cash  Holder
0                 0     NaN
1                 0     NaN
2                -1     NaN

In [196]: df.Holder = ''

In [197]: df.ix[df.Investments_Cash == -1, 'Holder'] += json.dumps(d1)

In [198]: df.ix[df.Investments_Cash == -1, 'Holder'] += ' ' + json.dumps(d2)

In [199]: df
Out[199]:
   Investments_Cash
                   Holder
0                 0
1                 0
2                -1  {"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}} {"student name": "Peter", "data": {"notes": "Foo", "Course nam...
</code></pre>
<p>NOTE: <strong>it will be really painful to work / parse your <code>Holder</code> column in future, because it's not standard - you won't be able to parse it back without additional preprocessing (for example splitting using complex RegEx'es, etc.)</strong></p>
<p>So i would strongly recommend you to convert <strong>a list of dicts to JSON</strong> - you'll be able to read it back using <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json.loads()</a> method:</p>
<pre><code>In [201]: df.ix[df.Investments_Cash == -1, 'Holder'] = json.dumps([d1, d2])

In [202]: df
Out[202]:
   Investments_Cash
                   Holder
0                 0

1                 0

2                -1  [{"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}}, {"student name": "Peter", "data": {"notes": "Foo", "Course n...
</code></pre>
<p>parse it back:</p>
<pre><code>In [204]: lst = json.loads(df.ix[2, 'Holder'])

In [205]: lst
Out[205]:
[{'data': {'Course name': 'Math1', 'notes': 'Gr8 student'},
  'student name': 'Peter'},
 {'data': {'Course name': 'Spanish1', 'notes': 'Foo'},
  'student name': 'Peter'}]

In [206]: lst[0]
Out[206]:
{'data': {'Course name': 'Math1', 'notes': 'Gr8 student'},
 'student name': 'Peter'}

In [207]: lst[1]
Out[207]: {'data': {'Course name': 'Spanish1', 'notes': 'Foo'}, 'student name': 'Peter'}
</code></pre>
</div>
<span class="comment-copy">Can you create <a href="http://stackoverflow.com/q/20109391/2087463">example data</a> that that <a href="http://stackoverflow.com/help/mcve">exemplifies the issue</a>?  It will be difficult to know what the specific problem is otherwise.</span>
<span class="comment-copy">what is the dtype of <code>odata</code>? it should be a string series ...</span>
<span class="comment-copy">@MaxU: odata is a dict</span>
<span class="comment-copy">i think you should <a href="http://stackoverflow.com/posts/38674830/edit">post</a> a sample <code>df</code> and sample <code>odata</code> (5 rows should be enough), otherwise it's not clear what are you trying to achieve</span>
<span class="comment-copy">is the data in dataframe see how to create <a href="http://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">@user1801060, it's not yet clear. Make an example of how your <code>dict1 dict2 dict3</code> should look like - is it a concatenated string representation of dicts? is it a list of dicts? is it something different? Please read <a href="http://stackoverflow.com/questions/20109391/how-to-make-good-reproducible-pandas-examples">how to make good reproducible pandas examples</a> and change your question accordingly</span>
<span class="comment-copy">Updated the question</span>
<span class="comment-copy">@user1801060, what is <code>{"student name": "Peter", "data": {"notes": "Gr8 student", "Course name": "Math1"}} {"student name": "Peter", "data": {"notes": "Foo", "Course name": "Spanish1"}}</code>? It's not a pandas/numpy/python dtype. Is it a string?</span>
<span class="comment-copy">It is created as a dict, cast as a string . Notice that there are 2 dicts, seperated by a space</span>
<span class="comment-copy">That's close to it. However, a student can take more than 2 courses. In the full scale model, there's at least one entry(dict), but there can be up to 50 seperate dicts per row. Also "Holder" doesn't contain a -1, by default it's "NaN"</span>
