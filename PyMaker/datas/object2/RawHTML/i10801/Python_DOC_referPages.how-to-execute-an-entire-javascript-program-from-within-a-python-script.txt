<div class="post-text" itemprop="text">
<p>So I am currently working on a project that involves the google maps API. In order to display data on this, the file needs to be in a geojson format. So far in order to accomplish this, I have been using two programs, 1 in javascript that converts a .json to a CSV, and another that converts a CSV to a geojson file, which can then be dropped on the map. However, I need to make both processes seamless, therefore I am trying to write a python script that checks the format of the file, and then converts it using the above programs and outputs the file. I tried to use many javascript to python converters to convert the javascript file to a python file, and even though the files were converted, I kept getting multiple errors for the past week that show the converted program not working at all and have not been able to find a way around it. I have only seen articles that discuss how to call a javascript function from within a python script, which I understand, but this program has a lot of functions and therefore I was wondering how to call the entire javascript program from within python and pass it the filename in order to achieve the end result. Any help is greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>While this is not exactly what you are asking for, propably using <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json</a> and <a href="https://pypi.python.org/pypi/geojson" rel="nofollow">geojson</a> is easier. (If you dont want to use nodejs or the like)</p>
</div>
<div class="post-text" itemprop="text">
<p>I was able to write a conversion script, and it's working now, thanks!</p>
</div>
<span class="comment-copy">So presumably you want to call nodejs? See e.g. <a href="https://nodejs.org/api/cli.html" rel="nofollow noreferrer">nodejs.org/api/cli.html</a></span>
<span class="comment-copy">Once you know what the command (including parameters) is that you want to call, you can use the <code>subprocess</code> module to do so from within Python, <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html</a></span>
<span class="comment-copy">@jmetz It isn't supposed to call nodejs, like for example if I had a line that checks the extension of the file and it ends with json it should do os.system('python csv2json.js(filename)') but obviously i can't do python and then follow it with a .js which is why i tried to convert it to a .py but that wasn't working</span>
<span class="comment-copy">If you definitely want to convert the JS file to Python you should work through the errors one at a time, starting with the first one. If you need help with that, create questions specific to the errors, pasting the error message and a minimal working example when possible.</span>
<span class="comment-copy">@jmetz I have been using programs that convert the file from js to py, namely js2py, but the thing is there's even a message at the top of the converted file that's automatically generated that says "don't try to make sense of the python code because I myself can't" so I am guessing that the way it works doesn't allow for debugging at all. The errors generated were that undefined and null don't have properties, which means the compiler thinks the aforementioned are functions and I'm stuck because I searched for a while and I still don't know how to debug that especially because of converter</span>
<span class="comment-copy">Yeah, the OP's present strategy seems to be de-evolving into one great big <i>mess.</i> Time to look for another way to do it.</span>
