<div class="post-text" itemprop="text">
<p>Following stackoverflow posts and a lot of tutorials to implement i18n internationalization in Django Admin I founded this steps:</p>
<p><i><b>Command line Install</b> (in the right ENV)</i></p>
<pre><code>    Using PIP: pip install python-gettext (I tried this)

    Using Conda: conda install gettext
</code></pre>
<p><b><i>settings.py</i></b></p>
<pre><code>    MIDDLEWARE = [
                 ...
                 'django.contrib.sessions.middleware.SessionMiddleware',
                 'django.middleware.locale.LocaleMiddleware', #right place
                 'django.middleware.common.CommonMiddleware',
                 ...
    ]
    ...'context_processors': [
                 ...
                 'django.template.context_processors.i18n', # Indifferent place
                 ...
    ]
    ...
    TIME_ZONE = 'UTC'  # America/Sao_Paulo
    USE_I18N = True
    USE_L10N = True        
    USE_TZ = True        
    ugettext = lambda s: s        
    LANGUAGES = (
            ( 'en-us', ugettext( 'English' )),
            ( 'pt-br', ugettext( 'Portuguese' )),
            ( 'es', ugettext( 'Spanish' )),
    )        
    LANGUAGE_CODE = 'en-us' #default
    ...
    SITE_ROOT = os.path.dirname( os.path.realpath( __file__ ) )
    PROJECT_PATH = os.path.abspath( os.path.dirname( __name__ ) )
    LOCALE_PATHS = ( os.path.join( SITE_ROOT, 'locale' ), ) # translation files will be created into 'locale' folder from root project folder
</code></pre>
<p><b><i>urls.py</i></b></p>
<pre><code>admin.autodiscover()
urlpatterns = [
        url( r'^favicon.ico$',
             RedirectView.as_view( url = staticfiles_storage.url( 'images/favicon.png' ), ),
             ),
        ...
]
&lt;b&gt;urlpatterns += i18n_patterns&lt;/b&gt;(

        path( r'admin/',
              admin.site.urls
              ),
       ... 
)
urlpatterns += static(
        settings.STATIC_URL, document_root = settings.STATIC_ROOT ) \
             + static(
        settings.MEDIA_URL, document_root = settings.MEDIA_ROOT )
</code></pre>
<p><i><b>models.py</b> (any)</i></p>
<pre><code>    from django.core.validators import RegexValidator
    from django.db import models
    from django.utils.translation import ugettext as _
    ...
    class BussinesType(models.Model):
        bussinestype_name = models.CharField(
             verbose_name = _( 'Business Name' ),
             help_text = _( 'Name, Field Type, Activity' ),
             max_length = 32, )
</code></pre>
<p><i><b>Windows Users</b> (must have)</i></p>
<p>Windows users need to download two packages from gnome project to built the i18n internationalization translation files to the right folder/directory - so download this to properly Windows 64/32 bits system <a href="http://ftp.gnome.org/pub/gnome/binaries/win64/dependencies/" rel="nofollow noreferrer">gettext-runtime-(last file version)_win64</a> or <a href="http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/" rel="nofollow noreferrer">win32</a> <i>and download gettext-tools-(last file version) too</i>, Decompress all files to the same folder(gettext-tools inside BIN folder) and add Windows PATH variable to recognize these files.</p>
<p><i><b>MAC Users</b> (must check this)</i></p>
<p>I read a lot misspelled texts talking about the case/camel-Case into "languages" code are case sensitive, so take care if you use something like pt-<i>Br</i>:</p>
<pre><code>    LANGUAGES = (
            ( 'en-us', ugettext( 'English' )),
            ( 'pt-br', ugettext( 'Portuguese' )),
            ( 'es', ugettext( 'Spanish' )),
    )    
</code></pre>
<p><i><b>Building templates files(.po)</b> (to write translations)</i></p>
<pre><code>    At terminal try this to built all specified languages in LANGUAGES and put "-v 3" to show how magic happening 

    python manage.py makemessages --all -v 3
</code></pre>
<p><i><b>Nothing happens</b> (Someone have the same no-error like this)</i></p>
<p>All this steps results into a 'locale' folder created, a 'python manage.py makemessages' supposedly worked and listing none, creating none, doing nothing, even not one error. <b>I'm really lost about this and after that, how I can retrieve the current selected language code to create alternative code to impossible i18n translations like:</b></p>
<pre><code>   PHONE REGEX rules, STATE list,...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can you try specifying a target language to create?</p>
<p>For example for spanish:</p>
<pre><code>python manage.py makemessages -l es
</code></pre>
</div>
<span class="comment-copy">I really tried this too @phoibos</span>
