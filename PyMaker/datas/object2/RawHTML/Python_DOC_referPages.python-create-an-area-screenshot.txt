<div class="post-text" itemprop="text">
<p>Is it possible in python to create an area screenshot like this example ?</p>
<p><a href="https://i.stack.imgur.com/ANUti.png" rel="nofollow noreferrer">example</a> </p>
<pre><code>import pyautogui

def capture_current_scene(name_screenshot, i):
    im1= pyautogui.screenshot()
    im1.save(name_screenshot+'_'+str(i))


def capture_area_scene():
    currentMouseX1, currentMouseY1 = pyautogui.position()

    # click one ==&gt; initialize a rectangle form

    currentMouseX2, currentMouseY2 = pyautogui.position()

    # click two ==&gt; end the rectangle form
    # you created an area screenshot
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one way you can do this. First you display the screenshot of the full image (resized if necessary).  A MouseCallback is created that stores the x/y position of the mouse when pressed, draws a rectangle on the image when dragging pressed, and upon mouse release creates a subimage.</p>
<p>Result:
<a href="https://i.stack.imgur.com/QSb91.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/QSb91.png"/></a></p>
<p>Code:</p>
<pre><code>import cv2
import numpy as np 

img = cv2.imread("screenshot.jpg", 1)
click1 = False
point1 = (0,0)

def click(event,x,y,flags, params):
        global click1, point1
        if event == cv2.EVENT_LBUTTONDOWN:
                # if mousedown, store the x,y position of the mous
                click1 = True
                point1 = (x,y)
        elif event == cv2.EVENT_MOUSEMOVE and click1:
                # when dragging pressed, draw rectangle in image
                img_copy = img.copy()
                cv2.rectangle(img_copy, point1, (x,y), (0,0,255),2)
                cv2.imshow("Image", img_copy)
        elif event == cv2.EVENT_LBUTTONUP:
                # on mouseUp, create subimage
                click1 = False
                sub_img = img[point1[1]:y,point1[0]:x]
                cv2.imshow("subimg", sub_img)

cv2.namedWindow("Image")
cv2.setMouseCallback("Image", click)

cv2.imshow("Image", img)
cv2.waitKey(0)
cv2.destroyAllWindows()
</code></pre>
</div>
<span class="comment-copy">Does the code you posted not work? If so what is the issue?</span>
<span class="comment-copy">I think it is clear, the code works for the whole screen, the OP wants to be able to draw a rectangle and get the screen from there.</span>
<span class="comment-copy">It's unclear what the position of the mouse has to do with this. Can you explain it better please? You are doing automated testing? Surely you aren't moving the mouse yourself?</span>
<span class="comment-copy">@MarkSetchell What I want to do it's to take screenshot of my desktop for example and then i want to choose an area in this screenshot. Yes i move by myself the mouse to choose wich area i want to take and finally save this area as a new screenshot.</span>
<span class="comment-copy">Where's the main program that calls these functions?</span>
<span class="comment-copy">Thanks a lot ! It's exatly what I wanted !</span>
