<div class="post-text" itemprop="text">
<p>I used to thought escape character <code>\</code> count as 1 towards a string's length. </p>
<pre><code>y = "I\'m tired"
  print(len(y))
</code></pre>
<p>The result for <code>print(Len(y))</code>= <code>9</code>, which makes sense.(<code>imtired</code> has 7 characters, <code>'</code> counts as 1, <code>\</code> counts as 1). However, when I test out below coding, the result is <code>7</code> instead of <code>8</code>(<code>water</code> has 5 characters, <code>\</code>escape character counts as 1, <code>""</code> counts as 2). I was really confused by this.</p>
<pre><code>m = "wa\"t\"er"
print(len(m))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Escape characters <em>cannot possibly</em> be counted, <em>because they are not part of the string</em> to begin with. That is the <em>whole point</em> of escape characters, and it is in fact the <em>reason</em> why they are called "escape" characters: because the allow you to "escape" the contents of the string into a different level where you can control the processing of the next character, by either treating it specially (e.g. in <code>\n</code>) or making sure it is <em>not</em> treated specially (e.g. in <code>\'</code> or the very special case of <code>\\</code> where the first backslash is a special character telling the parser to treat the next character speciall, namely by treating it not specially as it otherwise would).</p>
<p>The term "escape" comes from in-band communication protocols, where the content and control share the data stream. An escape sequence or escape character allows you to switch from the content to the control.</p>
<p>The reason why <code>"I'm tired"</code> (which is an alternative and 100% identical way to write your string) has a length of 9, is because … well … it has 9 characters:</p>
<ol>
<li><kbd>I</kbd></li>
<li><kbd>'</kbd></li>
<li><kbd>m</kbd></li>
<li><kbd>SPACE</kbd></li>
<li><kbd>t</kbd></li>
<li><kbd>i</kbd></li>
<li><kbd>r</kbd></li>
<li><kbd>e</kbd></li>
<li><kbd>d</kbd></li>
</ol>
<p>Likewise, the string <code>"wa\"t\"er"</code>, which is just a convoluted and less readable way of writing the exactly equivalent <code>'wa"t"er'</code> has 7 characters:</p>
<ol>
<li><kbd>w</kbd></li>
<li><kbd>a</kbd></li>
<li><kbd>"</kbd></li>
<li><kbd>t</kbd></li>
<li><kbd>"</kbd></li>
<li><kbd>e</kbd></li>
<li><kbd>r</kbd></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Escape characters are not counted in <code>len()</code>.</p>
<pre><code>y = "I\'m tired"
</code></pre>
<p><code>len()</code> output for above is 9 including the space. <code>\</code> is not counted.</p>
<pre><code>m = "wa\"t\"er"
</code></pre>
<p>has a length of 7 -&gt; <code>'water'</code>(5) + two double quotes (2).</p>
</div>
<span class="comment-copy">My python says that <code>"wa\"t\"er"</code> has <code>7</code> characters, as I expected. What python are you using?</span>
<span class="comment-copy">Python3, ahhh I am sorry it was a mistake. I was testing "water" first to check the length and set the variable as n and then the amswer of print(Len(n)) is 5. My bad!</span>
<span class="comment-copy">wow, thanks for this detailed answer!!</span>
<span class="comment-copy">Gotcha! Thanks! the result of print(Len(m)) is 7, I was mistaken it with another answer</span>
