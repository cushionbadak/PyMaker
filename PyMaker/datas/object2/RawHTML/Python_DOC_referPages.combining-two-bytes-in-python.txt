<div class="post-text" itemprop="text">
<p>I have a problem where I get two bytes represented as an int from 0-255, two bytes are supposed to represent one value. Right now I am doing it like this, but it takes way to a long time. Any tips?</p>
<pre><code>bin_string = '0b' + bin(int(second_byte))[2:].zfill(8) + bin(int(first_byte))[2:].zfill(8)
result = float(literal_eval(bin_string))

example: 
203 -&gt; 11001011
101 -&gt; 01100101
-&gt; 1100101101100101 -&gt; 52069
</code></pre>
<p>I feel like there could be a simple mathematical formula but I cannot seem to figure it out ...</p>
</div>
<div class="post-text" itemprop="text">
<p>Left-shift the second byte by 8 bits and bitwise OR it with the first byte:</p>
<pre><code>(second_byte &lt;&lt; 8) | first_byte
</code></pre>
<p>For extra safety clamp both bytes to <code>[0, 255]</code> with a bitwise AND:</p>
<pre><code>((second_byte &amp; 0xFF) &lt;&lt; 8) | (first_byte &amp; 0xFF)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Binary shift operator:</p>
<pre><code>(second_byte &lt;&lt; 8) + first_byte
</code></pre>
<p>Same as:</p>
<pre><code>second_byte * 256 + first_byte
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you get your bytes in a <code>bytes</code> value, i. e. a string of bytes, or if you want to put your bytes into one, then you should have a look at the <code>struct</code> module:</p>
<pre><code> struct.unpack('h', b'\x00\x01')
</code></pre>
<p>will return <code>(256,)</code> which is a tuple of all the unpacked stuff from the string <code>b'\x00\x01'</code> according to the format <code>'h'</code>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/43168123/how-do-you-combine-two-bytes-in-python">How do you combine two bytes in python?</a></span>
