<div class="post-text" itemprop="text">
<p>I have the following csv file(total <code>20000</code> lines)</p>
<pre><code>ozone,paricullate_matter,carbon_monoxide,sulfure_dioxide,nitrogen_dioxide,longitude,latitude,timestamp,avg_measured_time,avg_speed,median_measured_time,timestamp:1,vehicle_count,lat1,long1,lat2,long2,distance_between_2_points,duration_of_measurement,ndt_in_kmh
99,99,98,116,118,10.09351660921,56.1671665604395,1407575099.99998,0,0,0,1407575099.99998,0,56.1089513576227,10.1823955595246,56.1048021343541,10.1988040846558,1124,65,62
99,99,98,116,118,10.09351660921,56.1671665604395,1407575099.99998,0,0,0,1407575099.99998,0,56.10986429895,10.1627288048935,56.1089513576227,10.1823955595246,1254,71,64
99,99,98,116,118,10.09351660921,56.1671665604395,1407575099.99998,0,0,0,1407575099.99998,0,56.1425188527673,10.1868802625656,56.1417522836526,10.1927236478157,521,62,30
99,99,98,116,118,10.09351660921,56.1671665604395,1407575099.99998,18,84,18,1407575099.99998,1,56.1395320665735,10.1772034087371,56.1384485157567,10.1791506011887,422,50,30
</code></pre>
<p>I want to convert this into a dictionary like </p>
<pre><code>{'ozone': [99,99,99,99], 'paricullate_matter': [99,99,99,99],'carbon_monoxide': [98,98,98,98],etc....}
</code></pre>
<p>What i have tried</p>
<pre><code>import csv

reader = csv.DictReader(open('resulttable.csv'))

output = open("finalprojdata.py","w")

result = {}
for row in reader:
    for column, value in row.iteritems():
        result.setdefault(column, []).append(float(value))
output.write(str(result))
</code></pre>
<p>The output am getting is consisting of only few dictionaries. Like from</p>
<pre><code>{'vehicle_count': [0,0,0,1], 'lat1': etc}
</code></pre>
<p>The whole csv file is not getting converted to dictionary.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have pandas this is super easy:</p>
<pre><code>import pandas as pd
data = pd.read_csv("data.csv")
data_dict = {col: list(data[col]) for col in data.columns}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this should do what you want:</p>
<pre><code>import csv

def int_or_float(strg):
    val = float(strg)
    return int(val) if val.is_integer() else val

with open('test.csv') as in_file:
    it = zip(*csv.reader(in_file))
    dct = {el[0]: [int_or_float(val) for val in el[1:]] for el in it}
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip(*it)</code></a> will just transpose the data you have and rearrange it in the way you want; the dictionary comprehension then builds your new dictionary.</p>
<p><code>dct</code> now contains the dictionary you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Awk version</p>
<pre><code>awk -F',' '
   NR==1 {s=0;for( i=1;i&lt;=NR;i++) D=sprintf("%s \"%s\" : [", (s++?",":""), $i);next}
         {for( i=1;i&lt;=NR;i++) D[i] = D[i] sprintf( "%s %s", (NR&gt;2?",":""), $(i))}
   END   { 
      printf( "{ ")
      s=0;for( d in D) { printf( "%s]", (s++?",":""), D[d] )
      printf( "}"
      }
   ' YourFile &gt; final.py
</code></pre>
<p>quick and dirty,not memory optimized (2000 lines is not so huge form modern memory space)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import defaultdict
import csv

columns = defaultdict(list)
with open('test.csv') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        for (k,v) in row.items():
             columns[k].append(v)

    print columns
</code></pre>
<p>#Output </p>
<pre><code>defaultdict(&lt;type 'list'&gt;, {'vehicle_count': ['0', '0', '0', '1'], 'lat1': ['56.1089513576227', '56.10986429895', '56.1425188527673', '56.1395320665735'], 'lat2': ['56.1048021343541', '56.1089513576227', '56.1417522836526', '56.1384485157567'], 'paricullate_matter': ['99', '99', '99', '99'], 'timestamp': ['1407575099.99998', '1407575099.99998', '1407575099.99998', '1407575099.99998'], 'long1': ['10.1823955595246', '10.1627288048935', '10.1868802625656', '10.1772034087371'], 'longitude': ['10.09351660921', '10.09351660921', '10.09351660921', '10.09351660921'], 'nitrogen_dioxide': ['118', '118', '118', '118'], 'ozone': ['99', '99', '99', '99'], 'latitude': ['56.1671665604395', '56.1671665604395', '56.1671665604395', '56.1671665604395'], 'timestamp:1': ['1407575099.99998', '1407575099.99998', '1407575099.99998', '1407575099.99998'], 'distance_between_2_points': ['1124', '1254', '521', '422'], 'long2': ['10.1988040846558', '10.1823955595246', '10.1927236478157', '10.1791506011887'], 'avg_measured_time': ['0', '0', '0', '18'], 'carbon_monoxide': ['98', '98', '98', '98'], 'ndt_in_kmh': ['62', '64', '30', '30'], 'avg_speed': ['0', '0', '0', '84'], 'sulfure_dioxide': ['116', '116', '116', '116'], 'duration_of_measurement': ['65', '71', '62', '50'], 'median_measured_time': ['0', '0', '0', '18']})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>pyexcel version:</p>
<pre><code>import pyexcel as p

p.get_dict(file_name='test.csv')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>$ cat tst.awk
BEGIN { FS=OFS=","; ORS="}\n" }
NR==1 {split($0,hdr); next }
{
    for (i=1; i&lt;=NF; i++) {
        vals[i] = (i in vals ? vals[i] "," : "") $i
    }
}
END {
    printf "{"
    for (i=1; i&lt;=NF; i++) {
        printf "\047%s\047: [%s]%s", hdr[i], vals[i], (i&lt;NF?OFS:ORS)
    }
}

$ awk -f tst.awk file
{'ozone': [99,99,99,99],'paricullate_matter': [99,99,99,99],'carbon_monoxide': [98,98,98,98],'sulfure_dioxide': [116,116,116,116],'nitrogen_dioxide': [118,118,118,118],'longitude': [10.09351660921,10.09351660921,10.09351660921,10.09351660921],'latitude': [56.1671665604395,56.1671665604395,56.1671665604395,56.1671665604395],'timestamp': [1407575099.99998,1407575099.99998,1407575099.99998,1407575099.99998],'avg_measured_time': [0,0,0,18],'avg_speed': [0,0,0,84],'median_measured_time': [0,0,0,18],'timestamp:1': [1407575099.99998,1407575099.99998,1407575099.99998,1407575099.99998],'vehicle_count': [0,0,0,1],'lat1': [56.1089513576227,56.10986429895,56.1425188527673,56.1395320665735],'long1': [10.1823955595246,10.1627288048935,10.1868802625656,10.1772034087371],'lat2': [56.1048021343541,56.1089513576227,56.1417522836526,56.1384485157567],'long2': [10.1988040846558,10.1823955595246,10.1927236478157,10.1791506011887],'distance_between_2_points': [1124,1254,521,422],'duration_of_measurement': [65,71,62,50],'ndt_in_kmh': [62,64,30,30]}
</code></pre>
</div>
<span class="comment-copy">you need to save it as JSON or what?</span>
<span class="comment-copy">I want to save it in finalprojdata.py</span>
<span class="comment-copy">what for? why not just print on screen or pass to other functions?</span>
<span class="comment-copy">If you want to output python values, you may be better off using a repr rather than str result.\</span>
<span class="comment-copy">Or even <code>data_dict = data.to_dict(orient='list')</code></span>
<span class="comment-copy">@Mukund he tagged the question with awk - that means he's asking for an awk program. Just because his failed attempt was a python script doesn't mean that's all he can use.</span>
