<div class="post-text" itemprop="text">
<p>I'm trying to create a server-side application to listen for connections and call a method based on what the client says. However when I call the method upload i want to continue executing code under main.</p>
<p>Is there anyway i can achieve this, or am i taking the incorrect approach? Code below;</p>
<pre><code>def main(ipAddr, tcpPort, bufferSize, s):
    try:
        s.bind((ipAddr, tcpPort))
        s.listen(4)
        conn, addr = s.accept()

    print("Connection attempt from: %s" % addr)
    messageRecv = ""
    while True:
        data = conn.recv(bufferSize)
        if not data: break
        messageRecv = data.decode('utf-8')
finally:
    conn.close()
    if messageRecv == "Ready": upload(addr)

main(ipAddr, tcpPort, bufferSize, s)



def upload(addr):
    pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Consider using the <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer"><code>multiprocessing</code></a> module, which is essentially Python's "multithreading" package. The API is very similar to the <code>threading</code> module's, but <code>threading</code> may be prohibitive due to the <a href="https://en.wikipedia.org/wiki/Global_interpreter_lock" rel="nofollow noreferrer">GIL</a>.</p>
<p>In your case, you may have something like this:</p>
<pre><code>p = Process(target=upload, args=(addr,))
p.start()
# some other code
p.join()
</code></pre>
</div>
<span class="comment-copy">I would recommend to read about Multithreaded Programming. you can see this <a href="https://www.tutorialspoint.com/python/python_multithreading.htm" rel="nofollow noreferrer">tutorial</a></span>
<span class="comment-copy">Fix the indentation, please.</span>
<span class="comment-copy">If you are on a recent version of Python, you want to take a look at the <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow noreferrer"><code>asyncio</code> package</a>.  For older versions of Python, use <a href="https://twistedmatrix.com/" rel="nofollow noreferrer">Twisted</a>.</span>
<span class="comment-copy">I support this answer but I will however always recommend that you give a shot at <a href="http://www.gevent.org/" rel="nofollow noreferrer">gevent</a> a much lightweight solution to a multi-thread / multi process paradigm. And if you are interested into asyncIO in server side try also <a href="http://www.tornadoweb.org/en/stable/0" rel="nofollow noreferrer">Tornado</a></span>
<span class="comment-copy">Python's threading module is very often useful, and networking is a prime example of an application of threading.  The GIL is a non-issue for many applications, since most applications aren't CPU-bound, but rather I/O-bound.</span>
<span class="comment-copy">@SvenMarnach Fair enough; I guess that statement was somewhat harsh.</span>
<span class="comment-copy">An useful SO thread with example of using Tornado - <a href="https://stackoverflow.com/questions/22920877/simple-async-example-with-tornado-python" title="simple async example with tornado python">stackoverflow.com/questions/22920877/â€¦</a></span>
