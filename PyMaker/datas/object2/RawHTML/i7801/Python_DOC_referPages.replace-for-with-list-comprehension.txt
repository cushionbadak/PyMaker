<div class="post-text" itemprop="text">
<p>In this script I have used both list comprehension and for. I need to replace for loop with comprehension and add this solve inside list comprehension.</p>
<p>How can add</p>
<pre><code>for i in k:
    count_list.append(l.count(i))
</code></pre>
<p>inside this block </p>
<pre><code>pairs = [int(pair/2) for pair in count_list if int(pair/2) != 0]
</code></pre>
<p>My code:</p>
<pre><code>def sockMerchant(ar):
    l = ar
    k = set(l)
    count_list = []
    for i in k:
         count_list.append(l.count(i))
    pairs = [int(pair/2) for pair in count_list if int(pair/2) != 0]
    return sum(pairs)

n = int(input().strip())
ar = list(map(int, input().strip().split(' ')))
result = sockMerchant(ar)
print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should not be using a list comprehension at all, nor the <code>for</code> loop you have now. The loop is inefficient; by using <code>list.count()</code> you are traversing the whole list <code>l</code> for every unique value, creating a O(N^2) loop.</p>
<p>Use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter()</code> object</a> instead and count in O(N) time:</p>
<pre><code>from collections import Counter

def sockMerchant(ar):
    counts = Counter(ar)
    return sum(count//2 for count in counts.values())
</code></pre>
<p>or even</p>
<pre><code>def sockMerchant(ar):
    return sum(count//2 for count in Counter(ar).values())
</code></pre>
<p>if you insist on a single line.</p>
<p>Note that <code>sum()</code> doesn't mind a few <code>0</code> values here and there, so I removed the <code>if</code> test for single 'socks'. Also, I used the <a href="https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations" rel="nofollow noreferrer"><code>//</code> floor division operator</a> rather than turning the floating point result of dividing by 2 back into an integer.</p>
</div>
<span class="comment-copy">Can you give example of an argument? Will make it easier</span>
<span class="comment-copy">Why do you want a list comprehension for that? Use a <code>collections.Counter()</code> instead, using <code>list.count()</code> in a loop is really inefficient.</span>
<span class="comment-copy">Dear Matjin I don't know this module maybe fro this reason :) I have some solves but I need solve this problem use only list comprehension.</span>
<span class="comment-copy">@BahruzAghalarov: that's a very artificial limitation. If this is homework that requires you to use a list comprehension for the counting code, then I suggest you re-read the class notes and text book, and if need be, ask your tutor for help.</span>
<span class="comment-copy">@BahruzAghalarov: if you are smart enough to try and manipulate people into answering you, I'm sure you can figure out the list comprehension too. Good luck!</span>
<span class="comment-copy">It is ideally solve.thank you for this I will rememeber this metod :) But my question stayed unanswered :( How can use this block as list comprehension ? I dont see any solve for this.</span>
<span class="comment-copy">I'm sorry, I'm not going to give you a hammer just to bang on your foot. A list comprehension is a simple tool to build a list, and any <code>for ...: list.append(...)</code> loop is trivially converted.</span>
<span class="comment-copy">It is ok that I must use this metod inside another.But my question is stayed open.It is nor problem use list comprehension but I need use just one list comprehensionnot additionllay for loop. If it is possible write about ths please :)</span>
