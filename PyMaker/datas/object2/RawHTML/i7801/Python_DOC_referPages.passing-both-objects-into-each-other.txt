<div class="post-text" itemprop="text">
<p>How can I pass both objects in each other?</p>
<p>For example:</p>
<pre><code>player = Player(obstacle)
obstacle = Obstacle(player)
</code></pre>
<p>If I do this it will say </p>
<p><code>Unresolved reference "obstacle"</code></p>
<p>And I do understand why, but is it still possible to pass <code>obstacle</code> in <code>player</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot pass <code>obstacle</code> to <code>player</code> because at the beginning there are no <code>obstacle</code>s. You should create an empty <code>player</code>, create an <code>obstacle</code> and assign the <code>obstacle</code> to the <code>player</code>:</p>
<pre><code>player = Player()
obstacle = Obstacle(player)
player.obstacle = obstacle
</code></pre>
<p>Please note this creates a reference loop which is a problematic for garbage collector to cleanup. Consider using <a href="https://docs.python.org/3/library/weakref.html" rel="nofollow noreferrer">weak references</a> to create mutually referencing objects.</p>
</div>
<span class="comment-copy">You need to know more about the types to do that. Just given a function that takes an obstacle and returns a player and a function that takes a player and returns an obstacle and nothing else, it’s impossible to create either – but maybe you can create one first and associate them after they’re both created if the classes allow for it.</span>
<span class="comment-copy">Could you give more context. There's probably another way.</span>
<span class="comment-copy">@MSeifert and Ryan are right. More context is needed. <i>Why</i> does <code>Player()</code> need a reference to an obstacle and <i>why</i> does <code>Obstacle()</code> need a reference to a player? Could you provide a <a href="https://stackoverflow.com/helpa/mcve">MCVE</a> which demonstrates your <i>entire</i> problem?</span>
<span class="comment-copy">This sounds like you should have a third class that inherits from the abstract classes player and obstacle, which don't inherit from eachother</span>
