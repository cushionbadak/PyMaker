<div class="post-text" itemprop="text">
<p>I have <code>__init__.py</code> in a folder called <code>test_module</code>. in the <code>__init__.py</code>  i have below code. however when i try to execute from parent folder of <code>test_module</code> with following command <code>python test_module</code> i get following error <code>can't find '__main__' module in 'test_module</code>. is this not possible? or will i have to run <code>python test_module/__init__.py</code>? </p>
<pre><code>def main():
    print('test')


if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>__init__.py</code> module is executed when the package is imported. The purpose of <code>__init__.py</code> files per the <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">documentation</a> is as follows:</p>
<blockquote>
<p>The <code>__init__.py</code> files are required to make Python treat the directories as containing packages; this is done to prevent directories with a common name, such as string, from unintentionally hiding valid modules that occur later on the module search path. In the simplest case, <code>__init__.py</code> can just be an empty file, but it can also execute initialization code for the package or set the <code>__all__</code> variable, described later.</p>
</blockquote>
<p>In order for a Python package to be directly executed, it needs to have an <strong>entry point</strong>, designated by a module  within the package named <code>__main__.py</code>. Thus the error <code>can't find '__main__' module in 'test_module'</code>: You have attempted to directly execute the package, but Python cannot locate an entry point to begin executing top-level code.</p>
<hr/>
<p>Consider the following package structure:</p>
<pre><code>test_module/
    __init__.py
    __main__.py
</code></pre>
<p>Where <code>__init__.py</code> contains the following:</p>
<pre><code>print("Running: __init__.py")
</code></pre>
<p>Where <code>__main__.py</code> contains the following:</p>
<pre><code>print("Running: __main__.py")
</code></pre>
<p>When we execute the <code>test_module</code> package with the command <code>python test_module</code>, we get the following output:</p>
<pre><code>&gt; python test_module
Running: __main__.py
</code></pre>
<p>However, if we enter the Python shell and <code>import test_module</code>, the output is as follows:</p>
<pre><code>&gt;&gt;&gt; import test_module
Running: __init__.py
</code></pre>
<hr/>
<p>Thus in order to get the behavior you want when attempting to directly execute <code>test_module</code>, simply create a new <code>__main__.py</code> file within <code>test_module</code> and transfer the code from <code>__init__.py</code> to the new <code>__main__.py</code>.</p>
</div>
<span class="comment-copy">Try with <a href="https://docs.python.org/2/using/cmdline.html#cmdoption-m" rel="nofollow noreferrer"><code>python -m test_module</code></a></span>
<span class="comment-copy">Can you explain why you want to do that? It does not seem to be very pythonic</span>
