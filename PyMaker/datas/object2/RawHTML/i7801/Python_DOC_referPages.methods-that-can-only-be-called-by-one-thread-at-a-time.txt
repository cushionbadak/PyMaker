<div class="post-text" itemprop="text">
<p>I have a function that is used by multiple threads. Because of its nature, this function should only ever called once at a time. Multiple threads calling the function at the same time could be bad.</p>
<p>If the function is in use by a thread, other threads should have to wait for it to be free.</p>
<p>My background isn't coding so I'm not sure, but I believe this is called "locking" in the jargon? I tried Googling it up but did not find a simple example for Python3.</p>
<p>A simplified case:</p>
<pre><code>def critical_function():
    # How do I "lock" this function?
    print('critical operation that should only be run once at a time')

def threaded_function():
    while True:
        # doing stuff and then
        critical_function()

for i in range(0, 10):
    threading.Thread(target=threaded_function).start()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from threading import Lock
critical_function_lock = Lock()

def critical_function():
    with critical_function_lock:
        # How do I "lock" this function?
        print('critical operation that should only be run once at a time')
</code></pre>
</div>
<span class="comment-copy">So what do you want to happen when a 2nd thread tries to call the function? Should it throw an error? Should it wait for the first thread to finish?</span>
<span class="comment-copy">@Rawing - last line of the first paragraph of my question <code>If the function is in use by a thread, other threads should have to wait for it to be free.</code> I'll put it on its own line to make it clearer.</span>
<span class="comment-copy">See this, <a href="http://effbot.org/zone/thread-synchronization.htm" rel="nofollow noreferrer">effbot.org/zone/thread-synchronization.htm</a></span>
<span class="comment-copy">@Sush I've checked it up but that doesn't seem to apply to python 3. Googling <code>python3 mutex</code> gives <a href="https://docs.python.org/3/library/asyncio-sync.html" rel="nofollow noreferrer">docs.python.org/3/library/asyncio-sync.html</a> but the examples in that documentation are not clear for a guy without background in these kind of things. It also doesn't look like <code>mutex</code> library is a thinkg in python3.</span>
<span class="comment-copy">Look up a mutex, I think that that's what you want.</span>
