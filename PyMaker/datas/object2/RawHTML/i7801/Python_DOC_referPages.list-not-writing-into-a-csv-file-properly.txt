<div class="post-text" itemprop="text">
<p>I have a <code>list</code> like:</p>
<pre><code>('so glad', 'happy')
('it is so sad', 'sad')
</code></pre>
<p>I want to write this lists into a CSV file like :</p>
<pre class="lang-none prettyprint-override"><code>column1          column2
so glad          happy
it is so sad     sad
</code></pre>
<p>I used following code to do this:</p>
<pre><code>with open('test.csv', "a") as outfile:
    for entries in my_list:
        outfile.write(entries)
        outfile.write("\n")
</code></pre>
<p>But it writes into the CSV file as</p>
<pre class="lang-none prettyprint-override"><code>column1
so glad
happy
it is so sad
sad
</code></pre>
<p>How can I make this code do as I expected?</p>
</div>
<div class="post-text" itemprop="text">
<p>For python 3:
Use <strong>writerow</strong> to write a row taken from a list(iterable)</p>
<pre><code>import csv
my_list =[('so glad', 'happy'),
('it is so sad', 'sad')]
with open('mycsv.csv','w+') as fileobj:
    csvwriter = csv.writer(fileobj)
    for row in my_list:
        csvwriter.writerow(row)
</code></pre>
<p>or Use <strong>writerows</strong> which takes an iterable (an iterable is anything that can be used to iterate so your <code>my_list</code> is an list iterable) and takes rows and saves them accordingly</p>
<pre><code>import csv
my_list =[('so so glad', 'happy'),
('it is so sad', 'sad')]
with open('mycsv.csv','w+') as fileobj:
    csvwriter = csv.writer(fileobj)
    csvwriter.writerows(my_list)
</code></pre>
<p>For python 2:</p>
<p><code>with open('mycsv.csv','w+') as fileobj:</code></p>
<p>use wb instead of w+</p>
<p>The output in <code>mycsv.csv</code> is:</p>
<pre><code>so so glad,happy
it is so sad,sad
</code></pre>
<p>Also note i used <strong>w+</strong> as mode here which truncates that is empties the csv file if already exists or creates a new one and writes content to them</p>
<p>There are several modes to write use one for your need.
Take a look at the <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">File modes</a> documentation for python</p>
<blockquote>
<p>On Windows, 'b' appended to the mode opens the file in binary mode, so there are also modes like 'rb', 'wb', and 'r+b'. Python on Windows makes a distinction between text and binary files; the end-of-line characters in text files are automatically altered slightly when data is read or written. This behind-the-scenes modification to file data is fine for ASCII text files, but itâ€™ll corrupt binary data like that in JPEG or EXE files.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>import csv

with open('test.csv', 'wb') as outfile:
    wr = csv.writer(outfile, quoting=csv.QUOTE_ALL)
    wr.writerow(entries)
</code></pre>
</div>
<span class="comment-copy">You never define <code>my_list</code>, and your indentation is invalid. Please correct your example.</span>
<span class="comment-copy">How does your <code>my_list</code> look like?</span>
<span class="comment-copy">You do not have any lists in you code. <code>('so glad', 'happy')</code> is not a list. It is a tuple.</span>
<span class="comment-copy">my list= ('so glad', 'happy'),('it is so sad', 'sad')</span>
<span class="comment-copy">@ChathurikaJayawardana, this is not a list. This is a tuple of tuples. I think, you need to study a bit deeper about python datatypes.</span>
<span class="comment-copy">According to your code the output is s,o, ,g,l,a,d  h,a,p,p,y  i,t, ,i,s, ,g,o,o,d  h,a,p,p,y</span>
<span class="comment-copy">It separated each words by ','</span>
<span class="comment-copy">The <code>csv</code> module has some very specific requirements regarding how the file is opened depending on the version of Python. Python 2 needs the binary flag so the file should be opened <code>open('fname.csv', 'wb')</code>. Python 3 is like this <code>open('fanned.csv', 'w', newline='')</code>.</span>
<span class="comment-copy">Your code make a unlimited loop. How can I avoid this.</span>
<span class="comment-copy">@ChathurikaJayawardana: The code should work fine provided you are using Python 2.7 and <code>entries = [('so glad', 'happy'), ('it is so sad', 'sad')]</code>. Why do you believe it makes an "unlimited loop"?</span>
<span class="comment-copy">@Chathurika: There's no explicit loop in this code.</span>
