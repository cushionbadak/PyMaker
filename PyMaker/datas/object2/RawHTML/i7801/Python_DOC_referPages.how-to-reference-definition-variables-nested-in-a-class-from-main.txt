<div class="post-text" itemprop="text">
<p>I would like to know how (in Python) to reference a variable that is inside a def, inside a class. For example:</p>
<pre><code>class class_name():
    .
    .    # Some more definitions in here
    . 

    def definition_name():
        variable_of_interest = 10    # 10 chosen arbitrarily
    .
    .    # Some more definitions in here
    .

if __name__ == '__main__': 
    # Here I want to reference variable_of_interest. Example:
    if variable_of_interest = 10
        do stuff
</code></pre>
<p>Even better, how can I reference the variable in main if the example looks like:</p>
<pre><code>class class_name():

    def __init__(self):
        # Some code
        def _another_definition():
            variable_of_interest = 10

if __name__ == '__main__':
    #same as before
</code></pre>
<p>So basically how do I reference a variable that is placed like Class()&gt;Def()&gt;Def()&gt;Variable in main?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you're calling a <code>def</code> is actually either a function or in this case a method in a class.</p>
<p>Variables defined in a method are normally not available. That's the whole idea of <em>encapsulation</em>.</p>
<p>If you want to access variables in a class they should either class or instance variables.</p>
<p>A variable defined in an instance, a <em>member</em>, would need to be accessed as part of an instance of the class. It's defined in <code>__init__()</code>.</p>
<p>For example:</p>
<pre><code>class MyClass:
    def __init__(self):
        self.data = []
</code></pre>
<p>Accessed as:</p>
<pre><code>x = MyClass() # instantiate an object of this class
x.data # access instance member
</code></pre>
<p>A class variable can be defined at the top of the class definition:</p>
<pre><code>class MyClass:
    """A simple example class"""
    i = 12345
</code></pre>
<p>Then it would be accessed with <code>MyClass.i</code>.</p>
<p>Look at this <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">Python tutorial on classes</a> to understand this better.</p>
<p>If you really want to have a variable in a class method also be accessible directly in the main context then you can make it a global variable by preceding it with <code>global</code>. Otherwise variables are by default local and only accessible in the same scope.</p>
</div>
<span class="comment-copy">can it be returned in the function? or be a class variable?</span>
<span class="comment-copy">It is a good thing that variables have limited scope. If you want to make it accessible, create an additional property for it, like <code>self.variable_of_interest</code>.</span>
<span class="comment-copy">@depperm I'm not sure I understand what you're asking but the variable of interest would be defined inside a definition that is inside another definition, inside a class. If I put the variable of interest inside the class directly, then I know I can just do <code>class_name.variable_of_interest</code> to get the value. But I have not figured out how to do this when the variable is nested deeper in the class.</span>
<span class="comment-copy">So I cannot access the variable unless it's a class variable or a member? How would I access the member?</span>
<span class="comment-copy">I updated the answer. Look at the tutorial link to get these basics down</span>
<span class="comment-copy">@DamianConnors Do you get it now? Mark as answered if it helped</span>
<span class="comment-copy">Yes I get it now, thanks for the update.</span>
<span class="comment-copy">What if the class has arguments? I'm trying what you wrote here but getting an error. Mine looks like this: <code>class autocollect(gr.top_block, Qt.Qwidget):</code></span>
