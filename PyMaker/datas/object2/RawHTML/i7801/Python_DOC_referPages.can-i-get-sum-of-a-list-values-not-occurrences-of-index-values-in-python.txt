<div class="post-text" itemprop="text">
<p>I have an output list like,</p>
<pre><code>[['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], ['happy', 1]]
</code></pre>
<p>So I want to get sum of the each same values. According to this list the output should be,</p>
<pre><code>happy weight : 3.5
0 count : 4
sad weight : 1
</code></pre>
<p>I tried to find a way to do this and I still fail to find a correct way for that. Can anyone tell me can I get the output as I expected.</p>
</div>
<div class="post-text" itemprop="text">
<p>This implementation fits your criteria, but as @ScottHunter said, there is some vagueness.</p>
<pre><code>lst = [['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], ['happy', 1]]


def update_count(item_key, increase, dictionary):
    try:
        dictionary[item_key] += increase
    except KeyError:
        dictionary[item_key] = increase

item_counts = dict()
for item in lst:
    size = len(item)
    if size == 1:
        update_count(item[0], 1, item_counts)
    elif size == 2:
        update_count(item[0], item[1], item_counts)
    else:
        print("Too many elements in item!")

print(item_counts)
</code></pre>
<hr/>
<p>Or you can use <code>collections.Counter</code> if you prefer to leave out the <code>try/except</code>:</p>
<pre><code>from collections import Counter

lst = [['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], ['happy', 1]]

item_counts = Counter()
for item in lst:
    size = len(item)
    if size == 1:
        item_counts[item[0]] += 1
    elif size == 2:
        item_counts[item[0]] += item[1]
    else:
        print("Too many elements in item!")

print(item_counts)
</code></pre>
<p>Using <a href="https://www.ludovf.net/blog/python-collections-defaultdict/" rel="nofollow noreferrer"><code>defaultdict</code></a> from <code>collections</code>:</p>
<pre><code>from collections import defaultdict

lst = [['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], ['happy', 1]]

item_counts = defaultdict(int)  # the int() func returns 0 if key doesn't exist
for item in lst:
    size = len(item)
    if size == 1:
        item_counts[item[0]] += 1
    elif size == 2:
        item_counts[item[0]] += item[1]
    else:
        print("Too many elements in item!")

print(item_counts)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The more static way of doing it.</p>
<pre><code>l=[['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], 
['happy', 1]]
print(sum(1 for x in l if x[0]=='0'))
print(sum(x[1] for x in l if x[0]=='happy'))
print(sum(x[1] for x in l if x[0]=='sad'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = [['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], ['happy', 1]]
d = {k: 0 for k in set([i[0] for i in x])}

for i in x:
    if len(i) == 1:
        d[i[0]] += 1
    elif len(i) == 2:
        d[i[0]] += i[1]

for k, v in d.items():
    print(k, v)
</code></pre>
<p>using a dict</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>:</p>
<pre><code>l = [['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], ['happy', 1]]

from collections import Counter
c = Counter()
for v in l:
    c[v[0]] += 1 if len(v) == 1 else v[1]

print c  # Counter({'0': 4, 'happy': 3.5, 'sad': 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't mind using an 3rd party extension, you could use <a href="https://iteration-utilities.readthedocs.io/en/latest/generated/groupedby.html" rel="nofollow noreferrer"><code>iteration_utilities.groupedby</code></a><sup>1</sup>:</p>
<pre><code>lst = [['0'], ['happy', 1], ['happy', 1.5], ['0'], ['sad', 1], ['0'], ['0'], ['happy', 1]]
from iteration_utilities import groupedby

for key, value in groupedby(lst, lambda x: x[0]).items():
    if key == '0':
        print(key, 'count:', len(value))
    else:
        print(key, 'weight:', sum(x[1] for x in value))
</code></pre>
<p>which prints:</p>
<pre><code>0 count: 4
happy weight: 3.5
sad weight: 1
</code></pre>
<hr/>
<p><sup>1</sup> Disclaimer: I'm the author of that library</p>
</div>
<span class="comment-copy">Can you demonstrate <i>any</i> effort at solving this yourself?</span>
<span class="comment-copy">What should <code>[['0'],['0',5]]</code> produce?</span>
<span class="comment-copy">Thank you this is what I expected.</span>
