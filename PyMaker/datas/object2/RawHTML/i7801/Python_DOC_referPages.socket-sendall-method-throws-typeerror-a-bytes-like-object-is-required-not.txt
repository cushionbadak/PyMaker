<div class="post-text" itemprop="text">
<p>I am in a UCI Coursera <a href="https://www.coursera.org/learn/raspberry-pi-interface" rel="nofollow noreferrer">course</a> on RaspberryPi, which is using Python.</p>
<p>There seem to be some mistakes in the video lecture's code. This is the code in the lecture video, verbatim:</p>
<pre><code>import socket
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = socket.gethostbyname("www.google.com")
mysock.connect(host, 80)
message = "GET / HTTP/1.1\r\n\r\n"
mysock.sendall(message)
data=mysock.recv(1000)
mysock.close()
</code></pre>
<p>I was able to fix one error, which is that <code>.connect()</code> only takes one argument, a tuple, so it should be <code>mysock.connect((host, 80))</code> instead of <code>mysock.connect(host, 80)</code>.</p>
<p>However, there appears to be a type error with the example <code>message</code> value. When I run <code>mysock.sendall(message)</code> it throws:</p>
<blockquote>
<p>TypeError: a bytes-like object is required, not 'str'</p>
</blockquote>
<p>I have to imagine that the instructor's code was close to being correct but has some small typo in it, or something. So I'm trying to figure out what they meant to write and why this is different and therefore throws this type error as being a string.</p>
<p>I would follow up directly within the course, but this one unfortunately has no discussion forum, so any help here will be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import socket
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = socket.gethostbyname("www.google.com")
mysock.connect((host, 80))
message = "GET / HTTP/1.1\r\n\r\n"
mysock.sendall(message.encode())
data=mysock.recv(1000)
mysock.close()
</code></pre>
<p>Just add encode.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you take a look at the <a href="https://docs.python.org/3/library/socket.html#socket.socket.sendall" rel="nofollow noreferrer">socket documentation</a>, you can see that sendall requires bytes to be sent. Python has a built-in function to convert a String to bytes, called <a href="https://docs.python.org/3/howto/unicode.html#converting-to-bytes" rel="nofollow noreferrer">encode</a>. So, you must use </p>
<pre><code>mysock.sendall(message.encode()) 
</code></pre>
<p>to convert it to bytes so it can be sent.</p>
</div>
<div class="post-text" itemprop="text">
<p>before sending message through socket encode it.</p>
<pre><code>sc.send(message.encode())
</code></pre>
<p>after receiving decode it:</p>
<pre><code>message.decode()
</code></pre>
<p>you are all done</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import socket
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = socket.gethostbyname("www.google.com")
mysock.connect((host, 80))
message = b"GET / HTTP/1.1\r\n\r\n"
mysock.sendall(message)
data=mysock.recv(1000)
mysock.close()
</code></pre>
</div>
<span class="comment-copy"><code>mysock.sendall(message.encode())</code> or perhaps <code>mysock.sendall(b(message))</code>?</span>
<span class="comment-copy">what about encoding message while sending : message.encode() and decoding it after receiving message.decode()  .</span>
<span class="comment-copy">Thanks, yes that seems to work</span>
<span class="comment-copy">It is likely that the course material assumes python2, whereas you are using python3. You really should tag your question with python2 or 3 as appropriate.</span>
<span class="comment-copy">He uses 3; I added a tag thanks</span>
<span class="comment-copy">Thank you, yes I just tested it and that works! Also let me give credit to @Cycloencode for mentioning this in a comment. I will mark this answer as the solution once sufficient time has passed.</span>
