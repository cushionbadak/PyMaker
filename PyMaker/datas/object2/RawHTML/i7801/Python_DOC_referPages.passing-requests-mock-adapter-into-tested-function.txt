<div class="post-text" itemprop="text">
<p>I am trying to use requests_mock on a function that I am testing.</p>
<pre><code>#the function
def getModificationTimeHTTP(url):
    head = requests.head(url)

    modtime = head.headers['Last-Modified'] if 'Last-Modified' in head.headers  \
        else datetime.fromtimestamp(0, pytz.UTC)
    return modtime

#in a test_ file
def test_needsUpdatesHTTP():
    session = requests.Session()
    adapter = requests_mock.Adapter()
    session.mount('mock', adapter)

    adapter.register_uri('HEAD', 'mock://test.com', headers= \
        {'Last-Modified': 'Mon, 30 Jan 1970 15:33:03 GMT'})

    update = getModificationTimeHTTP('mock://test.com')
    assert update
</code></pre>
<p>This returns an error which suggests the mock adapter is not making its way into the tested function.</p>
<pre><code>       InvalidSchema: No connection adapters were found for 'mock://test.com'
</code></pre>
<p>How can I pass the mock adapter into the function?</p>
</div>
<div class="post-text" itemprop="text">
<p>This won't work because you have to use <code>session.head</code> instead of <code>requests.head</code>.
One possibility to do so without messing with the main function's code is to use <a href="https://docs.python.org/3/library/unittest.mock.html#patch" rel="nofollow noreferrer"><code>patch</code></a>:</p>
<pre><code>from unittest.mock import patch

[...]

with patch('requests.head', session.head):
    update = getModificationTimeHTTP('mock://test.com')
assert update
</code></pre>
</div>
<span class="comment-copy">Thank you! from the docs: patch() is straightforward to use. The key is to do the patching in the right namespace.</span>
