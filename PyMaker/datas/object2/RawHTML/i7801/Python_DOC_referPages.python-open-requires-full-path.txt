<div class="post-text" itemprop="text">
<p>I am writing a script to read a csv file. The csv file and script lies in the same directory. But when I tried to open the file it gives me <code>FileNotFoundError: [Errno 2] No such file or directory: 'zipcodes.csv'</code>. The code I used to read the file is </p>
<pre><code>with open('zipcodes.csv', 'r') as zipcode_file:
    reader = csv.DictReader(zipcode_file)
</code></pre>
<p>If I give the full path to the file, it will work. Why <code>open()</code> requires full path of the file ?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>open(file, mode='r', buffering=-1, encoding=None, errors=None,
  newline=None, closefd=True, opener=None)</p>
<p>file is a path-like object giving the pathname (absolute or relative
  to the current working directory) of the file to be opened or an
  integer file descriptor of the file to be wrapped.</p>
</blockquote>
<p>So, if the file that you want open isn't in the current folder of the running script, you can use an absolute path, or getting the working directory or/and absolute path by using:</p>
<pre><code>import os
# Look to the path of your current working directory
working_directory = os.getcwd()
file_path = working_directory + 'my_file.py'
</code></pre>
<p>Or, you can retrieve your absolute path while running your script, using:</p>
<pre><code>import os
# Look for your absolute directory path
absolute_path = os.path.dirname(os.path.abspath(__file__))
file_path = absolute_path + '/folder/my_file.py'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have identified the problem. I was running my code on Visual Studio Code debugger. The root directory I have opened was above the level of my file. When I opened the same directory, it worked.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't think Python knows which dir to use... to start with the current path of the current python .py file, try:</p>
<pre><code>mypath = os.path.dirname(os.path.abspath(__file__))
with open(mypath+'/zipcodes.csv', 'r') as zipcode_file:
    reader = csv.DictReader(zipcode_file)
</code></pre>
</div>
<span class="comment-copy">What is <code>os.getcwd()</code>? If that isn't the same directory as the one that contains the file that is the reason that the relative path doesn't work.</span>
<span class="comment-copy">Because you're running the python script whilst in some other directory, and <i>that</i> is your current directory.</span>
<span class="comment-copy">I am running the code in Visual Studio code debugger.</span>
<span class="comment-copy">...and what is its current working directory?</span>
