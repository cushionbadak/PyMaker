<div class="post-text" itemprop="text">
<p>I have a pandas dictionary series, that takes the values like </p>
<pre><code>   0 {AA:25,BB:31}
   1 {CC:45,AA:3}
   2 {BB:3,CD:4,AA:5}
</code></pre>
<p>I want to create a dictionary out of it based on the key and its occurrence in series, like:</p>
<pre><code>{AA:3,BB:2,CC:1,CD:1}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I doubt there is a "built-in" solutiuon for this, so you'd have to manually iterate and count each key in every dictionary.</p>
<pre><code>import pandas as pd
from collections import defaultdict

ser = pd.Series([{'AA':25,'BB':31},
                 {'CC':45,'AA':3},
                 {'BB':3,'CD':4,'AA':5}])

count = defaultdict(int)

for d in ser:
    for key in d:
        count[key] += 1

print(count)
# defaultdict(&lt;class 'int'&gt;, {'CC': 1, 'BB': 2, 'AA': 3, 'CD': 1})
</code></pre>
<p>You could also use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>, however this looks rather "forced" in this situation:</p>
<pre><code>import pandas as pd
from collections import Counter

total = Counter()

ser = pd.Series([{'AA':25,'BB':31},
                 {'CC':45,'AA':3},
                 {'BB':3,'CD':4,'AA':5}])

for d in ser:
    total.update(d.keys())

print(total)
# Counter({'AA': 3, 'BB': 2, 'CD': 1, 'CC': 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Turn your series in to a series of lists of keys, sum those creating a single list of keys, and use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>:</p>
<pre><code>In [23]: pd.Series([{'AA':25,'BB':31},{'CC':45,'AA':3},{'BB':3,'CD':4,'AA':5}])
Out[23]: 
0           {'AA': 25, 'BB': 31}
1            {'AA': 3, 'CC': 45}
2    {'CD': 4, 'AA': 5, 'BB': 3}
dtype: object

In [24]: series = _

In [34]: from collections import Counter

In [35]: Counter(series.apply(lambda x: list(x.keys())).sum())
Out[35]: Counter({'AA': 3, 'BB': 2, 'CC': 1, 'CD': 1})
</code></pre>
<p>Or using generator expressions and flattening:</p>
<pre><code>In [37]: Counter(k for d in series for k in d.keys())
Out[37]: Counter({'AA': 3, 'BB': 2, 'CC': 1, 'CD': 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>counter = dict()
for item in series:
    for key in item:
       counter[key] = counter.get(key, 0) + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe it's a bit late but this is another way of doing it by using pandas built-in functions.</p>
<pre><code>s = pd.Series([{'AA':25,'BB':31},
                 {'CC':45,'AA':3},
                 {'BB':3,'CD':4,'AA':5}])


#convert dict to a dataframe and count non nan elements and finally convert it to a dict.    
s.apply(pd.Series).count().to_dict()
Out[651]: {'AA': 3, 'BB': 2, 'CC': 1, 'CD': 1}
</code></pre>
</div>
<span class="comment-copy">What is that "dictionary series" exactly? A pandas Series object?</span>
<span class="comment-copy">yes, updated the question.</span>
<span class="comment-copy">I was writing a solution using <code>Counter</code>. I'll delete mine. +1</span>
<span class="comment-copy">While this code may answer the question, providing additional context regarding how and/or why it solves the problem would improve the answer's long-term value.</span>
