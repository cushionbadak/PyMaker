<div class="post-text" itemprop="text">
<p>When I try to get the values using ConfigParser,</p>
<ul>
<li><p>I am not able to get certain values from environment variables in my .ini file</p></li>
<li><p>Interpolating variable names are printing variables as it is without value substitution.</p></li>
</ul>
<p>Below is my code,</p>
<p><strong>config_parse.py:</strong></p>
<pre><code>import os
import configparser

myConf = configparser.ConfigParser(interpolation=configparser.ExtendedInterpolation())
myConf.read('config_data.ini')

print( myConf.get('server_details', 'hostName', vars=os.environ))
print( myConf.get('server_details', 'userName', vars=os.environ))
print( myConf.get('log_path', 'mntPath', vars=os.environ))
exit(0)
</code></pre>
<p><strong>config_data.ini:</strong></p>
<pre><code>[server_details]
  hostName: %(HOSTNAME)
  ; Below value are not getting substituted from environment variable
  userName: %(USER)
  password: passw0rd

[log_path]
  instance: %(SERVER_INSTANCE)
  mntPath: /net/server1/mnt/data0
  ; server_details:hostname and instance values are not getting substituted
  testbedMntPath: ${mntPath}/${server_details:userName}/my_logs/${server_details:hostName}${instance}
</code></pre>
<p>I am getting the following output,</p>
<blockquote>
<p>$] python config_parse.py</p>
<p>server1</p>
<p>%(USER)</p>
<p>/net/server1/mnt/data0/%(USER)/my_logs/%(HOSTNAME)%(SERVER_INSTANCE)</p>
<p>$]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You're using <a href="https://docs.python.org/3/library/configparser.html#configparser.ExtendedInterpolation" rel="nofollow noreferrer"><code>ExtendedInterpolation</code></a>, which uses <code>${section:option}</code> syntax.</p>
<p>The reason why you get <code>server1</code> for <code>myConf.get('server_details', 'hostName', vars=os.environ)</code> isn't because <code>hostName = %(HOSTNAME)</code> is interpolated, but because <code>HOSTNAME</code> from <code>vars</code> <a href="https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.get" rel="nofollow noreferrer">takes precedence</a>.</p>
<p>It's easier to see with an example:</p>
<pre><code>&gt;&gt;&gt; myConf.get('server_details', 'foo', vars={'FOO': 'BAR'})
'BAR'
</code></pre>
<p>If <code>vars</code> contains an entry for <code>FOO</code>, the <code>get</code> call for <code>foo</code> (case insensitive) will return its value, the value from the config file is actually ignored.</p>
<p>So that means that for <code>hostName</code> you acutally get the value of the <code>HOSTNAME</code> environment variable. <code>userName</code> does not exist in <code>os.environ</code>, so you get the value from the config file: <code>%(USER)</code>.</p>
<p>So if you use ExtendedInterpolations, use <code>${...}</code> style, if you use BasicInterpolation use <code>%(...)s</code> style. You can't mix both. And if you blindly pass <code>vars=os.environ</code>, be aware that the envionment variables will override all options in all sections with the same name. Depending on the context the application runs in, that may be relevant for security.</p>
</div>
<span class="comment-copy">But if I print os.environ values, it is having <code>USER</code> variable defined properly. Why am I not able to see that value in my <code>[server_details]</code> section ?</span>
<span class="comment-copy">Because with extended interpolation <code>%(HOME)</code> isn't special, it's just a string (and with basic interplolation it should be <code>%(HOME)s</code>). It doesn't matter that os.environ has a key <code>USER</code>, it's not used. If the environment variable <code>USERNAME</code> you would get that instead bekause lookup is always performed in <code>vars</code> first. None of the <code>%(...)</code> options use anything from the environment in your case. You use extended interpolation, so change it to <code>${USER}</code>, then it should work.</span>
