<div class="post-text" itemprop="text">
<p>This is thoroughly confusing me. I have tried in multiple ways to convert a datetime string of <code>2017-06-04 00:00:00 (America/New_York)</code> to the <code>Europe/London</code> timezone, which should be I believe with current daylight savings 6am?</p>
<p>The whole concept of the dates and conversion is baffling me, I simply seem to misunderstand, or not get the simple principles, this picture demonstrates the current code i have and the results im getting.</p>
<p>I simply want to be able to give a function, a <code>datetime</code> string and what timezone it belongs too and give it a timezone I want it in and get a string back of the adjusted <code>datetime</code>, but I am getting stuff which is 4 minutes out etc..</p>
<pre><code>from datetime import datetime
import pytz
import arrow

#Calc Timezone Offsets

def adjust_timezone(datetime_string, input_tz, output_tz, formatter="%Y-%m-
%d %H:%M:%S"):
    print datetime_string
    # Now we make datetime naive datetime
    date_to_convert = datetime.strptime(datetime_string, formatter)
    a = arrow.get(datetime_string, 'YYYY-M-D HH:mm:ss').replace(tzinfo=pytz.utc)
    print a.to(output_tz).format('YYYY-M-D HH:mm:ss')

    # Make it tz aware
    date_to_convert = date_to_convert.replace(tzinfo=pytz.timezone(input_tz))
    print date_to_convert
    date_to_convert = date_to_convert.astimezone(pytz.timezone(input_tz))
    print date_to_convert

    # Convert it
    output_datetime = date_to_convert.astimezone(pytz.timezone(output_tz))
    print output_datetime

    # Make tz unaware again
    output_datetime = output_datetime.replace(tzinfo=None)

    return str(output_datetime)

print adjust_timezone('2017-06-04 00:00:00', "America/New_York", "Europe/London")
</code></pre>
<p>The above when run return the following results:</p>
<pre><code>2017-06-04 00:00:00
2017-6-4 01:00:00
2017-06-04 00:00:00-04:56
2017-06-04 00:00:00-04:56
2017-06-04 05:56:00+01:00
2017-06-04 05:56:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Although <a href="https://pypi.python.org/pypi/arrow" rel="nofollow noreferrer"><code>arrow</code></a> is a fine library, we don't really need it here.  Instead we will use <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime" rel="nofollow noreferrer"><code>datetime</code></a> and <a href="https://pypi.python.org/pypi/pytz" rel="nofollow noreferrer"><code>pytz</code></a> for this.  The key elements are <a href="http://pythonhosted.org/pytz/#localized-times-and-date-arithmetic" rel="nofollow noreferrer"><code>pytz.timezone().localize()</code></a> and <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.astimezone" rel="nofollow noreferrer"><code>datetime.datetime.astimezone()</code></a></p>
<h3>Code:</h3>
<pre><code>def adjust_timezone(datetime_string, input_tz, output_tz,
                    formatter="%Y-%m-%d %H:%M:%S"):
    # Now we make datetime naive datetime
    naive = dt.datetime.strptime(datetime_string, formatter)

    # this time stamp is from the input_tz
    with_input_tz = pytz.timezone(input_tz).localize(naive)

    # now express the timestamp as output_tz
    with_output_tz = with_input_tz.astimezone(pytz.timezone(output_tz))
    return with_output_tz
</code></pre>
<h3>Test Code:</h3>
<pre><code>import datetime as dt
import pytz

print(adjust_timezone(
    '2017-06-04 00:00:00', "America/New_York", "Europe/London"))
</code></pre>
<h3>Results:</h3>
<pre><code>2017-06-04 05:00:00+01:00
</code></pre>
</div>
<span class="comment-copy">Please paste your code here instead of a screenshot</span>
<span class="comment-copy">take a look at: <a href="https://stackoverflow.com/questions/10997577/python-timezone-conversion" title="python timezone conversion">stackoverflow.com/questions/10997577/python-timezone-conversion</a></span>
<span class="comment-copy">Many thanks, it works perfectly for me, I think I read so much without absorbing it, it all just became completely confusing.. Just as a side question, where the new datetime has +0100 at the end, is that included within the 0500 and is just an indicator? I assume but maybe wrongly that it represents the daylight adjustment, so I could infact format this as a string, negating the +0100</span>
<span class="comment-copy">The +1 is simply information in the print routine, that indicates the offset from GMT.  It will be seen on non-naive timestamps that are printed without using <code>strftime</code>.</span>
<span class="comment-copy">Thanks so much @Stephen</span>
