<div class="post-text" itemprop="text">
<p>I am writing a GUI FTP client app in python ttk. I can't seem to get the text Entries the way I wanted them to.<img alt="enter image description here" src="https://i.stack.imgur.com/F3GI5.png"/></p>
<p>The text Entries have the "SUNKEN" effect. I want to adjust the height and get the text entries to have a "FLAT" look, more like this program:<br/><br/>
<a href="https://i.stack.imgur.com/PgztX.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/PgztX.png"/></a>
<br/>
I got the buttons to look flat from <a href="https://stackoverflow.com/questions/40990704/how-get-no-border-effect-in-tkinter-ttk">here</a>, I am struggling to get the Entries to look flat.<br/>
How do I get the Entries to look flat?<br/><br/>
I don't want a tk solution, I know how to set relief FLAT in tk.</p>
</div>
<div class="post-text" itemprop="text">
<h2>Trivia:</h2>
<p>Appereance of ttk widgets heavily depends on theme in use and/or platform. On windows I can reproduce this depressive gray style with a <code>classic</code> theme, so let's assume that this theme in use. List of themes you can find <a href="http://wiki.tcl.tk/48689" rel="nofollow noreferrer">here</a> (note the <code>'clam'</code> theme, wich is most similar to your wishes), just if you wonder.</p>
<p>Next stop, our <a href="https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.layout" rel="nofollow noreferrer"><code>layout</code></a> or, in other words, <a href="https://docs.python.org/3/library/tkinter.ttk.html#layouts" rel="nofollow noreferrer">a structure</a> of widget's theme.
You can easily print this structure to see available options. Enough words, let's try a structure of an <code>ttk.Entry</code> widget.</p>
<pre><code>&gt;&gt;&gt; print(s.layout('TEntry'))

#   formatted result, actual result is one-line string
[('Entry.highlight', {
    'sticky': 'nswe',
    'children': [(
        'Entry.field', {
            'sticky': 'nswe',
            'children': [(
                'Entry.padding', {
                    'sticky': 'nswe',
                    'children': [(
                        'Entry.textarea', {
                            'sticky': 'nswe'})]
                })],
            'border': '1'})]
})]
</code></pre>
<p><a href="https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_options" rel="nofollow noreferrer">As you can see</a>, noone of structure elements has a <code>relief</code> option, hence <code>relief='flat'</code> has no effect on our entry!</p>
<pre><code>&gt;&gt;&gt; print(s.element_options('Entry.field'))
('-bordercolor', '-lightcolor', '-darkcolor', '-fieldbackground')
</code></pre>
<h2>Workaround:</h2>
<p>However, we can edit the layout of desired widget, and replace one element with another, wich able to recognize a <code>relief</code> option (note a removed <code>Entry.field</code>, replaced with an <code>Entry.border</code>).</p>
<p>So try out this little snippet:</p>
<pre><code>try:
    import tkinter as tk
    import tkinter.ttk as ttk
except ImportError:
    import Tkinter as tk
    import ttk

#   root
root = tk.Tk()

#   declare style variable
s = ttk.Style()
#   assume that classic theme in use
s.theme_use('classic')

#   configure relief
s.configure('SOExample.TEntry', relief='flat')

#   lets try to change this structure
s.layout('SOExample.TEntry', [
    ('Entry.highlight', {
        'sticky': 'nswe',
        'children':
            [('Entry.border', {
                'border': '1',
                'sticky': 'nswe',
                'children':
                    [('Entry.padding', {
                        'sticky': 'nswe',
                        'children':
                            [('Entry.textarea',
                              {'sticky': 'nswe'})]
                    })]
            })]
    })])

#   let's find some differences between this two
print(s.layout('SOExample.TEntry'))
print(s.layout('TEntry'))

#    packing
frame1 = tk.Frame(root)
label1 = tk.Label(frame1, text='Flat Entry')
entry1 = ttk.Entry(frame1, style='SOExample.TEntry')
label1.pack()
entry1.pack()
frame1.pack(side='left')

frame2 = tk.Frame(root)
label2 = tk.Label(frame2, text='Default Entry')
entry2 = ttk.Entry(frame2)
label2.pack()
entry2.pack()
frame2.pack(side='right')

#   mainloop
root.mainloop()
</code></pre>
<p>...and final appereance is:</p>
<p><a href="https://i.stack.imgur.com/Mpext.png" rel="nofollow noreferrer"><img alt="non-active" src="https://i.stack.imgur.com/Mpext.png"/></a><a href="https://i.stack.imgur.com/ia3Q8.png" rel="nofollow noreferrer"><img alt="active" src="https://i.stack.imgur.com/ia3Q8.png"/></a></p>
<p>Also, on my machine default theme is <code>vista</code> and there I can't even recognize an entry:
<a href="https://i.stack.imgur.com/wBbPi.png" rel="nofollow noreferrer"><img alt="vista" src="https://i.stack.imgur.com/wBbPi.png"/></a></p>
<p>And also a structure of an <code>Entry</code> depends on theme, so with <code>vista</code> it's:</p>
<pre><code>#   formatted result, actual result is one-line string
[('Entry.field', {
    'sticky': 'nswe',
    'children': [(
        'Entry.background', {
            'sticky': 'nswe',
            'children': [(
                'Entry.padding', {
                    'sticky': 'nswe',
                    'children': [(
                        'Entry.textarea', {
                            'sticky': 'nswe'})]
                })]
        })]
})]
</code></pre>
<p>...and if we replace a <code>field</code> with <code>border</code> element in this structure, the appearence is very close to your demands (also try <code>groove</code> relief in this case):</p>
<p><a href="https://i.stack.imgur.com/9OQL8.png" rel="nofollow noreferrer"><img alt="vista" src="https://i.stack.imgur.com/9OQL8.png"/></a></p>
<h2>Conclusion:</h2>
<p>Unfortunately, this widget will lack options of field and border color, so another option is <a href="https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_create" rel="nofollow noreferrer">create own element</a> for this purpose, but that is another question.</p>
<p>So, basicly I tryied to answer not <em>"how to workaround this"</em>, but <em>"why a relief has no effect on Entry"</em>, anyway as you can see, a flat relief for an Entry is achievable.</p>
</div>
