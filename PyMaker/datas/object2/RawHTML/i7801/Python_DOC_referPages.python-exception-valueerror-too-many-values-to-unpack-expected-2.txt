<div class="post-text" itemprop="text">
<p>im trying to find the mistake in my code.
My IDE (Coderunner on Mac) only says this:</p>
<pre><code>File "A3.py", line 27, in &lt;module&gt;
ValueError: too many values to unpack (expected 2)
</code></pre>
<p>I never had this exception. I don't know how to handle it and where the problem is. What I am doing wrong? </p>
<p>This is my code... I commented line 27.</p>
<pre><code>with open("spd.txt", encoding="utf-8") as f:
    text = f.read()
text = text.replace("\xad", "")

words = []
for word in text.lower().split():
    word = word.strip("‚‘!,.:«»-()'_#-–„“■;+*?") 
    if word != "":
        if not word[-1].isalnum(): 
            print(repr(word))
        words.append(word)


trigrams = {}
for i in range(len(words)-2):
       word = words[i]
       nextword = words[i + 1]
       nextnextword = words[i + 2]
       key = (word, nextword, nextnextword)
       trigrams[key] = trigrams.get(key, 0) + 1


l = list(trigrams.items())
l.sort(key=lambda x: (x[1], x[0]))
l.reverse()

for key, count in trigrams: #This is line 27
    if count &lt; 5: 
        break 
    word = key[0]
    nextword = key[1]
    nextnextword = key[2]
    print(word, nextword, nextnextword, count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to do <code>for key, count in trigrams.items():</code> to iterate over the keys <em>and</em> the values together. Iterating just over the dictionary only yields the keys.</p>
</div>
<div class="post-text" itemprop="text">
<p>When your do</p>
<pre><code>for key, count in trigrams:
    # do stuff
</code></pre>
<p>it is equivalent to:</p>
<pre><code>it = iter(trigrams)
while True:
    try:
        key, count = it.__next__()
        # do stuff
    except StopIteration:
        break
</code></pre>
<p>This is what Python does behind the scenes when you iterate over an iterable. As you can see from the above code, a function call to the <code>__next__()</code> method of the <code>trigrams</code> dictionary's iterator is made when <code>trigrams</code> is iterated over. The <code>__next__()</code> function only returns the next <em><strong>key</strong></em> in the dictionary though. eg:</p>
<pre><code>&gt;&gt;&gt; d = {'a': 1, 'b': 2}
&gt;&gt;&gt; iter(d).__next__()
'a'
&gt;&gt;&gt; 
</code></pre>
<p>So when you try to unpack the return value of <code>iter(trigrams).__next__()</code>, Python raises an error because only <em>one</em> value is returned, not two. eg:</p>
<pre><code>&gt;&gt;&gt; d = {'a': 1, 'b': 2}
&gt;&gt;&gt; a, b = iter(d).__next__()
Traceback (most recent call last):
  File "&lt;pyshell#17&gt;", line 1, in &lt;module&gt;
    a, b = iter(d).__next__()
ValueError: not enough values to unpack (expected 2, got 1)
&gt;&gt;&gt; 
</code></pre>
<p>To fix this, you need to use the <code>dict.items()</code> method to return a tuple which contains a key, value pair which you can then unpack. <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer">From the documentation on <code>.items()</code></a>:</p>
<blockquote>
<p>Return a new view of the dictionary’s items ((key, value) pairs). See the documentation of view objects.</p>
</blockquote>
<pre><code>for key, count in trigrams.items(): # Use the .items() method
    if count &lt; 5: 
        break 
    word = key[0]
    nextword = key[1]
    nextnextword = key[2]
    print(word, nextword, nextnextword, count)
</code></pre>
</div>
<span class="comment-copy">You need to do <code>for key, count in trigrams.items():</code>. to iterate over the keys <i>and</i> the values together. Iterating just over the dictionary only yields the keys.</span>
