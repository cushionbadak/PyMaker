<div class="post-text" itemprop="text">
<p>I have a python converter that works calling it with some parameters from cmd. I want to create an exe that automatically calls it with the needed parameters, which are the model I want to convert and the name of the model that it will be created.
The code is:</p>
<pre><code>blender -b -P dae-obj.py -- file.dae file.obj
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried using IronPython? I see you wish to use C# along with python. In case your primary application is in C# and you wish to leverage some of the features of python, you can use IronPython to create an environment where a python code can be executed and it can interact with the C# application as well.
I hope <a href="https://www.codeproject.com/articles/661832/dynamic-programming-with-python-and-csharp" rel="nofollow noreferrer">this</a> link will be able to solve some of the problems. They have explained it well with <a href="https://github.com/ncosentino/DevLeader/tree/master/IronPythonExamples" rel="nofollow noreferrer">code</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a sample code in order to launch a command prompt. Adjust it to your needs.</p>
<pre><code>System.Diagnostics.Process process = new System.Diagnostics.Process();
System.Diagnostics.ProcessStartInfo startInfo = new System.Diagnostics.ProcessStartInfo();
startInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden; // Hides the cmd
startInfo.FileName = "cmd.exe";
startInfo.Arguments = "blender -b -P dae-obj.py -- file.dae file.obj"; // Parameters
process.StartInfo = startInfo;
process.Start();
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe you want the <code>subprocess</code> module - <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">https://docs.python.org/3/library/subprocess.html</a></p>
<p>One way to do what I think you're trying to do would be:</p>
<pre><code>import subprocess

out = subprocess.getoutput('blender -b -P dae-obj.py -- file.dae file.obj')
</code></pre>
<p>Though I expect you don't care about the output.  You could also try <code>getstatusoutput</code> or <code>call</code></p>
</div>
