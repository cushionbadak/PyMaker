<div class="post-text" itemprop="text">
<p>So, I want to check and verify if a given variable "abc" exists and that it's true. If the variable exist and is False, then I want it to go to else. Here is how I got it to work in python: </p>
<pre><code>env = os.environ.copy()
if "abc" in env and env['abc'] == "True":
    print "Works"
else:
    print "Doesn't work"
</code></pre>
<p>Is there a better way to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can check to see if the variable is in the dictionaries returned by <code>globals()</code> and <code>locals()</code>. (Thank you to Aaron for reminding me to add the full code)</p>
<p>For a local variable:</p>
<pre><code>if locals().get('abc'):
    print(abc)
</code></pre>
<p>For a global variable:</p>
<pre><code>if globals().get('abc'):
    print(abc)
</code></pre>
<p>For an environment variable:</p>
<pre><code>if os.environ.get('abc')=='True':
    #abc is set to True
</code></pre>
<p>More information here:</p>
<p><a href="https://docs.python.org/3/library/functions.html#locals" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#locals</a>
<a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#globals</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a Try Except Block.</p>
<pre><code>try:
    # Try calling ABC here anyway you like
    # Here I am just printing it
    print(abc)
except NameError:
    print("Variable ABC does not exist")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use:</p>
<pre><code>env.get("abc", False)
</code></pre>
<p>False is the default value if "abc" is not in env.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's enough get it from env, I think</p>
<pre><code>env.get('abc')
</code></pre>
</div>
<span class="comment-copy"><code>env.get('abc', False) == True</code></span>
<span class="comment-copy">that string of identical answers all within 10sec of eachother was impressive...</span>
<span class="comment-copy">Are you actually looking for a string of the value "True", or are you looking for a boolean <code>True</code>?</span>
<span class="comment-copy">If <code>env</code> is <code>os.environ</code> and these are literally environment variables, it'll be a string <code>"True"</code>, but it's not clear what <code>env</code> is and what preprocessing may have been done.</span>
<span class="comment-copy">@Jason That's strange, <code>locals()</code> and <code>globals()</code> exists in Python 2.7 as well...it works for me when I try it with version 2.7. What error are you getting?</span>
<span class="comment-copy">the full answer would then look like <code>if locals().get('abc') == True:</code> (or <code>...globals()...</code>)</span>
<span class="comment-copy">@Aaron Is there a way to get it working in python 2.7.9 ?</span>
<span class="comment-copy">@Jason it should already work</span>
<span class="comment-copy">If you do it this way, you should do <code>except NameError:</code> instead of blindly catching any exception</span>
