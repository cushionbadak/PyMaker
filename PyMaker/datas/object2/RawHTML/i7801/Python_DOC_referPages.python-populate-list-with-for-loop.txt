<div class="post-text" itemprop="text">
<p>Hello I am trying to populate a list with a for loop. This is what I have so far:</p>
<pre><code>newlist = []
for x in range(10):
    for y in range(10):
        newlist.append(y)
</code></pre>
<p>and at this point I am stumped. I was hoping the loops would give me a list of 10 lists.</p>
<p>thx</p>
</div>
<div class="post-text" itemprop="text">
<p>You were close to it. But you need to append new elements in the inner loop to an empty list, which will be append as element of the outer list. Otherwise you will get (as you can see from your code) a flat list of 100 elements.</p>
<pre><code>newlist = []
for x in range(10):
    innerlist = []
    for y in range(10):
        innerlist.append(y)
    newlist.append(innerlist)

print(newlist)
</code></pre>
<p>See the comment below by Błotosmętek for a more concise version of it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use this one line code with <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer"><code>list comprehension</code></a> to achieve the same result:</p>
<pre><code>new_list = [[i for i in range(10)] for j in range(10)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Alternatively, you only need one loop and append <code>range(10)</code>.</p>
<pre><code>newlist = []
for x in range(10):
    newlist.append(list(range(10)))
</code></pre>
<p>Or </p>
<pre><code>newlist = [list(range(10)) for _ in range(10)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should put a intermiate list to get another level </p>
<pre><code>newlist = []
for x in range(10):
    temp_list = []
    for y in range(10):
        temp_list.append(y)
    newlist.append(temp_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or just nested list comprehension</p>
<pre><code>[[x for x in range(10)] for _ in range(10)]
</code></pre>
</div>
<span class="comment-copy">No, it will give you a list with 100 elements in it</span>
<span class="comment-copy">…and anyway, <code>newlist = [[x for x in range(10)] for y in range(10)]</code> is more concise.</span>
<span class="comment-copy">@Błotosmętek Good point.</span>
<span class="comment-copy">Oh wow thanks guys you gave me like 5 ways to do what I was trying to do :P I wish I could have thought of even one of them thanks</span>
<span class="comment-copy">It's probably neater to do <code>new_list = [list(range(10)) for _ in range(10)]</code> although mostly opinion based</span>
<span class="comment-copy">Thanks @MarkusMeskanen , my idea was to make it simpler for OP and do the exact same thing that they are trying to do but with list comprehensions :)</span>
<span class="comment-copy">This by itself won't do anything here. For someone who's struggling with two for loops (OP), you should probably add the important <code>new_list =</code> part... Also, it's probably neater to do <code>[list(range(10)) for _ in range(10)]</code>, although mostly opinion based.</span>
