<div class="post-text" itemprop="text">
<p>I have come across such a coding style for cases when a tuple is returned.</p>
<pre><code>_, number_of_days_in_month = calendar.monthrange(year, month)
</code></pre>
<p>In this case <code>monthrange</code> returns a tuple with two values:  weekday of first day of the month and number of days in month.</p>
<ol>
<li><p>Is this style acceptable? Is it described in some famous style guides like Google Python Style Guide?</p></li>
<li><p>What should I do if <code>_</code> is already occupied? For example, in Django it is used for translation like this:</p>
<pre><code>from django.utils.translation import ugettext as _
output = _("Welcome to my site.")
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>I think, we sould follow the advice from The Hitchhikerâ€™s Guide to Python: </p>
<p><a href="http://python-guide-pt-br.readthedocs.io/en/latest/writing/style/#create-an-ignored-variable" rel="nofollow noreferrer">http://python-guide-pt-br.readthedocs.io/en/latest/writing/style/#create-an-ignored-variable</a></p>
<p>That is: use __ in this case.</p>
</div>
<span class="comment-copy">The <code>_</code> is commonly used to store return values you don't intend to use - it's just a convention, so you can replace it with any other valid identifier</span>
<span class="comment-copy">That being said, importing a function <code>as _</code> seems bad style IMO - it makes the usage of that function unclear and obscure</span>
<span class="comment-copy">What kind of genius came up with the idea to name <code>gettext</code> <code>_</code> anyway?</span>
<span class="comment-copy">It's a pretty common pattern, even mentioned in the docs: <a href="https://docs.python.org/3/library/gettext.html#gettext.gettext" rel="nofollow noreferrer">docs.python.org/3/library/gettext.html#gettext.gettext</a></span>
<span class="comment-copy">Usually <code>_</code> is seen as a throwaway variable. For instance a python interactive shell uses <code>_</code> to store the <i>last</i> result. The fact that some libraries use <code>_</code> is actually a bad practice.</span>
