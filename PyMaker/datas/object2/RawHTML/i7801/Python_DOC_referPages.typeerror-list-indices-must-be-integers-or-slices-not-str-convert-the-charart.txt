<div class="post-text" itemprop="text">
<pre><code>Number = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]    
for n in range(0, 20):
      print(Number[n]+1\n)
InputNum3 = input()
Number[InputNum3] = ''.join(str('-'))
</code></pre>
<p>want:</p>
<pre><code>1       2
     3
     4
     .... 20
</code></pre>
<p>input 2</p>
<p>want: </p>
<pre><code>1
      -
      3
      4...20
</code></pre>
<p>but the result is:</p>
<blockquote>
<p>TypeError: list indices must be integers or slices, not str</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Do:</p>
<p><code>inputNum3 = int(input())</code></p>
<p>to get an Integer, you can't access lists by a String as index.</p>
<p>Your variable names should start with lowercase. Generally snakecase too, with all lowercase separated by underscore:</p>
<pre><code>number = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
input_num = int(input())
number[input_num] = "-"
</code></pre>
<p>You don't need the <code>.join()</code> here because you want to have just a single character anyway.</p>
<p>You can also fill your <code>number</code> list like so:</p>
<p><code>number = [x for x in range(20)]</code></p>
<p>This is called a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>.</p>
<p>Lastly, you can just do <code>print(number)</code> if you want to print the full list, no need for the <code>for</code> loop.</p>
<p>If you want to print all list elements from index <code>x</code> to <code>y</code> you can use list slicing:</p>
<p><code>number[3:15]</code> for example.</p>
<p>See <a href="https://stackoverflow.com/questions/509211/explain-slice-notation">here</a> for more examples of slices.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python3, input() returns a string. In Python2, however, input() returns the type you are looking for, an integer. Therefore, you need to cast the input() function to an int, since you are obviously trying to assign a value in the list by index. </p>
<pre><code>Number = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]    
for n in range(0, 20):
   print(Number[n]+1\n)

InputNum3 = int(input())
Number[InputNum3] = ''.join(str('-'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>Number = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]    
for n in range(0, 20):
      print(Number[n]+1\n)
&gt;&gt;InputNum3 = int(input())
Number[InputNum3] = ''.join(str('-'))
</code></pre>
<blockquote>
<p>input function accept values as string.</p>
</blockquote>
</div>
<span class="comment-copy"><code>input</code> returns a <code>str</code> you need to cast it to <code>int</code> in order for the indexing to be valid</span>
<span class="comment-copy">Weird, it raises <code>SyntaxError</code> for me.</span>
