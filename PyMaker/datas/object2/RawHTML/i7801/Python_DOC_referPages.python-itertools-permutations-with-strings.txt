<div class="post-text" itemprop="text">
<p>i want to use itertools permutations for strings instead of just letters.</p>
<pre><code>import itertools
lst = list(permutations(("red","blue"),3))
#This returns []
</code></pre>
<p>I know i can do something like:</p>
<pre><code>a = list(permutations(range(3),3))
for i in range(len(a)):
a[i] = list(map(lambda x: 'red' if x==0 else 'blue' if x==1 else 'green',a[i]))
</code></pre>
<p>EDIT:
I want to key in this as my input, and get this as my output</p>
<pre><code>input: ("red","red","blue")

output:
[(’red’, ’red’, ’red’), (’red’, ’red’, ’blue’),\
(’red’, ’blue’, ’red’), (’red’, ’blue’, ’blue’), (’blue’, ’red’, ’red’), \
(’blue’, ’red’, ’blue’), (’blue’, ’blue’, ’red’), (’blue’, ’blue’, ’blue’)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try with <code>itertools.product</code> like this:</p>
<pre><code>import itertools
lst = list(set(itertools.product(("red","red","blue"),repeat=3))) # use set to drop duplicates
lst
</code></pre>
<p><code>lst</code> will be:</p>
<pre><code>[('red', 'blue', 'red'),
 ('blue', 'red', 'red'),
 ('blue', 'blue', 'red'),
 ('blue', 'blue', 'blue'),
 ('blue', 'red', 'blue'),
 ('red', 'blue', 'blue'),
 ('red', 'red', 'blue'),
 ('red', 'red', 'red')]
</code></pre>
<p><strong>Update:</strong></p>
<pre><code>import itertools
lst = list(itertools.product(("red","blue"),repeat=3))
lst
</code></pre>
<p>output:</p>
<pre><code>[('red', 'red', 'red'),
 ('red', 'red', 'blue'),
 ('red', 'blue', 'red'),
 ('red', 'blue', 'blue'),
 ('blue', 'red', 'red'),
 ('blue', 'red', 'blue'),
 ('blue', 'blue', 'red'),
 ('blue', 'blue', 'blue')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do it, also, with <code>combinations</code> from <code>itertools</code> module, like this example:</p>
<pre><code>from itertools import combinations 
final = list(set(combinations(("red","red","blue")*3, 3)))

print(final)
</code></pre>
<p>Output:</p>
<pre><code>[('red', 'blue', 'red'),
 ('blue', 'red', 'red'),
 ('blue', 'blue', 'red'),
 ('blue', 'blue', 'blue'),
 ('blue', 'red', 'blue'),
 ('red', 'blue', 'blue'),
 ('red', 'red', 'blue'),
 ('red', 'red', 'red')]
</code></pre>
</div>
<span class="comment-copy">what is your expected output? your original idea looks ok to me, the reason why it's returning <code>[]</code> is because you're asking for length-3 permutations in a list of length-2 -- there aren't any!</span>
<span class="comment-copy">It works perfectly fine to permute strings. However, you cannot take three elements from a list of two, in any order. That is why you get the empty list as output.</span>
<span class="comment-copy">looks like you want <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">product</a></span>
<span class="comment-copy">How do i get the same output if my input is just ['red' , 'blue'] and i want the same product?</span>
<span class="comment-copy">@Silver check the updated answer.</span>
