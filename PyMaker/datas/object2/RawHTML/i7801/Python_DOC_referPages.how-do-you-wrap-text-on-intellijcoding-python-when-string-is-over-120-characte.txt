<div class="post-text" itemprop="text">
<p>I am making a dictionary in Python using IntelliJ and the second entry is giving me an error PEP 8(line too long (155 &gt; 120 characters).  </p>
<pre><code>classic_common = {'Abusive Sergeant': 'ADD ME TO YOUR DECK, YOU MAGGOT!',
                  **'Acolyte of Pain': "He trained when he was younger to be an acolyte of joy, but things didn't work out like he thought they would",**
</code></pre>
<p>How can I wrap the string so it still functions and appears readable.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Without getting into how to get IntelliJ to automatically to do this, here's an explanation on how to wrap long lines (including long strings) in Python in general:</p>
<p>In Python, a single statement can be written out over multiple lines by using either <a href="https://docs.python.org/3/reference/lexical_analysis.html#explicit-line-joining" rel="nofollow noreferrer">explicit</a> or <a href="https://docs.python.org/3/reference/lexical_analysis.html#implicit-line-joining" rel="nofollow noreferrer">implicit line joining</a>. </p>
<p>In the former, a backslash ('\', "line continuation character") is used to signal the end of a line. For example (as if entered into the Python Interpreter):</p>
<pre><code>&gt;&gt;&gt; a = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 \
... + 9 + 10
&gt;&gt;&gt; print(a)
55
</code></pre>
<p>On the other hand, implicit line joining allows expressions on multiple lines within parentheses, square brackets, or curly braces to be automatically joined together. In other words, any amount of white space is treated the same within these. For example (using poor style for illustrative purposes):</p>
<pre><code>&gt;&gt;&gt; a = [1, 2, 3, 4, 5, 6  # comments are allowed too
... # as are empty lines
...
... # and even explicit line breaks
... \
... , 7, 8]
&gt;&gt;&gt; print(a)
[1, 2, 3, 4, 5, 6, 7, 8]
</code></pre>
<p>As it turns out, you were already using implicit line joining in your code snippet when you put your key-value pairs on separate lines. </p>
<p>In addition to implicit line joining, you can take advantage of the fact that Python concatenates consecutive strings with no operator between them. One more example:</p>
<pre><code>&gt;&gt;&gt; a = 'The quick brown' 'fox'
&gt;&gt;&gt; b = 'The quick brown' + 'fox'
&gt;&gt;&gt; print(a==b)
True
</code></pre>
<p>Putting this all together, since you are within curly brackets, you can close your string at any point and then place the next part of the string anywhere on the next line. The white space agnosticism within the brackets means that you can align the beginning of each line of the string (notice how "He", "of", and "thought" are aligned below).</p>
<p>Thus can you get something like <a href="https://stackoverflow.com/questions/44380632/how-do-you-wrap-text-on-intellijcoding-python-when-string-is-over-120-characte#comment75761742_44380632">the answer from idjaw's comment</a>:</p>
<pre><code>&gt;&gt;&gt; classic_common = {'Abusive Sergeant': 'ADD ME TO YOUR DECK, YOU MAGGOT!',
                      'Acolyte of Pain': "He trained when he was younger to be an acolyte " 
                                         "of joy, but things didn't work out like he " 
                                         "thought they would",
                      'some_other_key': 'some other value'}
</code></pre>
</div>
<span class="comment-copy">You should first wrap your dictionary properly so each key, value is on its own line. Then all you should have to do in IntelliJ is just hit enter at the string position you want to break the line and it should take care of the quotes for you and alignment. Just like this -&gt; <a href="https://imagebin.ca/v/3Ozn3XAXQjJw" rel="nofollow noreferrer">imagebin.ca/v/3Ozn3XAXQjJw</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3837959/how-to-have-the-formatter-wrap-code-with-intellij">How to have the formatter wrap code with IntelliJ?</a></span>
