<div class="post-text" itemprop="text">
<p>I wrote a simple function program. The program works by itself but when converted to a function, it gives the character count of 1. I am using Python version 3.5.</p>
<pre><code>def sink(x,y):
  x = ['a','a','b','c']
  y = 'c'

  count = {}
  for char in x:
    count.setdefault(char,0)
    count[char] = count[char]+1
  print (count.get(y,0))



sink (['a','a','c','d','e','e'],'e')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you are overwriting values of <code>x</code>, <code>y</code> at the beginning, try</p>
<pre><code>def sink(x, y):
    count = {}
    for char in x:
        count.setdefault(char, 0)
        count[char] = count[char] + 1
    print(count.get(y, 0))


sink(['a', 'a', 'c', 'd', 'e', 'e'], 'e')
</code></pre>
<p>also we can improve your function by <a href="https://docs.python.org/3/reference/simple_stmts.html#the-return-statement" rel="noreferrer">returning</a> value from it and printing outside and using <a href="https://www.python.org/dev/peps/pep-0203/" rel="noreferrer">augmented arithmetic assignment <code>+=</code></a></p>
<pre><code>def sink2(x, y):
    count = {}
    for char in x:
        count.setdefault(char, 0)
        count[char] += 1
    return count.get(y, 0)


print(sink(['a', 'a', 'c', 'd', 'e', 'e'], 'e'))
</code></pre>
<p>finally we can use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="noreferrer"><code>str.join</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.count" rel="noreferrer"><code>str.count</code></a> methods:</p>
<pre><code>def sink3(x, y):
    return ''.join(x).count(y)


print(sink3(['a', 'a', 'c', 'd', 'e', 'e'], 'e'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has a <code>Counter</code> object that does this, and <code>Counter</code> returns <code>0</code> for a value not seen already, so is simply:</p>
<pre><code>from collections import Counter
def sink(x, y):
    return Counter(x)[y]

&gt;&gt;&gt; sink(['a','a','c','d','e','e'], 'e')
2
</code></pre>
</div>
<span class="comment-copy">Not a great use of <code>setdefault</code>, you could use <code>collections.defaultdict(int)</code> for <code>count</code> or alternatively just <code>count[char] = count.get(char, 0) + 1</code></span>
<span class="comment-copy">This is true, yes, but wouldn't it be slightly arbitrary? <code>Counter</code> is a function in itself.. lol</span>
<span class="comment-copy">Not sure I understand the question. <code>Counter</code> is a type, similar to a multiset</span>
