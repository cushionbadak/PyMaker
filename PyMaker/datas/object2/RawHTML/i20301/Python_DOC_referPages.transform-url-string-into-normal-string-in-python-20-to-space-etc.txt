<div class="post-text" itemprop="text">
<p>Is there any way in python to transfrom this-&gt; %CE%B1%CE%BB%20 into this: "αλ " which is its real representation?</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>For python 2:</p>
<pre><code>&gt;&gt;&gt; import urllib2
&gt;&gt;&gt; print urllib2.unquote("%CE%B1%CE%BB%20")
αλ 
</code></pre>
<p>For python 3:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import unquote
&gt;&gt;&gt; print(unquote("%CE%B1%CE%BB%20"))
αλ
</code></pre>
<p>And here's code that works in all versions:</p>
<pre><code>try:
    from urllib import unquote
except ImportError:
    from urllib.parse import unquote

print(unquote("%CE%B1%CE%BB%20"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are two encodings in play here. Your string has first been encoded as <a href="http://en.wikipedia.org/wiki/UTF-8">UTF-8</a>, then each byte has been <a href="http://en.wikipedia.org/wiki/Percent-encoding">percent-encoded</a>.</p>
<p>To get the original string back you need to first unquote it, and then decode it:</p>
<pre><code>&gt;&gt;&gt; import urllib
&gt;&gt;&gt; s = '%CE%B1%CE%BB%20'
&gt;&gt;&gt; result = urllib.unquote(s).decode('utf8')
&gt;&gt;&gt; print result
αλ 
</code></pre>
<p>Note that you need a Unicode enabled console in order to display the value (if you get an error with the print statement, try running it in <a href="http://en.wikipedia.org/wiki/IDLE_%28Python%29">IDLE</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>python 3 answer</p>
<pre><code>import urllib 
urllib.parse.unquote('/El%20Ni%C3%B1o/')

'/El Niño/'
</code></pre>
<p><a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">source</a> </p>
</div>
<span class="comment-copy">What do you mean by "real representation"?</span>
<span class="comment-copy">For <b>Python 3</b>: <code>import urllib.request</code> <code>urllib.request.unquote(...)</code></span>
<span class="comment-copy">thanks a lot! decode('utf8') was useless to me, though. unquote(s) did the job!</span>
<span class="comment-copy">this does not work.</span>
<span class="comment-copy">But it does. Just tried it to be on the safe side (IDLE, py2.7)</span>
