<div class="post-text" itemprop="text">
<p>I came across the fact that <code>numpy</code> arrays are passed by reference at multiple places, but then when I execute the following code, why is there a difference between the behavior of <code>foo</code> and <code>bar</code></p>
<pre><code>import numpy as np

def foo(arr):
   arr = arr - 3

def bar(arr):
   arr -= 3

a = np.array([3, 4, 5])
foo(a)
print a # prints [3, 4, 5]

bar(a)
print a # prints [0, 1, 2]
</code></pre>
<p>I'm using python 2.7 and numpy version 1.6.1</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, <a href="http://nedbatchelder.com/text/names.html" rel="noreferrer">all variable names are references to values</a>.</p>
<p>When Python evaluates an assignment, <a href="https://docs.python.org/2/reference/expressions.html#evaluation-order" rel="noreferrer">the right-hand side is evaluated before the left-hand side</a>. <code>arr - 3</code> creates a new array; it does not modify <code>arr</code> in-place.</p>
<p><code>arr = arr - 3</code> makes the local variable <code>arr</code> reference this new array. It does not modify the value originally referenced by <code>arr</code> which was passed to <code>foo</code>. The variable name <code>arr</code> simply gets bound to the new array, <code>arr - 3</code>. Moreover, <code>arr</code> is local variable name in the scope of the <code>foo</code> function. Once the <code>foo</code> function completes, there is no more reference to <code>arr</code> and Python is free to garbage collect the value it references. <a href="https://stackoverflow.com/questions/11585793/are-numpy-arrays-passed-by-reference/11585878?noredirect=1#comment56288437_11585878">As Reti43 points out</a>, in order for <code>arr</code>'s value to affect <code>a</code>, <code>foo</code> must return <code>arr</code> and <code>a</code> must be assigned to that value:</p>
<pre><code>def foo(arr):
    arr = arr - 3
    return arr
    # or simply combine both lines into `return arr - 3`

a = foo(a)
</code></pre>
<p>In contrast, <code>arr -= 3</code>, which Python translates into a call to the <a href="https://docs.python.org/3/reference/datamodel.html#object.__isub__" rel="noreferrer"><code>__iadd__</code> special method</a>, does modify the array referenced by <code>arr</code> in-place.</p>
</div>
<div class="post-text" itemprop="text">
<p>The first function calculates <code>(arr - 3)</code>, then assigns the local name <code>arr</code> to it, which doesn't affect the array data passed in. My guess is that in the second function, <code>np.array</code> overrides the <code>-=</code> operator, and operates in place on the array data.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python passes the array by reference: </p>
<pre><code>$:python
...python startup message

&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; x = np.zeros((2,2))
&gt;&gt;&gt; x
array([[0.,0.],[0.,0.]])
&gt;&gt;&gt; def setx(x):
...    x[0,0] = 1
...
&gt;&gt;&gt; setx(x)
&gt;&gt;&gt; x
array([[1.,0.],[0.,0.]])
</code></pre>
<p>The top answer is referring to a phenomenon that occurs even in compiled c-code, as any BLAS events will involve a "read-onto" step where either a new array is formed which the user (code writer in this case) is aware of, or a new array is formed "under the hood" in a temporary variable which the user is unaware of (you might see this as a <code>.eval()</code> call). </p>
<p>However, I can clearly access the memory of the array as if it is in a more global scope than the function called (i.e., <code>setx(...)</code>); which is exactly what "passing by reference" is, in terms of writing code. </p>
<hr/>
<p>And let's do a few more tests to check the validity of the accepted answer: </p>
<pre><code>(continuing the session above)
&gt;&gt;&gt; def minus2(x):
...    x[:,:] -= 2
...
&gt;&gt;&gt; minus2(x)
&gt;&gt;&gt; x
array([[-1.,-2.],[-2.,-2.]])
</code></pre>
<p>Seems to be passed by reference.  Let us do a calculation which will definitely compute an intermediate array under the hood, and see if x is modified as if it is passed by reference: </p>
<pre><code>&gt;&gt;&gt; def pow2(x):
...    x = x * x
...
&gt;&gt;&gt; pow2(x)
&gt;&gt;&gt; x
array([[-1.,-2.],[-2.,-2.]])
</code></pre>
<p>Huh, I thought x was passed by reference, but maybe it is not?  -- No, here, we have shadowed the x, and python will not propagate this "shadowing" back to global scope (which would violate the python-use case, which is to be a beginner level coding language with a lot of water wings and training wheels).</p>
<p>However, I can very easily perform this operation in a "pass-by-reference" manner by forcing the memory (which is not copied when I submit x to the function) to be modified instead: </p>
<pre><code>&gt;&gt;&gt; def refpow2(x):
...    x *= x
...
&gt;&gt;&gt; refpow2(x)
&gt;&gt;&gt; x
array([[1., 4.],[4., 4.]])
</code></pre>
<p>And so you see that python can be finessed a bit to do what you are trying to do. </p>
</div>
<span class="comment-copy">Related: <a href="http://stackoverflow.com/q/9047111/166749">stackoverflow.com/q/9047111/166749</a></span>
<span class="comment-copy">This thing Python calls "references" has nothing to do with pass-by-references, that's why.</span>
<span class="comment-copy">that is kind of, unintuitive...</span>
<span class="comment-copy">And therefore, in order for <code>foo()</code> to have an effect, it needs to return <code>arr</code> and in the code you run it as <code>a = foo(a)</code>.</span>
<span class="comment-copy">Wait so are objects passed by reference to functions in python...?</span>
<span class="comment-copy">Python does not pass-by-reference nor pass-by-value. Some call it <a href="http://effbot.org/zone/call-by-object.htm" rel="nofollow noreferrer">call-by-object</a>. See also this <a href="https://docs.python.org/3/tutorial/controlflow.html#id2" rel="nofollow noreferrer">footnote in the docs</a>. Since that term is not well known, it is important (and necessary) to <a href="http://nedbatchelder.com/text/names.html" rel="nofollow noreferrer">describe it</a> as well as to name it.</span>
<span class="comment-copy">See also <a href="https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference" rel="nofollow noreferrer">How do I write a function with output parameters (call by reference)?</a>, and <a href="https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing" rel="nofollow noreferrer">here for more on call-by-object</a>.</span>
