<div class="post-text" itemprop="text">
<p>I'm working on a project to analyse how journal articles are cited. I have a large file of journal article names. I intend to pass them to Google Scholar and see how many citations each has.</p>
<p>Here is the strategy I am following:</p>
<ol>
<li><p>Use "scholar.py" from <a href="http://www.icir.org/christian/scholar.html" rel="nofollow noreferrer">http://www.icir.org/christian/scholar.html</a>. This is a pre written python script that searches google scholar and returns information on the first hit in CSV format (including number of citations)</p></li>
<li><p>Google scholar blocks you after a certain number of searches (I have roughly 3000 article titles to query). I have found that most people use Tor ( <a href="https://stackoverflow.com/questions/1096379/tor-with-python">How to make urllib2 requests through Tor in Python?</a> and <a href="https://stackoverflow.com/questions/7644036/prevent-custom-web-crawler-from-being-blocked">Prevent Custom Web Crawler from being blocked</a>) to solve this problem. Tor is a service that gives you a random IP address every few minutes.</p></li>
</ol>
<p>I have scholar.py and tor both successfully set up and working. I'm not very familiar with python or the library urllib2 and wonder what modifications are needed to scholar.py so that queries are routed through Tor.</p>
<p>I am also amenable to suggestions for an easier (and potentially considerably different) approach for mass google scholar queries if one exists.</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>For me the best way to use TOR is <a href="http://www.pps.univ-paris-diderot.fr/~jch/software/polipo/tor.html" rel="nofollow noreferrer">setting up a local proxy like polipo</a>. I like to clone the repo and compile locally:</p>
<pre><code>git clone https://github.com/jech/polipo.git
cd polipo
make all
make install
</code></pre>
<p>But you can use your package manager (<code>brew install polipo</code> in mac, <code>apt install polipo</code> on Ubuntu). Then write a simple config file: </p>
<pre><code>echo socksParentProxy=localhost:9050 &gt; ~/.polipo
echo diskCacheRoot='""' &gt;&gt; ~/.polipo
echo disableLocalInterface=true &gt;&gt; ~/.polipo
</code></pre>
<p>Then run it:</p>
<pre><code>polipo
</code></pre>
<p>See <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="nofollow noreferrer">urllib docs on how to use a proxy</a>. Like many unix applications, urllib will honor the environment variable <code>http_proxy</code>:</p>
<pre><code>export http_proxy="http://localhost:8123"
export https_proxy="http://localhost:8123"
</code></pre>
<p>I like to use the requests library, a nicer wrapper for urllib. If you don't have it already:</p>
<pre><code>pip install requests
</code></pre>
<p>If urllib is using Tor the following one-liner should print True:</p>
<pre><code>python -c "import requests; print('Congratulations' in requests.get('http://check.torproject.org/').text)"
</code></pre>
<p>Last thing, beware: the Tor network is not a free pass for doing silly things on the Internet because even using it you should not assume you are totally anonymous.</p>
</div>
<span class="comment-copy">First link is no longer valid</span>
<span class="comment-copy">Link rot, that is why link-only answers sucks... I should include the instructions in the answer, unfortunately I lack the time to do it right now, sorry.</span>
<span class="comment-copy">link is back up for now</span>
<span class="comment-copy">Here's a permalink snapshot of that page: <a href="https://perma.cc/M3HG-2KWG" rel="nofollow noreferrer">perma.cc/M3HG-2KWG</a></span>
