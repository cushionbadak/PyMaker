<div class="post-text" itemprop="text">
<p>I have to input the parameters from the command line i.e username, password and database name. I know how to do that without using flags, by using 'sys.argv' (like below).</p>
<pre><code>##Test.py
hostname = str(sys.argv[1])
username = str(sys.argv[2])
password = str(sys.argv[3])

def ConnecttoDB():
    try:
        con=sql.connect(host=hostname, user= username, passwd= password)
        print ('\nConnected to Database\n')

# If we cannot connect to the database, send an error to the user and exit the program.
    except sql.Error:
        print ("Error %d: %s" % (sql.Error.args[0],sql.Error.args[1]))
        sys.exit(1)

    return con   
</code></pre>
<p>So, it could be run as:</p>
<p>$test.py DATABASE USERNAME PASWORD</p>
<p>But the problem is that I have to use 'flags'. So, the script could be run like this:</p>
<pre><code>$test.py -db DATABSE -u USERNAME -p PASSWORD -size 20
</code></pre>
<p>How can I use flags to take arguments from command line? I would appreciate your help on this. </p>
</div>
<div class="post-text" itemprop="text">
<p>The python 3 library includes 3 modules for parsing the command line thus nothing extra to add to your setup.</p>
<p>The one you should use is <a href="http://docs.python.org/py3k/library/argparse.html" rel="noreferrer">argparse</a></p>
<pre><code>import argparse
parser = argparse.ArgumentParser()

#-db DATABSE -u USERNAME -p PASSWORD -size 20
parser.add_argument("-db", "--hostname", help="Database name")
parser.add_argument("-u", "--username", help="User name")
parser.add_argument("-p", "--password", help="Password")
parser.add_argument("-size", "--size", help="Size", type=int)

args = parser.parse_args()

print( "Hostname {} User {} Password {} size {} ".format(
        args.hostname,
        args.username,
        args.password,
        args.size
        ))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all thanks to Mark for 'argparse' code. I have figured out the way to take arguments from command line specified by flags. I am pasting the code below which uses a modified 'Mark' code and a small module which shows how to use the arguments collected via commandline:</p>
<pre><code>import argparse

parser = argparse.ArgumentParser()

#-db DATABASE -u USERNAME -p PASSWORD -size 20000
parser.add_argument("-host", "--hostname", dest = "hostname", default = "xyz.edu", help="Server name")
parser.add_argument("-db", "--database", dest = "db", default = "ding_dong", help="Database name")
parser.add_argument("-u", "--username",dest ="username", help="User name")
parser.add_argument("-p", "--password",dest = "password", help="Password")
parser.add_argument("-size", "--binsize",dest = "binsize", help="Size", type=int)

args = parser.parse_args()

print( "Hostname {} db {} User {} Password {} size {} ".format(
        args.hostname,
        args.db,
        args.username,
        args.password,
        args.binsize
        ))
def ConnectToDB():
    print ('Trying to connect to mySQL server')
    # Try to connect to the database
    try:
        con=sql.connect(host=args.hostname, user= args.username, passwd= args.password)
        print ('\nConnected to Database\n')

    # If we cannot connect to the database, send an error to the user and exit the program.
    except sql.Error:
        print ("Error %d: %s" % (sql.Error.args[0],sql.Error.args[1]))
        sys.exit(1)

    return con
</code></pre>
<p>One of my concern was how to use variables from arguments to the code. For that two things need to be done </p>
<ol>
<li>Add 'dest' to the add_argument line e.x. dest ="username" which means the value collected from comamnd line will be assigned to variable 'username'</li>
<li>Whenever an you use such command line assigned variables from 'dest' just add 'args' before variable e.x con=sql.connect(host=args.hostname, user= args.username, passwd= args.password)</li>
</ol>
<p>Done</p>
<p>Thanks</p>
<p>AK</p>
</div>
<span class="comment-copy">Thanks for your reply and code. The problem I am facing now is that my code is giving error 'Undefined variables' for variables defined in above code. This is because, earlier their values were explicitly mentioned inside the script but after including the code  by Mark, the values are not recognized by script. In short how do I make script take values of variables from 'argparse' module. For ex. earlier in script: hostname = 127.0.0.1, username = xyz and password = abc but now these were replaced by code above (by Mark) therefore script now says 'Undefined Variables'.</span>
<span class="comment-copy"><a href="http://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html</a> for the details</span>
<span class="comment-copy">You accepted your own problem solution, whereas <b>@Mark</b> did provide you an answer to your question. I'm not sure if this is very kind...</span>
