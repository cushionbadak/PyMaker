link:
library/asyncio-eventloop.html#error-handling-api

docs:

Error Handling API¶
Allows customizing how exceptions are handled in the event loop.


(handler)¶
Set handler as the new event loop exception handler.
If handler is , the default exception handler will
be set.  Otherwise, handler must be a callable with the signature
matching , where 
is a reference to the active event loop, and 
is a  object containing the details of the exception
(see  documentation for details
about context).



()¶
Return the current exception handler, or  if no custom
exception handler was set.

New in version 3.5.2.




(context)¶
Default exception handler.
This is called when an exception occurs and no exception
handler is set. This can be called by a custom exception
handler that wants to defer to the default handler behavior.
context parameter has the same meaning as in
.



(context)¶
Call the current event loop exception handler.
context is a  object containing the following keys
(new keys may be introduced in future Python versions):

‘message’: Error message;
‘exception’ (optional): Exception object;
‘future’ (optional):  instance;
‘handle’ (optional):  instance;
‘protocol’ (optional): Protocol instance;
‘transport’ (optional): Transport instance;
‘socket’ (optional):  instance.


Note
This method should not be overloaded in subclassed
event loops.  For custom exception handling, use
the  method.


