link:
library/dbm.html#module-dbm.gnu

docs:

 — GNU’s reinterpretation of dbm¶
Source code: Lib/dbm/gnu.py

This module is quite similar to the  module, but uses the GNU library
 instead to provide some additional functionality.  Please note that the
file formats created by  and  are incompatible.
The  module provides an interface to the GNU DBM library.
 objects behave like mappings (dictionaries), except that keys and
values are always converted to bytes before storing.  Printing a 
object doesn’t print the
keys and values, and the  and  methods are not
supported.


exception ¶
Raised on -specific errors, such as I/O errors.  is
raised for general mapping errors like specifying an incorrect key.



(filename[, flag[, mode]])¶
Open a  database and return a  object.  The filename
argument is the name of the database file.
The optional flag argument can be:






Value
Meaning




Open existing database for reading only
(default)


Open existing database for reading and
writing


Open database for reading and writing,
creating it if it doesn’t exist


Always create a new, empty database, open
for reading and writing



The following additional characters may be appended to the flag to control
how the database is opened:






Value
Meaning




Open the database in fast mode.  Writes
to the database will not be synchronized.


Synchronized mode. This will cause changes
to the database to be immediately written
to the file.


Do not lock database.



Not all flags are valid for all versions of .  The module constant
 is a string of supported flag characters.  The exception
 is raised if an invalid flag is specified.
The optional mode argument is the Unix mode of the file, used only when the
database has to be created.  It defaults to octal .
In addition to the dictionary-like methods,  objects have the
following methods:


()¶
It’s possible to loop over every key in the database using this method  and the
 method.  The traversal is ordered by ’s internal
hash values, and won’t be sorted by the key values.  This method returns
the starting key.



(key)¶
Returns the key that follows key in the traversal.  The following code prints
every key in the database , without having to create a list in memory that
contains them all:





()¶
If you have carried out a lot of deletions and would like to shrink the space
used by the  file, this routine will reorganize the database.  
objects will not shorten the length of a database file except by using this
reorganization; otherwise, deleted file space will be kept and reused as new
(key, value) pairs are added.



()¶
When the database has been opened in fast mode, this method forces any
unwritten data to be written to the disk.



()¶
Close the  database.


