link:
library/unittest.mock.html#patch-multiple

docs:

patch.multiple¶


(target, spec=None, create=False, spec_set=None, autospec=None, new_callable=None, **kwargs)¶
Perform multiple patches in a single call. It takes the object to be
patched (either as an object or a string to fetch the object by importing)
and keyword arguments for the patches:


Use  as the value if you want  to create
mocks for you. In this case the created mocks are passed into a decorated
function by keyword, and a dictionary is returned when  is
used as a context manager.
 can be used as a decorator, class decorator or a context
manager. The arguments spec, spec_set, create, autospec and
new_callable have the same meaning as for . These arguments will
be applied to all patches done by .
When used as a class decorator  honours 
for choosing which methods to wrap.

If you want  to create mocks for you, then you can use
 as the value. If you use  as a decorator
then the created mocks are passed into the decorated function by keyword.




 can be nested with other  decorators, but put arguments
passed by keyword after any of the standard arguments created by :


If  is used as a context manager, the value returned by the
context manager is a dictionary where created mocks are keyed by name:


