link:
reference/datamodel.html#asynchronous-iterators

docs:

3.4.3. Asynchronous Iterators¶
An asynchronous iterator can call asynchronous code in
its  method.
Asynchronous iterators can be used in an  statement.


(self)¶
Must return an asynchronous iterator object.



(self)¶
Must return an awaitable resulting in a next value of the iterator.  Should
raise a  error when the iteration is over.

An example of an asynchronous iterable object:



New in version 3.5.


Changed in version 3.7: Prior to Python 3.7,  could return an awaitable
that would resolve to an
asynchronous iterator.
Starting with Python 3.7,  must return an
asynchronous iterator object.  Returning anything else
will result in a  error.

