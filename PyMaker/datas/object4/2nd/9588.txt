link:
library/zipimport.html#zipimport.zipimporter

docs:


class (archivepath)¶
Create a new zipimporter instance. archivepath must be a path to a ZIP
file, or to a specific path within a ZIP file.  For example, an archivepath
of  will look for modules in the  directory
inside the ZIP file  (provided that it exists).
 is raised if archivepath doesn’t point to a valid ZIP
archive.


(fullname[, path])¶
Search for a module specified by fullname. fullname must be the fully
qualified (dotted) module name. It returns the zipimporter instance itself
if the module was found, or  if it wasn’t. The optional
path argument is ignored—it’s there for compatibility with the
importer protocol.



(fullname)¶
Return the code object for the specified module. Raise
 if the module couldn’t be found.



(pathname)¶
Return the data associated with pathname. Raise  if the
file wasn’t found.

Changed in version 3.3:  used to be raised instead of .




(fullname)¶
Return the value  would be set to if the specified module
was imported. Raise  if the module couldn’t be
found.

New in version 3.1.




(fullname)¶
Return the source code for the specified module. Raise
 if the module couldn’t be found, return
 if the archive does contain the module, but has no source
for it.



(fullname)¶
Return  if the module specified by fullname is a package. Raise
 if the module couldn’t be found.



(fullname)¶
Load the module specified by fullname. fullname must be the fully
qualified (dotted) module name. It returns the imported module, or raises
 if it wasn’t found.



¶
The file name of the importer’s associated ZIP file, without a possible
subpath.



¶
The subpath within the ZIP file where modules are searched.  This is the
empty string for zipimporter objects which point to the root of the ZIP
file.

The  and  attributes, when combined with a
slash, equal the original archivepath argument given to the
 constructor.
