link:
library/collections.html#defaultdict-examples

docs:

 ExamplesÂ¶
Using  as the , it is easy to group a
sequence of key-value pairs into a dictionary of lists:


When each key is encountered for the first time, it is not already in the
mapping; so an entry is automatically created using the 
function which returns an empty .  The 
operation then attaches the value to the new list.  When keys are encountered
again, the look-up proceeds normally (returning the list for that key) and the
 operation adds another value to the list. This technique is
simpler and faster than an equivalent technique using :


Setting the  to  makes the
 useful for counting (like a bag or multiset in other
languages):


When a letter is first encountered, it is missing from the mapping, so the
 function calls  to supply a default count of
zero.  The increment operation then builds up the count for each letter.
The function  which always returns zero is just a special case of
constant functions.  A faster and more flexible way to create constant functions
is to use a lambda function which can supply any constant value (not just
zero):


Setting the  to  makes the
 useful for building a dictionary of sets:


