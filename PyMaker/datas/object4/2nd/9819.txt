link:
library/symtable.html#examining-symbol-tables

docs:

Examining Symbol Tables¶


class ¶
A namespace table for a block.  The constructor is not public.


()¶
Return the type of the symbol table.  Possible values are ,
, and .



()¶
Return the table’s identifier.



()¶
Return the table’s name.  This is the name of the class if the table is
for a class, the name of the function if the table is for a function, or
 if the table is global ( returns ).



()¶
Return the number of the first line in the block this table represents.



()¶
Return  if the locals in this table can be optimized.



()¶
Return  if the block is a nested class or function.



()¶
Return  if the block has nested namespaces within it.  These can
be obtained with .



()¶
Return  if the block uses .



()¶
Return a list of names of symbols in this table.



(name)¶
Lookup name in the table and return a  instance.



()¶
Return a list of  instances for names in the table.



()¶
Return a list of the nested symbol tables.




class ¶
A namespace for a function or method.  This class inherits
.


()¶
Return a tuple containing names of parameters to this function.



()¶
Return a tuple containing names of locals in this function.



()¶
Return a tuple containing names of globals in this function.



()¶
Return a tuple containing names of free variables in this function.




class ¶
A namespace of a class.  This class inherits .


()¶
Return a tuple containing the names of methods declared in the class.




class ¶
An entry in a  corresponding to an identifier in the
source.  The constructor is not public.


()¶
Return the symbol’s name.



()¶
Return  if the symbol is used in its block.



()¶
Return  if the symbol is created from an import statement.



()¶
Return  if the symbol is a parameter.



()¶
Return  if the symbol is global.



()¶
Return  if the symbol is declared global with a global statement.



()¶
Return  if the symbol is local to its block.



()¶
Return  if the symbol is referenced in its block, but not assigned
to.



()¶
Return  if the symbol is assigned to in its block.



()¶
Return  if name binding introduces new namespace.
If the name is used as the target of a function or class statement, this
will be true.
For example:


Note that a single name can be bound to multiple objects.  If the result
is , the name may also be bound to other objects, like an int or
list, that does not introduce a new namespace.



()¶
Return a list of namespaces bound to this name.



()¶
Return the namespace bound to this name.  If more than one namespace is
bound,  is raised.


