link:
library/math.html#power-and-logarithmic-functions

docs:

Power and logarithmic functions¶


(x)¶
Return e raised to the power x, where e = 2.718281… is the base
of natural logarithms.  This is usually more accurate than 
or .



(x)¶
Return e raised to the power x, minus 1.  Here e is the base of natural
logarithms.  For small floats x, the subtraction in 
can result in a significant loss of precision; the 
function provides a way to compute this quantity to full precision:



New in version 3.2.




(x[, base])¶
With one argument, return the natural logarithm of x (to base e).
With two arguments, return the logarithm of x to the given base,
calculated as .



(x)¶
Return the natural logarithm of 1+x (base e). The
result is calculated in a way which is accurate for x near zero.



(x)¶
Return the base-2 logarithm of x. This is usually more accurate than
.

New in version 3.3.


See also
 returns the number of bits necessary to represent
an integer in binary, excluding the sign and leading zeros.




(x)¶
Return the base-10 logarithm of x.  This is usually more accurate
than .



(x, y)¶
Return  raised to the power .  Exceptional cases follow
Annex ‘F’ of the C99 standard as far as possible.  In particular,
 and  always return , even
when  is a zero or a NaN.  If both  and  are finite,
 is negative, and  is not an integer then 
is undefined, and raises .
Unlike the built-in  operator,  converts both
its arguments to type .  Use  or the built-in
 function for computing exact integer powers.



(x)¶
Return the square root of x.

