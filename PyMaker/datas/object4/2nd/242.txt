link:
reference/expressions.html#the-power-operator

docs:

6.5. The power operatorÂ¶
The power operator binds more tightly than unary operators on its left; it binds
less tightly than unary operators on its right.  The syntax is:

Thus, in an unparenthesized sequence of power and unary operators, the operators
are evaluated from right to left (this does not constrain the evaluation order
for the operands):  results in .
The power operator has the same semantics as the built-in  function,
when called with two arguments: it yields its left argument raised to the power
of its right argument.  The numeric arguments are first converted to a common
type, and the result is of that type.
For int operands, the result has the same type as the operands unless the second
argument is negative; in that case, all arguments are converted to float and a
float result is delivered. For example,  returns , but
 returns .
Raising  to a negative power results in a .
Raising a negative number to a fractional power results in a 
number. (In earlier versions it raised a .)
