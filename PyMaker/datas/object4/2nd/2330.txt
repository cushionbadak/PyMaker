link:
library/pickle.html#object.__reduce__

docs:


()¶
The interface is currently defined as follows.  The  method
takes no argument and shall return either a string or preferably a tuple (the
returned object is often referred to as the “reduce value”).
If a string is returned, the string should be interpreted as the name of a
global variable.  It should be the object’s local name relative to its
module; the pickle module searches the module namespace to determine the
object’s module.  This behaviour is typically useful for singletons.
When a tuple is returned, it must be between two and five items long.
Optional items can either be omitted, or  can be provided as their
value.  The semantics of each item are in order:

A callable object that will be called to create the initial version of the
object.
A tuple of arguments for the callable object.  An empty tuple must be given
if the callable does not accept any argument.
Optionally, the object’s state, which will be passed to the object’s
 method as previously described.  If the object has no
such method then, the value must be a dictionary and it will be added to
the object’s  attribute.
Optionally, an iterator (and not a sequence) yielding successive items.
These items will be appended to the object either using
 or, in batch, using .
This is primarily used for list subclasses, but may be used by other
classes as long as they have  and  methods with
the appropriate signature.  (Whether  or  is
used depends on which pickle protocol version is used as well as the number
of items to append, so both must be supported.)
Optionally, an iterator (not a sequence) yielding successive key-value
pairs.  These items will be stored to the object using .  This is primarily used for dictionary subclasses, but may be used
by other classes as long as they implement .

