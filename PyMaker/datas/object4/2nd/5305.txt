link:
library/ssl.html#verifying-certificates

docs:

Verifying certificates¶
When calling the  constructor directly,
 is the default.  Since it does not authenticate the other
peer, it can be insecure, especially in client mode where most of time you
would like to ensure the authenticity of the server you’re talking to.
Therefore, when in client mode, it is highly recommended to use
.  However, it is in itself not sufficient; you also
have to check that the server certificate, which can be obtained by calling
, matches the desired service.  For many
protocols and applications, the service can be identified by the hostname;
in this case, the  function can be used.  This common
check is automatically performed when  is
enabled.

Changed in version 3.7: Hostname matchings is now performed by OpenSSL. Python no longer uses
.

In server mode, if you want to authenticate your clients using the SSL layer
(rather than using a higher-level authentication mechanism), you’ll also have
to specify  and similarly check the client certificate.
