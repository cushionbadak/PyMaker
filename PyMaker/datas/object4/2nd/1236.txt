link:
library/collections.html#collections.Counter

docs:


class ([iterable-or-mapping])¶
A  is a  subclass for counting hashable objects.
It is a collection where elements are stored as dictionary keys
and their counts are stored as dictionary values.  Counts are allowed to be
any integer value including zero or negative counts.  The 
class is similar to bags or multisets in other languages.
Elements are counted from an iterable or initialized from another
mapping (or counter):


Counter objects have a dictionary interface except that they return a zero
count for missing items instead of raising a :


Setting a count to zero does not remove an element from a counter.
Use  to remove it entirely:



New in version 3.1.

Counter objects support three methods beyond those available for all
dictionaries:


()¶
Return an iterator over elements repeating each as many times as its
count.  Elements are returned in arbitrary order.  If an element’s count
is less than one,  will ignore it.





([n])¶
Return a list of the n most common elements and their counts from the
most common to the least.  If n is omitted or ,
 returns all elements in the counter.
Elements with equal counts are ordered arbitrarily:





([iterable-or-mapping])¶
Elements are subtracted from an iterable or from another mapping
(or counter).  Like  but subtracts counts instead
of replacing them.  Both inputs and outputs may be zero or negative.



New in version 3.2.


The usual dictionary methods are available for  objects
except for two which work differently for counters.


(iterable)¶
This class method is not implemented for  objects.



([iterable-or-mapping])¶
Elements are counted from an iterable or added-in from another
mapping (or counter).  Like  but adds counts
instead of replacing them.  Also, the iterable is expected to be a
sequence of elements, not a sequence of  pairs.

