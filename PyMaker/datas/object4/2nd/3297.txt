link:
library/io.html#io.RawIOBase

docs:


class ¶
Base class for raw binary I/O.  It inherits .  There is no
public constructor.
Raw binary I/O typically provides low-level access to an underlying OS
device or API, and does not try to encapsulate it in high-level primitives
(this is left to Buffered I/O and Text I/O, described later in this page).
In addition to the attributes and methods from ,
 provides the following methods:


(size=-1)¶
Read up to size bytes from the object and return them.  As a convenience,
if size is unspecified or -1, all bytes until EOF are returned.
Otherwise, only one system call is ever made.  Fewer than size bytes may
be returned if the operating system call returns fewer than size bytes.
If 0 bytes are returned, and size was not 0, this indicates end of file.
If the object is in non-blocking mode and no bytes are available,
 is returned.
The default implementation defers to  and
.



()¶
Read and return all the bytes from the stream until EOF, using multiple
calls to the stream if necessary.



(b)¶
Read bytes into a pre-allocated, writable
bytes-like object b, and return the
number of bytes read.  For example, b might be a .
If the object is in non-blocking mode and no bytes
are available,  is returned.



(b)¶
Write the given bytes-like object, b, to the
underlying raw stream, and return the number of
bytes written.  This can be less than the length of b in
bytes, depending on specifics of the underlying raw
stream, and especially if it is in non-blocking mode.   is
returned if the raw stream is set not to block and no single byte could
be readily written to it.  The caller may release or mutate b after
this method returns, so the implementation should only access b
during the method call.

