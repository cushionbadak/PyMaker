link:
library/enum.html#creating-an-enum

docs:

Creating an Enum¶
Enumerations are created using the  syntax, which makes them
easy to read and write.  An alternative creation method is described in
Functional API.  To define an enumeration, subclass  as
follows:



Note
Enum member values
Member values can be anything: , , etc..  If
the exact value is unimportant you may use  instances and an
appropriate value will be chosen for you.  Care must be taken if you mix
 with other values.


Note
Nomenclature

The class  is an enumeration (or enum)
The attributes , , etc., are
enumeration members (or enum members) and are functionally constants.
The enum members have names and values (the name of
 is , the value of  is
, etc.)



Note
Even though we use the  syntax to create Enums, Enums
are not normal Python classes.  See How are Enums different? for
more details.

Enumeration members have human readable string representations:


…while their  has more information:


The type of an enumeration member is the enumeration it belongs to:


Enum members also have a property that contains just their item name:


Enumerations support iteration, in definition order:


Enumeration members are hashable, so they can be used in dictionaries and sets:


