link:
library/typing.html#newtype

docs:

NewType¶
Use the  helper function to create distinct types:


The static type checker will treat the new type as if it were a subclass
of the original type. This is useful in helping catch logical errors:


You may still perform all  operations on a variable of type ,
but the result will always be of type . This lets you pass in a
 wherever an  might be expected, but will prevent you from
accidentally creating a  in an invalid way:


Note that these checks are enforced only by the static type checker. At runtime
the statement  will make  a
function that immediately returns whatever parameter you pass it. That means
the expression  does not create a new class or introduce
any overhead beyond that of a regular function call.
More precisely, the expression  is always
true at runtime.
This also means that it is not possible to create a subtype of 
since it is an identity function at runtime, not an actual type:


However, it is possible to create a  based on a ‘derived’ :


and typechecking for  will work as expected.
See PEP 484 for more details.

Note
Recall that the use of a type alias declares two types to be equivalent to
one another. Doing  will make the static type checker
treat  as being exactly equivalent to  in all cases.
This is useful when you want to simplify complex type signatures.
In contrast,  declares one type to be a subtype of another.
Doing  will make the static type
checker treat  as a subclass of , which means a
value of type  cannot be used in places where a value of type
 is expected. This is useful when you want to prevent logic
errors with minimal runtime cost.


New in version 3.5.2.

