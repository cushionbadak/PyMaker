link:
library/asyncio-sync.html#asyncio.Semaphore

docs:


class (value=1, *, loop=None)¶
A Semaphore object.  Not thread-safe.
A semaphore manages an internal counter which is decremented by each
 call and incremented by each  call.
The counter can never go below zero; when  finds
that it is zero, it blocks, waiting until some task calls
.
The optional value argument gives the initial value for the
internal counter ( by default). If the given value is
less than  a  is raised.
The preferred way to use a Semaphore is an 
statement:


which is equivalent to:




coroutine ()¶
Acquire a semaphore.
If the internal counter is greater than zero, decrement
it by one and return  immediately.  If it is zero, wait
until a  is called and return .



()¶
Returns  if semaphore can not be acquired immediately.



()¶
Release a semaphore, incrementing the internal counter by one.
Can wake up a task waiting to acquire the semaphore.
Unlike ,  allows
making more  calls than  calls.

