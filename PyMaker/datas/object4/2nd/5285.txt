link:
library/ssl.html#server-side-operation

docs:

Server-side operation¶
For server operation, typically you’ll need to have a server certificate, and
private key, each in a file.  You’ll first create a context holding the key
and the certificate, so that clients can check your authenticity.  Then
you’ll open a socket, bind it to a port, call  on it, and start
waiting for clients to connect:


When a client connects, you’ll call  on the socket to get the
new socket from the other end, and use the context’s 
method to create a server-side SSL socket for the connection:


Then you’ll read data from the  and do something with it till you
are finished with the client (or the client is finished with you):


And go back to listening for new client connections (of course, a real server
would probably handle each client connection in a separate thread, or put
the sockets in non-blocking mode and use an event loop).
