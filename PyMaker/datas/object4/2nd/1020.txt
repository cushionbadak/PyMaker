link:
library/codecs.html#stateless-encoding-and-decoding

docs:

Stateless Encoding and Decoding¶
The base  class defines these methods which also define the
function interfaces of the stateless encoder and decoder:


(input[, errors])¶
Encodes the object input and returns a tuple (output object, length consumed).
For instance, text encoding converts
a string object to a bytes object using a particular
character set encoding (e.g.,  or ).
The errors argument defines the error handling to apply.
It defaults to  handling.
The method may not store state in the  instance. Use
 for codecs which have to keep state in order to make
encoding efficient.
The encoder must be able to handle zero length input and return an empty object
of the output object type in this situation.



(input[, errors])¶
Decodes the object input and returns a tuple (output object, length
consumed).  For instance, for a text encoding, decoding converts
a bytes object encoded using a particular
character set encoding to a string object.
For text encodings and bytes-to-bytes codecs,
input must be a bytes object or one which provides the read-only
buffer interface – for example, buffer objects and memory mapped files.
The errors argument defines the error handling to apply.
It defaults to  handling.
The method may not store state in the  instance. Use
 for codecs which have to keep state in order to make
decoding efficient.
The decoder must be able to handle zero length input and return an empty object
of the output object type in this situation.

