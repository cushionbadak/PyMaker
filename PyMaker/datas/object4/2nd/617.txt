link:
library/stdtypes.html#special-attributes

docs:

Special Attributes¶
The implementation adds a few special read-only attributes to several object
types, where they are relevant.  Some of these are not reported by the
 built-in function.


¶
A dictionary or other mapping object used to store an object’s (writable)
attributes.



¶
The class to which a class instance belongs.



¶
The tuple of base classes of a class object.



¶
The name of the class, function, method, descriptor, or
generator instance.



¶
The qualified name of the class, function, method, descriptor,
or generator instance.

New in version 3.3.




¶
This attribute is a tuple of classes that are considered when looking for
base classes during method resolution.



()¶
This method can be overridden by a metaclass to customize the method
resolution order for its instances.  It is called at class instantiation, and
its result is stored in .



()¶
Each class keeps a list of weak references to its immediate subclasses.  This
method returns a list of all those references still alive.
Example:



Footnotes



[1]Additional information on these special methods may be found in the Python
Reference Manual (Basic customization).





[2]As a consequence, the list  is considered equal to , and
similarly for tuples.





[3]They must have since the parser can’t tell the type of the operands.





[4](1, 2, 3, 4) Cased characters are those with general category property being one of
“Lu” (Letter, uppercase), “Ll” (Letter, lowercase), or “Lt” (Letter, titlecase).





[5](1, 2) To format only a tuple you should therefore provide a singleton tuple whose only
element is the tuple to be formatted.


