link:
library/urllib.parse.html#urllib.parse.urlsplit

docs:


(urlstring, scheme='', allow_fragments=True)¶
This is similar to , but does not split the params from the URL.
This should generally be used instead of  if the more recent URL
syntax allowing parameters to be applied to each segment of the path portion
of the URL (see RFC 2396) is wanted.  A separate function is needed to
separate the path segments and parameters.  This function returns a 5-item
named tuple:


The return value is a named tuple, its items can be accessed by index
or as named attributes:








Attribute
Index
Value
Value if not present




0
URL scheme specifier
scheme parameter


1
Network location part
empty string


2
Hierarchical path
empty string


3
Query component
empty string


4
Fragment identifier
empty string


 
User name



 
Password



 
Host name (lower case)



 
Port number as integer,
if present




Reading the  attribute will raise a  if
an invalid port is specified in the URL.  See section
Structured Parse Results for more information on the result object.
Unmatched square brackets in the  attribute will raise a
.
Characters in the  attribute that decompose under NFKC
normalization (as used by the IDNA encoding) into any of , ,
, , or  will raise a . If the URL is
decomposed before parsing, no error will be raised.

Changed in version 3.6: Out-of-range port numbers now raise , instead of
returning .


Changed in version 3.7.3: Characters that affect netloc parsing under NFKC normalization will
now raise .

