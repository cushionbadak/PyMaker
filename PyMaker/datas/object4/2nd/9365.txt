link:
library/abc.html#abc.ABCMeta

docs:


class ¶
Metaclass for defining Abstract Base Classes (ABCs).
Use this metaclass to create an ABC.  An ABC can be subclassed directly, and
then acts as a mix-in class.  You can also register unrelated concrete
classes (even built-in classes) and unrelated ABCs as “virtual subclasses” –
these and their descendants will be considered subclasses of the registering
ABC by the built-in  function, but the registering ABC
won’t show up in their MRO (Method Resolution Order) nor will method
implementations defined by the registering ABC be callable (not even via
). [1]
Classes created with a metaclass of  have the following method:


(subclass)¶
Register subclass as a “virtual subclass” of this ABC. For
example:



Changed in version 3.3: Returns the registered subclass, to allow usage as a class decorator.


Changed in version 3.4: To detect calls to , you can use the
 function.


You can also override this method in an abstract base class:


(subclass)¶
(Must be defined as a class method.)
Check whether subclass is considered a subclass of this ABC.  This means
that you can customize the behavior of  further without the
need to call  on every class you want to consider a
subclass of the ABC.  (This class method is called from the
 method of the ABC.)
This method should return ,  or .  If
it returns , the subclass is considered a subclass of this ABC.
If it returns , the subclass is not considered a subclass of
this ABC, even if it would normally be one.  If it returns
, the subclass check is continued with the usual
mechanism.

For a demonstration of these concepts, look at this example ABC definition:


The ABC  defines the standard iterable method,
, as an abstract method.  The implementation given
here can still be called from subclasses.  The  method
is also part of the  abstract base class, but it does not have
to be overridden in non-abstract derived classes.
The  class method defined here says that any class
that has an  method in its
 (or in that of one of its base classes, accessed
via the  list) is considered a  too.
Finally, the last line makes  a virtual subclass of ,
even though it does not define an  method (it uses
the old-style iterable protocol, defined in terms of  and
).  Note that this will not make 
available as a method of , so it is provided separately.
