link:
library/calendar.html

docs:


 — General calendar-related functions¶
Source code: Lib/calendar.py

This module allows you to output calendars like the Unix cal program,
and provides additional useful functions related to the calendar. By default,
these calendars have Monday as the first day of the week, and Sunday as the last
(the European convention). Use  to set the first day of
the week to Sunday (6) or to any other weekday.  Parameters that specify dates
are given as integers. For related
functionality, see also the  and  modules.
The functions and classes defined in this module
use an idealized calendar, the current Gregorian calendar extended indefinitely
in both directions.  This matches the definition of the “proleptic Gregorian”
calendar in Dershowitz and Reingold’s book “Calendrical Calculations”, where
it’s the base calendar for all computations.  Zero and negative years are
interpreted as prescribed by the ISO 8601 standard.  Year 0 is 1 BC, year -1 is
2 BC, and so on.


class (firstweekday=0)¶
Creates a  object. firstweekday is an integer specifying the
first day of the week.  is Monday (the default),  is Sunday.
A  object provides several methods that can be used for
preparing the calendar data for formatting. This class doesn’t do any formatting
itself. This is the job of subclasses.
 instances have the following methods:


()¶
Return an iterator for the week day numbers that will be used for one
week.  The first value from the iterator will be the same as the value of
the  property.



(year, month)¶
Return an iterator for the month month (1–12) in the year year. This
iterator will return all days (as  objects) for the
month and all days before the start of the month or after the end of the
month that are required to get a complete week.



(year, month)¶
Return an iterator for the month month in the year year similar to
, but not restricted by the 
range. Days returned will simply be day of the month numbers.  For the
days outside of the specified month, the day number is .



(year, month)¶
Return an iterator for the month month in the year year similar to
, but not restricted by the 
range. Days returned will be tuples consisting of a day of the month
number and a week day number.



(year, month)¶
Return an iterator for the month month in the year year similar to
, but not restricted by the 
range. Days returned will be tuples consisting of a year, a month and a day
of the month numbers.

New in version 3.7.




(year, month)¶
Return an iterator for the month month in the year year similar to
, but not restricted by the 
range. Days returned will be tuples consisting of a year, a month, a day
of the month, and a day of the week numbers.

New in version 3.7.




(year, month)¶
Return a list of the weeks in the month month of the year as full
weeks.  Weeks are lists of seven  objects.



(year, month)¶
Return a list of the weeks in the month month of the year as full
weeks.  Weeks are lists of seven tuples of day numbers and weekday
numbers.



(year, month)¶
Return a list of the weeks in the month month of the year as full
weeks.  Weeks are lists of seven day numbers.



(year, width=3)¶
Return the data for the specified year ready for formatting. The return
value is a list of month rows. Each month row contains up to width
months (defaulting to 3). Each month contains between 4 and 6 weeks and
each week contains 1–7 days. Days are  objects.



(year, width=3)¶
Return the data for the specified year ready for formatting (similar to
). Entries in the week lists are tuples of day
numbers and weekday numbers. Day numbers outside this month are zero.



(year, width=3)¶
Return the data for the specified year ready for formatting (similar to
). Entries in the week lists are day numbers. Day
numbers outside this month are zero.




class (firstweekday=0)¶
This class can be used to generate plain text calendars.
 instances have the following methods:


(theyear, themonth, w=0, l=0)¶
Return a month’s calendar in a multi-line string. If w is provided, it
specifies the width of the date columns, which are centered. If l is
given, it specifies the number of lines that each week will use. Depends
on the first weekday as specified in the constructor or set by the
 method.



(theyear, themonth, w=0, l=0)¶
Print a month’s calendar as returned by .



(theyear, w=2, l=1, c=6, m=3)¶
Return a m-column calendar for an entire year as a multi-line string.
Optional parameters w, l, and c are for date column width, lines per
week, and number of spaces between month columns, respectively. Depends on
the first weekday as specified in the constructor or set by the
 method.  The earliest year for which a calendar
can be generated is platform-dependent.



(theyear, w=2, l=1, c=6, m=3)¶
Print the calendar for an entire year as returned by .




class (firstweekday=0)¶
This class can be used to generate HTML calendars.
 instances have the following methods:


(theyear, themonth, withyear=True)¶
Return a month’s calendar as an HTML table. If withyear is true the year
will be included in the header, otherwise just the month name will be
used.



(theyear, width=3)¶
Return a year’s calendar as an HTML table. width (defaulting to 3)
specifies the number of months per row.



(theyear, width=3, css='calendar.css', encoding=None)¶
Return a year’s calendar as a complete HTML page. width (defaulting to
3) specifies the number of months per row. css is the name for the
cascading style sheet to be used.  can be passed if no style
sheet should be used. encoding specifies the encoding to be used for the
output (defaulting to the system default encoding).

 has the following attributes you can override to
customize the CSS classes used by the calendar:


¶
A list of CSS classes used for each weekday. The default class list is:


more styles can be added for each day:


Note that the length of this list must be seven items.



¶
The CSS class for a weekday occurring in the previous or coming month.

New in version 3.7.




¶
A list of CSS classes used for weekday names in the header row.
The default is the same as .

New in version 3.7.




¶
The month’s head CSS class (used by ).
The default value is .

New in version 3.7.




¶
The CSS class for the whole month’s table (used by ).
The default value is .

New in version 3.7.




¶
The CSS class for the whole year’s table of tables (used by
). The default value is .

New in version 3.7.




¶
The CSS class for the table head for the whole year (used by
). The default value is .

New in version 3.7.


Note that although the naming for the above described class attributes is
singular (e.g.  ), one can replace the
single CSS class with a space separated list of CSS classes, for example:


Here is an example how  can be customized:





class (firstweekday=0, locale=None)¶
This subclass of  can be passed a locale name in the
constructor and will return month and weekday names in the specified locale.
If this locale includes an encoding all strings containing month and weekday
names will be returned as unicode.



class (firstweekday=0, locale=None)¶
This subclass of  can be passed a locale name in the
constructor and will return month and weekday names in the specified
locale. If this locale includes an encoding all strings containing month and
weekday names will be returned as unicode.


Note
The  and  methods of these two
classes temporarily change the current locale to the given locale.  Because
the current locale is a process-wide setting, they are not thread-safe.

For simple text calendars this module provides the following functions.


(weekday)¶
Sets the weekday ( is Monday,  is Sunday) to start each week. The
values , , , ,
, , and  are provided for
convenience. For example, to set the first weekday to Sunday:





()¶
Returns the current setting for the weekday to start each week.



(year)¶
Returns  if year is a leap year, otherwise .



(y1, y2)¶
Returns the number of leap years in the range from y1 to y2 (exclusive),
where y1 and y2 are years.
This function works for ranges spanning a century change.



(year, month, day)¶
Returns the day of the week ( is Monday) for year (–…),
month (–), day (–).



(n)¶
Return a header containing abbreviated weekday names. n specifies the width in
characters for one weekday.



(year, month)¶
Returns weekday of first day of the month and number of days in month,  for the
specified year and month.



(year, month)¶
Returns a matrix representing a month’s calendar.  Each row represents a week;
days outside of the month a represented by zeros. Each week begins with Monday
unless set by .



(theyear, themonth, w=0, l=0)¶
Prints a month’s calendar as returned by .



(theyear, themonth, w=0, l=0)¶
Returns a month’s calendar in a multi-line string using the 
of the  class.



(year, w=0, l=0, c=6, m=3)¶
Prints the calendar for an entire year as returned by  .



(year, w=2, l=1, c=6, m=3)¶
Returns a 3-column calendar for an entire year as a multi-line string using
the  of the  class.



(tuple)¶
An unrelated but handy function that takes a time tuple such as returned by
the  function in the  module, and returns the
corresponding Unix timestamp value, assuming an epoch of 1970, and the POSIX
encoding.  In fact,  and  are each others’
inverse.

The  module exports the following data attributes:


¶
An array that represents the days of the week in the current locale.



¶
An array that represents the abbreviated days of the week in the current locale.



¶
An array that represents the months of the year in the current locale.  This
follows normal convention of January being month number 1, so it has a length of
13 and   is the empty string.



¶
An array that represents the abbreviated months of the year in the current
locale.  This follows normal convention of January being month number 1, so it
has a length of 13 and   is the empty string.


See also

Module 
Object-oriented interface to dates and times with similar functionality to the
 module.
Module 
Low-level time related functions.



