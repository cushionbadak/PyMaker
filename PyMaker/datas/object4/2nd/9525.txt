link:
library/inspect.html#current-state-of-generators-and-coroutines

docs:

Current State of Generators and Coroutines¶
When implementing coroutine schedulers and for other advanced uses of
generators, it is useful to determine whether a generator is currently
executing, is waiting to start or resume or execution, or has already
terminated.  allows the current state of a
generator to be determined easily.


(generator)¶
Get current state of a generator-iterator.

Possible states are:

GEN_CREATED: Waiting to start execution.
GEN_RUNNING: Currently being executed by the interpreter.
GEN_SUSPENDED: Currently suspended at a yield expression.
GEN_CLOSED: Execution has completed.




New in version 3.2.




(coroutine)¶
Get current state of a coroutine object.  The function is intended to be
used with coroutine objects created by  functions, but
will accept any coroutine-like object that has  and
 attributes.

Possible states are:

CORO_CREATED: Waiting to start execution.
CORO_RUNNING: Currently being executed by the interpreter.
CORO_SUSPENDED: Currently suspended at an await expression.
CORO_CLOSED: Execution has completed.




New in version 3.5.


The current internal state of the generator can also be queried. This is
mostly useful for testing purposes, to ensure that internal state is being
updated as expected:


(generator)¶
Get the mapping of live local variables in generator to their current
values.  A dictionary is returned that maps from variable names to values.
This is the equivalent of calling  in the body of the
generator, and all the same caveats apply.
If generator is a generator with no currently associated frame,
then an empty dictionary is returned.   is raised if
generator is not a Python generator object.

CPython implementation detail: This function relies on the generator exposing a Python stack frame
for introspection, which isn’t guaranteed to be the case in all
implementations of Python. In such cases, this function will always
return an empty dictionary.


New in version 3.3.




(coroutine)¶
This function is analogous to , but
works for coroutine objects created by  functions.

New in version 3.5.


