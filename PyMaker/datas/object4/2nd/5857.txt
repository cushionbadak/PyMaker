link:
library/mailbox.html#maildir

docs:

¶


class (dirname, factory=None, create=True)¶
A subclass of  for mailboxes in Maildir format. Parameter
factory is a callable object that accepts a file-like message representation
(which behaves as if opened in binary mode) and returns a custom representation.
If factory is ,  is used as the default message
representation. If create is , the mailbox is created if it does not
exist.
It is for historical reasons that dirname is named as such rather than path.
Maildir is a directory-based mailbox format invented for the qmail mail
transfer agent and now widely supported by other programs. Messages in a
Maildir mailbox are stored in separate files within a common directory
structure. This design allows Maildir mailboxes to be accessed and modified
by multiple unrelated programs without data corruption, so file locking is
unnecessary.
Maildir mailboxes contain three subdirectories, namely: ,
, and . Messages are created momentarily in the
 subdirectory and then moved to the  subdirectory to
finalize delivery. A mail user agent may subsequently move the message to the
 subdirectory and store information about the state of the message
in a special “info” section appended to its file name.
Folders of the style introduced by the Courier mail transfer agent are also
supported. Any subdirectory of the main mailbox is considered a folder if
 is the first character in its name. Folder names are represented by
 without the leading . Each folder is itself a Maildir
mailbox but should not contain other folders. Instead, a logical nesting is
indicated using  to delimit levels, e.g., “Archived.2005.07”.

Note
The Maildir specification requires the use of a colon () in certain
message file names. However, some operating systems do not permit this
character in file names, If you wish to use a Maildir-like format on such
an operating system, you should specify another character to use
instead. The exclamation point () is a popular choice. For
example:


The  attribute may also be set on a per-instance basis.

 instances have all of the methods of  in
addition to the following:


()¶
Return a list of the names of all folders.



(folder)¶
Return a  instance representing the folder whose name is
folder. A  exception is raised if the folder
does not exist.



(folder)¶
Create a folder whose name is folder and return a 
instance representing it.



(folder)¶
Delete the folder whose name is folder. If the folder contains any
messages, a  exception will be raised and the folder
will not be deleted.



()¶
Delete temporary files from the mailbox that have not been accessed in the
last 36 hours. The Maildir specification says that mail-reading programs
should do this occasionally.

Some  methods implemented by  deserve special
remarks:


(message)¶

(key, message)¶

(arg)¶

Warning
These methods generate unique file names based upon the current process
ID. When using multiple threads, undetected name clashes may occur and
cause corruption of the mailbox unless threads are coordinated to avoid
using these methods to manipulate the same mailbox simultaneously.




()¶
All changes to Maildir mailboxes are immediately applied, so this method
does nothing.



()¶

()¶
Maildir mailboxes do not support (or require) locking, so these methods do
nothing.



()¶
 instances do not keep any open files and the underlying
mailboxes do not support locking, so this method does nothing.



(key)¶
Depending upon the host platform, it may not be possible to modify or
remove the underlying message while the returned file remains open.



See also

maildir man page from qmail
The original specification of the format.
Using maildir format
Notes on Maildir by its inventor. Includes an updated name-creation scheme and
details on “info” semantics.
maildir man page from Courier
Another specification of the format. Describes a common extension for supporting
folders.


