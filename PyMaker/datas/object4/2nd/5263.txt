link:
library/ssl.html#ssl.SSLContext.wrap_socket

docs:


(sock, server_side=False, do_handshake_on_connect=True, suppress_ragged_eofs=True, server_hostname=None, session=None)¶
Wrap an existing Python socket sock and return an instance of
 (default ). The
returned SSL socket is tied to the context, its settings and certificates.
sock must be a  socket; other
socket types are unsupported.
The parameter  is a boolean which identifies whether
server-side or client-side behavior is desired from this socket.
For client-side sockets, the context construction is lazy; if the
underlying socket isn’t connected yet, the context construction will be
performed after  is called on the socket.  For
server-side sockets, if the socket has no remote peer, it is assumed
to be a listening socket, and the server-side SSL wrapping is
automatically performed on client connections accepted via the
 method. The method may raise .
On client connections, the optional parameter server_hostname specifies
the hostname of the service which we are connecting to.  This allows a
single server to host multiple SSL-based services with distinct certificates,
quite similarly to HTTP virtual hosts. Specifying server_hostname will
raise a  if server_side is true.
The parameter  specifies whether to do the SSL
handshake automatically after doing a , or whether the
application program will call it explicitly, by invoking the
 method.  Calling
 explicitly gives the program control over the
blocking behavior of the socket I/O involved in the handshake.
The parameter  specifies how the
 method should signal unexpected EOF from the other end
of the connection.  If specified as  (the default), it returns a
normal EOF (an empty bytes object) in response to unexpected EOF errors
raised from the underlying socket; if , it will raise the
exceptions back to the caller.
session, see .

Changed in version 3.5: Always allow a server_hostname to be passed, even if OpenSSL does not
have SNI.


Changed in version 3.6: session argument was added.

Changed in version 3.7: The method returns on instance of 
instead of hard-coded .


