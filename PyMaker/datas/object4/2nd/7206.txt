link:
library/http.server.html#http.server.SimpleHTTPRequestHandler

docs:


class (request, client_address, server, directory=None)¶
This class serves files from the current directory and below, directly
mapping the directory structure to HTTP requests.
A lot of the work, such as parsing the request, is done by the base class
.  This class implements the 
and  functions.
The following are defined as class-level attributes of
:


¶
This will be , where  is
defined at the module level.



¶
A dictionary mapping suffixes into MIME types. The default is
signified by an empty string, and is considered to be
. The mapping is used case-insensitively,
and so should contain only lower-cased keys.



¶
If not specified, the directory to serve is the current working directory.

The  class defines the following methods:


()¶
This method serves the  request type: it sends the headers it
would send for the equivalent  request. See the 
method for a more complete explanation of the possible headers.



()¶
The request is mapped to a local file by interpreting the request as a
path relative to the current working directory.
If the request was mapped to a directory, the directory is checked for a
file named  or  (in that order). If found, the
file’s contents are returned; otherwise a directory listing is generated
by calling the  method. This method uses
 to scan the directory, and returns a  error
response if the  fails.
If the request was mapped to a file, it is opened. Any 
exception in opening the requested file is mapped to a ,
 error. If there was a 
header in the request, and the file was not modified after this time,
a ,  response is sent. Otherwise, the content
type is guessed by calling the  method, which in turn
uses the extensions_map variable, and the file contents are returned.
A  header with the guessed content type is output,
followed by a  header with the file’s size and a
 header with the file’s modification time.
Then follows a blank line signifying the end of the headers, and then the
contents of the file are output. If the file’s MIME type starts with
 the file is opened in text mode; otherwise binary mode is used.
For example usage, see the implementation of the  function
invocation in the  module.

Changed in version 3.7: Support of the  header.


