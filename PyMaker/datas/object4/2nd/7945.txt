link:
library/turtle.html#public-classes

docs:

Public classes¶


class (canvas)¶

class (canvas)¶




Parameters:canvas – a , a  or a




Create a turtle.  The turtle has all methods described above as “methods of
Turtle/RawTurtle”.



class ¶
Subclass of RawTurtle, has the same interface but draws on a default
 object created automatically when needed for the first time.



class (cv)¶




Parameters:cv – a 



Provides screen oriented methods like  etc. that are described
above.



class ¶
Subclass of TurtleScreen, with four methods added.



class (master)¶




Parameters:master – some Tkinter widget to contain the ScrolledCanvas, i.e.
a Tkinter-canvas with scrollbars added



Used by class Screen, which thus automatically provides a ScrolledCanvas as
playground for the turtles.



class (type_, data)¶




Parameters:type_ – one of the strings “polygon”, “image”, “compound”



Data structure modeling shapes.  The pair  must follow this
specification:






type_
data



“polygon”
a polygon-tuple, i.e. a tuple of pairs of coordinates

“image”
an image  (in this form only used internally!)

“compound”
 (a compound shape has to be constructed using the
 method)





(poly, fill, outline=None)¶




Parameters:
poly – a polygon, i.e. a tuple of pairs of numbers
fill – a color the poly will be filled with
outline – a color for the poly’s outline (if given)





Example:


See Compound shapes.




class (x, y)¶
A two-dimensional vector class, used as a helper class for implementing
turtle graphics.  May be useful for turtle graphics programs too.  Derived
from tuple, so a vector is a tuple!
Provides (for a, b vectors, k number):

 vector addition
 vector subtraction
 inner product
 and  multiplication with scalar
 absolute value of a
 rotation


