link:
library/unittest.mock.html#attaching-mocks-as-attributes

docs:

Attaching Mocks as Attributes¶
When you attach a mock as an attribute of another mock (or as the return
value) it becomes a “child” of that mock. Calls to the child are recorded in
the  and  attributes of the
parent. This is useful for configuring child mocks and then attaching them to
the parent, or for attaching mocks to a parent that records all calls to the
children and allows you to make assertions about the order of calls between
mocks:


The exception to this is if the mock has a name. This allows you to prevent
the “parenting” if for some reason you don’t want it to happen.


Mocks created for you by  are automatically given names. To
attach mocks that have names to a parent you use the 
method:





[1]The only exceptions are magic methods and attributes (those that have
leading and trailing double underscores). Mock doesn’t create these but
instead raises an . This is because the interpreter
will often implicitly request these methods, and gets very confused to
get a new Mock object when it expects a magic method. If you need magic
method support see magic methods.


