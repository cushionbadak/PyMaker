link:
library/unittest.html#load-tests-protocol

docs:

load_tests Protocol¶

New in version 3.2.

Modules or packages can customize how tests are loaded from them during normal
test runs or test discovery by implementing a function called .
If a test module defines  it will be called by
 with the following arguments:


where pattern is passed straight through from .  It
defaults to .
It should return a .
loader is the instance of  doing the loading.
standard_tests are the tests that would be loaded by default from the
module. It is common for test modules to only want to add or remove tests
from the standard set of tests.
The third argument is used when loading packages as part of test discovery.
A typical  function that loads tests from a specific set of
 classes may look like:


If discovery is started in a directory containing a package, either from the
command line or by calling , then the package
 will be checked for .  If that function does
not exist, discovery will recurse into the package as though it were just
another directory.  Otherwise, discovery of the package’s tests will be left up
to  which is called with the following arguments:


This should return a  representing all the tests
from the package. ( will only contain tests
collected from .)
Because the pattern is passed into  the package is free to
continue (and potentially modify) test discovery. A ‘do nothing’
 function for a test package would look like:



Changed in version 3.5: Discovery no longer checks package names for matching pattern due to the
impossibility of package names matching the default pattern.

