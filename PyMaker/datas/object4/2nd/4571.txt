link:
library/_thread.html#_thread.lock.acquire

docs:


(waitflag=1, timeout=-1)¶
Without any optional argument, this method acquires the lock unconditionally, if
necessary waiting until it is released by another thread (only one thread at a
time can acquire a lock — that’s their reason for existence).
If the integer waitflag argument is present, the action depends on its
value: if it is zero, the lock is only acquired if it can be acquired
immediately without waiting, while if it is nonzero, the lock is acquired
unconditionally as above.
If the floating-point timeout argument is present and positive, it
specifies the maximum wait time in seconds before returning.  A negative
timeout argument specifies an unbounded wait.  You cannot specify
a timeout if waitflag is zero.
The return value is  if the lock is acquired successfully,
 if not.

Changed in version 3.2: The timeout parameter is new.


Changed in version 3.2: Lock acquires can now be interrupted by signals on POSIX.

