link:
library/collections.html#userlist-objects

docs:

 objects¶
This class acts as a wrapper around list objects.  It is a useful base class
for your own list-like classes which can inherit from them and override
existing methods or add new ones.  In this way, one can add new behaviors to
lists.
The need for this class has been partially supplanted by the ability to
subclass directly from ; however, this class can be easier
to work with because the underlying list is accessible as an attribute.


class ([list])¶
Class that simulates a list.  The instance’s contents are kept in a regular
list, which is accessible via the  attribute of 
instances.  The instance’s contents are initially set to a copy of list,
defaulting to the empty list .  list can be any iterable, for
example a real Python list or a  object.
In addition to supporting the methods and operations of mutable sequences,
 instances provide the following attribute:


¶
A real  object used to store the contents of the
 class.


Subclassing requirements: Subclasses of  are expected to
offer a constructor which can be called with either no arguments or one
argument.  List operations which return a new sequence attempt to create an
instance of the actual implementation class.  To do so, it assumes that the
constructor can be called with a single parameter, which is a sequence object
used as a data source.
If a derived class does not wish to comply with this requirement, all of the
special methods supported by this class will need to be overridden; please
consult the sources for information about the methods which need to be provided
in that case.
