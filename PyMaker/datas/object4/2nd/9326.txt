link:
library/dataclasses.html#mutable-default-values

docs:

Mutable default valuesÂ¶

Python stores default member variable values in class attributes.
Consider this example, not using dataclasses:


Note that the two instances of class  share the same class
variable , as expected.
Using dataclasses, if this code was valid:


it would generate code similar to:


This has the same issue as the original example using class .
That is, two instances of class  that do not specify a value for
 when creating a class instance will share the same copy of
.  Because dataclasses just use normal Python class creation
they also share this behavior.  There is no general way for Data
Classes to detect this condition.  Instead, dataclasses will raise a
 if it detects a default parameter of type ,
, or .  This is a partial solution, but it does protect
against many common errors.
Using default factory functions is a way to create new instances of
mutable types as default values for fields:



