link:
library/lzma.html#lzma.LZMADecompressor

docs:


class (format=FORMAT_AUTO, memlimit=None, filters=None)¶
Create a decompressor object, which can be used to decompress data
incrementally.
For a more convenient way of decompressing an entire compressed stream at
once, see .
The format argument specifies the container format that should be used. The
default is , which can decompress both  and
 files. Other possible values are ,
, and .
The memlimit argument specifies a limit (in bytes) on the amount of memory
that the decompressor can use. When this argument is used, decompression will
fail with an  if it is not possible to decompress the input
within the given memory limit.
The filters argument specifies the filter chain that was used to create
the stream being decompressed. This argument is required if format is
, but should not be used for other formats.
See Specifying custom filter chains for more information about filter chains.

Note
This class does not transparently handle inputs containing multiple
compressed streams, unlike  and . To
decompress a multi-stream input with , you must
create a new decompressor for each stream.



(data, max_length=-1)¶
Decompress data (a bytes-like object), returning
uncompressed data as bytes. Some of data may be buffered
internally, for use in later calls to . The
returned data should be concatenated with the output of any
previous calls to .
If max_length is nonnegative, returns at most max_length
bytes of decompressed data. If this limit is reached and further
output can be produced, the  attribute will
be set to . In this case, the next call to
 may provide data as  to obtain
more of the output.
If all of the input data was decompressed and returned (either
because this was less than max_length bytes, or because
max_length was negative), the  attribute
will be set to .
Attempting to decompress data after the end of stream is reached
raises an EOFError.  Any data found after the end of the
stream is ignored and saved in the  attribute.

Changed in version 3.5: Added the max_length parameter.




¶
The ID of the integrity check used by the input stream. This may be
 until enough of the input has been decoded to
determine what integrity check it uses.



¶
 if the end-of-stream marker has been reached.



¶
Data found after the end of the compressed stream.
Before the end of the stream is reached, this will be .



¶
 if the  method can provide more
decompressed data before requiring new uncompressed input.

New in version 3.5.


