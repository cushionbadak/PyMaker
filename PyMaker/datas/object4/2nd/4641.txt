link:
library/asyncio-task.html#generator-based-coroutines

docs:

Generator-based Coroutines¶

Note
Support for generator-based coroutines is deprecated and
is scheduled for removal in Python 3.10.

Generator-based coroutines predate async/await syntax.  They are
Python generators that use  expressions to await
on Futures and other coroutines.
Generator-based coroutines should be decorated with
, although this is not
enforced.


¶
Decorator to mark generator-based coroutines.
This decorator enables legacy generator-based coroutines to be
compatible with async/await code:


This decorator is deprecated and is scheduled for removal in
Python 3.10.
This decorator should not be used for 
coroutines.



(obj)¶
Return  if obj is a coroutine object.
This method is different from  because
it returns  for generator-based coroutines.



(func)¶
Return  if func is a coroutine function.
This method is different from 
because it returns  for generator-based coroutine functions
decorated with .

