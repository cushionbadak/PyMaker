link:
library/asyncio-stream.html#asyncio.start_server

docs:


coroutine (client_connected_cb, host=None, port=None, *, loop=None, limit=None, family=socket.AF_UNSPEC, flags=socket.AI_PASSIVE, sock=None, backlog=100, ssl=None, reuse_address=None, reuse_port=None, ssl_handshake_timeout=None, start_serving=True)Â¶
Start a socket server.
The client_connected_cb callback is called whenever a new client
connection is established.  It receives a  pair
as two arguments, instances of the  and
 classes.
client_connected_cb can be a plain callable or a
coroutine function; if it is a coroutine function,
it will be automatically scheduled as a .
The loop argument is optional and can always be determined
automatically when this method is awaited from a coroutine.
limit determines the buffer size limit used by the
returned  instance.  By default the limit
is set to 64 KiB.
The rest of the arguments are passed directly to
.

New in version 3.7: The ssl_handshake_timeout and start_serving parameters.

