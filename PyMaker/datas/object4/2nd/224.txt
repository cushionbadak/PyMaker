link:
reference/expressions.html#generator-iterator-methods

docs:

6.2.9.1. Generator-iterator methods¶
This subsection describes the methods of a generator iterator.  They can
be used to control the execution of a generator function.
Note that calling any of the generator methods below when the generator
is already executing raises a  exception.


()¶
Starts the execution of a generator function or resumes it at the last
executed yield expression.  When a generator function is resumed with a
 method, the current yield expression always
evaluates to .  The execution then continues to the next yield
expression, where the generator is suspended again, and the value of the
 is returned to ’s caller.  If the
generator exits without yielding another value, a 
exception is raised.
This method is normally called implicitly, e.g. by a  loop, or
by the built-in  function.



(value)¶
Resumes the execution and “sends” a value into the generator function.  The
value argument becomes the result of the current yield expression.  The
 method returns the next value yielded by the generator, or
raises  if the generator exits without yielding another
value.  When  is called to start the generator, it must be called
with  as the argument, because there is no yield expression that
could receive the value.



(type[, value[, traceback]])¶
Raises an exception of type  at the point where the generator was paused,
and returns the next value yielded by the generator function.  If the generator
exits without yielding another value, a  exception is
raised.  If the generator function does not catch the passed-in exception, or
raises a different exception, then that exception propagates to the caller.



()¶
Raises a  at the point where the generator function was
paused.  If the generator function then exits gracefully, is already closed,
or raises  (by not catching the exception), close
returns to its caller.  If the generator yields a value, a
 is raised.  If the generator raises any other exception,
it is propagated to the caller.   does nothing if the generator
has already exited due to an exception or normal exit.

