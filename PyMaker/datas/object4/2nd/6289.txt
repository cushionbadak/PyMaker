link:
library/xml.dom.pulldom.html

docs:


 — Support for building partial DOM trees¶
Source code: Lib/xml/dom/pulldom.py

The  module provides a “pull parser” which can also be
asked to produce DOM-accessible fragments of the document where necessary. The
basic concept involves pulling “events” from a stream of incoming XML and
processing them. In contrast to SAX which also employs an event-driven
processing model together with callbacks, the user of a pull parser is
responsible for explicitly pulling events from the stream, looping over those
events until either processing is finished or an error condition occurs.

Warning
The  module is not secure against
maliciously constructed data.  If you need to parse untrusted or
unauthenticated data see XML vulnerabilities.


Changed in version 3.7.1: The SAX parser no longer processes general external entities by default to
increase security by default. To enable processing of external entities,
pass a custom parser instance in:



Example:


 is a constant and can be one of:










 is an object of type ,
 or .
Since the document is treated as a “flat” stream of events, the document “tree”
is implicitly traversed and the desired elements are found regardless of their
depth in the tree. In other words, one does not need to consider hierarchical
issues such as recursive searching of the document nodes, although if the
context of elements were important, one would either need to maintain some
context-related state (i.e. remembering where one is in the document at any
given point) or to make use of the  method
and switch to DOM-related processing.


class (documentFactory=None)¶
Subclass of .



class (documentFactory=None)¶
Subclass of .



(stream_or_string, parser=None, bufsize=None)¶
Return a  from the given input. stream_or_string may be
either a file name, or a file-like object. parser, if given, must be an
 object. This function will change the
document handler of the
parser and activate namespace support; other parser configuration (like
setting an entity resolver) must have been done in advance.

If you have XML in a string, you can use the  function instead:


(string, parser=None)¶
Return a  that represents the (Unicode) string.



¶
Default value for the bufsize parameter to .
The value of this variable can be changed before calling  and
the new value will take effect.


DOMEventStream Objects¶


class (stream, parser, bufsize)¶


()¶
Return a tuple containing event and the current node as
 if event equals ,
 if event equals  or
 or  if event equals
.
The current node does not contain information about its children, unless
 is called.



(node)¶
Expands all children of node into node. Example:





()¶




