link:
library/os.html#os.register_at_fork

docs:


(*, before=None, after_in_parent=None, after_in_child=None)Â¶
Register callables to be executed when a new child process is forked
using  or similar process cloning APIs.
The parameters are optional and keyword-only.
Each specifies a different call point.

before is a function called before forking a child process.
after_in_parent is a function called from the parent process
after forking a child process.
after_in_child is a function called from the child process.

These calls are only made if control is expected to return to the
Python interpreter.  A typical  launch will not
trigger them as the child is not going to re-enter the interpreter.
Functions registered for execution before forking are called in
reverse registration order.  Functions registered for execution
after forking (either in the parent or in the child) are called
in registration order.
Note that  calls made by third-party C code may not
call those functions, unless it explicitly calls ,
 and .
There is no way to unregister a function.
Availability: Unix.

New in version 3.7.

