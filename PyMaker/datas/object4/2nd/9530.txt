link:
library/inspect.html#code-objects-bit-flags

docs:

Code Objects Bit Flags¶
Python code objects have a  attribute, which is a bitmap of
the following flags:


¶
The code object is optimized, using fast locals.



¶
If set, a new dict will be created for the frame’s  when
the code object is executed.



¶
The code object has a variable positional parameter (-like).



¶
The code object has a variable keyword parameter (-like).



¶
The flag is set when the code object is a nested function.



¶
The flag is set when the code object is a generator function, i.e.
a generator object is returned when the code object is executed.



¶
The flag is set if there are no free or cell variables.



¶
The flag is set when the code object is a coroutine function.
When the code object is executed it returns a coroutine object.
See PEP 492 for more details.

New in version 3.5.




¶
The flag is used to transform generators into generator-based
coroutines.  Generator objects with this flag can be used in
 expression, and can  coroutine objects.
See PEP 492 for more details.

New in version 3.5.




¶
The flag is set when the code object is an asynchronous generator
function.  When the code object is executed it returns an
asynchronous generator object.  See PEP 525 for more details.

New in version 3.6.



Note
The flags are specific to CPython, and may not be defined in other
Python implementations.  Furthermore, the flags are an implementation
detail, and can be removed or deprecated in future Python releases.
It’s recommended to use public APIs from the  module
for any introspection needs.

