link:
reference/datamodel.html#special-method-lookup

docs:

3.3.10. Special method lookup¶
For custom classes, implicit invocations of special methods are only guaranteed
to work correctly if defined on an object’s type, not in the object’s instance
dictionary.  That behaviour is the reason why the following code raises an
exception:


The rationale behind this behaviour lies with a number of special methods such
as  and  that are implemented by all objects,
including type objects. If the implicit lookup of these methods used the
conventional lookup process, they would fail when invoked on the type object
itself:


Incorrectly attempting to invoke an unbound method of a class in this way is
sometimes referred to as ‘metaclass confusion’, and is avoided by bypassing
the instance when looking up special methods:


In addition to bypassing any instance attributes in the interest of
correctness, implicit special method lookup generally also bypasses the
 method even of the object’s metaclass:


Bypassing the  machinery in this fashion
provides significant scope for speed optimisations within the
interpreter, at the cost of some flexibility in the handling of
special methods (the special method must be set on the class
object itself in order to be consistently invoked by the interpreter).
