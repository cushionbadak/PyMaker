link:
library/select.html#polling-objects

docs:

Polling Objects¶
The  system call, supported on most Unix systems, provides better
scalability for network servers that service many, many clients at the same
time.  scales better because the system call only requires listing
the file descriptors of interest, while  builds a bitmap, turns
on bits for the fds of interest, and then afterward the whole bitmap has to be
linearly scanned again.  is O(highest file descriptor), while
 is O(number of file descriptors).


(fd[, eventmask])¶
Register a file descriptor with the polling object.  Future calls to the
 method will then check whether the file descriptor has any
pending I/O events.  fd can be either an integer, or an object with a
 method that returns an integer.  File objects
implement , so they can also be used as the argument.
eventmask is an optional bitmask describing the type of events you want to
check for, and can be a combination of the constants ,
, and , described in the table below.  If not
specified, the default value used will check for all 3 types of events.






Constant
Meaning




There is data to read


There is urgent data to read


Ready for output: writing will not block


Error condition of some sort


Hung up


Stream socket peer closed connection, or
shut down writing half of connection


Invalid request: descriptor not open



Registering a file descriptor that’s already registered is not an error, and has
the same effect as registering the descriptor exactly once.



(fd, eventmask)¶
Modifies an already registered fd. This has the same effect as
.  Attempting to modify a file descriptor
that was never registered causes an  exception with errno
 to be raised.



(fd)¶
Remove a file descriptor being tracked by a polling object.  Just like the
 method, fd can be an integer or an object with a
 method that returns an integer.
Attempting to remove a file descriptor that was never registered causes a
 exception to be raised.



([timeout])¶
Polls the set of registered file descriptors, and returns a possibly-empty list
containing  2-tuples for the descriptors that have events or
errors to report. fd is the file descriptor, and event is a bitmask with
bits set for the reported events for that descriptor —  for
waiting input,  to indicate that the descriptor can be written
to, and so forth. An empty list indicates that the call timed out and no file
descriptors had any events to report. If timeout is given, it specifies the
length of time in milliseconds which the system will wait for events before
returning. If timeout is omitted, negative, or , the call will
block until there is an event for this poll object.

Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by
a signal, except if the signal handler raises an exception (see
PEP 475 for the rationale), instead of raising
.


