link:
reference/compound_stmts.html#the-try-statement

docs:

8.4. The  statement¶
The  statement specifies exception handlers and/or cleanup code
for a group of statements:

The  clause(s) specify one or more exception handlers. When no
exception occurs in the  clause, no exception handler is executed.
When an exception occurs in the  suite, a search for an exception
handler is started.  This search inspects the except clauses in turn until one
is found that matches the exception.  An expression-less except clause, if
present, must be last; it matches any exception.  For an except clause with an
expression, that expression is evaluated, and the clause matches the exception
if the resulting object is “compatible” with the exception.  An object is
compatible with an exception if it is the class or a base class of the exception
object or a tuple containing an item compatible with the exception.
If no except clause matches the exception, the search for an exception handler
continues in the surrounding code and on the invocation stack.  [1]
If the evaluation of an expression in the header of an except clause raises an
exception, the original search for a handler is canceled and a search starts for
the new exception in the surrounding code and on the call stack (it is treated
as if the entire  statement raised the exception).
When a matching except clause is found, the exception is assigned to the target
specified after the  keyword in that except clause, if present, and
the except clause’s suite is executed.  All except clauses must have an
executable block.  When the end of this block is reached, execution continues
normally after the entire try statement.  (This means that if two nested
handlers exist for the same exception, and the exception occurs in the try
clause of the inner handler, the outer handler will not handle the exception.)
When an exception has been assigned using , it is cleared at the
end of the except clause.  This is as if


was translated to


This means the exception must be assigned to a different name to be able to
refer to it after the except clause.  Exceptions are cleared because with the
traceback attached to them, they form a reference cycle with the stack frame,
keeping all locals in that frame alive until the next garbage collection occurs.
Before an except clause’s suite is executed, details about the exception are
stored in the  module and can be accessed via .
 returns a 3-tuple consisting of the exception class, the
exception instance and a traceback object (see section The standard type hierarchy) identifying
the point in the program where the exception occurred.  
values are restored to their previous values (before the call) when returning
from a function that handled an exception.
The optional  clause is executed if the control flow leaves the
 suite, no exception was raised, and no ,
, or  statement was executed.  Exceptions in
the  clause are not handled by the preceding 
clauses.
If  is present, it specifies a ‘cleanup’ handler.  The
 clause is executed, including any  and
 clauses.  If an exception occurs in any of the clauses and is
not handled, the exception is temporarily saved. The  clause
is executed.  If there is a saved exception it is re-raised at the end of the
 clause.  If the  clause raises another
exception, the saved exception is set as the context of the new exception.
If the  clause executes a  or 
statement, the saved exception is discarded:


The exception information is not available to the program during execution of
the  clause.
When a ,  or  statement is
executed in the  suite of a …
statement, the  clause is also executed ‘on the way out.’ A
 statement is illegal in the  clause. (The
reason is a problem with the current implementation — this restriction may be
lifted in the future).
The return value of a function is determined by the last 
statement executed.  Since the  clause always executes, a
 statement executed in the  clause will
always be the last one executed:


Additional information on exceptions can be found in section Exceptions,
and information on using the  statement to generate exceptions
may be found in section The raise statement.
