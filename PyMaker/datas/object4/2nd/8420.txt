link:
library/unittest.html#command-line-interface

docs:

Command-Line Interface¶
The unittest module can be used from the command line to run tests from
modules, classes or even individual test methods:


You can pass in a list with any combination of module names, and fully
qualified class or method names.
Test modules can be specified by file path as well:


This allows you to use the shell filename completion to specify the test module.
The file specified must still be importable as a module. The path is converted
to a module name by removing the ‘.py’ and converting path separators into ‘.’.
If you want to execute a test file that isn’t importable as a module you should
execute the file directly instead.
You can run tests with more detail (higher verbosity) by passing in the -v flag:


When executed without arguments Test Discovery is started:


For a list of all the command-line options:



Changed in version 3.2: In earlier versions it was only possible to run individual test methods and
not modules or classes.


Command-line options¶
unittest supports these command-line options:


¶
The standard output and standard error streams are buffered during the test
run. Output during a passing test is discarded. Output is echoed normally
on test fail or error and is added to the failure messages.



¶
Control-C during the test run waits for the current test to end and then
reports all the results so far. A second Control-C raises the normal
 exception.
See Signal Handling for the functions that provide this functionality.



¶
Stop the test run on the first error or failure.



¶
Only run test methods and classes that match the pattern or substring.
This option may be used multiple times, in which case all test cases that
match of the given patterns are included.
Patterns that contain a wildcard character () are matched against the
test name using ; otherwise simple case-sensitive
substring matching is used.
Patterns are matched against the fully qualified test method name as
imported by the test loader.
For example,  matches ,
, but not .



¶
Show local variables in tracebacks.


New in version 3.2: The command-line options ,  and  were added.


New in version 3.5: The command-line option .


New in version 3.7: The command-line option .

The command line can also be used for test discovery, for running all of the
tests in a project or just a subset.

