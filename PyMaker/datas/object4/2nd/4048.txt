link:
library/ctypes.html#fundamental-data-types

docs:

Fundamental data typesÂ¶
 defines a number of primitive C compatible data types:







ctypes type
C type
Python type





bool (1)



1-character bytes object



1-character string



int



int



int



int



int



int



int



int


 or 
int


 or

int



int


 or

int



float



float



float


 (NUL terminated)
bytes object or 


 (NUL terminated)
string or 



int or 




The constructor accepts any object with a truth value.

All these types can be created by calling them with an optional initializer of
the correct type and value:


Since these types are mutable, their value can also be changed afterwards:


Assigning a new value to instances of the pointer types ,
, and  changes the memory location they
point to, not the contents of the memory block (of course not, because Python
bytes objects are immutable):


You should be careful, however, not to pass them to functions expecting pointers
to mutable memory. If you need mutable memory blocks, ctypes has a
 function which creates these in various ways.  The
current memory block contents can be accessed (or changed) with the 
property; if you want to access it as NUL terminated string, use the 
property:


The  function replaces the  function
(which is still available as an alias), as well as the  function
from earlier ctypes releases.  To create a mutable memory block containing
unicode characters of the C type  use the
 function.
