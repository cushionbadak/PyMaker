link:
library/code.html#interactive-interpreter-objects

docs:

Interactive Interpreter Objects¶


(source, filename="<input>", symbol="single")¶
Compile and run some source in the interpreter. Arguments are the same as for
; the default for filename is , and for
symbol is .  One several things can happen:

The input is incorrect;  raised an exception
( or ).  A syntax traceback will be
printed by calling the  method.  
returns .
The input is incomplete, and more input is required; 
returned .  returns .
The input is complete;  returned a code object.  The
code is executed by calling the  (which also handles run-time
exceptions, except for ).  returns .

The return value can be used to decide whether to use  or 
to prompt the next line.



(code)¶
Execute a code object. When an exception occurs,  is called
to display a traceback.  All exceptions are caught except ,
which is allowed to propagate.
A note about : this exception may occur elsewhere in
this code, and may not always be caught.  The caller should be prepared to deal
with it.



(filename=None)¶
Display the syntax error that just occurred.  This does not display a stack
trace because there isn’t one for syntax errors. If filename is given, it is
stuffed into the exception instead of the default filename provided by Python’s
parser, because it always uses  when reading from a string. The
output is written by the  method.



()¶
Display the exception that just occurred.  We remove the first stack item
because it is within the interpreter object implementation. The output is
written by the  method.

Changed in version 3.5: The full chained traceback is displayed instead
of just the primary traceback.




(data)¶
Write a string to the standard error stream (). Derived classes
should override this to provide the appropriate output handling as needed.

