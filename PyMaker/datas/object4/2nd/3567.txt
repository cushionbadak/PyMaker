link:
library/logging.config.html#logging.config.dictConfig

docs:


(config)Â¶

Takes the logging configuration from a dictionary.  The contents of
this dictionary are described in Configuration dictionary schema
below.
If an error is encountered during configuration, this function will
raise a , , 
or  with a suitably descriptive message.  The
following is a (possibly incomplete) list of conditions which will
raise an error:

A  which is not a string or which is a string not
corresponding to an actual logging level.
A  value which is not a boolean.
An id which does not have a corresponding destination.
A non-existent handler id found during an incremental call.
An invalid logger name.
Inability to resolve to an internal or external object.

Parsing is performed by the  class, whose
constructor is passed the dictionary used for configuration, and
has a  method.  The  module
has a callable attribute 
which is initially set to .
You can replace the value of  with a
suitable implementation of your own.
 calls  passing
the specified dictionary, and then calls the  method on
the returned object to put the configuration into effect:


For example, a subclass of  could call
 in its own , then
set up custom prefixes which would be usable in the subsequent
 call.  would be bound to
this new subclass, and then  could be called exactly as
in the default, uncustomized state.


New in version 3.2.

