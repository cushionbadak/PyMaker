link:
library/pickletools.html#programmatic-interface

docs:

Programmatic Interface¶


(pickle, out=None, memo=None, indentlevel=4, annotate=0)¶
Outputs a symbolic disassembly of the pickle to the file-like
object out, defaulting to .  pickle can be a
string or a file-like object.  memo can be a Python dictionary
that will be used as the pickle’s memo; it can be used to perform
disassemblies across multiple pickles created by the same
pickler. Successive levels, indicated by  opcodes in the
stream, are indented by indentlevel spaces.  If a nonzero value
is given to annotate, each opcode in the output is annotated with
a short description.  The value of annotate is used as a hint for
the column where annotation should start.

New in version 3.2: The annotate argument.




(pickle)¶
Provides an iterator over all of the opcodes in a pickle, returning a
sequence of  triples.  opcode is an instance of an
 class; arg is the decoded value, as a Python object, of
the opcode’s argument; pos is the position at which this opcode is located.
pickle can be a string or a file-like object.



(picklestring)¶
Returns a new equivalent pickle string after eliminating unused 
opcodes. The optimized pickle is shorter, takes less transmission time,
requires less storage space, and unpickles more efficiently.

