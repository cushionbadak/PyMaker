link:
library/socket.html#socket.getaddrinfo

docs:


(host, port, family=0, type=0, proto=0, flags=0)¶
Translate the host/port argument into a sequence of 5-tuples that contain
all the necessary arguments for creating a socket connected to that service.
host is a domain name, a string representation of an IPv4/v6 address
or . port is a string service name such as , a numeric
port number or .  By passing  as the value of host
and port, you can pass  to the underlying C API.
The family, type and proto arguments can be optionally specified
in order to narrow the list of addresses returned.  Passing zero as a
value for each of these arguments selects the full range of results.
The flags argument can be one or several of the  constants,
and will influence how results are computed and returned.
For example,  will disable domain name resolution
and will raise an error if host is a domain name.
The function returns a list of 5-tuples with the following structure:

In these tuples, family, type, proto are all integers and are
meant to be passed to the  function.  canonname will be
a string representing the canonical name of the host if
 is part of the flags argument; else canonname
will be empty.  sockaddr is a tuple describing a socket address, whose
format depends on the returned family (a  2-tuple for
, a  4-tuple for
), and is meant to be passed to the 
method.
The following example fetches address information for a hypothetical TCP
connection to  on port 80 (results may differ on your
system if IPv6 isn’t enabled):



Changed in version 3.2: parameters can now be passed using keyword arguments.


Changed in version 3.7: for IPv6 multicast addresses, string representing an address will not
contain  part.

