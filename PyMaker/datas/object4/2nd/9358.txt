link:
library/contextlib.html#using-a-context-manager-as-a-function-decorator

docs:

Using a context manager as a function decorator¶
 makes it possible to use a context manager in
both an ordinary  statement and also as a function decorator.
For example, it is sometimes useful to wrap functions or groups of statements
with a logger that can track the time of entry and time of exit.  Rather than
writing both a function decorator and a context manager for the task,
inheriting from  provides both capabilities in a
single definition:


Instances of this class can be used as both a context manager:


And also as a function decorator:


Note that there is one additional limitation when using context managers
as function decorators: there’s no way to access the return value of
. If that value is needed, then it is still necessary to use
an explicit  statement.

See also

PEP 343 - The “with” statement
The specification, background, and examples for the Python 
statement.


