link:
reference/import.html#submodules

docs:

5.4.2. Submodules¶
When a submodule is loaded using any mechanism (e.g.  APIs, the
 or  statements, or built-in ) a
binding is placed in the parent module’s namespace to the submodule object.
For example, if package  has a submodule , after importing
,  will have an attribute  which is bound to the
submodule.  Let’s say you have the following directory structure:


and  has the following lines in it:


then executing the following puts a name binding to  and  in the
 module:


Given Python’s familiar name binding rules this might seem surprising, but
it’s actually a fundamental feature of the import system.  The invariant
holding is that if you have  and
 (as you would after the above import), the latter
must appear as the  attribute of the former.
