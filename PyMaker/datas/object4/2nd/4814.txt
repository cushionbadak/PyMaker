link:
library/asyncio-eventloop.html#working-with-pipes

docs:

Working with pipes¶


coroutine (protocol_factory, pipe)¶
Register the read end of pipe in the event loop.
protocol_factory must be a callable returning an
asyncio protocol implementation.
pipe is a file-like object.
Return pair , where transport supports
the  interface and protocol is an object
instantiated by the protocol_factory.
With  event loop, the pipe is set to
non-blocking mode.



coroutine (protocol_factory, pipe)¶
Register the write end of pipe in the event loop.
protocol_factory must be a callable returning an
asyncio protocol implementation.
pipe is file-like object.
Return pair , where transport supports
 interface and protocol is an object
instantiated by the protocol_factory.
With  event loop, the pipe is set to
non-blocking mode.


Note
 does not support the above methods on
Windows.  Use  instead for Windows.


See also
The  and
 methods.

