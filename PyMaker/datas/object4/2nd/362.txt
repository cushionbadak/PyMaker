link:
library/constants.html

docs:


Built-in Constants¶
A small number of constants live in the built-in namespace.  They are:


¶
The false value of the  type. Assignments to 
are illegal and raise a .



¶
The true value of the  type. Assignments to 
are illegal and raise a .



¶
The sole value of the type .   is frequently used to
represent the absence of a value, as when default arguments are not passed to a
function. Assignments to  are illegal and raise a .



¶
Special value which should be returned by the binary special methods
(e.g. , , , ,
etc.) to indicate that the operation is not implemented with respect to
the other type; may be returned by the in-place binary special methods
(e.g. , , etc.) for the same purpose.
Its truth value is true.

Note
When a binary (or in-place) method returns  the
interpreter will try the reflected operation on the other type (or some
other fallback, depending on the operator).  If all attempts return
, the interpreter will raise an appropriate exception.
Incorrectly returning  will result in a misleading
error message or the  value being returned to Python code.
See Implementing the arithmetic operations for examples.


Note
 and  are not interchangeable,
even though they have similar names and purposes.
See  for details on when to use it.




¶
The same as the ellipsis literal “”.  Special value used mostly in conjunction
with extended slicing syntax for user-defined container data types.



¶
This constant is true if Python was not started with an  option.
See also the  statement.


Note
The names , ,  and 
cannot be reassigned (assignments to them, even as an attribute name, raise
), so they can be considered “true” constants.


Constants added by the  module¶
The  module (which is imported automatically during startup, except
if the  command-line option is given) adds several constants to the
built-in namespace.  They are useful for the interactive interpreter shell and
should not be used in programs.


(code=None)¶

(code=None)¶
Objects that when printed, print a message like “Use quit() or Ctrl-D
(i.e. EOF) to exit”, and when called, raise  with the
specified exit code.



¶

¶
Objects that when printed or called, print the text of copyright or
credits, respectively.



¶
Object that when printed, prints the message “Type license() to see the
full license text”, and when called, displays the full license text in a
pager-like fashion (one screen at a time).



