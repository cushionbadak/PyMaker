link:
library/email.headerregistry.html#email.headerregistry.HeaderRegistry

docs:


class (base_class=BaseHeader, default_class=UnstructuredHeader, use_default_map=True)¶
This is the factory used by  by default.
 builds the class used to create a header instance
dynamically, using base_class and a specialized class retrieved from a
registry that it holds.  When a given header name does not appear in the
registry, the class specified by default_class is used as the specialized
class.  When use_default_map is  (the default), the standard
mapping of header names to classes is copied in to the registry during
initialization.  base_class is always the last class in the generated
class’s  list.
The default mappings are:





subject:UniqueUnstructuredHeader

date:UniqueDateHeader

resent-date:DateHeader

orig-date:UniqueDateHeader

sender:UniqueSingleAddressHeader

resent-sender:SingleAddressHeader

to:UniqueAddressHeader

resent-to:AddressHeader

cc:UniqueAddressHeader

resent-cc:AddressHeader

from:UniqueAddressHeader

resent-from:AddressHeader

reply-to:UniqueAddressHeader




 has the following methods:


(self, name, cls)¶
name is the name of the header to be mapped.  It will be converted to
lower case in the registry.  cls is the specialized class to be used,
along with base_class, to create the class used to instantiate headers
that match name.



(name)¶
Construct and return a class to handle creating a name header.



(name, value)¶
Retrieves the specialized header associated with name from the
registry (using default_class if name does not appear in the
registry) and composes it with base_class to produce a class,
calls the constructed class’s constructor, passing it the same
argument list, and finally returns the class instance created thereby.

