link:
library/turtle.html#using-events

docs:

Using events¶


(fun, btn=1, add=None)¶




Parameters:
fun – a function with two arguments which will be called with the
coordinates of the clicked point on the canvas
btn – number of the mouse-button, defaults to 1 (left mouse button)
add –  or  – if , a new binding will be
added, otherwise it will replace a former binding





Bind fun to mouse-click events on this turtle.  If fun is ,
existing bindings are removed.  Example for the anonymous turtle, i.e. the
procedural way:





(fun, btn=1, add=None)¶




Parameters:
fun – a function with two arguments which will be called with the
coordinates of the clicked point on the canvas
btn – number of the mouse-button, defaults to 1 (left mouse button)
add –  or  – if , a new binding will be
added, otherwise it will replace a former binding





Bind fun to mouse-button-release events on this turtle.  If fun is
, existing bindings are removed.





(fun, btn=1, add=None)¶




Parameters:
fun – a function with two arguments which will be called with the
coordinates of the clicked point on the canvas
btn – number of the mouse-button, defaults to 1 (left mouse button)
add –  or  – if , a new binding will be
added, otherwise it will replace a former binding





Bind fun to mouse-move events on this turtle.  If fun is ,
existing bindings are removed.
Remark: Every sequence of mouse-move-events on a turtle is preceded by a
mouse-click event on that turtle.


Subsequently, clicking and dragging the Turtle will move it across
the screen thereby producing handdrawings (if pen is down).

