link:
library/io.html#buffered-streams

docs:

Buffered Streams¶
Buffered I/O streams provide a higher-level interface to an I/O device
than raw I/O does.


class ([initial_bytes])¶
A stream implementation using an in-memory bytes buffer.  It inherits
.  The buffer is discarded when the
 method is called.
The optional argument initial_bytes is a bytes-like object that
contains initial data.
 provides or overrides these methods in addition to those
from  and :


()¶
Return a readable and writable view over the contents of the buffer
without copying them.  Also, mutating the view will transparently
update the contents of the buffer:



Note
As long as the view exists, the  object cannot be
resized or closed.


New in version 3.2.




()¶
Return  containing the entire contents of the buffer.



([size])¶
In , this is the same as .

Changed in version 3.7: The size argument is now optional.




(b)¶
In , this is the same as .

New in version 3.5.





class (raw, buffer_size=DEFAULT_BUFFER_SIZE)¶
A buffer providing higher-level access to a readable, sequential
 object.  It inherits .
When reading data from this object, a larger amount of data may be
requested from the underlying raw stream, and kept in an internal buffer.
The buffered data can then be returned directly on subsequent reads.
The constructor creates a  for the given readable
raw stream and buffer_size.  If buffer_size is omitted,
 is used.
 provides or overrides these methods in addition to
those from  and :


([size])¶
Return bytes from the stream without advancing the position.  At most one
single read on the raw stream is done to satisfy the call. The number of
bytes returned may be less or more than requested.



([size])¶
Read and return size bytes, or if size is not given or negative, until
EOF or if the read call would block in non-blocking mode.



([size])¶
Read and return up to size bytes with only one call on the raw stream.
If at least one byte is buffered, only buffered bytes are returned.
Otherwise, one raw stream read call is made.

Changed in version 3.7: The size argument is now optional.





class (raw, buffer_size=DEFAULT_BUFFER_SIZE)¶
A buffer providing higher-level access to a writeable, sequential
 object.  It inherits .
When writing to this object, data is normally placed into an internal
buffer.  The buffer will be written out to the underlying 
object under various conditions, including:

when the buffer gets too small for all pending data;
when  is called;
when a  is requested (for  objects);
when the  object is closed or destroyed.

The constructor creates a  for the given writeable
raw stream.  If the buffer_size is not given, it defaults to
.
 provides or overrides these methods in addition to
those from  and :


()¶
Force bytes held in the buffer into the raw stream.  A
 should be raised if the raw stream blocks.



(b)¶
Write the bytes-like object, b, and return the
number of bytes written.  When in non-blocking mode, a
 is raised if the buffer needs to be written out but
the raw stream blocks.




class (raw, buffer_size=DEFAULT_BUFFER_SIZE)¶
A buffered interface to random access streams.  It inherits
 and , and further supports
 and  functionality.
The constructor creates a reader and writer for a seekable raw stream, given
in the first argument.  If the buffer_size is omitted it defaults to
.
 is capable of anything  or
 can do.



class (reader, writer, buffer_size=DEFAULT_BUFFER_SIZE)¶
A buffered I/O object combining two unidirectional 
objects – one readable, the other writeable – into a single bidirectional
endpoint.  It inherits .
reader and writer are  objects that are readable and
writeable respectively.  If the buffer_size is omitted it defaults to
.
 implements all of ’s methods
except for , which raises
.

Warning
 does not attempt to synchronize accesses to
its underlying raw streams.  You should not pass it the same object
as reader and writer; use  instead.


