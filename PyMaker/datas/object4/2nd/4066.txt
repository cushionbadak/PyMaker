link:
library/ctypes.html#finding-shared-libraries

docs:

Finding shared librariesÂ¶
When programming in a compiled language, shared libraries are accessed when
compiling/linking a program, and when the program is run.
The purpose of the  function is to locate a library in a way
similar to what the compiler or runtime loader does (on platforms with several
versions of a shared library the most recent should be loaded), while the ctypes
library loaders act like when a program is run, and call the runtime loader
directly.
The  module provides a function which can help to determine
the library to load.


(name)
Try to find a library and return a pathname.  name is the library name without
any prefix like lib, suffix like ,  or version number (this
is the form used for the posix linker option ).  If no library can
be found, returns .

The exact functionality is system dependent.
On Linux,  tries to run external programs
(, ,  and ) to find the library file.
It returns the filename of the library file.

Changed in version 3.6: On Linux, the value of the environment variable  is used
when searching for libraries, if a library cannot be found by any other means.

Here are some examples:


On OS X,  tries several predefined naming schemes and paths
to locate the library, and returns a full pathname if successful:


On Windows,  searches along the system search path, and
returns the full pathname, but since there is no predefined naming scheme a call
like  will fail and return .
If wrapping a shared library with , it may be better to determine
the shared library name at development time, and hardcode that into the wrapper
module instead of using  to locate the library at runtime.
