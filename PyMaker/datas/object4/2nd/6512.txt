link:
library/webbrowser.html

docs:


 — Convenient Web-browser controller¶
Source code: Lib/webbrowser.py

The  module provides a high-level interface to allow displaying
Web-based documents to users. Under most circumstances, simply calling the
 function from this module will do the right thing.
Under Unix, graphical browsers are preferred under X11, but text-mode browsers
will be used if graphical browsers are not available or an X11 display isn’t
available.  If text-mode browsers are used, the calling process will block until
the user exits the browser.
If the environment variable  exists, it is interpreted as the
-separated list of browsers to try ahead of the platform
defaults.  When the value of a list part contains the string , then it is
interpreted as a literal browser command line to be used with the argument URL
substituted for ; if the part does not contain , it is simply
interpreted as the name of the browser to launch. [1]
For non-Unix platforms, or when a remote browser is available on Unix, the
controlling process will not wait for the user to finish with the browser, but
allow the remote browser to maintain its own windows on the display.  If remote
browsers are not available on Unix, the controlling process will launch a new
browser and wait.
The script webbrowser can be used as a command-line interface for the
module. It accepts a URL as the argument. It accepts the following optional
parameters:  opens the URL in a new browser window, if possible;
 opens the URL in a new browser page (“tab”). The options are,
naturally, mutually exclusive.  Usage example:


The following exception is defined:


exception ¶
Exception raised when a browser control error occurs.

The following functions are defined:


(url, new=0, autoraise=True)¶
Display url using the default browser. If new is 0, the url is opened
in the same browser window if possible.  If new is 1, a new browser window
is opened if possible.  If new is 2, a new browser page (“tab”) is opened
if possible.  If autoraise is , the window is raised if possible
(note that under many window managers this will occur regardless of the
setting of this variable).
Note that on some platforms, trying to open a filename using this function,
may work and start the operating system’s associated program.  However, this
is neither supported nor portable.



(url)¶
Open url in a new window of the default browser, if possible, otherwise, open
url in the only browser window.



(url)¶
Open url in a new page (“tab”) of the default browser, if possible, otherwise
equivalent to .



(using=None)¶
Return a controller object for the browser type using.  If using is
, return a controller for a default browser appropriate to the
caller’s environment.



(name, constructor, instance=None, *, preferred=False)¶
Register the browser type name.  Once a browser type is registered, the
 function can return a controller for that browser type.  If
instance is not provided, or is , constructor will be called without
parameters to create an instance when needed.  If instance is provided,
constructor will never be called, and may be .
Setting preferred to  makes this browser a preferred result for
a  call with no argument.  Otherwise, this entry point is only
useful if you plan to either set the  variable or call
 with a nonempty argument matching the name of a handler you
declare.

Changed in version 3.7: preferred keyword-only parameter was added.


A number of browser types are predefined.  This table gives the type names that
may be passed to the  function and the corresponding instantiations
for the controller classes, all defined in this module.







Type Name
Class Name
Notes





 



 



 



 



 



 



(1)



(1)



(1)



 



 



 



 



 



 



 



(2)



(3)



(3)



 



 



 



 



Notes:

“Konqueror” is the file manager for the KDE desktop environment for Unix, and
only makes sense to use if KDE is running.  Some way of reliably detecting KDE
would be nice; the  variable is not sufficient.  Note also that
the name “kfm” is used even when using the konqueror command with KDE
2 — the implementation selects the best strategy for running Konqueror.
Only on Windows platforms.
Only on Mac OS X platform.


New in version 3.3: Support for Chrome/Chromium has been added.

Here are some simple examples:



Browser Controller Objects¶
Browser controllers provide these methods which parallel three of the
module-level convenience functions:


(url, new=0, autoraise=True)¶
Display url using the browser handled by this controller. If new is 1, a new
browser window is opened if possible. If new is 2, a new browser page (“tab”)
is opened if possible.



(url)¶
Open url in a new window of the browser handled by this controller, if
possible, otherwise, open url in the only browser window.  Alias
.



(url)¶
Open url in a new page (“tab”) of the browser handled by this controller, if
possible, otherwise equivalent to .

Footnotes



[1]Executables named here without a full path will be searched in the
directories given in the  environment variable.




