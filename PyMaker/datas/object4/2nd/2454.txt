link:
library/sqlite3.html#controlling-transactions

docs:

Controlling Transactions¶
The underlying  library operates in  mode by default,
but the Python  module by default does not.
 mode means that statements that modify the database take effect
immediately.  A  or  statement disables 
mode, and a , a , or a  that ends the
outermost transaction, turns  mode back on.
The Python  module by default issues a  statement
implicitly before a Data Modification Language (DML) statement (i.e.
///).
You can control which kind of  statements  implicitly
executes via the isolation_level parameter to the 
call, or via the  property of connections.
If you specify no isolation_level, a plain  is used, which is
equivalent to specifying .  Other possible values are 
and .
You can disable the  module’s implicit transaction management by
setting  to .  This will leave the underlying
 library operating in  mode.  You can then completely
control the transaction state by explicitly issuing , ,
, and  statements in your code.

Changed in version 3.6:  used to implicitly commit an open transaction before DDL
statements.  This is no longer the case.

