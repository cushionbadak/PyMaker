link:
library/os.html#os.stat_result

docs:


class ¶
Object whose attributes correspond roughly to the members of the
 structure. It is used for the result of ,
 and .
Attributes:


¶
File mode: file type and file mode bits (permissions).



¶
Platform dependent, but if non-zero, uniquely identifies the
file for a given value of . Typically:

the inode number on Unix,
the file index on
Windows




¶
Identifier of the device on which this file resides.



¶
Number of hard links.



¶
User identifier of the file owner.



¶
Group identifier of the file owner.



¶
Size of the file in bytes, if it is a regular file or a symbolic link.
The size of a symbolic link is the length of the pathname it contains,
without a terminating null byte.

Timestamps:


¶
Time of most recent access expressed in seconds.



¶
Time of most recent content modification expressed in seconds.



¶
Platform dependent:

the time of most recent metadata change on Unix,
the time of creation on Windows, expressed in seconds.




¶
Time of most recent access expressed in nanoseconds as an integer.



¶
Time of most recent content modification expressed in nanoseconds as an
integer.



¶
Platform dependent:

the time of most recent metadata change on Unix,
the time of creation on Windows, expressed in nanoseconds as an
integer.



Note
The exact meaning and resolution of the ,
, and  attributes depend on the operating
system and the file system. For example, on Windows systems using the FAT
or FAT32 file systems,  has 2-second resolution, and
 has only 1-day resolution.  See your operating system
documentation for details.
Similarly, although , ,
and  are always expressed in nanoseconds, many
systems do not provide nanosecond precision.  On systems that do
provide nanosecond precision, the floating-point object used to
store , , and 
cannot preserve all of it, and as such will be slightly inexact.
If you need the exact timestamps you should always use
, , and .

On some Unix systems (such as Linux), the following attributes may also be
available:


¶
Number of 512-byte blocks allocated for file.
This may be smaller than /512 when the file has holes.



¶
“Preferred” blocksize for efficient file system I/O. Writing to a file in
smaller chunks may cause an inefficient read-modify-rewrite.



¶
Type of device if an inode device.



¶
User defined flags for file.

On other Unix systems (such as FreeBSD), the following attributes may be
available (but may be only filled out if root tries to use them):


¶
File generation number.



¶
Time of file creation.

On Solaris and derivatives, the following attributes may also be
available:


¶
String that uniquely identifies the type of the filesystem that
contains the file.

On Mac OS systems, the following attributes may also be available:


¶
Real size of the file.



¶
Creator of the file.



¶
File type.

On Windows systems, the following attribute is also available:


¶
Windows file attributes:  member of the
 structure returned by
. See the 
constants in the  module.

The standard module  defines functions and constants that are
useful for extracting information from a  structure. (On
Windows, some items are filled with dummy values.)
For backward compatibility, a  instance is also
accessible as a tuple of at least 10 integers giving the most important (and
portable) members of the  structure, in the order
, , , ,
, , , ,
, . More items may be added at the end by
some implementations. For compatibility with older Python versions,
accessing  as a tuple always returns integers.

New in version 3.3: Added the , , and
 members.


New in version 3.5: Added the  member on Windows.


Changed in version 3.5: Windows now returns the file index as  when
available.


New in version 3.7: Added the  member to Solaris/derivatives.

