link:
library/weakref.html#weakref.ref

docs:


class (object[, callback])¶
Return a weak reference to object.  The original object can be retrieved by
calling the reference object if the referent is still alive; if the referent is
no longer alive, calling the reference object will cause  to be
returned.  If callback is provided and not , and the returned
weakref object is still alive, the callback will be called when the object is
about to be finalized; the weak reference object will be passed as the only
parameter to the callback; the referent will no longer be available.
It is allowable for many weak references to be constructed for the same object.
Callbacks registered for each weak reference will be called from the most
recently registered callback to the oldest registered callback.
Exceptions raised by the callback will be noted on the standard error output,
but cannot be propagated; they are handled in exactly the same way as exceptions
raised from an object’s  method.
Weak references are hashable if the object is hashable.  They will
maintain their hash value even after the object was deleted.  If
 is called the first time only after the object was deleted,
the call will raise .
Weak references support tests for equality, but not ordering.  If the referents
are still alive, two references have the same equality relationship as their
referents (regardless of the callback).  If either referent has been deleted,
the references are equal only if the reference objects are the same object.
This is a subclassable type rather than a factory function.


¶
This read-only attribute returns the callback currently associated to the
weakref.  If there is no callback or if the referent of the weakref is
no longer alive then this attribute will have value .


Changed in version 3.4: Added the  attribute.

