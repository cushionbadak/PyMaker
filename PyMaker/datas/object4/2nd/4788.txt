link:
library/asyncio-eventloop.html#asyncio.loop.create_connection

docs:


coroutine (protocol_factory, host=None, port=None, *, ssl=None, family=0, proto=0, flags=0, sock=None, local_addr=None, server_hostname=None, ssl_handshake_timeout=None)¶
Open a streaming transport connection to a given
address specified by host and port.
The socket family can be either  or
 depending on host (or the family
argument, if provided).
The socket type will be .
protocol_factory must be a callable returning an
asyncio protocol implementation.
This method will try to establish the connection in the background.
When successful, it returns a  pair.
The chronological synopsis of the underlying operation is as follows:

The connection is established and a transport
is created for it.
protocol_factory is called without arguments and is expected to
return a protocol instance.
The protocol instance is coupled with the transport by calling its
 method.
A  tuple is returned on success.

The created transport is an implementation-dependent bidirectional
stream.
Other arguments:

ssl: if given and not false, a SSL/TLS transport is created
(by default a plain TCP transport is created).  If ssl is
a  object, this context is used to create
the transport; if ssl is , a default context returned
from  is used.

See also
SSL/TLS security considerations


server_hostname sets or overrides the hostname that the target
server’s certificate will be matched against.  Should only be passed
if ssl is not .  By default the value of the host argument
is used.  If host is empty, there is no default and you must pass a
value for server_hostname.  If server_hostname is an empty
string, hostname matching is disabled (which is a serious security
risk, allowing for potential man-in-the-middle attacks).

family, proto, flags are the optional address family, protocol
and flags to be passed through to getaddrinfo() for host resolution.
If given, these should all be integers from the corresponding
 module constants.

sock, if given, should be an existing, already connected
 object to be used by the transport.
If sock is given, none of host, port, family, proto, flags
and local_addr should be specified.

local_addr, if given, is a  tuple used
to bind the socket to locally.  The local_host and local_port
are looked up using , similarly to host and port.

ssl_handshake_timeout is (for a TLS connection) the time in seconds
to wait for the TLS handshake to complete before aborting the connection.
 seconds if  (default).



New in version 3.7: The ssl_handshake_timeout parameter.


Changed in version 3.6: The socket option  is set by default
for all TCP connections.


Changed in version 3.5: Added support for SSL/TLS in .


See also
The  function is a high-level alternative
API.  It returns a pair of (, )
that can be used directly in async/await code.

