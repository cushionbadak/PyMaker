link:
library/turtle.html#using-screen-events

docs:

Using screen events¶


(xdummy=None, ydummy=None)¶
Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments
are provided in order to be able to pass  to the onclick method.



(fun, key)¶

(fun, key)¶




Parameters:
fun – a function with no arguments or 
key – a string: key (e.g. “a”) or key-symbol (e.g. “space”)





Bind fun to key-release event of key.  If fun is , event bindings
are removed. Remark: in order to be able to register key-events, TurtleScreen
must have the focus. (See method .)





(fun, key=None)¶




Parameters:
fun – a function with no arguments or 
key – a string: key (e.g. “a”) or key-symbol (e.g. “space”)





Bind fun to key-press event of key if key is given,
or to any key-press-event if no key is given.
Remark: in order to be able to register key-events, TurtleScreen
must have focus. (See method .)





(fun, btn=1, add=None)

(fun, btn=1, add=None)¶




Parameters:
fun – a function with two arguments which will be called with the
coordinates of the clicked point on the canvas
btn – number of the mouse-button, defaults to 1 (left mouse button)
add –  or  – if , a new binding will be
added, otherwise it will replace a former binding





Bind fun to mouse-click events on this screen.  If fun is ,
existing bindings are removed.
Example for a TurtleScreen instance named  and a Turtle instance
named turtle:



Note
This TurtleScreen method is available as a global function only under the
name .  The global function  is another one
derived from the Turtle method .




(fun, t=0)¶




Parameters:
fun – a function with no arguments
t – a number >= 0





Install a timer that calls fun after t milliseconds.





()¶

()¶
Starts event loop - calling Tkinter’s mainloop function.
Must be the last statement in a turtle graphics program.
Must not be used if a script is run from within IDLE in -n mode
(No subprocess) - for interactive use of turtle graphics.



