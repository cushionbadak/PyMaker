link:
library/asyncio-subprocess.html#creating-subprocesses

docs:

Creating Subprocesses¶


coroutine (program, *args, stdin=None, stdout=None, stderr=None, loop=None, limit=None, **kwds)¶
Create a subprocess.
The limit argument sets the buffer limit for 
wrappers for  and 
(if  is passed to stdout and stderr arguments).
Return a  instance.
See the documentation of  for other
parameters.



coroutine (cmd, stdin=None, stdout=None, stderr=None, loop=None, limit=None, **kwds)¶
Run the cmd shell command.
The limit argument sets the buffer limit for 
wrappers for  and 
(if  is passed to stdout and stderr arguments).
Return a  instance.
See the documentation of  for other
parameters.


Important
It is the application’s responsibility to ensure that all whitespace and
special characters are quoted appropriately to avoid shell injection
vulnerabilities. The  function can be used to properly
escape whitespace and special shell characters in strings that are going
to be used to construct shell commands.


Note
The default asyncio event loop implementation on Windows does not
support subprocesses. Subprocesses are available for Windows if a
 is used.
See Subprocess Support on Windows
for details.


See also
asyncio also has the following low-level APIs to work with subprocesses:
, ,
, ,
as well as the Subprocess Transports
and Subprocess Protocols.

