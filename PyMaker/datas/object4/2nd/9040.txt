link:
library/trace.html#command-line-usage

docs:

Command-Line Usage¶
The  module can be invoked from the command line.  It can be as
simple as


The above will execute  and generate annotated listings of
all Python modules imported during the execution into the current directory.


¶
Display usage and exit.



¶
Display the version of the module and exit.


Main options¶
At least one of the following options must be specified when invoking
.  The  option is mutually exclusive with
the  and  options. When
 is provided, neither  nor
 are accepted, and vice versa.


¶
Produce a set of annotated listing files upon program completion that shows
how many times each statement was executed.  See also
,  and
 below.



¶
Display lines as they are executed.



¶
Display the functions executed by running the program.



¶
Produce an annotated list from an earlier program run that used the
 and  option.  This does not
execute any code.



¶
Display the calling relationships exposed by running the program.



Modifiers¶


¶
Name of a file to accumulate counts over several tracing runs.  Should be
used with the  option.



¶
Directory where the report files go.  The coverage report for
 is written to file .



¶
When generating annotated listings, mark lines which were not executed with
.



¶
When using  or , write a brief
summary to stdout for each file processed.



¶
Do not generate annotated listings.  This is useful if you intend to make
several runs with , and then produce a single set of
annotated listings at the end.



¶
Prefix each line with the time since the program started.  Only used while
tracing.



Filters¶
These options may be repeated multiple times.


¶
Ignore each of the given module names and its submodules (if it is a
package).  The argument can be a list of names separated by a comma.



¶
Ignore all modules and packages in the named directory and subdirectories.
The argument can be a list of directories separated by .


