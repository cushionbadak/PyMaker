link:
library/unittest.mock.html#patch-methods-start-and-stop

docs:

patch methods: start and stop¶
All the patchers have  and  methods. These make it simpler to do
patching in  methods or where you want to do multiple patches without
nesting decorators or with statements.
To use them call ,  or  as
normal and keep a reference to the returned  object. You can then
call  to put the patch in place and  to undo it.
If you are using  to create a mock for you then it will be returned by
the call to .


A typical use case for this might be for doing multiple patches in the 
method of a :



Caution
If you use this technique you must ensure that the patching is “undone” by
calling . This can be fiddlier than you might think, because if an
exception is raised in the  then  is not called.
 makes this easier:


As an added bonus you no longer need to keep a reference to the 
object.

It is also possible to stop all patches which have been started by using
.


()¶
Stop all active patches. Only stops patches started with .

