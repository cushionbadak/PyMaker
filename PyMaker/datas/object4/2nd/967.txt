link:
library/struct.html#classes

docs:

Classes¶
The  module also defines the following type:


class (format)¶
Return a new Struct object which writes and reads binary data according to
the format string format.  Creating a Struct object once and calling its
methods is more efficient than calling the  functions with the
same format since the format string only needs to be compiled once.

Note
The compiled versions of the most recent format strings passed to
 and the module-level functions are cached, so programs
that use only a few format strings needn’t worry about reusing a single
 instance.

Compiled Struct objects support the following methods and attributes:


(v1, v2, ...)¶
Identical to the  function, using the compiled format.
( will equal .)



(buffer, offset, v1, v2, ...)¶
Identical to the  function, using the compiled format.



(buffer)¶
Identical to the  function, using the compiled format.
The buffer’s size in bytes must equal .



(buffer, offset=0)¶
Identical to the  function, using the compiled format.
The buffer’s size in bytes, minus offset, must be at least
.



(buffer)¶
Identical to the  function, using the compiled format.
The buffer’s size in bytes must be a multiple of .

New in version 3.4.




¶
The format string used to construct this Struct object.

Changed in version 3.7: The format string type is now  instead of .




¶
The calculated size of the struct (and hence of the bytes object produced
by the  method) corresponding to .


