link:
library/tkinter.html#tkinter-modules

docs:

Tkinter Modules¶
Most of the time,  is all you really need, but a number of
additional modules are available as well.  The Tk interface is located in a
binary module named . This module contains the low-level
interface to Tk, and should never be used directly by application programmers.
It is usually a shared library (or DLL), but might in some cases be statically
linked with the Python interpreter.
In addition to the Tk interface module,  includes a number of
Python modules,  being one of the most important.
Importing  will automatically import ,
so, usually, to use Tkinter all you need is a simple import statement:


Or, more often:




class (screenName=None, baseName=None, className='Tk', useTk=1)¶
The  class is instantiated without arguments. This creates a toplevel
widget of Tk which usually is the main window of an application. Each instance
has its own associated Tcl interpreter.



(screenName=None, baseName=None, className='Tk', useTk=0)¶
The  function is a factory function which creates an object much like
that created by the  class, except that it does not initialize the Tk
subsystem.  This is most often useful when driving the Tcl interpreter in an
environment where one doesn’t want to create extraneous toplevel windows, or
where one cannot (such as Unix/Linux systems without an X server).  An object
created by the  object can have a Toplevel window created (and the Tk
subsystem initialized) by calling its  method.

Other modules that provide Tk support include:


Text widget with a vertical scroll bar built in.

Dialog to let the user choose a color.

Base class for the dialogs defined in the other modules listed here.

Common dialogs to allow the user to specify a file to open or save.

Utilities to help work with fonts.

Access to standard Tk dialog boxes.

Basic dialogs and convenience functions.

Drag-and-drop support for . This is experimental and should
become deprecated when it is replaced  with the Tk DND.

Turtle graphics in a Tk window.

