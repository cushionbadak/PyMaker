link:
reference/simple_stmts.html#the-raise-statement

docs:

7.8. The  statement¶

If no expressions are present,  re-raises the last exception
that was active in the current scope.  If no exception is active in the current
scope, a  exception is raised indicating that this is an
error.
Otherwise,  evaluates the first expression as the exception
object.  It must be either a subclass or an instance of .
If it is a class, the exception instance will be obtained when needed by
instantiating the class with no arguments.
The type of the exception is the exception instance’s class, the
value is the instance itself.
A traceback object is normally created automatically when an exception is raised
and attached to it as the  attribute, which is writable.
You can create an exception and set your own traceback in one step using the
 exception method (which returns the same exception
instance, with its traceback set to its argument), like so:


The  clause is used for exception chaining: if given, the second
expression must be another exception class or instance, which will then be
attached to the raised exception as the  attribute (which is
writable).  If the raised exception is not handled, both exceptions will be
printed:


A similar mechanism works implicitly if an exception is raised inside an
exception handler or a  clause: the previous exception is then
attached as the new exception’s  attribute:


Exception chaining can be explicitly suppressed by specifying  in
the  clause:


Additional information on exceptions can be found in section Exceptions,
and information about handling exceptions is in section The try statement.

Changed in version 3.3:  is now permitted as  in .


New in version 3.3: The  attribute to suppress automatic display of the
exception context.

