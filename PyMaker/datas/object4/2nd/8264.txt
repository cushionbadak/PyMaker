link:
library/typing.html#typing.Type

docs:


class (Generic[CT_co])¶
A variable annotated with  may accept a value of type . In
contrast, a variable annotated with  may accept values that are
classes themselves – specifically, it will accept the class object of
. For example:


Note that  is covariant:


The fact that  is covariant implies that all subclasses of
 should implement the same constructor signature and class method
signatures as . The type checker should flag violations of this,
but should also allow constructor calls in subclasses that match the
constructor calls in the indicated base class. How the type checker is
required to handle this particular case may change in future revisions of
PEP 484.
The only legal parameters for  are classes, ,
type variables, and unions of any of these types.
For example:


 is equivalent to  which in turn is equivalent
to , which is the root of Python’s metaclass hierarchy.

New in version 3.5.2.

