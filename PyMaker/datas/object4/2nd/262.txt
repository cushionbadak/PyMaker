link:
reference/simple_stmts.html#annotated-assignment-statements

docs:

7.2.2. Annotated assignment statementsÂ¶
Annotation assignment is the combination, in a single
statement, of a variable or attribute annotation and an optional assignment statement:

The difference from normal Assignment statements is that only single target and
only single right hand side value is allowed.
For simple names as assignment targets, if in class or module scope,
the annotations are evaluated and stored in a special class or module
attribute 
that is a dictionary mapping from variable names (mangled if private) to
evaluated annotations. This attribute is writable and is automatically
created at the start of class or module body execution, if annotations
are found statically.
For expressions as assignment targets, the annotations are evaluated if
in class or module scope, but not stored.
If a name is annotated in a function scope, then this name is local for
that scope. Annotations are never evaluated and stored in function scopes.
If the right hand side is present, an annotated
assignment performs the actual assignment before evaluating annotations
(where applicable). If the right hand side is not present for an expression
target, then the interpreter evaluates the target except for the last
 or  call.

See also

PEP 526 - Syntax for Variable Annotations
The proposal that added syntax for annotating the types of variables
(including class variables and instance variables), instead of expressing
them through comments.
PEP 484 - Type hints
The proposal that added the  module to provide a standard
syntax for type annotations that can be used in static analysis tools and
IDEs.


