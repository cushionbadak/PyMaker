link:
library/re.html#re.sub

docs:


(pattern, repl, string, count=0, flags=0)¶
Return the string obtained by replacing the leftmost non-overlapping occurrences
of pattern in string by the replacement repl.  If the pattern isn’t found,
string is returned unchanged.  repl can be a string or a function; if it is
a string, any backslash escapes in it are processed.  That is,  is
converted to a single newline character,  is converted to a carriage return, and
so forth.  Unknown escapes of ASCII letters are reserved for future use and
treated as errors.  Other unknown escapes such as  are left alone.
Backreferences, such
as , are replaced with the substring matched by group 6 in the pattern.
For example:


If repl is a function, it is called for every non-overlapping occurrence of
pattern.  The function takes a single match object
argument, and returns the replacement string.  For example:


The pattern may be a string or a pattern object.
The optional argument count is the maximum number of pattern occurrences to be
replaced; count must be a non-negative integer.  If omitted or zero, all
occurrences will be replaced. Empty matches for the pattern are replaced only
when not adjacent to a previous empty match, so  returns
.
In string-type repl arguments, in addition to the character escapes and
backreferences described above,
 will use the substring matched by the group named , as
defined by the  syntax.  uses the corresponding
group number;  is therefore equivalent to , but isn’t ambiguous
in a replacement such as .   would be interpreted as a
reference to group 20, not a reference to group 2 followed by the literal
character .  The backreference  substitutes in the entire
substring matched by the RE.

Changed in version 3.1: Added the optional flags argument.


Changed in version 3.5: Unmatched groups are replaced with an empty string.


Changed in version 3.6: Unknown escapes in pattern consisting of  and an ASCII letter
now are errors.


Changed in version 3.7: Unknown escapes in repl consisting of  and an ASCII letter
now are errors.


Changed in version 3.7: Empty matches for the pattern are replaced when adjacent to a previous
non-empty match.

