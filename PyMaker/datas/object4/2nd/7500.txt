link:
library/ipaddress.html#other-module-level-functions

docs:

Other Module Level Functions¶
The module also provides the following module level functions:


(address)¶
Represent an address as 4 packed bytes in network (big-endian) order.
address is an integer representation of an IPv4 IP address.  A
 is raised if the integer is negative or too large to be an
IPv4 IP address.





(address)¶
Represent an address as 16 packed bytes in network (big-endian) order.
address is an integer representation of an IPv6 IP address.  A
 is raised if the integer is negative or too large to be an
IPv6 IP address.



(first, last)¶
Return an iterator of the summarized network range given the first and last
IP addresses.  first is the first  or
 in the range and last is the last 
or  in the range.  A  is raised if
first or last are not IP addresses or are not of the same version.  A
 is raised if last is not greater than first or if
first address version is not 4 or 6.





(addresses)¶
Return an iterator of the collapsed  or
 objects.  addresses is an iterator of
 or  objects.  A  is
raised if addresses contains mixed version objects.





(obj)¶
Return a key suitable for sorting between networks and addresses.  Address
and Network objects are not sortable by default; they’re fundamentally
different, so the expression:


doesn’t make sense.  There are some times however, where you may wish to
have  sort these anyway.  If you need to do this, you can use
this function as the key argument to .
obj is either a network or address object.

