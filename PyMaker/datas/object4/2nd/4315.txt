link:
library/multiprocessing.html#multiprocessing.Lock.acquire

docs:


(block=True, timeout=None)Â¶
Acquire a lock, blocking or non-blocking.
With the block argument set to  (the default), the method call
will block until the lock is in an unlocked state, then set it to locked
and return .  Note that the name of this first argument differs
from that in .
With the block argument set to , the method call does not
block.  If the lock is currently in a locked state, return ;
otherwise set the lock to a locked state and return .
When invoked with a positive, floating-point value for timeout, block
for at most the number of seconds specified by timeout as long as
the lock can not be acquired.  Invocations with a negative value for
timeout are equivalent to a timeout of zero.  Invocations with a
timeout value of  (the default) set the timeout period to
infinite.  Note that the treatment of negative or  values for
timeout differs from the implemented behavior in
.  The timeout argument has no practical
implications if the block argument is set to  and is thus
ignored.  Returns  if the lock has been acquired or  if
the timeout period has elapsed.
