link:
library/datetime.html#time-objects

docs:

 Objects¶
A time object represents a (local) time of day, independent of any particular
day, and subject to adjustment via a  object.


class (hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)¶
All arguments are optional.  tzinfo may be , or an instance of a
 subclass.  The remaining arguments may be integers, in the
following ranges:

,
,
,
,
.

If an argument outside those ranges is given,  is raised.  All
default to  except tzinfo, which defaults to .

Class attributes:


¶
The earliest representable , .



¶
The latest representable , .



¶
The smallest possible difference between non-equal  objects,
, although note that arithmetic on
 objects is not supported.

Instance attributes (read-only):


¶
In .



¶
In .



¶
In .



¶
In .



¶
The object passed as the tzinfo argument to the  constructor, or
 if none was passed.



¶
In .  Used to disambiguate wall times during a repeated interval.  (A
repeated interval occurs when clocks are rolled back at the end of daylight saving
time or when the UTC offset for the current zone is decreased for political reasons.)
The value 0 (1) represents the earlier (later) of the two moments with the same wall
time representation.

New in version 3.6.


Supported operations:

comparison of  to , where a is considered less
than b when a precedes b in time.  If one comparand is naive and the other
is aware,  is raised if an order comparison is attempted. For equality
comparisons, naive instances are never equal to aware instances.
If both comparands are aware, and have
the same  attribute, the common  attribute is
ignored and the base times are compared.  If both comparands are aware and
have different  attributes, the comparands are first adjusted by
subtracting their UTC offsets (obtained from ). In order
to stop mixed-type comparisons from falling back to the default comparison by
object address, when a  object is compared to an object of a
different type,  is raised unless the comparison is  or
.  The latter cases return  or , respectively.

Changed in version 3.3: Equality comparisons between naive and aware  instances
don’t raise .


hash, use as dict key

efficient pickling


In boolean contexts, a  object is always considered to be true.

Changed in version 3.5: Before Python 3.5, a  object was considered to be false if it
represented midnight in UTC.  This behavior was considered obscure and
error-prone and has been removed in Python 3.5.  See bpo-13936 for full
details.

Other constructor:


classmethod (time_string)¶
Return a  corresponding to a time_string in one of the
formats emitted by . Specifically, this function supports
strings in the format(s) .

Caution
This does not support parsing arbitrary ISO 8601 strings - it is only intended
as the inverse operation of .


New in version 3.7.


Instance methods:


(hour=self.hour, minute=self.minute, second=self.second, microsecond=self.microsecond, tzinfo=self.tzinfo, * fold=0)¶
Return a  with the same value, except for those attributes given
new values by whichever keyword arguments are specified.  Note that
 can be specified to create a naive  from an
aware , without conversion of the time data.

New in version 3.6: Added the  argument.




(timespec='auto')¶
Return a string representing the time in ISO 8601 format, HH:MM:SS.ffffff or, if
 is 0, HH:MM:SS If  does not return , a
string is appended, giving the UTC offset: HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]
or, if self.microsecond is 0, HH:MM:SS+HH:MM[:SS[.ffffff]].
The optional argument timespec specifies the number of additional
components of the time to include (the default is ).
It can be one of the following:

: Same as  if  is 0,
same as  otherwise.
: Include the  in the two-digit HH format.
: Include  and  in HH:MM format.
: Include , , and 
in HH:MM:SS format.
: Include full time, but truncate fractional second
part to milliseconds. HH:MM:SS.sss format.
: Include full time in HH:MM:SS.ffffff format.


Note
Excluded time components are truncated, not rounded.

 will be raised on an invalid timespec argument.



New in version 3.6: Added the timespec argument.




()¶
For a time t,  is equivalent to .



(format)¶
Return a string representing the time, controlled by an explicit format
string.  For a complete list of formatting directives, see
strftime() and strptime() Behavior.



(format)¶
Same as . This makes it possible to specify a format string
for a  object in formatted string
literals and when using .  For a
complete list of formatting directives, see
strftime() and strptime() Behavior.



()¶
If  is , returns , else returns
, and raises an exception if the latter doesn’t
return  or a  object with magnitude less than one day.

Changed in version 3.7: The UTC offset is not restricted to a whole number of minutes.




()¶
If  is , returns , else returns
, and raises an exception if the latter doesn’t return
, or a  object with magnitude less than one day.

Changed in version 3.7: The DST offset is not restricted to a whole number of minutes.




()¶
If  is , returns , else returns
, or raises an exception if the latter doesn’t
return  or a string object.

Example:


