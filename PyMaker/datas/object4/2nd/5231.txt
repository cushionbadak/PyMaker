link:
library/ssl.html#ssl.SSLSocket.getpeercert

docs:


(binary_form=False)¶
If there is no certificate for the peer on the other end of the connection,
return .  If the SSL handshake hasn’t been done yet, raise
.
If the  parameter is , and a certificate was
received from the peer, this method returns a  instance.  If the
certificate was not validated, the dict is empty.  If the certificate was
validated, it returns a dict with several keys, amongst them 
(the principal for which the certificate was issued) and 
(the principal issuing the certificate).  If a certificate contains an
instance of the Subject Alternative Name extension (see RFC 3280),
there will also be a  key in the dictionary.
The  and  fields are tuples containing the sequence
of relative distinguished names (RDNs) given in the certificate’s data
structure for the respective fields, and each RDN is a sequence of
name-value pairs.  Here is a real-world example:



Note
To validate a certificate for a particular service, you can use the
 function.

If the  parameter is , and a certificate was
provided, this method returns the DER-encoded form of the entire certificate
as a sequence of bytes, or  if the peer did not provide a
certificate.  Whether the peer provides a certificate depends on the SSL
socket’s role:

for a client SSL socket, the server will always provide a certificate,
regardless of whether validation was required;
for a server SSL socket, the client will only provide a certificate
when requested by the server; therefore  will return
 if you used  (rather than
 or ).


Changed in version 3.2: The returned dictionary includes additional items such as 
and .


Changed in version 3.4:  is raised when the handshake isn’t done.
The returned dictionary includes additional X509v3 extension items
  such as ,  and  URIs.

