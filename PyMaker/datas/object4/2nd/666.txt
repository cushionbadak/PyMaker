link:
library/exceptions.html#SystemExit

docs:


exception ¶
This exception is raised by the  function.  It inherits from
 instead of  so that it is not accidentally
caught by code that catches .  This allows the exception to
properly propagate up and cause the interpreter to exit.  When it is not
handled, the Python interpreter exits; no stack traceback is printed.  The
constructor accepts the same optional argument passed to .
If the value is an integer, it specifies the system exit status (passed to
C’s  function); if it is , the exit status is zero; if
it has another type (such as a string), the object’s value is printed and
the exit status is one.
A call to  is translated into an exception so that clean-up
handlers ( clauses of  statements) can be
executed, and so that a debugger can execute a script without running the risk
of losing control.  The  function can be used if it is
absolutely positively necessary to exit immediately (for example, in the child
process after a call to ).


¶
The exit status or error message that is passed to the constructor.
(Defaults to .)

