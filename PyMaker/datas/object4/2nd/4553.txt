link:
library/queue.html#simplequeue-objects

docs:

SimpleQueue Objects¶
 objects provide the public methods described below.


()¶
Return the approximate size of the queue.  Note, qsize() > 0 doesn’t
guarantee that a subsequent get() will not block.



()¶
Return  if the queue is empty,  otherwise. If empty()
returns  it doesn’t guarantee that a subsequent call to get()
will not block.



(item, block=True, timeout=None)¶
Put item into the queue.  The method never blocks and always succeeds
(except for potential low-level errors such as failure to allocate memory).
The optional args block and timeout are ignored and only provided
for compatibility with .

CPython implementation detail: This method has a C implementation which is reentrant.  That is, a
 or  call can be interrupted by another 
call in the same thread without deadlocking or corrupting internal
state inside the queue.  This makes it appropriate for use in
destructors such as  methods or  callbacks.




(item)¶
Equivalent to , provided for compatibility with
.



(block=True, timeout=None)¶
Remove and return an item from the queue.  If optional args block is true and
timeout is  (the default), block if necessary until an item is available.
If timeout is a positive number, it blocks at most timeout seconds and
raises the  exception if no item was available within that time.
Otherwise (block is false), return an item if one is immediately available,
else raise the  exception (timeout is ignored in that case).



()¶
Equivalent to .


See also

Class 
A queue class for use in a multi-processing (rather than multi-threading)
context.

 is an alternative implementation of unbounded
queues with fast atomic  and
 operations that do not require locking.

