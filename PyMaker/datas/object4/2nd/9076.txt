link:
library/tracemalloc.html#functions

docs:

Functions¶


()¶
Clear traces of memory blocks allocated by Python.
See also .



(obj)¶
Get the traceback where the Python object obj was allocated.
Return a  instance, or  if the 
module is not tracing memory allocations or did not trace the allocation of
the object.
See also  and  functions.



()¶
Get the maximum number of frames stored in the traceback of a trace.
The  module must be tracing memory allocations to
get the limit, otherwise an exception is raised.
The limit is set by the  function.



()¶
Get the current size and peak size of memory blocks traced by the
 module as a tuple: .



()¶
Get the memory usage in bytes of the  module used to store
traces of memory blocks.
Return an .



()¶
 if the  module is tracing Python memory
allocations,  otherwise.
See also  and  functions.



(nframe: int=1)¶
Start tracing Python memory allocations: install hooks on Python memory
allocators. Collected tracebacks of traces will be limited to nframe
frames. By default, a trace of a memory block only stores the most recent
frame: the limit is . nframe must be greater or equal to .
Storing more than  frame is only useful to compute statistics grouped
by  or to compute cumulative statistics: see the
 and  methods.
Storing more frames increases the memory and CPU overhead of the
 module. Use the  function
to measure how much memory is used by the  module.
The  environment variable
() and the  
command line option can be used to start tracing at startup.
See also ,  and 
functions.



()¶
Stop tracing Python memory allocations: uninstall hooks on Python memory
allocators. Also clears all previously collected traces of memory blocks
allocated by Python.
Call  function to take a snapshot of traces before
clearing them.
See also ,  and 
functions.



()¶
Take a snapshot of traces of memory blocks allocated by Python. Return a new
 instance.
The snapshot does not include memory blocks allocated before the
 module started to trace memory allocations.
Tracebacks of traces are limited to  frames. Use
the nframe parameter of the  function to store more frames.
The  module must be tracing memory allocations to take a
snapshot, see the  function.
See also the  function.

