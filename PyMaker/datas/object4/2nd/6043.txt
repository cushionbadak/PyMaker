link:
library/markup.html#structured-markup-processing-tools

docs:

Structured Markup Processing Tools¶
Python supports a variety of modules to work with various forms of structured
data markup.  This includes modules to work with the Standard Generalized Markup
Language (SGML) and the Hypertext Markup Language (HTML), and several interfaces
for working with the Extensible Markup Language (XML).


 — HyperText Markup Language support
 — Simple HTML and XHTML parser
Example HTML Parser Application
 Methods
Examples


 — Definitions of HTML general entities
XML Processing Modules
XML vulnerabilities
The  and  Packages


 — The ElementTree XML API
Tutorial
XML tree and elements
Parsing XML
Pull API for non-blocking parsing
Finding interesting elements
Modifying an XML File
Building XML documents
Parsing XML with Namespaces
Additional resources


XPath support
Example
Supported XPath syntax


Reference
Functions
Element Objects
ElementTree Objects
QName Objects
TreeBuilder Objects
XMLParser Objects
XMLPullParser Objects
Exceptions




 — The Document Object Model API
Module Contents
Objects in the DOM
DOMImplementation Objects
Node Objects
NodeList Objects
DocumentType Objects
Document Objects
Element Objects
Attr Objects
NamedNodeMap Objects
Comment Objects
Text and CDATASection Objects
ProcessingInstruction Objects
Exceptions


Conformance
Type Mapping
Accessor Methods




 — Minimal DOM implementation
DOM Objects
DOM Example
minidom and the DOM standard


 — Support for building partial DOM trees
DOMEventStream Objects


 — Support for SAX2 parsers
SAXException Objects


 — Base classes for SAX handlers
ContentHandler Objects
DTDHandler Objects
EntityResolver Objects
ErrorHandler Objects


 — SAX Utilities
 — Interface for XML parsers
XMLReader Objects
IncrementalParser Objects
Locator Objects
InputSource Objects
The  Interface
The  Interface


 — Fast XML parsing using Expat
XMLParser Objects
ExpatError Exceptions
Example
Content Model Descriptions
Expat error constants




