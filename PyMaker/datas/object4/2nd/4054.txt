link:
library/ctypes.html#structures-and-unions

docs:

Structures and unions¶
Structures and unions must derive from the  and 
base classes which are defined in the  module. Each subclass must
define a  attribute.   must be a list of
2-tuples, containing a field name and a field type.
The field type must be a  type like , or any other
derived  type: structure, union, array, pointer.
Here is a simple example of a POINT structure, which contains two integers named
x and y, and also shows how to initialize a structure in the constructor:


You can, however, build much more complicated structures.  A structure can
itself contain other structures by using a structure as a field type.
Here is a RECT structure which contains two POINTs named upperleft and
lowerright:


Nested structures can also be initialized in the constructor in several ways:


Field descriptors can be retrieved from the class, they are useful
for debugging because they can provide useful information:



Warning
 does not support passing unions or structures with bit-fields
to functions by value.  While this may work on 32-bit x86, it’s not
guaranteed by the library to work in the general case.  Unions and
structures with bit-fields should always be passed to functions by pointer.

