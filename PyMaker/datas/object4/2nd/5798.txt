link:
library/json.html#json.JSONEncoder

docs:


class (*, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)¶
Extensible JSON encoder for Python data structures.
Supports the following objects and types by default:






Python
JSON



dict
object

list, tuple
array

str
string

int, float, int- & float-derived Enums
number

True
true

False
false

None
null




Changed in version 3.4: Added support for int- and float-derived Enum classes.

To extend this to recognize other objects, subclass and implement a
 method with another method that returns a serializable object
for  if possible, otherwise it should call the superclass implementation
(to raise ).
If skipkeys is false (the default), then it is a  to
attempt encoding of keys that are not , ,
 or .  If skipkeys is true, such items are simply
skipped.
If ensure_ascii is true (the default), the output is guaranteed to
have all incoming non-ASCII characters escaped.  If ensure_ascii is
false, these characters will be output as-is.
If check_circular is true (the default), then lists, dicts, and custom
encoded objects will be checked for circular references during encoding to
prevent an infinite recursion (which would cause an ).
Otherwise, no such check takes place.
If allow_nan is true (the default), then , , and
 will be encoded as such.  This behavior is not JSON
specification compliant, but is consistent with most JavaScript based
encoders and decoders.  Otherwise, it will be a  to encode
such floats.
If sort_keys is true (default: ), then the output of dictionaries
will be sorted by key; this is useful for regression tests to ensure that
JSON serializations can be compared on a day-to-day basis.
If indent is a non-negative integer or string, then JSON array elements and
object members will be pretty-printed with that indent level.  An indent level
of 0, negative, or  will only insert newlines.   (the default)
selects the most compact representation. Using a positive integer indent
indents that many spaces per level.  If indent is a string (such as ),
that string is used to indent each level.

Changed in version 3.2: Allow strings for indent in addition to integers.

If specified, separators should be an 
tuple.  The default is  if indent is  and
 otherwise.  To get the most compact JSON representation,
you should specify  to eliminate whitespace.

Changed in version 3.4: Use  as default if indent is not .

If specified, default should be a function that gets called for objects that
can’t otherwise be serialized.  It should return a JSON encodable version of
the object or raise a .  If not specified, 
is raised.

Changed in version 3.6: All parameters are now keyword-only.



(o)¶
Implement this method in a subclass such that it returns a serializable
object for o, or calls the base implementation (to raise a
).
For example, to support arbitrary iterators, you could implement default
like this:





(o)¶
Return a JSON string representation of a Python data structure, o.  For
example:





(o)¶
Encode the given object, o, and yield each string representation as
available.  For example:



