link:
library/multiprocessing.html#multiprocessing.sharedctypes.Array

docs:


(typecode_or_type, size_or_initializer, *, lock=True)¶
The same as  except that depending on the value of lock a
process-safe synchronization wrapper may be returned instead of a raw ctypes
array.
If lock is  (the default) then a new lock object is created to
synchronize access to the value.  If lock is a
 or  object
then that will be used to synchronize access to the
value.  If lock is  then access to the returned object will not be
automatically protected by a lock, so it will not necessarily be
“process-safe”.
Note that lock is a keyword-only argument.
