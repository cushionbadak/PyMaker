link:
library/asynchat.html#asynchat.async_chat

docs:


class ¶
This class is an abstract subclass of . To make
practical use of the code you must subclass , providing
meaningful  and 
methods.
The  methods can be used, although not all make
sense in a message/response context.
Like ,  defines a set of
events that are generated by an analysis of socket conditions after a
 call. Once the polling loop has been started the
 object’s methods are called by the event-processing
framework with no action on the part of the programmer.
Two class attributes can be modified, to improve performance, or possibly
even to conserve memory.


¶
The asynchronous input buffer size (default ).



¶
The asynchronous output buffer size (default ).

Unlike ,  allows you to
define a FIFO queue of producers. A producer need
have only one method, , which should return data to be
transmitted on the channel.
The producer indicates exhaustion (i.e. that it contains no more data) by
having its  method return the empty bytes object. At this point
the  object removes the producer from the queue and starts
using the next producer, if any. When the producer queue is empty the
 method does nothing. You use the channel object’s
 method to describe how to recognize the end of, or
an important breakpoint in, an incoming transmission from the remote
endpoint.
To build a functioning  subclass your  input methods
 and  must handle the
data that the channel receives asynchronously. The methods are described
below.
