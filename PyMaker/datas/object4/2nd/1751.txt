link:
library/decimal.html#decimal.Context.power

docs:


(x, y, modulo=None)¶
Return  to the power of , reduced modulo  if given.
With two arguments, compute .  If  is negative then 
must be integral.  The result will be inexact unless  is integral and
the result is finite and can be expressed exactly in ‘precision’ digits.
The rounding mode of the context is used. Results are always correctly-rounded
in the Python version.

Changed in version 3.3: The C module computes  in terms of the correctly-rounded
 and  functions. The result is well-defined but
only “almost always correctly-rounded”.

With three arguments, compute .  For the three argument
form, the following restrictions on the arguments hold:


all three arguments must be integral
 must be nonnegative
at least one of  or  must be nonzero
 must be nonzero and have at most ‘precision’ digits


The value resulting from  is
equal to the value that would be obtained by computing  with unbounded precision, but is computed more
efficiently.  The exponent of the result is zero, regardless of
the exponents of ,  and .  The result is
always exact.
