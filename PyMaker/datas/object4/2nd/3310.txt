link:
library/io.html#raw-file-i-o

docs:

Raw File I/O¶


class (name, mode='r', closefd=True, opener=None)¶
 represents an OS-level file containing bytes data.
It implements the  interface (and therefore the
 interface, too).
The name can be one of two things:

a character string or  object representing the path to the
file which will be opened. In this case closefd must be  (the default)
otherwise an error will be raised.
an integer representing the number of an existing OS-level file descriptor
to which the resulting  object will give access. When the
FileIO object is closed this fd will be closed as well, unless closefd
is set to .

The mode can be , ,  or  for reading
(default), writing, exclusive creation or appending. The file will be
created if it doesn’t exist when opened for writing or appending; it will be
truncated when opened for writing.  will be raised if
it already exists when opened for creating. Opening a file for creating
implies writing, so this mode behaves in a similar way to . Add a
 to the mode to allow simultaneous reading and writing.
The  (when called with a positive argument), 
and  methods on this class will only make one system call.
A custom opener can be used by passing a callable as opener. The underlying
file descriptor for the file object is then obtained by calling opener with
(name, flags). opener must return an open file descriptor (passing
 as opener results in functionality similar to passing
).
The newly created file is non-inheritable.
See the  built-in function for examples on using the opener
parameter.

Changed in version 3.3: The opener parameter was added.
The  mode was added.


Changed in version 3.4: The file is now non-inheritable.

In addition to the attributes and methods from  and
,  provides the following data
attributes:


¶
The mode as given in the constructor.



¶
The file name.  This is the file descriptor of the file when no name is
given in the constructor.


