link:
library/csv.html#dialects-and-formatting-parameters

docs:

Dialects and Formatting Parameters¶
To make it easier to specify the format of input and output records, specific
formatting parameters are grouped together into dialects.  A dialect is a
subclass of the  class having a set of specific methods and a
single  method.  When creating  or
 objects, the programmer can specify a string or a subclass of
the  class as the dialect parameter.  In addition to, or instead
of, the dialect parameter, the programmer can also specify individual
formatting parameters, which have the same names as the attributes defined below
for the  class.
Dialects support the following attributes:


¶
A one-character string used to separate fields.  It defaults to .



¶
Controls how instances of quotechar appearing inside a field should
themselves be quoted.  When , the character is doubled. When
, the escapechar is used as a prefix to the quotechar.  It
defaults to .
On output, if doublequote is  and no escapechar is set,
 is raised if a quotechar is found in a field.



¶
A one-character string used by the writer to escape the delimiter if quoting
is set to  and the quotechar if doublequote is
. On reading, the escapechar removes any special meaning from
the following character. It defaults to , which disables escaping.



¶
The string used to terminate lines produced by the . It defaults
to .

Note
The  is hard-coded to recognise either  or  as
end-of-line, and ignores lineterminator. This behavior may change in the
future.




¶
A one-character string used to quote fields containing special characters, such
as the delimiter or quotechar, or which contain new-line characters.  It
defaults to .



¶
Controls when quotes should be generated by the writer and recognised by the
reader.  It can take on any of the  constants (see section
Module Contents) and defaults to .



¶
When , whitespace immediately following the delimiter is ignored.
The default is .



¶
When , raise exception  on bad CSV input.
The default is .

