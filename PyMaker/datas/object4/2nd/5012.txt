link:
library/socket.html#constants

docs:

Constants¶

The AF_* and SOCK_* constants are now  and
  collections.

New in version 3.4.




¶

¶

¶
These constants represent the address (and protocol) families, used for the
first argument to .  If the  constant is not
defined then this protocol is unsupported.  More constants may be available
depending on the system.



¶

¶

¶

¶

¶
These constants represent the socket types, used for the second argument to
.  More constants may be available depending on the system.
(Only  and  appear to be generally
useful.)



¶

¶
These two constants, if defined, can be combined with the socket types and
allow you to set some flags atomically (thus avoiding possible race
conditions and the need for separate calls).

See also
Secure File Descriptor Handling
for a more thorough explanation.

Availability: Linux >= 2.6.27.

New in version 3.2.






¶
























Many constants of these forms, documented in the Unix documentation on sockets
and/or the IP protocol, are also defined in the socket module. They are
generally used in arguments to the  and 
methods of socket objects.  In most cases, only those symbols that are defined
in the Unix header files are defined; for a few symbols, default values are
provided.

Changed in version 3.6: , , , ,
,  were added.


Changed in version 3.6.5: On Windows, ,  appear if run-time Windows
supports.


Changed in version 3.7:  was added.
On Windows, ,  appear if run-time Windows
supports.




¶

¶




Many constants of these forms, documented in the Linux documentation, are
also defined in the socket module.
Availability: Linux >= 2.6.25.

New in version 3.3.




¶


CAN_BCM, in the CAN protocol family, is the broadcast manager (BCM) protocol.
Broadcast manager constants, documented in the Linux documentation, are also
defined in the socket module.
Availability: Linux >= 2.6.25.

New in version 3.4.




¶
Enables CAN FD support in a CAN_RAW socket. This is disabled by default.
This allows your application to send both CAN and CAN FD frames; however,
you one must accept both CAN and CAN FD frames when reading from the socket.
This constant is documented in the Linux documentation.
Availability: Linux >= 3.6.

New in version 3.5.




¶
CAN_ISOTP, in the CAN protocol family, is the ISO-TP (ISO 15765-2) protocol.
ISO-TP constants, documented in the Linux documentation.
Availability: Linux >= 2.6.25.

New in version 3.7.




¶

¶


Many constants of these forms, documented in the Linux documentation, are
also defined in the socket module.
Availability: Linux >= 2.2.



¶

¶

¶


Many constants of these forms, documented in the Linux documentation, are
also defined in the socket module.
Availability: Linux >= 2.6.30.

New in version 3.3.




¶

¶

¶


Constants for Windows’ WSAIoctl(). The constants are used as arguments to the
 method of socket objects.

Changed in version 3.6:  was added.





TIPC related constants, matching the ones exported by the C socket API. See
the TIPC documentation for more information.



¶

¶


Constants for Linux Kernel cryptography.
Availability: Linux >= 2.6.38.

New in version 3.6.




¶

¶




Constants for Linux host/guest communication.
Availability: Linux >= 4.8.

New in version 3.7.




¶
Availability: BSD, OSX.

New in version 3.4.




¶
This constant contains a boolean value which indicates if IPv6 is supported on
this platform.



¶

¶
These are string constants containing Bluetooth addresses with special
meanings. For example,  can be used to indicate
any address when specifying the binding socket with
.



¶

¶

¶
For use with .  is not
available for NetBSD or DragonFlyBSD.  and
 are not available for FreeBSD, NetBSD, or
DragonFlyBSD.

