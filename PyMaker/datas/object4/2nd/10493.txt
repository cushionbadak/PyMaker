link:
library/resource.html#resource-usage

docs:

Resource Usage¶
These functions are used to retrieve resource usage information:


(who)¶
This function returns an object that describes the resources consumed by either
the current process or its children, as specified by the who parameter.  The
who parameter should be specified using one of the 
constants described below.
The fields of the return value each describe how a particular system resource
has been used, e.g. amount of time spent running is user mode or number of times
the process was swapped out of main memory. Some values are dependent on the
clock tick internal, e.g. the amount of memory the process is using.
For backward compatibility, the return value is also accessible as a tuple of 16
elements.
The fields  and  of the return value are
floating point values representing the amount of time spent executing in user
mode and the amount of time spent executing in system mode, respectively. The
remaining values are integers. Consult the getrusage(2) man page for
detailed information about these values. A brief summary is presented here:







Index
Field
Resource





time in user mode (float)



time in system mode (float)



maximum resident set size



shared memory size



unshared memory size



unshared stack size



page faults not requiring I/O



page faults requiring I/O



number of swap outs



block input operations



block output operations



messages sent



messages received



signals received



voluntary context switches



involuntary context switches



This function will raise a  if an invalid who parameter is
specified. It may also raise  exception in unusual circumstances.



()¶
Returns the number of bytes in a system page. (This need not be the same as the
hardware page size.)

The following  symbols are passed to the 
function to specify which processes information should be provided for.


¶
Pass to  to request resources consumed by the calling
process, which is the sum of resources used by all threads in the process.



¶
Pass to  to request resources consumed by child processes
of the calling process which have been terminated and waited for.



¶
Pass to  to request resources consumed by both the current
process and child processes.  May not be available on all systems.



¶
Pass to  to request resources consumed by the current
thread.  May not be available on all systems.

New in version 3.2.


