link:
library/logging.handlers.html#memoryhandler

docs:

MemoryHandler¶
The  class, located in the  module,
supports buffering of logging records in memory, periodically flushing them to a
target handler. Flushing occurs whenever the buffer is full, or when an
event of a certain severity or greater is seen.
 is a subclass of the more general
, which is an abstract class. This buffers logging
records in memory. Whenever each record is added to the buffer, a check is made
by calling  to see if the buffer should be flushed.  If it
should, then  is expected to do the flushing.


class (capacity)¶
Initializes the handler with a buffer of the specified capacity.


(record)¶
Appends the record to the buffer. If  returns true,
calls  to process the buffer.



()¶
You can override this to implement custom flushing behavior. This version
just zaps the buffer to empty.



(record)¶
Returns true if the buffer is up to capacity. This method can be
overridden to implement custom flushing strategies.




class (capacity, flushLevel=ERROR, target=None, flushOnClose=True)¶
Returns a new instance of the  class. The instance is
initialized with a buffer size of capacity. If flushLevel is not specified,
 is used. If no target is specified, the target will need to be
set using  before this handler does anything useful. If
flushOnClose is specified as , then the buffer is not flushed when
the handler is closed. If not specified or specified as , the previous
behaviour of flushing the buffer will occur when the handler is closed.

Changed in version 3.6: The flushOnClose parameter was added.



()¶
Calls , sets the target to  and clears the
buffer.



()¶
For a , flushing means just sending the buffered
records to the target, if there is one. The buffer is also cleared when
this happens. Override if you want different behavior.



(target)¶
Sets the target handler for this handler.



(record)¶
Checks for buffer full or a record at the flushLevel or higher.


