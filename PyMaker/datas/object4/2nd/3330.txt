link:
library/io.html#io.TextIOBase

docs:


class ¶
Base class for text streams.  This class provides a character and line based
interface to stream I/O.  It inherits .
There is no public constructor.
 provides or overrides these data attributes and
methods in addition to those from :


¶
The name of the encoding used to decode the stream’s bytes into
strings, and to encode strings into bytes.



¶
The error setting of the decoder or encoder.



¶
A string, a tuple of strings, or , indicating the newlines
translated so far.  Depending on the implementation and the initial
constructor flags, this may not be available.



¶
The underlying binary buffer (a  instance) that
 deals with.  This is not part of the
 API and may not exist in some implementations.



()¶
Separate the underlying binary buffer from the  and
return it.
After the underlying buffer has been detached, the  is
in an unusable state.
Some  implementations, like , may not
have the concept of an underlying buffer and calling this method will
raise .

New in version 3.1.




(size=-1)¶
Read and return at most size characters from the stream as a single
.  If size is negative or , reads until EOF.



(size=-1)¶
Read until newline or EOF and return a single .  If the stream is
already at EOF, an empty string is returned.
If size is specified, at most size characters will be read.



(offset[, whence])¶
Change the stream position to the given offset.  Behaviour depends on
the whence parameter.  The default value for whence is
.

 or : seek from the start of the stream
(the default); offset must either be a number returned by
, or zero.  Any other offset value
produces undefined behaviour.
 or : “seek” to the current position;
offset must be zero, which is a no-operation (all other values
are unsupported).
 or : seek to the end of the stream;
offset must be zero (all other values are unsupported).

Return the new absolute position as an opaque number.

New in version 3.1: The  constants.




()¶
Return the current stream position as an opaque number.  The number
does not usually represent a number of bytes in the underlying
binary storage.



(s)¶
Write the string s to the stream and return the number of characters
written.

