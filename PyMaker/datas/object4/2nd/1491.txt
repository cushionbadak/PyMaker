link:
library/enum.html#functional-api

docs:

Functional APIÂ¶
The  class is callable, providing the following functional API:


The semantics of this API resemble . The first
argument of the call to  is the name of the enumeration.
The second argument is the source of enumeration member names.  It can be a
whitespace-separated string of names, a sequence of names, a sequence of
2-tuples with key/value pairs, or a mapping (e.g. dictionary) of names to
values.  The last two options enable assigning arbitrary values to
enumerations; the others auto-assign increasing integers starting with 1 (use
the  parameter to specify a different starting value).  A
new class derived from  is returned.  In other words, the above
assignment to  is equivalent to:


The reason for defaulting to  as the starting number and not  is
that  is  in a boolean sense, but enum members all evaluate
to .
Pickling enums created with the functional API can be tricky as frame stack
implementation details are used to try and figure out which module the
enumeration is being created in (e.g. it will fail if you use a utility
function in separate module, and also may not work on IronPython or Jython).
The solution is to specify the module name explicitly as follows:



Warning
If  is not supplied, and Enum cannot determine what it is,
the new Enum members will not be unpicklable; to keep errors closer to
the source, pickling will be disabled.

The new pickle protocol 4 also, in some circumstances, relies on
 being set to the location where pickle will be able
to find the class.  For example, if the class was made available in class
SomeData in the global scope:


The complete signature is:






value:What the new Enum class will record as its name.


names:The Enum members.  This can be a whitespace or comma separated string
(values will start at 1 unless otherwise specified):


or an iterator of names:


or an iterator of (name, value) pairs:


or a mapping:




module:name of module where new Enum class can be found.


qualname:where in module new Enum class can be found.


type:type to mix in to new Enum class.


start:number to start counting at if only names are passed in.





Changed in version 3.5: The start parameter was added.

