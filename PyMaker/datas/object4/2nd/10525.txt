link:
library/optparse.html#the-store-action

docs:

The store action¶
The most common option action is , which tells  to take
the next argument (or the remainder of the current argument), ensure that it is
of the correct type, and store it to your chosen destination.
For example:


Now let’s make up a fake command line and ask  to parse it:


When  sees the option string , it consumes the next
argument, , and stores it in .  So, after this
call to ,  is .
Some other option types supported by  are  and .
Here’s an option that expects an integer argument:


Note that this option has no long option string, which is perfectly acceptable.
Also, there’s no explicit action, since the default is .
Let’s parse another fake command-line.  This time, we’ll jam the option argument
right up against the option: since  (one argument) is equivalent to
 (two arguments), the code


will print .
If you don’t specify a type,  assumes .  Combined with
the fact that the default action is , that means our first example can
be a lot shorter:


If you don’t supply a destination,  figures out a sensible
default from the option strings: if the first long option string is
, then the default destination is .  If there are no
long option strings,  looks at the first short option string: the
default destination for  is .
 also includes the built-in  type.  Adding
types is covered in section Extending optparse.
