link:
library/stdtypes.html#mutable-sequence-types

docs:

Mutable Sequence Types¶
The operations in the following table are defined on mutable sequence types.
The  ABC is provided to make it
easier to correctly implement these operations on custom sequence types.
In the table s is an instance of a mutable sequence type, t is any
iterable object and x is an arbitrary object that meets any type
and value restrictions imposed by s (for example,  only
accepts integers that meet the value restriction ).







Operation
Result
Notes




item i of s is replaced by
x
 


slice of s from i to j
is replaced by the contents of
the iterable t
 


same as 
 


the elements of 
are replaced by those of t
(1)


removes the elements of
 from the list
 


appends x to the end of the
sequence (same as
)
 


removes all items from s
(same as )
(5)


creates a shallow copy of s
(same as )
(5)

 or

extends s with the
contents of t (for the
most part the same as
)
 


updates s with its contents
repeated n times
(6)


inserts x into s at the
index given by i
(same as )
 


retrieves the item at i and
also removes it from s
(2)


remove the first item from s
where  is equal to x
(3)


reverses the items of s in
place
(4)



Notes:

t must have the same length as the slice it is replacing.

The optional argument i defaults to , so that by default the last
item is removed and returned.

 raises  when x is not found in s.

The  method modifies the sequence in place for economy of
space when reversing a large sequence.  To remind users that it operates by
side effect, it does not return the reversed sequence.

 and  are included for consistency with the
interfaces of mutable containers that don’t support slicing operations
(such as  and )

New in version 3.3:  and  methods.


The value n is an integer, or an object implementing
.  Zero and negative values of n clear
the sequence.  Items in the sequence are not copied; they are referenced
multiple times, as explained for  under Common Sequence Operations.


