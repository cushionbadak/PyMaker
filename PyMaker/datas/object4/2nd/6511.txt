link:
library/internet.html#internet-protocols-and-support

docs:

Internet Protocols and Support¶
The modules described in this chapter implement Internet protocols and  support
for related technology.  They are all implemented in Python. Most of these
modules require the presence of the system-dependent module , which
is currently supported on most popular platforms.  Here is an overview:


 — Convenient Web-browser controller
Browser Controller Objects


 — Common Gateway Interface support
Introduction
Using the cgi module
Higher Level Interface
Functions
Caring about security
Installing your CGI script on a Unix system
Testing your CGI script
Debugging CGI scripts
Common problems and solutions


 — Traceback manager for CGI scripts
 — WSGI Utilities and Reference Implementation
 – WSGI environment utilities
 – WSGI response header tools
 – a simple WSGI HTTP server
 — WSGI conformance checker
 – server/gateway base classes
Examples


 — URL handling modules
 — Extensible library for opening URLs
Request Objects
OpenerDirector Objects
BaseHandler Objects
HTTPRedirectHandler Objects
HTTPCookieProcessor Objects
ProxyHandler Objects
HTTPPasswordMgr Objects
HTTPPasswordMgrWithPriorAuth Objects
AbstractBasicAuthHandler Objects
HTTPBasicAuthHandler Objects
ProxyBasicAuthHandler Objects
AbstractDigestAuthHandler Objects
HTTPDigestAuthHandler Objects
ProxyDigestAuthHandler Objects
HTTPHandler Objects
HTTPSHandler Objects
FileHandler Objects
DataHandler Objects
FTPHandler Objects
CacheFTPHandler Objects
UnknownHandler Objects
HTTPErrorProcessor Objects
Examples
Legacy interface
 Restrictions


 — Response classes used by urllib
 — Parse URLs into components
URL Parsing
Parsing ASCII Encoded Bytes
Structured Parse Results
URL Quoting


 — Exception classes raised by urllib.request
 —  Parser for robots.txt
 — HTTP modules
HTTP status codes


 — HTTP protocol client
HTTPConnection Objects
HTTPResponse Objects
Examples
HTTPMessage Objects


 — FTP protocol client
FTP Objects
FTP_TLS Objects


 — POP3 protocol client
POP3 Objects
POP3 Example


 — IMAP4 protocol client
IMAP4 Objects
IMAP4 Example


 — NNTP protocol client
NNTP Objects
Attributes
Methods


Utility functions


 — SMTP protocol client
SMTP Objects
SMTP Example


 — SMTP Server
SMTPServer Objects
DebuggingServer Objects
PureProxy Objects
MailmanProxy Objects
SMTPChannel Objects


 — Telnet client
Telnet Objects
Telnet Example


 — UUID objects according to RFC 4122
Example


 — A framework for network servers
Server Creation Notes
Server Objects
Request Handler Objects
Examples
 Example
 Example
Asynchronous Mixins




 — HTTP servers
 — HTTP state management
Cookie Objects
Morsel Objects
Example


 — Cookie handling for HTTP clients
CookieJar and FileCookieJar Objects
FileCookieJar subclasses and co-operation with web browsers
CookiePolicy Objects
DefaultCookiePolicy Objects
Cookie Objects
Examples


 — XMLRPC server and client modules
 — XML-RPC client access
ServerProxy Objects
DateTime Objects
Binary Objects
Fault Objects
ProtocolError Objects
MultiCall Objects
Convenience Functions
Example of Client Usage
Example of Client and Server Usage


 — Basic XML-RPC servers
SimpleXMLRPCServer Objects
SimpleXMLRPCServer Example


CGIXMLRPCRequestHandler
Documenting XMLRPC server
DocXMLRPCServer Objects
DocCGIXMLRPCRequestHandler


 — IPv4/IPv6 manipulation library
Convenience factory functions
IP Addresses
Address objects
Conversion to Strings and Integers
Operators
Comparison operators
Arithmetic operators




IP Network definitions
Prefix, net mask and host mask
Network objects
Operators
Logical operators
Iteration
Networks as containers of addresses




Interface objects
Operators
Logical operators




Other Module Level Functions
Custom Exceptions




