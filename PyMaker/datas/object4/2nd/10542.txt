link:
library/optparse.html#defining-options

docs:

Defining options¶
Each Option instance represents a set of synonymous command-line option strings,
e.g.  and .  You can specify any number of short or
long option strings, but you must specify at least one overall option string.
The canonical way to create an  instance is with the
 method of .


(option)¶

(*opt_str, attr=value, ...)
To define an option with only a short option string:


And to define an option with only a long option string:


The keyword arguments define attributes of the new Option object.  The most
important option attribute is , and it largely
determines which other attributes are relevant or required.  If you pass
irrelevant option attributes, or fail to pass required ones, 
raises an  exception explaining your mistake.
An option’s action determines what  does when it encounters
this option on the command-line.  The standard option actions hard-coded into
 are:


store this option’s argument (default)

store a constant value

store a true value

store a false value

append this option’s argument to a list

append a constant value to a list

increment a counter by one

call a specified function

print a usage message including all options and the documentation for them

(If you don’t supply an action, the default is .  For this action,
you may also supply  and  option
attributes; see Standard option actions.)

As you can see, most actions involve storing or updating a value somewhere.
 always creates a special object for this, conventionally called
 (it happens to be an instance of ).  Option
arguments (and various other values) are stored as attributes of this object,
according to the  (destination) option attribute.
For example, when you call


one of the first things  does is create the  object:


If one of the options in this parser is defined with


and the command-line being parsed includes any of the following:


then , on seeing this option, will do the equivalent of


The  and  option attributes are almost
as important as , but  is the only
one that makes sense for all options.
