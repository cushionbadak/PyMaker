link:
library/venv.html#api

docs:

API¶
The high-level method described above makes use of a simple API which provides
mechanisms for third-party virtual environment creators to customize environment
creation according to their needs, the  class.


class (system_site_packages=False, clear=False, symlinks=False, upgrade=False, with_pip=False, prompt=None)¶
The  class accepts the following keyword arguments on
instantiation:

 – a Boolean value indicating that the system Python
site-packages should be available to the environment (defaults to ).
 – a Boolean value which, if true, will delete the contents of
any existing target directory, before creating the environment.
 – a Boolean value indicating whether to attempt to symlink the
Python binary rather than copying.
 – a Boolean value which, if true, will upgrade an existing
environment with the running Python - for use when that Python has been
upgraded in-place (defaults to ).
 – a Boolean value which, if true, ensures pip is
installed in the virtual environment. This uses  with
the  option.
 – a String to be used after virtual environment is activated
(defaults to  which means directory name of the environment would
be used).


Changed in version 3.4: Added the  parameter


New in version 3.6: Added the  parameter

Creators of third-party virtual environment tools will be free to use the
provided  class as a base class.
The returned env-builder is an object which has a method, :


(env_dir)¶
This method takes as required argument the path (absolute or relative to
the current directory) of the target directory which is to contain the
virtual environment.  The  method will either create the
environment in the specified directory, or raise an appropriate
exception.
The  method of the  class illustrates the hooks
available for subclass customization:


Each of the methods ,
, ,
 and  can be overridden.



(env_dir)¶
Creates the environment directory and all necessary directories, and
returns a context object.  This is just a holder for attributes (such as
paths), for use by the other methods. The directories are allowed to
exist already, as long as either  or  were
specified to allow operating on an existing environment directory.



(context)¶
Creates the  configuration file in the environment.



(context)¶
Creates a copy or symlink to the Python executable in the environment.
On POSIX systems, if a specific executable  was used,
symlinks to  and  will be created pointing to that
executable, unless files with those names already exist.



(context)¶
Installs activation scripts appropriate to the platform into the virtual
environment.



(context)¶
A placeholder method which can be overridden in third party
implementations to pre-install packages in the virtual environment or
perform other post-creation steps.


Changed in version 3.7.2: Windows now uses redirector scripts for  instead of
copying the actual binaries. In 3.7.2 only  does
nothing unless running from a build in the source tree.


Changed in version 3.7.3: Windows copies the redirector scripts as part of 
instead of . This was not the case in 3.7.2.
When using symlinks, the original executables will be linked.

In addition,  provides this utility method that can be
called from  or  in subclasses to
assist in installing custom scripts into the virtual environment.


(context, path)¶
path is the path to a directory that should contain subdirectories
“common”, “posix”, “nt”, each containing scripts destined for the bin
directory in the environment.  The contents of “common” and the
directory corresponding to  are copied after some text
replacement of placeholders:

 is replaced with the absolute path of the environment
directory.
 is replaced with the environment name (final path
segment of environment directory).
 is replaced with the prompt (the environment
name surrounded by parentheses and with a following space)
 is replaced with the name of the bin directory
(either  or ).
 is replaced with the absolute path of the
environment’s executable.

The directories are allowed to exist (for when an existing environment
is being upgraded).


There is also a module-level convenience function:


(env_dir, system_site_packages=False, clear=False, symlinks=False, with_pip=False, prompt=None)¶
Create an  with the given keyword arguments, and call its
 method with the env_dir argument.

New in version 3.3.


Changed in version 3.4: Added the  parameter


Changed in version 3.6: Added the  parameter


