link:
library/uuid.html#uuid.UUID

docs:


class (hex=None, bytes=None, bytes_le=None, fields=None, int=None, version=None, *, is_safe=SafeUUID.unknown)Â¶
Create a UUID from either a string of 32 hexadecimal digits, a string of 16
bytes in big-endian order as the bytes argument, a string of 16 bytes in
little-endian order as the bytes_le argument, a tuple of six integers
(32-bit time_low, 16-bit time_mid, 16-bit time_hi_version,
8-bit clock_seq_hi_variant, 8-bit clock_seq_low, 48-bit node) as the
fields argument, or a single 128-bit integer as the int argument.
When a string of hex digits is given, curly braces, hyphens,
and a URN prefix are all optional.  For example, these
expressions all yield the same UUID:


Exactly one of hex, bytes, bytes_le, fields, or int must be given.
The version argument is optional; if given, the resulting UUID will have its
variant and version number set according to RFC 4122, overriding bits in the
given hex, bytes, bytes_le, fields, or int.
Comparison of UUID objects are made by way of comparing their
 attributes.  Comparison with a non-UUID object
raises a .
 returns a string in the form
 where the 32 hexadecimal digits
represent the UUID.
