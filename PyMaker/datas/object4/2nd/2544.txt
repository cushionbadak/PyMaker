link:
library/zipfile.html#zipfile-objects

docs:

ZipFile Objects¶


class (file, mode='r', compression=ZIP_STORED, allowZip64=True, compresslevel=None)¶
Open a ZIP file, where file can be a path to a file (a string), a
file-like object or a path-like object.
The mode parameter should be  to read an existing
file,  to truncate and write a new file,  to append to an
existing file, or  to exclusively create and write a new file.
If mode is  and file refers to an existing file,
a  will be raised.
If mode is  and file refers to an existing ZIP
file, then additional files are added to it.  If file does not refer to a
ZIP file, then a new ZIP archive is appended to the file.  This is meant for
adding a ZIP archive to another file (such as ).  If
mode is  and the file does not exist at all, it is created.
If mode is  or , the file should be seekable.
compression is the ZIP compression method to use when writing the archive,
and should be , ,
 or ; unrecognized
values will cause  to be raised.  If
,  or  is specified
but the corresponding module (,  or ) is not
available,  is raised. The default is .
If allowZip64 is  (the default) zipfile will create ZIP files that
use the ZIP64 extensions when the zipfile is larger than 4 GiB. If it is
  will raise an exception when the ZIP file would
require ZIP64 extensions.
The compresslevel parameter controls the compression level to use when
writing files to the archive.
When using  or  it has no effect.
When using  integers  through  are accepted
(see  for more information).
When using  integers  through  are accepted
(see  for more information).
If the file is created with mode ,  or  and then
 without adding any files to the archive, the appropriate
ZIP structures for an empty archive will be written to the file.
ZipFile is also a context manager and therefore supports the
 statement.  In the example, myzip is closed after the
 statement’s suite is finished—even if an exception occurs:



New in version 3.2: Added the ability to use  as a context manager.


Changed in version 3.3: Added support for  and  compression.


Changed in version 3.4: ZIP64 extensions are enabled by default.


Changed in version 3.5: Added support for writing to unseekable streams.
Added support for the  mode.


Changed in version 3.6: Previously, a plain  was raised for unrecognized
compression values.


Changed in version 3.6.2: The file parameter accepts a path-like object.


Changed in version 3.7: Add the compresslevel parameter.




()¶
Close the archive file.  You must call  before exiting your program
or essential records will not be written.



(name)¶
Return a  object with information about the archive member
name.  Calling  for a name not currently contained in the
archive will raise a .



()¶
Return a list containing a  object for each member of the
archive.  The objects are in the same order as their entries in the actual ZIP
file on disk if an existing archive was opened.



()¶
Return a list of archive members by name.



(name, mode='r', pwd=None, *, force_zip64=False)¶
Access a member of the archive as a binary file-like object.  name
can be either the name of a file within the archive or a 
object.  The mode parameter, if included, must be  (the default)
or .  pwd is the password used to decrypt encrypted ZIP files.
 is also a context manager and therefore supports the
 statement:


With mode  the file-like object
() is read-only and provides the following methods:
, ,
, ,
, , .
These objects can operate independently of the ZipFile.
With , a writable file handle is returned, which supports the
 method.  While a writable file handle is open,
attempting to read or write other files in the ZIP file will raise a
.
When writing a file, if the file size is not known in advance but may exceed
2 GiB, pass  to ensure that the header format is
capable of supporting large files.  If the file size is known in advance,
construct a  object with  set, and
use that as the name parameter.

Note
The ,  and  methods can take a filename
or a  object.  You will appreciate this when trying to read a
ZIP file that contains members with duplicate names.


Changed in version 3.6: Removed support of .  Use  for reading
compressed text files in universal newlines mode.


Changed in version 3.6:  can now be used to write files into the archive with the
 option.


Changed in version 3.6: Calling  on a closed ZipFile will raise a .
Previously, a  was raised.




(member, path=None, pwd=None)¶
Extract a member from the archive to the current working directory; member
must be its full name or a  object.  Its file information is
extracted as accurately as possible.  path specifies a different directory
to extract to.  member can be a filename or a  object.
pwd is the password used for encrypted files.
Returns the normalized path created (a directory or new file).

Note
If a member filename is an absolute path, a drive/UNC sharepoint and
leading (back)slashes will be stripped, e.g.:  becomes
 on Unix, and  becomes  on Windows.
And all  components in a member filename will be removed, e.g.:
 becomes .  On Windows illegal
characters (, , , , , , and )
replaced by underscore ().


Changed in version 3.6: Calling  on a closed ZipFile will raise a
.  Previously, a  was raised.


Changed in version 3.6.2: The path parameter accepts a path-like object.




(path=None, members=None, pwd=None)¶
Extract all members from the archive to the current working directory.  path
specifies a different directory to extract to.  members is optional and must
be a subset of the list returned by .  pwd is the password
used for encrypted files.

Warning
Never extract archives from untrusted sources without prior inspection.
It is possible that files are created outside of path, e.g. members
that have absolute filenames starting with  or filenames with two
dots .  This module attempts to prevent that.
See  note.


Changed in version 3.6: Calling  on a closed ZipFile will raise a
.  Previously, a  was raised.


Changed in version 3.6.2: The path parameter accepts a path-like object.




()¶
Print a table of contents for the archive to .



(pwd)¶
Set pwd as default password to extract encrypted files.



(name, pwd=None)¶
Return the bytes of the file name in the archive.  name is the name of the
file in the archive, or a  object.  The archive must be open for
read or append. pwd is the password used for encrypted  files and, if specified,
it will override the default password set with .  Calling
 on a ZipFile that uses a compression method other than
, ,  or
 will raise a . An error will also
be raised if the corresponding compression module is not available.

Changed in version 3.6: Calling  on a closed ZipFile will raise a .
Previously, a  was raised.




()¶
Read all the files in the archive and check their CRC’s and file headers.
Return the name of the first bad file, or else return .

Changed in version 3.6: Calling  on a closed ZipFile will raise a
.  Previously, a  was raised.




(filename, arcname=None, compress_type=None, compresslevel=None)¶
Write the file named filename to the archive, giving it the archive name
arcname (by default, this will be the same as filename, but without a drive
letter and with leading path separators removed).  If given, compress_type
overrides the value given for the compression parameter to the constructor for
the new entry. Similarly, compresslevel will override the constructor if
given.
The archive must be open with mode ,  or .

Note
Archive names should be relative to the archive root, that is, they should not
start with a path separator.


Note
If  (or , if  is  not given) contains a null
byte, the name of the file in the archive will be truncated at the null byte.


Changed in version 3.6: Calling  on a ZipFile created with mode  or
a closed ZipFile will raise a .  Previously,
a  was raised.




(zinfo_or_arcname, data, compress_type=None, compresslevel=None)¶
Write a file into the archive.  The contents is data, which may be either
a  or a  instance; if it is a ,
it is encoded as UTF-8 first.  zinfo_or_arcname is either the file
name it will be given in the archive, or a  instance.  If it’s
an instance, at least the filename, date, and time must be given.  If it’s a
name, the date and time is set to the current date and time.
The archive must be opened with mode ,  or .
If given, compress_type overrides the value given for the compression
parameter to the constructor for the new entry, or in the zinfo_or_arcname
(if that is a  instance). Similarly, compresslevel will
override the constructor if given.

Note
When passing a  instance as the zinfo_or_arcname parameter,
the compression method used will be that specified in the compress_type
member of the given  instance.  By default, the
 constructor sets this member to .


Changed in version 3.2: The compress_type argument.


Changed in version 3.6: Calling  on a ZipFile created with mode  or
a closed ZipFile will raise a .  Previously,
a  was raised.


The following data attributes are also available:


¶
Name of the ZIP file.



¶
The level of debug output to use.  This may be set from  (the default, no
output) to  (the most output).  Debugging information is written to
.



¶
The comment associated with the ZIP file as a  object.
If assigning a comment to a
 instance created with mode ,  or ,
it should be no longer than 65535 bytes.  Comments longer than this will be
truncated.

