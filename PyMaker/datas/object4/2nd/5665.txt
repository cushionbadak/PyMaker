link:
library/email.contentmanager.html#email.contentmanager.raw_data_manager

docs:


¶
This content manager provides only a minimum interface beyond that provided
by  itself:  it deals only with text, raw
byte strings, and  objects.  Nevertheless, it
provides significant advantages compared to the base API:  on
a text part will return a unicode string without the application needing to
manually decode it,  provides a rich set of options for
controlling the headers added to a part and controlling the content transfer
encoding, and it enables the use of the various  methods, thereby
simplifying the creation of multipart messages.


(msg, errors='replace')¶
Return the payload of the part as either a string (for  parts), an
 object (for 
parts), or a  object (for all other non-multipart types).  Raise
a  if called on a .  If the part is a
 part and errors is specified, use it as the error handler when
decoding the payload to unicode.  The default error handler is
.



(msg, <'str'>, subtype="plain", charset='utf-8'                     cte=None, disposition=None, filename=None, cid=None, params=None, headers=None)¶

(msg, <'bytes'>, maintype, subtype, cte="base64", disposition=None, filename=None, cid=None, params=None, headers=None)

(msg, <'EmailMessage'>, cte=None, disposition=None, filename=None, cid=None, params=None, headers=None)
Add headers and payload to msg:
Add a Content-Type header with a 
value.


For , set the MIME  to , and set the
subtype to subtype if it is specified, or  if it is not.
For , use the specified maintype and subtype, or
raise a  if they are not specified.
For  objects, set the maintype
to , and set the subtype to subtype if it is
specified or  if it is not.  If subtype is
, raise an error ( objects must be used to
construct  parts).


If charset is provided (which is valid only for ), encode the
string to bytes using the specified character set.  The default is
.  If the specified charset is a known alias for a standard
MIME charset name, use the standard charset instead.
If cte is set, encode the payload using the specified content transfer
encoding, and set the Content-Transfer-Encoding header to
that value.  Possible values for cte are ,
, , , and .  If the input cannot be
encoded in the specified encoding (for example, specifying a cte of
 for an input that contains non-ASCII values), raise a
.


For  objects, if cte is not set use heuristics to
determine the most compact encoding.
For , per RFC 2046, raise
an error if a cte of  or  is
requested for subtype , and for any cte other than
 for subtype .  For
, use  if cte is not specified.  For
all other values of subtype, use .



Note
A cte of  does not actually work correctly yet.
The  object as modified by  is
correct, but  does not
serialize it correctly.

If disposition is set, use it as the value of the
Content-Disposition header.  If not specified, and
filename is specified, add the header with the value .
If disposition is not specified and filename is also not specified,
do not add the header.  The only valid values for disposition are
 and .
If filename is specified, use it as the value of the 
parameter of the Content-Disposition header.
If cid is specified, add a Content-ID header with
cid as its value.
If params is specified, iterate its  method and use the
resulting  pairs to set additional parameters on the
Content-Type header.
If headers is specified and is a list of strings of the form
 or a list of  objects
(distinguished from strings by having a  attribute), add the
headers to msg.

