link:
library/http.client.html#http.client.HTTPConnection.request

docs:


(method, url, body=None, headers={}, *, encode_chunked=False)Â¶
This will send a request to the server using the HTTP request
method method and the selector url.
If body is specified, the specified data is sent after the headers are
finished.  It may be a , a bytes-like object, an
open file object, or an iterable of .  If body
is a string, it is encoded as ISO-8859-1, the default for HTTP.  If it
is a bytes-like object, the bytes are sent as is.  If it is a file
object, the contents of the file is sent; this file object should
support at least the  method.  If the file object is an
instance of , the data returned by the 
method will be encoded as ISO-8859-1, otherwise the data returned by
 is sent as is.  If body is an iterable, the elements of the
iterable are sent as is until the iterable is exhausted.
The headers argument should be a mapping of extra HTTP headers to send
with the request.
If headers contains neither Content-Length nor Transfer-Encoding,
but there is a request body, one of those
header fields will be added automatically.  If
body is , the Content-Length header is set to  for
methods that expect a body (, , and ).  If
body is a string or a bytes-like object that is not also a
file, the Content-Length header is
set to its length.  Any other type of body (files
and iterables in general) will be chunk-encoded, and the
Transfer-Encoding header will automatically be set instead of
Content-Length.
The encode_chunked argument is only relevant if Transfer-Encoding is
specified in headers.  If encode_chunked is , the
HTTPConnection object assumes that all encoding is handled by the
calling code.  If it is , the body will be chunk-encoded.

Note
Chunked transfer encoding has been added to the HTTP protocol
version 1.1.  Unless the HTTP server is known to handle HTTP 1.1,
the caller must either specify the Content-Length, or must pass a
 or bytes-like object that is not also a file as the
body representation.


New in version 3.2: body can now be an iterable.


Changed in version 3.6: If neither Content-Length nor Transfer-Encoding are set in
headers, file and iterable body objects are now chunk-encoded.
The encode_chunked argument was added.
No attempt is made to determine the Content-Length for file
objects.

