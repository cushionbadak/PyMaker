link:
library/uuid.html#uuid.UUID

docs:

<dt id="uuid.UUID">
<em class="property">class </em><code class="descclassname">uuid.</code><code class="descname">UUID</code><span class="sig-paren">(</span><em>hex=None</em>, <em>bytes=None</em>, <em>bytes_le=None</em>, <em>fields=None</em>, <em>int=None</em>, <em>version=None</em>, <em>*</em>, <em>is_safe=SafeUUID.unknown</em><span class="sig-paren">)</span><a class="headerlink" href="#uuid.UUID" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Create a UUID from either a string of 32 hexadecimal digits, a string of 16
bytes in big-endian order as the <em>bytes</em> argument, a string of 16 bytes in
little-endian order as the <em>bytes_le</em> argument, a tuple of six integers
(32-bit <em>time_low</em>, 16-bit <em>time_mid</em>, 16-bit <em>time_hi_version</em>,
8-bit <em>clock_seq_hi_variant</em>, 8-bit <em>clock_seq_low</em>, 48-bit <em>node</em>) as the
<em>fields</em> argument, or a single 128-bit integer as the <em>int</em> argument.
When a string of hex digits is given, curly braces, hyphens,
and a URN prefix are all optional.  For example, these
expressions all yield the same UUID:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">UUID</span><span class="p">(</span><span class="s1">'{12345678-1234-5678-1234-567812345678}'</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="s1">'12345678123456781234567812345678'</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="s1">'urn:uuid:12345678-1234-5678-1234-567812345678'</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="nb">bytes</span><span class="o">=</span><span class="sa">b</span><span class="s1">'</span><span class="se">\x12\x34\x56\x78</span><span class="s1">'</span><span class="o">*</span><span class="mi">4</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="n">bytes_le</span><span class="o">=</span><span class="sa">b</span><span class="s1">'</span><span class="se">\x78\x56\x34\x12\x34\x12\x78\x56</span><span class="s1">'</span> <span class="o">+</span>
              <span class="sa">b</span><span class="s1">'</span><span class="se">\x12\x34\x56\x78\x12\x34\x56\x78</span><span class="s1">'</span><span class="p">)</span>
<span class="n">UUID</span><span class="p">(</span><span class="n">fields</span><span class="o">=</span><span class="p">(</span><span class="mh">0x12345678</span><span class="p">,</span> <span class="mh">0x1234</span><span class="p">,</span> <span class="mh">0x5678</span><span class="p">,</span> <span class="mh">0x12</span><span class="p">,</span> <span class="mh">0x34</span><span class="p">,</span> <span class="mh">0x567812345678</span><span class="p">))</span>
<span class="n">UUID</span><span class="p">(</span><span class="nb">int</span><span class="o">=</span><span class="mh">0x12345678123456781234567812345678</span><span class="p">)</span>
</pre></div>
</div>
<p>Exactly one of <em>hex</em>, <em>bytes</em>, <em>bytes_le</em>, <em>fields</em>, or <em>int</em> must be given.
The <em>version</em> argument is optional; if given, the resulting UUID will have its
variant and version number set according to <span class="target" id="index-2"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc4122.html"><strong>RFC 4122</strong></a>, overriding bits in the
given <em>hex</em>, <em>bytes</em>, <em>bytes_le</em>, <em>fields</em>, or <em>int</em>.</p>
<p>Comparison of UUID objects are made by way of comparing their
<a class="reference internal" href="#uuid.UUID.int" title="uuid.UUID.int"><code class="xref py py-attr docutils literal notranslate"><span class="pre">UUID.int</span></code></a> attributes.  Comparison with a non-UUID object
raises a <a class="reference internal" href="exceptions.html#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a>.</p>
<p><code class="docutils literal notranslate"><span class="pre">str(uuid)</span></code> returns a string in the form
<code class="docutils literal notranslate"><span class="pre">12345678-1234-5678-1234-567812345678</span></code> where the 32 hexadecimal digits
represent the UUID.</p>
</dd>