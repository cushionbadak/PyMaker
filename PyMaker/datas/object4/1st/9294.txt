link:
library/warnings.html#overriding-the-default-filter

docs:

Overriding the default filterÂ¶
Developers of applications written in Python may wish to hide all Python level
warnings from their users by default, and only display them when running tests
or otherwise working on the application. The sys.warnoptions attribute
used to pass filter configurations to the interpreter can be used as a marker to
indicate whether or not warnings should be disabled:
import sys

if not sys.warnoptions:
    import warnings
    warnings.simplefilter("ignore")


Developers of test runners for Python code are advised to instead ensure that
all warnings are displayed by default for the code under test, using code
like:
import sys

if not sys.warnoptions:
    import os, warnings
    warnings.simplefilter("default") # Change the filter in this process
    os.environ["PYTHONWARNINGS"] = "default" # Also affect subprocesses


Finally, developers of interactive shells that run user code in a namespace
other than __main__ are advised to ensure that DeprecationWarning
messages are made visible by default, using code like the following (where
user_ns is the module used to execute code entered interactively):
import warnings
warnings.filterwarnings("default", category=DeprecationWarning,
                                   module=user_ns.get("__name__"))


