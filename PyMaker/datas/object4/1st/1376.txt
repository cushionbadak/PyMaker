link:
library/weakref.html#weakref.finalize

docs:

<dt id="weakref.finalize">
<em class="property">class </em><code class="descclassname">weakref.</code><code class="descname">finalize</code><span class="sig-paren">(</span><em>obj</em>, <em>func</em>, <em>*args</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="headerlink" href="#weakref.finalize" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a callable finalizer object which will be called when <em>obj</em>
is garbage collected. Unlike an ordinary weak reference, a finalizer
will always survive until the reference object is collected, greatly
simplifying lifecycle management.</p>
<p>A finalizer is considered <em>alive</em> until it is called (either explicitly
or at garbage collection), and after that it is <em>dead</em>.  Calling a live
finalizer returns the result of evaluating <code class="docutils literal notranslate"><span class="pre">func(*arg,</span> <span class="pre">**kwargs)</span></code>,
whereas calling a dead finalizer returns <a class="reference internal" href="constants.html#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a>.</p>
<p>Exceptions raised by finalizer callbacks during garbage collection
will be shown on the standard error output, but cannot be
propagated.  They are handled in the same way as exceptions raised
from an object’s <a class="reference internal" href="../reference/datamodel.html#object.__del__" title="object.__del__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__del__()</span></code></a> method or a weak reference’s
callback.</p>
<p>When the program exits, each remaining live finalizer is called
unless its <a class="reference internal" href="atexit.html#module-atexit" title="atexit: Register and execute cleanup functions."><code class="xref py py-attr docutils literal notranslate"><span class="pre">atexit</span></code></a> attribute has been set to false.  They
are called in reverse order of creation.</p>
<p>A finalizer will never invoke its callback during the later part of
the <a class="reference internal" href="../glossary.html#term-interpreter-shutdown"><span class="xref std std-term">interpreter shutdown</span></a> when module globals are liable to have
been replaced by <a class="reference internal" href="constants.html#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a>.</p>
<dl class="method">
<dt id="weakref.finalize.__call__">
<code class="descname">__call__</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#weakref.finalize.__call__" title="Permalink to this definition">¶</a></dt>
<dd><p>If <em>self</em> is alive then mark it as dead and return the result of
calling <code class="docutils literal notranslate"><span class="pre">func(*args,</span> <span class="pre">**kwargs)</span></code>.  If <em>self</em> is dead then return
<a class="reference internal" href="constants.html#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a>.</p>
</dd></dl>
<dl class="method">
<dt id="weakref.finalize.detach">
<code class="descname">detach</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#weakref.finalize.detach" title="Permalink to this definition">¶</a></dt>
<dd><p>If <em>self</em> is alive then mark it as dead and return the tuple
<code class="docutils literal notranslate"><span class="pre">(obj,</span> <span class="pre">func,</span> <span class="pre">args,</span> <span class="pre">kwargs)</span></code>.  If <em>self</em> is dead then return
<a class="reference internal" href="constants.html#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a>.</p>
</dd></dl>
<dl class="method">
<dt id="weakref.finalize.peek">
<code class="descname">peek</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#weakref.finalize.peek" title="Permalink to this definition">¶</a></dt>
<dd><p>If <em>self</em> is alive then return the tuple <code class="docutils literal notranslate"><span class="pre">(obj,</span> <span class="pre">func,</span> <span class="pre">args,</span>
<span class="pre">kwargs)</span></code>.  If <em>self</em> is dead then return <a class="reference internal" href="constants.html#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a>.</p>
</dd></dl>
<dl class="attribute">
<dt id="weakref.finalize.alive">
<code class="descname">alive</code><a class="headerlink" href="#weakref.finalize.alive" title="Permalink to this definition">¶</a></dt>
<dd><p>Property which is true if the finalizer is alive, false otherwise.</p>
</dd></dl>
<dl class="attribute">
<dt id="weakref.finalize.atexit">
<code class="descname">atexit</code><a class="headerlink" href="#weakref.finalize.atexit" title="Permalink to this definition">¶</a></dt>
<dd><p>A writable boolean property which by default is true.  When the
program exits, it calls all remaining live finalizers for which
<a class="reference internal" href="#weakref.finalize.atexit" title="weakref.finalize.atexit"><code class="xref py py-attr docutils literal notranslate"><span class="pre">atexit</span></code></a> is true.  They are called in reverse order of
creation.</p>
</dd></dl>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">It is important to ensure that <em>func</em>, <em>args</em> and <em>kwargs</em> do
not own any references to <em>obj</em>, either directly or indirectly,
since otherwise <em>obj</em> will never be garbage collected.  In
particular, <em>func</em> should not be a bound method of <em>obj</em>.</p>
</div>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.4.</span></p>
</div>
</dd>