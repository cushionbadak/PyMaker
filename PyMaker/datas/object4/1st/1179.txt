link:
library/calendar.html#calendar.Calendar

docs:

<dt id="calendar.Calendar">
<em class="property">class </em><code class="descclassname">calendar.</code><code class="descname">Calendar</code><span class="sig-paren">(</span><em>firstweekday=0</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates a <a class="reference internal" href="#calendar.Calendar" title="calendar.Calendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">Calendar</span></code></a> object. <em>firstweekday</em> is an integer specifying the
first day of the week. <code class="docutils literal notranslate"><span class="pre">0</span></code> is Monday (the default), <code class="docutils literal notranslate"><span class="pre">6</span></code> is Sunday.</p>
<p>A <a class="reference internal" href="#calendar.Calendar" title="calendar.Calendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">Calendar</span></code></a> object provides several methods that can be used for
preparing the calendar data for formatting. This class doesn’t do any formatting
itself. This is the job of subclasses.</p>
<p><a class="reference internal" href="#calendar.Calendar" title="calendar.Calendar"><code class="xref py py-class docutils literal notranslate"><span class="pre">Calendar</span></code></a> instances have the following methods:</p>
<dl class="method">
<dt id="calendar.Calendar.iterweekdays">
<code class="descname">iterweekdays</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.iterweekdays" title="Permalink to this definition">¶</a></dt>
<dd><p>Return an iterator for the week day numbers that will be used for one
week.  The first value from the iterator will be the same as the value of
the <a class="reference internal" href="#calendar.firstweekday" title="calendar.firstweekday"><code class="xref py py-attr docutils literal notranslate"><span class="pre">firstweekday</span></code></a> property.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.itermonthdates">
<code class="descname">itermonthdates</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.itermonthdates" title="Permalink to this definition">¶</a></dt>
<dd><p>Return an iterator for the month <em>month</em> (1–12) in the year <em>year</em>. This
iterator will return all days (as <a class="reference internal" href="datetime.html#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> objects) for the
month and all days before the start of the month or after the end of the
month that are required to get a complete week.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.itermonthdays">
<code class="descname">itermonthdays</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.itermonthdays" title="Permalink to this definition">¶</a></dt>
<dd><p>Return an iterator for the month <em>month</em> in the year <em>year</em> similar to
<a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a>, but not restricted by the <a class="reference internal" href="datetime.html#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a>
range. Days returned will simply be day of the month numbers.  For the
days outside of the specified month, the day number is <code class="docutils literal notranslate"><span class="pre">0</span></code>.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.itermonthdays2">
<code class="descname">itermonthdays2</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.itermonthdays2" title="Permalink to this definition">¶</a></dt>
<dd><p>Return an iterator for the month <em>month</em> in the year <em>year</em> similar to
<a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a>, but not restricted by the <a class="reference internal" href="datetime.html#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a>
range. Days returned will be tuples consisting of a day of the month
number and a week day number.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.itermonthdays3">
<code class="descname">itermonthdays3</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.itermonthdays3" title="Permalink to this definition">¶</a></dt>
<dd><p>Return an iterator for the month <em>month</em> in the year <em>year</em> similar to
<a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a>, but not restricted by the <a class="reference internal" href="datetime.html#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a>
range. Days returned will be tuples consisting of a year, a month and a day
of the month numbers.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.7.</span></p>
</div>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.itermonthdays4">
<code class="descname">itermonthdays4</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.itermonthdays4" title="Permalink to this definition">¶</a></dt>
<dd><p>Return an iterator for the month <em>month</em> in the year <em>year</em> similar to
<a class="reference internal" href="#calendar.Calendar.itermonthdates" title="calendar.Calendar.itermonthdates"><code class="xref py py-meth docutils literal notranslate"><span class="pre">itermonthdates()</span></code></a>, but not restricted by the <a class="reference internal" href="datetime.html#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a>
range. Days returned will be tuples consisting of a year, a month, a day
of the month, and a day of the week numbers.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.7.</span></p>
</div>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.monthdatescalendar">
<code class="descname">monthdatescalendar</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.monthdatescalendar" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a list of the weeks in the month <em>month</em> of the <em>year</em> as full
weeks.  Weeks are lists of seven <a class="reference internal" href="datetime.html#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> objects.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.monthdays2calendar">
<code class="descname">monthdays2calendar</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.monthdays2calendar" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a list of the weeks in the month <em>month</em> of the <em>year</em> as full
weeks.  Weeks are lists of seven tuples of day numbers and weekday
numbers.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.monthdayscalendar">
<code class="descname">monthdayscalendar</code><span class="sig-paren">(</span><em>year</em>, <em>month</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.monthdayscalendar" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a list of the weeks in the month <em>month</em> of the <em>year</em> as full
weeks.  Weeks are lists of seven day numbers.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.yeardatescalendar">
<code class="descname">yeardatescalendar</code><span class="sig-paren">(</span><em>year</em>, <em>width=3</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.yeardatescalendar" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the data for the specified year ready for formatting. The return
value is a list of month rows. Each month row contains up to <em>width</em>
months (defaulting to 3). Each month contains between 4 and 6 weeks and
each week contains 1–7 days. Days are <a class="reference internal" href="datetime.html#datetime.date" title="datetime.date"><code class="xref py py-class docutils literal notranslate"><span class="pre">datetime.date</span></code></a> objects.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.yeardays2calendar">
<code class="descname">yeardays2calendar</code><span class="sig-paren">(</span><em>year</em>, <em>width=3</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.yeardays2calendar" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the data for the specified year ready for formatting (similar to
<a class="reference internal" href="#calendar.Calendar.yeardatescalendar" title="calendar.Calendar.yeardatescalendar"><code class="xref py py-meth docutils literal notranslate"><span class="pre">yeardatescalendar()</span></code></a>). Entries in the week lists are tuples of day
numbers and weekday numbers. Day numbers outside this month are zero.</p>
</dd></dl>
<dl class="method">
<dt id="calendar.Calendar.yeardayscalendar">
<code class="descname">yeardayscalendar</code><span class="sig-paren">(</span><em>year</em>, <em>width=3</em><span class="sig-paren">)</span><a class="headerlink" href="#calendar.Calendar.yeardayscalendar" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the data for the specified year ready for formatting (similar to
<a class="reference internal" href="#calendar.Calendar.yeardatescalendar" title="calendar.Calendar.yeardatescalendar"><code class="xref py py-meth docutils literal notranslate"><span class="pre">yeardatescalendar()</span></code></a>). Entries in the week lists are day numbers. Day
numbers outside this month are zero.</p>
</dd></dl>
</dd>