link:
library/logging.html#logging.disable

docs:

<dt id="logging.disable">
<code class="descclassname">logging.</code><code class="descname">disable</code><span class="sig-paren">(</span><em>lvl=CRITICAL</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.disable" title="Permalink to this definition">¶</a></dt>
<dd><p>Provides an overriding level <em>lvl</em> for all loggers which takes precedence over
the logger’s own level. When the need arises to temporarily throttle logging
output down across the whole application, this function can be useful. Its
effect is to disable all logging calls of severity <em>lvl</em> and below, so that
if you call it with a value of INFO, then all INFO and DEBUG events would be
discarded, whereas those of severity WARNING and above would be processed
according to the logger’s effective level. If
<code class="docutils literal notranslate"><span class="pre">logging.disable(logging.NOTSET)</span></code> is called, it effectively removes this
overriding level, so that logging output again depends on the effective
levels of individual loggers.</p>
<p>Note that if you have defined any custom logging level higher than
<code class="docutils literal notranslate"><span class="pre">CRITICAL</span></code> (this is not recommended), you won’t be able to rely on the
default value for the <em>lvl</em> parameter, but will have to explicitly supply a
suitable value.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.7: </span>The <em>lvl</em> parameter was defaulted to level <code class="docutils literal notranslate"><span class="pre">CRITICAL</span></code>. See Issue
#28524 for more information about this change.</p>
</div>
</dd>