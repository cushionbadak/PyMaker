link:
reference/import.html#namespace-packages

docs:

5.2.2. Namespace packagesÂ¶
A namespace package is a composite of various portions,
where each portion contributes a subpackage to the parent package.  Portions
may reside in different locations on the file system.  Portions may also be
found in zip files, on the network, or anywhere else that Python searches
during import.  Namespace packages may or may not correspond directly to
objects on the file system; they may be virtual modules that have no concrete
representation.
Namespace packages do not use an ordinary list for their __path__
attribute. They instead use a custom iterable type which will automatically
perform a new search for package portions on the next import attempt within
that package if the path of their parent package (or sys.path for a
top level package) changes.
With namespace packages, there is no parent/__init__.py file.  In fact,
there may be multiple parent directories found during import search, where
each one is provided by a different portion.  Thus parent/one may not be
physically located next to parent/two.  In this case, Python will create a
namespace package for the top-level parent package whenever it or one of
its subpackages is imported.
See also PEP 420 for the namespace package specification.
