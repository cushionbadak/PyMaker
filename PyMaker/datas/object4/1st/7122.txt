link:
library/socketserver.html#socketserver.TCPServer

docs:

<dt id="socketserver.TCPServer">
<em class="property">class </em><code class="descclassname">socketserver.</code><code class="descname">TCPServer</code><span class="sig-paren">(</span><em>server_address</em>, <em>RequestHandlerClass</em>, <em>bind_and_activate=True</em><span class="sig-paren">)</span><a class="headerlink" href="#socketserver.TCPServer" title="Permalink to this definition">Â¶</a></dt>
<dd><p>This uses the Internet TCP protocol, which provides for
continuous streams of data between the client and server.
If <em>bind_and_activate</em> is true, the constructor automatically attempts to
invoke <a class="reference internal" href="#socketserver.BaseServer.server_bind" title="socketserver.BaseServer.server_bind"><code class="xref py py-meth docutils literal notranslate"><span class="pre">server_bind()</span></code></a> and
<a class="reference internal" href="#socketserver.BaseServer.server_activate" title="socketserver.BaseServer.server_activate"><code class="xref py py-meth docutils literal notranslate"><span class="pre">server_activate()</span></code></a>.  The other parameters are passed to
the <a class="reference internal" href="#socketserver.BaseServer" title="socketserver.BaseServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">BaseServer</span></code></a> base class.</p>
</dd>