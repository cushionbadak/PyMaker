link:
library/bdb.html#bdb.Breakpoint

docs:

<dt id="bdb.Breakpoint">
<em class="property">class </em><code class="descclassname">bdb.</code><code class="descname">Breakpoint</code><span class="sig-paren">(</span><em>self</em>, <em>file</em>, <em>line</em>, <em>temporary=0</em>, <em>cond=None</em>, <em>funcname=None</em><span class="sig-paren">)</span><a class="headerlink" href="#bdb.Breakpoint" title="Permalink to this definition">¶</a></dt>
<dd><p>This class implements temporary breakpoints, ignore counts, disabling and
(re-)enabling, and conditionals.</p>
<p>Breakpoints are indexed by number through a list called <code class="xref py py-attr docutils literal notranslate"><span class="pre">bpbynumber</span></code>
and by <code class="docutils literal notranslate"><span class="pre">(file,</span> <span class="pre">line)</span></code> pairs through <code class="xref py py-attr docutils literal notranslate"><span class="pre">bplist</span></code>.  The former points to a
single instance of class <a class="reference internal" href="#bdb.Breakpoint" title="bdb.Breakpoint"><code class="xref py py-class docutils literal notranslate"><span class="pre">Breakpoint</span></code></a>.  The latter points to a list of
such instances since there may be more than one breakpoint per line.</p>
<p>When creating a breakpoint, its associated filename should be in canonical
form.  If a <em>funcname</em> is defined, a breakpoint hit will be counted when the
first line of that function is executed.  A conditional breakpoint always
counts a hit.</p>
<p><a class="reference internal" href="#bdb.Breakpoint" title="bdb.Breakpoint"><code class="xref py py-class docutils literal notranslate"><span class="pre">Breakpoint</span></code></a> instances have the following methods:</p>
<dl class="method">
<dt id="bdb.Breakpoint.deleteMe">
<code class="descname">deleteMe</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#bdb.Breakpoint.deleteMe" title="Permalink to this definition">¶</a></dt>
<dd><p>Delete the breakpoint from the list associated to a file/line.  If it is
the last breakpoint in that position, it also deletes the entry for the
file/line.</p>
</dd></dl>
<dl class="method">
<dt id="bdb.Breakpoint.enable">
<code class="descname">enable</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#bdb.Breakpoint.enable" title="Permalink to this definition">¶</a></dt>
<dd><p>Mark the breakpoint as enabled.</p>
</dd></dl>
<dl class="method">
<dt id="bdb.Breakpoint.disable">
<code class="descname">disable</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#bdb.Breakpoint.disable" title="Permalink to this definition">¶</a></dt>
<dd><p>Mark the breakpoint as disabled.</p>
</dd></dl>
<dl class="method">
<dt id="bdb.Breakpoint.bpformat">
<code class="descname">bpformat</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#bdb.Breakpoint.bpformat" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a string with all the information about the breakpoint, nicely
formatted:</p>
<ul class="simple">
<li>The breakpoint number.</li>
<li>If it is temporary or not.</li>
<li>Its file,line position.</li>
<li>The condition that causes a break.</li>
<li>If it must be ignored the next N times.</li>
<li>The breakpoint hit count.</li>
</ul>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.2.</span></p>
</div>
</dd></dl>
<dl class="method">
<dt id="bdb.Breakpoint.bpprint">
<code class="descname">bpprint</code><span class="sig-paren">(</span><em>out=None</em><span class="sig-paren">)</span><a class="headerlink" href="#bdb.Breakpoint.bpprint" title="Permalink to this definition">¶</a></dt>
<dd><p>Print the output of <a class="reference internal" href="#bdb.Breakpoint.bpformat" title="bdb.Breakpoint.bpformat"><code class="xref py py-meth docutils literal notranslate"><span class="pre">bpformat()</span></code></a> to the file <em>out</em>, or if it is
<code class="docutils literal notranslate"><span class="pre">None</span></code>, to standard output.</p>
</dd></dl>
</dd>