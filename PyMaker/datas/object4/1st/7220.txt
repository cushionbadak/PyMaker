link:
library/http.cookies.html#cookie-objects

docs:

Cookie Objects¶


BaseCookie.value_decode(val)¶
Return a tuple (real_value, coded_value) from a string representation.
real_value can be any type. This method does no decoding in
BaseCookie — it exists so it can be overridden.



BaseCookie.value_encode(val)¶
Return a tuple (real_value, coded_value). val can be any type, but
coded_value will always be converted to a string.
This method does no encoding in BaseCookie — it exists so it can
be overridden.
In general, it should be the case that value_encode() and
value_decode() are inverses on the range of value_decode.



BaseCookie.output(attrs=None, header='Set-Cookie:', sep='\r\n')¶
Return a string representation suitable to be sent as HTTP headers. attrs and
header are sent to each Morsel’s output() method. sep is used
to join the headers together, and is by default the combination '\r\n'
(CRLF).



BaseCookie.js_output(attrs=None)¶
Return an embeddable JavaScript snippet, which, if run on a browser which
supports JavaScript, will act the same as if the HTTP headers was sent.
The meaning for attrs is the same as in output().



BaseCookie.load(rawdata)¶
If rawdata is a string, parse it as an HTTP_COOKIE and add the values
found there as Morsels. If it is a dictionary, it is equivalent to:
for k, v in rawdata.items():
    cookie[k] = v



