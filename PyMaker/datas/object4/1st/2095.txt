link:
library/os.path.html#os.path.join

docs:

<dt id="os.path.join">
<code class="descclassname">os.path.</code><code class="descname">join</code><span class="sig-paren">(</span><em>path</em>, <em>*paths</em><span class="sig-paren">)</span><a class="headerlink" href="#os.path.join" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Join one or more path components intelligently.  The return value is the
concatenation of <em>path</em> and any members of <em>*paths</em> with exactly one
directory separator (<code class="docutils literal notranslate"><span class="pre">os.sep</span></code>) following each non-empty part except the
last, meaning that the result will only end in a separator if the last
part is empty.  If a component is an absolute path, all previous
components are thrown away and joining continues from the absolute path
component.</p>
<p>On Windows, the drive letter is not reset when an absolute path component
(e.g., <code class="docutils literal notranslate"><span class="pre">r'\foo'</span></code>) is encountered.  If a component contains a drive
letter, all previous components are thrown away and the drive letter is
reset.  Note that since there is a current directory for each drive,
<code class="docutils literal notranslate"><span class="pre">os.path.join("c:",</span> <span class="pre">"foo")</span></code> represents a path relative to the current
directory on drive <code class="file docutils literal notranslate"><span class="pre">C:</span></code> (<code class="file docutils literal notranslate"><span class="pre">c:foo</span></code>), not <code class="file docutils literal notranslate"><span class="pre">c:\foo</span></code>.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>Accepts a <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like object</span></a> for <em>path</em> and <em>paths</em>.</p>
</div>
</dd>