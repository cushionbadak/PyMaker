link:
library/re.html#re.Match.end

docs:

<dt id="re.Match.start">
<code class="descclassname">Match.</code><code class="descname">start</code><span class="sig-paren">(</span><span class="optional">[</span><em>group</em><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#re.Match.start" title="Permalink to this definition">¶</a></dt>
<dt id="re.Match.end">
<code class="descclassname">Match.</code><code class="descname">end</code><span class="sig-paren">(</span><span class="optional">[</span><em>group</em><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#re.Match.end" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the indices of the start and end of the substring matched by <em>group</em>;
<em>group</em> defaults to zero (meaning the whole matched substring). Return <code class="docutils literal notranslate"><span class="pre">-1</span></code> if
<em>group</em> exists but did not contribute to the match.  For a match object <em>m</em>, and
a group <em>g</em> that did contribute to the match, the substring matched by group <em>g</em>
(equivalent to <code class="docutils literal notranslate"><span class="pre">m.group(g)</span></code>) is</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">m</span><span class="o">.</span><span class="n">string</span><span class="p">[</span><span class="n">m</span><span class="o">.</span><span class="n">start</span><span class="p">(</span><span class="n">g</span><span class="p">):</span><span class="n">m</span><span class="o">.</span><span class="n">end</span><span class="p">(</span><span class="n">g</span><span class="p">)]</span>
</pre></div>
</div>
<p>Note that <code class="docutils literal notranslate"><span class="pre">m.start(group)</span></code> will equal <code class="docutils literal notranslate"><span class="pre">m.end(group)</span></code> if <em>group</em> matched a
null string.  For example, after <code class="docutils literal notranslate"><span class="pre">m</span> <span class="pre">=</span> <span class="pre">re.search('b(c?)',</span> <span class="pre">'cba')</span></code>,
<code class="docutils literal notranslate"><span class="pre">m.start(0)</span></code> is 1, <code class="docutils literal notranslate"><span class="pre">m.end(0)</span></code> is 2, <code class="docutils literal notranslate"><span class="pre">m.start(1)</span></code> and <code class="docutils literal notranslate"><span class="pre">m.end(1)</span></code> are both
2, and <code class="docutils literal notranslate"><span class="pre">m.start(2)</span></code> raises an <a class="reference internal" href="exceptions.html#IndexError" title="IndexError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">IndexError</span></code></a> exception.</p>
<p>An example that will remove <em>remove_this</em> from email addresses:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">email</span> <span class="o">=</span> <span class="s2">"tony@tiremove_thisger.net"</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">"remove_this"</span><span class="p">,</span> <span class="n">email</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">email</span><span class="p">[:</span><span class="n">m</span><span class="o">.</span><span class="n">start</span><span class="p">()]</span> <span class="o">+</span> <span class="n">email</span><span class="p">[</span><span class="n">m</span><span class="o">.</span><span class="n">end</span><span class="p">():]</span>
<span class="go">'tony@tiger.net'</span>
</pre></div>
</div>
</dd>