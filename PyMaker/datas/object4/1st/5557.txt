link:
library/email.generator.html#email.generator.BytesGenerator

docs:


class email.generator.BytesGenerator(outfp, mangle_from_=None, maxheaderlen=None, *, policy=None)¶
Return a BytesGenerator object that will write any message provided
to the flatten() method, or any surrogateescape encoded text provided
to the write() method, to the file-like object outfp.
outfp must support a write method that accepts binary data.
If optional mangle_from_ is True, put a > character in front of
any line in the body that starts with the exact string "From ", that is
From followed by a space at the beginning of a line.  mangle_from_
defaults to the value of the mangle_from_
setting of the policy (which is True for the
compat32 policy and False for all others).
mangle_from_ is intended for use when messages are stored in unix mbox
format (see mailbox and WHY THE CONTENT-LENGTH FORMAT IS BAD).
If maxheaderlen is not None, refold any header lines that are longer
than maxheaderlen, or if 0, do not rewrap any headers.  If
manheaderlen is None (the default), wrap headers and other message
lines according to the policy settings.
If policy is specified, use that policy to control message generation.  If
policy is None (the default), use the policy associated with the
Message or EmailMessage
object passed to flatten to control the message generation.  See
email.policy for details on what policy controls.

New in version 3.2.


Changed in version 3.3: Added the policy keyword.


Changed in version 3.6: The default behavior of the mangle_from_
and maxheaderlen parameters is to follow the policy.



flatten(msg, unixfrom=False, linesep=None)¶
Print the textual representation of the message object structure rooted
at msg to the output file specified when the BytesGenerator
instance was created.
If the policy option cte_type
is 8bit (the default), copy any headers in the original parsed
message that have not been modified to the output with any bytes with the
high bit set reproduced as in the original, and preserve the non-ASCII
Content-Transfer-Encoding of any body parts that have them.
If cte_type is 7bit, convert the bytes with the high bit set as
needed using an ASCII-compatible Content-Transfer-Encoding.
That is, transform parts with non-ASCII
Content-Transfer-Encoding
(Content-Transfer-Encoding: 8bit) to an ASCII compatible
Content-Transfer-Encoding, and encode RFC-invalid non-ASCII
bytes in headers using the MIME unknown-8bit character set, thus
rendering them RFC-compliant.
If unixfrom is True, print the envelope header delimiter used by
the Unix mailbox format (see mailbox) before the first of the
RFC 5322 headers of the root message object.  If the root object has
no envelope header, craft a standard one.  The default is False.
Note that for subparts, no envelope header is ever printed.
If linesep is not None, use it as the separator character between
all the lines of the flattened message.  If linesep is None (the
default), use the value specified in the policy.



clone(fp)¶
Return an independent clone of this BytesGenerator instance with
the exact same option settings, and fp as the new outfp.



write(s)¶
Encode s using the ASCII codec and the surrogateescape error
handler, and pass it to the write method of the outfp passed to the
BytesGenerator’s constructor.

