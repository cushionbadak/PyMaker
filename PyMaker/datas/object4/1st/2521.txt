link:
library/lzma.html#lzma.LZMADecompressor

docs:

<dt id="lzma.LZMADecompressor">
<em class="property">class </em><code class="descclassname">lzma.</code><code class="descname">LZMADecompressor</code><span class="sig-paren">(</span><em>format=FORMAT_AUTO</em>, <em>memlimit=None</em>, <em>filters=None</em><span class="sig-paren">)</span><a class="headerlink" href="#lzma.LZMADecompressor" title="Permalink to this definition">¶</a></dt>
<dd><p>Create a decompressor object, which can be used to decompress data
incrementally.</p>
<p>For a more convenient way of decompressing an entire compressed stream at
once, see <a class="reference internal" href="#lzma.decompress" title="lzma.decompress"><code class="xref py py-func docutils literal notranslate"><span class="pre">decompress()</span></code></a>.</p>
<p>The <em>format</em> argument specifies the container format that should be used. The
default is <code class="xref py py-const docutils literal notranslate"><span class="pre">FORMAT_AUTO</span></code>, which can decompress both <code class="docutils literal notranslate"><span class="pre">.xz</span></code> and
<code class="docutils literal notranslate"><span class="pre">.lzma</span></code> files. Other possible values are <code class="xref py py-const docutils literal notranslate"><span class="pre">FORMAT_XZ</span></code>,
<code class="xref py py-const docutils literal notranslate"><span class="pre">FORMAT_ALONE</span></code>, and <code class="xref py py-const docutils literal notranslate"><span class="pre">FORMAT_RAW</span></code>.</p>
<p>The <em>memlimit</em> argument specifies a limit (in bytes) on the amount of memory
that the decompressor can use. When this argument is used, decompression will
fail with an <a class="reference internal" href="#lzma.LZMAError" title="lzma.LZMAError"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAError</span></code></a> if it is not possible to decompress the input
within the given memory limit.</p>
<p>The <em>filters</em> argument specifies the filter chain that was used to create
the stream being decompressed. This argument is required if <em>format</em> is
<code class="xref py py-const docutils literal notranslate"><span class="pre">FORMAT_RAW</span></code>, but should not be used for other formats.
See <a class="reference internal" href="#filter-chain-specs"><span class="std std-ref">Specifying custom filter chains</span></a> for more information about filter chains.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">This class does not transparently handle inputs containing multiple
compressed streams, unlike <a class="reference internal" href="#lzma.decompress" title="lzma.decompress"><code class="xref py py-func docutils literal notranslate"><span class="pre">decompress()</span></code></a> and <a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a>. To
decompress a multi-stream input with <a class="reference internal" href="#lzma.LZMADecompressor" title="lzma.LZMADecompressor"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMADecompressor</span></code></a>, you must
create a new decompressor for each stream.</p>
</div>
<dl class="method">
<dt id="lzma.LZMADecompressor.decompress">
<code class="descname">decompress</code><span class="sig-paren">(</span><em>data</em>, <em>max_length=-1</em><span class="sig-paren">)</span><a class="headerlink" href="#lzma.LZMADecompressor.decompress" title="Permalink to this definition">¶</a></dt>
<dd><p>Decompress <em>data</em> (a <a class="reference internal" href="../glossary.html#term-bytes-like-object"><span class="xref std std-term">bytes-like object</span></a>), returning
uncompressed data as bytes. Some of <em>data</em> may be buffered
internally, for use in later calls to <a class="reference internal" href="#lzma.decompress" title="lzma.decompress"><code class="xref py py-meth docutils literal notranslate"><span class="pre">decompress()</span></code></a>. The
returned data should be concatenated with the output of any
previous calls to <a class="reference internal" href="#lzma.decompress" title="lzma.decompress"><code class="xref py py-meth docutils literal notranslate"><span class="pre">decompress()</span></code></a>.</p>
<p>If <em>max_length</em> is nonnegative, returns at most <em>max_length</em>
bytes of decompressed data. If this limit is reached and further
output can be produced, the <a class="reference internal" href="#lzma.LZMADecompressor.needs_input" title="lzma.LZMADecompressor.needs_input"><code class="xref py py-attr docutils literal notranslate"><span class="pre">needs_input</span></code></a> attribute will
be set to <code class="docutils literal notranslate"><span class="pre">False</span></code>. In this case, the next call to
<a class="reference internal" href="#lzma.LZMADecompressor.decompress" title="lzma.LZMADecompressor.decompress"><code class="xref py py-meth docutils literal notranslate"><span class="pre">decompress()</span></code></a> may provide <em>data</em> as <code class="docutils literal notranslate"><span class="pre">b''</span></code> to obtain
more of the output.</p>
<p>If all of the input data was decompressed and returned (either
because this was less than <em>max_length</em> bytes, or because
<em>max_length</em> was negative), the <a class="reference internal" href="#lzma.LZMADecompressor.needs_input" title="lzma.LZMADecompressor.needs_input"><code class="xref py py-attr docutils literal notranslate"><span class="pre">needs_input</span></code></a> attribute
will be set to <code class="docutils literal notranslate"><span class="pre">True</span></code>.</p>
<p>Attempting to decompress data after the end of stream is reached
raises an <cite>EOFError</cite>.  Any data found after the end of the
stream is ignored and saved in the <a class="reference internal" href="#lzma.LZMADecompressor.unused_data" title="lzma.LZMADecompressor.unused_data"><code class="xref py py-attr docutils literal notranslate"><span class="pre">unused_data</span></code></a> attribute.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>Added the <em>max_length</em> parameter.</p>
</div>
</dd></dl>
<dl class="attribute">
<dt id="lzma.LZMADecompressor.check">
<code class="descname">check</code><a class="headerlink" href="#lzma.LZMADecompressor.check" title="Permalink to this definition">¶</a></dt>
<dd><p>The ID of the integrity check used by the input stream. This may be
<code class="xref py py-const docutils literal notranslate"><span class="pre">CHECK_UNKNOWN</span></code> until enough of the input has been decoded to
determine what integrity check it uses.</p>
</dd></dl>
<dl class="attribute">
<dt id="lzma.LZMADecompressor.eof">
<code class="descname">eof</code><a class="headerlink" href="#lzma.LZMADecompressor.eof" title="Permalink to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">True</span></code> if the end-of-stream marker has been reached.</p>
</dd></dl>
<dl class="attribute">
<dt id="lzma.LZMADecompressor.unused_data">
<code class="descname">unused_data</code><a class="headerlink" href="#lzma.LZMADecompressor.unused_data" title="Permalink to this definition">¶</a></dt>
<dd><p>Data found after the end of the compressed stream.</p>
<p>Before the end of the stream is reached, this will be <code class="docutils literal notranslate"><span class="pre">b""</span></code>.</p>
</dd></dl>
<dl class="attribute">
<dt id="lzma.LZMADecompressor.needs_input">
<code class="descname">needs_input</code><a class="headerlink" href="#lzma.LZMADecompressor.needs_input" title="Permalink to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">False</span></code> if the <a class="reference internal" href="#lzma.LZMADecompressor.decompress" title="lzma.LZMADecompressor.decompress"><code class="xref py py-meth docutils literal notranslate"><span class="pre">decompress()</span></code></a> method can provide more
decompressed data before requiring new uncompressed input.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.5.</span></p>
</div>
</dd></dl>
</dd>