link:
library/os.html#os.startfile

docs:


os.startfile(path[, operation])¶
Start a file with its associated application.
When operation is not specified or 'open', this acts like double-clicking
the file in Windows Explorer, or giving the file name as an argument to the
start command from the interactive command shell: the file is opened
with whatever application (if any) its extension is associated.
When another operation is given, it must be a “command verb” that specifies
what should be done with the file. Common verbs documented by Microsoft are
'print' and  'edit' (to be used on files) as well as 'explore' and
'find' (to be used on directories).
startfile() returns as soon as the associated application is launched.
There is no option to wait for the application to close, and no way to retrieve
the application’s exit status.  The path parameter is relative to the current
directory.  If you want to use an absolute path, make sure the first character
is not a slash ('/'); the underlying Win32 ShellExecute() function
doesn’t work if it is.  Use the os.path.normpath() function to ensure that
the path is properly encoded for Win32.
To reduce interpreter startup overhead, the Win32 ShellExecute()
function is not resolved until this function is first called.  If the function
cannot be resolved, NotImplementedError will be raised.
Availability: Windows.
