link:
library/stdtypes.html#str.translate

docs:

<dt id="str.translate">
<code class="descclassname">str.</code><code class="descname">translate</code><span class="sig-paren">(</span><em>table</em><span class="sig-paren">)</span><a class="headerlink" href="#str.translate" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a copy of the string in which each character has been mapped through
the given translation table.  The table must be an object that implements
indexing via <a class="reference internal" href="../reference/datamodel.html#object.__getitem__" title="object.__getitem__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__getitem__()</span></code></a>, typically a <a class="reference internal" href="../glossary.html#term-mapping"><span class="xref std std-term">mapping</span></a> or
<a class="reference internal" href="../glossary.html#term-sequence"><span class="xref std std-term">sequence</span></a>.  When indexed by a Unicode ordinal (an integer), the
table object can do any of the following: return a Unicode ordinal or a
string, to map the character to one or more other characters; return
<code class="docutils literal notranslate"><span class="pre">None</span></code>, to delete the character from the return string; or raise a
<a class="reference internal" href="exceptions.html#LookupError" title="LookupError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">LookupError</span></code></a> exception, to map the character to itself.</p>
<p>You can use <a class="reference internal" href="#str.maketrans" title="str.maketrans"><code class="xref py py-meth docutils literal notranslate"><span class="pre">str.maketrans()</span></code></a> to create a translation map from
character-to-character mappings in different formats.</p>
<p>See also the <a class="reference internal" href="codecs.html#module-codecs" title="codecs: Encode and decode data and streams."><code class="xref py py-mod docutils literal notranslate"><span class="pre">codecs</span></code></a> module for a more flexible approach to custom
character mappings.</p>
</dd>