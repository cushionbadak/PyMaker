link:
library/locale.html#locale.format

docs:

<dt id="locale.format">
<code class="descclassname">locale.</code><code class="descname">format</code><span class="sig-paren">(</span><em>format</em>, <em>val</em>, <em>grouping=False</em>, <em>monetary=False</em><span class="sig-paren">)</span><a class="headerlink" href="#locale.format" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Please note that this function works like <a class="reference internal" href="#locale.format_string" title="locale.format_string"><code class="xref py py-meth docutils literal notranslate"><span class="pre">format_string()</span></code></a> but will
only work for exactly one <code class="docutils literal notranslate"><span class="pre">%char</span></code> specifier.  For example, <code class="docutils literal notranslate"><span class="pre">'%f'</span></code> and
<code class="docutils literal notranslate"><span class="pre">'%.0f'</span></code> are both valid specifiers, but <code class="docutils literal notranslate"><span class="pre">'%f</span> <span class="pre">KiB'</span></code> is not.</p>
<p>For whole format strings, use <a class="reference internal" href="#locale.format_string" title="locale.format_string"><code class="xref py py-func docutils literal notranslate"><span class="pre">format_string()</span></code></a>.</p>
<div class="deprecated">
<p><span class="versionmodified">Deprecated since version 3.7: </span>Use <a class="reference internal" href="#locale.format_string" title="locale.format_string"><code class="xref py py-meth docutils literal notranslate"><span class="pre">format_string()</span></code></a> instead.</p>
</div>
</dd>