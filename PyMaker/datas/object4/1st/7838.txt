link:
library/turtle.html#tell-turtle-s-state

docs:

Tell Turtle’s state¶


turtle.position()¶

turtle.pos()¶
Return the turtle’s current location (x,y) (as a Vec2D vector).
>>> turtle.pos()
(440.00,-0.00)





turtle.towards(x, y=None)¶




Parameters:
x – a number or a pair/vector of numbers or a turtle instance
y – a number if x is a number, else None





Return the angle between the line from turtle position to position specified
by (x,y), the vector or the other turtle.  This depends on the turtle’s start
orientation which depends on the mode - “standard”/”world” or “logo”).
>>> turtle.goto(10, 10)
>>> turtle.towards(0,0)
225.0





turtle.xcor()¶
Return the turtle’s x coordinate.
>>> turtle.home()
>>> turtle.left(50)
>>> turtle.forward(100)
>>> turtle.pos()
(64.28,76.60)
>>> print(round(turtle.xcor(), 5))
64.27876





turtle.ycor()¶
Return the turtle’s y coordinate.
>>> turtle.home()
>>> turtle.left(60)
>>> turtle.forward(100)
>>> print(turtle.pos())
(50.00,86.60)
>>> print(round(turtle.ycor(), 5))
86.60254





turtle.heading()¶
Return the turtle’s current heading (value depends on the turtle mode, see
mode()).
>>> turtle.home()
>>> turtle.left(67)
>>> turtle.heading()
67.0





turtle.distance(x, y=None)¶




Parameters:
x – a number or a pair/vector of numbers or a turtle instance
y – a number if x is a number, else None





Return the distance from the turtle to (x,y), the given vector, or the given
other turtle, in turtle step units.
>>> turtle.home()
>>> turtle.distance(30,40)
50.0
>>> turtle.distance((30,40))
50.0
>>> joe = Turtle()
>>> joe.forward(77)
>>> turtle.distance(joe)
77.0



