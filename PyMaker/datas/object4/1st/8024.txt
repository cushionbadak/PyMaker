link:
library/tkinter.html#tkinter-life-preserver

docs:

Tkinter Life Preserver¶
This section is not designed to be an exhaustive tutorial on either Tk or
Tkinter.  Rather, it is intended as a stop gap, providing some introductory
orientation on the system.
Credits:

Tk was written by John Ousterhout while at Berkeley.
Tkinter was written by Steen Lumholt and Guido van Rossum.
This Life Preserver was written by Matt Conway at the University of Virginia.
The HTML rendering, and some liberal editing, was produced from a FrameMaker
version by Ken Manheimer.
Fredrik Lundh elaborated and revised the class interface descriptions, to get
them current with Tk 4.2.
Mike Clarkson converted the documentation to LaTeX, and compiled the  User
Interface chapter of the reference manual.


How To Use This Section¶
This section is designed in two parts: the first half (roughly) covers
background material, while the second half can be taken to the keyboard as a
handy reference.
When trying to answer questions of the form “how do I do blah”, it is often best
to find out how to do “blah” in straight Tk, and then convert this back into the
corresponding tkinter call. Python programmers can often guess at the
correct Python command by looking at the Tk documentation. This means that in
order to use Tkinter, you will have to know a little bit about Tk. This document
can’t fulfill that role, so the best we can do is point you to the best
documentation that exists. Here are some hints:

The authors strongly suggest getting a copy of the Tk man pages.
Specifically, the man pages in the manN directory are most useful.
The man3 man pages describe the C interface to the Tk library and thus
are not especially helpful for script writers.
Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John
Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk for
the novice.  The book is not exhaustive, and for many details it defers to the
man pages.
tkinter/__init__.py is a last resort for most, but can be a good
place to go when nothing else makes sense.



A Simple Hello World Program¶
import tkinter as tk

class Application(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.pack()
        self.create_widgets()

    def create_widgets(self):
        self.hi_there = tk.Button(self)
        self.hi_there["text"] = "Hello World\n(click me)"
        self.hi_there["command"] = self.say_hi
        self.hi_there.pack(side="top")

        self.quit = tk.Button(self, text="QUIT", fg="red",
                              command=self.master.destroy)
        self.quit.pack(side="bottom")

    def say_hi(self):
        print("hi there, everyone!")

root = tk.Tk()
app = Application(master=root)
app.mainloop()



