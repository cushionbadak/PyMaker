link:
library/mailbox.html#mailbox.Mailbox.get_file

docs:

<dt id="mailbox.Mailbox.get_file">
<code class="descname">get_file</code><span class="sig-paren">(</span><em>key</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.Mailbox.get_file" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a file-like representation of the message corresponding to <em>key</em>,
or raise a <a class="reference internal" href="exceptions.html#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a> exception if no such message exists.  The
file-like object behaves as if open in binary mode.  This file should be
closed once it is no longer needed.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2: </span>The file object really is a binary file; previously it was incorrectly
returned in text mode.  Also, the file-like object now supports the
context management protocol: you can use a <a class="reference internal" href="../reference/compound_stmts.html#with"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code></a> statement to
automatically close it.</p>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Unlike other representations of messages, file-like representations are
not necessarily independent of the <a class="reference internal" href="#mailbox.Mailbox" title="mailbox.Mailbox"><code class="xref py py-class docutils literal notranslate"><span class="pre">Mailbox</span></code></a> instance that
created them or of the underlying mailbox.  More specific documentation
is provided by each subclass.</p>
</div>
</dd>