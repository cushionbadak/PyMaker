link:
library/warnings.html#describing-warning-filters

docs:

Describing Warning Filters¶
The warnings filter is initialized by -W options passed to the Python
interpreter command line and the PYTHONWARNINGS environment variable.
The interpreter saves the arguments for all supplied entries without
interpretation in sys.warnoptions; the warnings module parses these
when it is first imported (invalid options are ignored, after printing a
message to sys.stderr).
Individual warnings filters are specified as a sequence of fields separated by
colons:
action:message:category:module:line


The meaning of each of these fields is as described in The Warnings Filter.
When listing multiple filters on a single line (as for
PYTHONWARNINGS), the individual filters are separated by commas,and
the filters listed later take precedence over those listed before them (as
they’re applied left-to-right, and the most recently applied filters take
precedence over earlier ones).
Commonly used warning filters apply to either all warnings, warnings in a
particular category, or warnings raised by particular modules or packages.
Some examples:
default                      # Show all warnings (even those ignored by default)
ignore                       # Ignore all warnings
error                        # Convert all warnings to errors
error::ResourceWarning       # Treat ResourceWarning messages as errors
default::DeprecationWarning  # Show DeprecationWarning messages
ignore,default:::mymodule    # Only report warnings triggered by "mymodule"
error:::mymodule[.*]         # Convert warnings to errors in "mymodule"
                             # and any subpackages of "mymodule"


