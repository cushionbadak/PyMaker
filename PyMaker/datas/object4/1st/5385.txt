link:
library/asyncore.html#asyncore.loop

docs:

<dt id="asyncore.loop">
<code class="descclassname">asyncore.</code><code class="descname">loop</code><span class="sig-paren">(</span><span class="optional">[</span><em>timeout</em><span class="optional">[</span>, <em>use_poll</em><span class="optional">[</span>, <em>map</em><span class="optional">[</span>, <em>count</em><span class="optional">]</span><span class="optional">]</span><span class="optional">]</span><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#asyncore.loop" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Enter a polling loop that terminates after count passes or all open
channels have been closed.  All arguments are optional.  The <em>count</em>
parameter defaults to <code class="docutils literal notranslate"><span class="pre">None</span></code>, resulting in the loop terminating only when all
channels have been closed.  The <em>timeout</em> argument sets the timeout
parameter for the appropriate <a class="reference internal" href="select.html#select.select" title="select.select"><code class="xref py py-func docutils literal notranslate"><span class="pre">select()</span></code></a> or <a class="reference internal" href="select.html#select.poll" title="select.poll"><code class="xref py py-func docutils literal notranslate"><span class="pre">poll()</span></code></a>
call, measured in seconds; the default is 30 seconds.  The <em>use_poll</em>
parameter, if true, indicates that <a class="reference internal" href="select.html#select.poll" title="select.poll"><code class="xref py py-func docutils literal notranslate"><span class="pre">poll()</span></code></a> should be used in
preference to <a class="reference internal" href="select.html#select.select" title="select.select"><code class="xref py py-func docutils literal notranslate"><span class="pre">select()</span></code></a> (the default is <code class="docutils literal notranslate"><span class="pre">False</span></code>).</p>
<p>The <em>map</em> parameter is a dictionary whose items are the channels to watch.
As channels are closed they are deleted from their map.  If <em>map</em> is
omitted, a global map is used. Channels (instances of
<a class="reference internal" href="#asyncore.dispatcher" title="asyncore.dispatcher"><code class="xref py py-class docutils literal notranslate"><span class="pre">asyncore.dispatcher</span></code></a>, <a class="reference internal" href="asynchat.html#asynchat.async_chat" title="asynchat.async_chat"><code class="xref py py-class docutils literal notranslate"><span class="pre">asynchat.async_chat</span></code></a> and subclasses
thereof) can freely be mixed in the map.</p>
</dd>