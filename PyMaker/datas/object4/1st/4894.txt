link:
library/asyncio-protocol.html#asyncio.ReadTransport.pause_reading

docs:

<dt id="asyncio.ReadTransport.pause_reading">
<code class="descclassname">ReadTransport.</code><code class="descname">pause_reading</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#asyncio.ReadTransport.pause_reading" title="Permalink to this definition">¶</a></dt>
<dd><p>Pause the receiving end of the transport.  No data will be passed to
the protocol’s <a class="reference internal" href="#asyncio.Protocol.data_received" title="asyncio.Protocol.data_received"><code class="xref py py-meth docutils literal notranslate"><span class="pre">protocol.data_received()</span></code></a>
method until <a class="reference internal" href="#asyncio.ReadTransport.resume_reading" title="asyncio.ReadTransport.resume_reading"><code class="xref py py-meth docutils literal notranslate"><span class="pre">resume_reading()</span></code></a> is called.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.7: </span>The method is idempotent, i.e. it can be called when the
transport is already paused or closed.</p>
</div>
</dd>