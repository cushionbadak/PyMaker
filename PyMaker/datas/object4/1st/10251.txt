link:
library/msilib.html#msilib.CAB

docs:

<dt id="msilib.CAB">
<em class="property">class </em><code class="descclassname">msilib.</code><code class="descname">CAB</code><span class="sig-paren">(</span><em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#msilib.CAB" title="Permalink to this definition">¶</a></dt>
<dd><p>The class <a class="reference internal" href="#msilib.CAB" title="msilib.CAB"><code class="xref py py-class docutils literal notranslate"><span class="pre">CAB</span></code></a> represents a CAB file. During MSI construction, files
will be added simultaneously to the <code class="docutils literal notranslate"><span class="pre">Files</span></code> table, and to a CAB file. Then,
when all files have been added, the CAB file can be written, then added to the
MSI file.</p>
<p><em>name</em> is the name of the CAB file in the MSI file.</p>
<dl class="method">
<dt id="msilib.CAB.append">
<code class="descname">append</code><span class="sig-paren">(</span><em>full</em>, <em>file</em>, <em>logical</em><span class="sig-paren">)</span><a class="headerlink" href="#msilib.CAB.append" title="Permalink to this definition">¶</a></dt>
<dd><p>Add the file with the pathname <em>full</em> to the CAB file, under the name
<em>logical</em>.  If there is already a file named <em>logical</em>, a new file name is
created.</p>
<p>Return the index of the file in the CAB file, and the new name of the file
inside the CAB file.</p>
</dd></dl>
<dl class="method">
<dt id="msilib.CAB.commit">
<code class="descname">commit</code><span class="sig-paren">(</span><em>database</em><span class="sig-paren">)</span><a class="headerlink" href="#msilib.CAB.commit" title="Permalink to this definition">¶</a></dt>
<dd><p>Generate a CAB file, add it as a stream to the MSI file, put it into the
<code class="docutils literal notranslate"><span class="pre">Media</span></code> table, and remove the generated file from the disk.</p>
</dd></dl>
</dd>