link:
library/importlib.html#importlib.abc.InspectLoader.get_code

docs:

<dt id="importlib.abc.InspectLoader.get_code">
<code class="descname">get_code</code><span class="sig-paren">(</span><em>fullname</em><span class="sig-paren">)</span><a class="headerlink" href="#importlib.abc.InspectLoader.get_code" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return the code object for a module, or <code class="docutils literal notranslate"><span class="pre">None</span></code> if the module does not
have a code object (as would be the case, for example, for a built-in
module).  Raise an <a class="reference internal" href="exceptions.html#ImportError" title="ImportError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ImportError</span></code></a> if loader cannot find the
requested module.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">While the method has a default implementation, it is suggested that
it be overridden if possible for performance.</p>
</div>
<div class="versionchanged" id="index-16">
<p><span class="versionmodified">Changed in version 3.4: </span>No longer abstract and a concrete implementation is provided.</p>
</div>
</dd>