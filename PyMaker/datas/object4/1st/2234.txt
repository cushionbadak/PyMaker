link:
library/tempfile.html#tempfile.TemporaryDirectory

docs:

<dt id="tempfile.TemporaryDirectory">
<code class="descclassname">tempfile.</code><code class="descname">TemporaryDirectory</code><span class="sig-paren">(</span><em>suffix=None</em>, <em>prefix=None</em>, <em>dir=None</em><span class="sig-paren">)</span><a class="headerlink" href="#tempfile.TemporaryDirectory" title="Permalink to this definition">Â¶</a></dt>
<dd><p>This function securely creates a temporary directory using the same rules as <a class="reference internal" href="#tempfile.mkdtemp" title="tempfile.mkdtemp"><code class="xref py py-func docutils literal notranslate"><span class="pre">mkdtemp()</span></code></a>.
The resulting object can be used as a context manager (see
<a class="reference internal" href="#tempfile-examples"><span class="std std-ref">Examples</span></a>).  On completion of the context or destruction
of the temporary directory object the newly created temporary directory
and all its contents are removed from the filesystem.</p>
<p>The directory name can be retrieved from the <code class="xref py py-attr docutils literal notranslate"><span class="pre">name</span></code> attribute of the
returned object.  When the returned object is used as a context manager, the
<code class="xref py py-attr docutils literal notranslate"><span class="pre">name</span></code> will be assigned to the target of the <code class="xref std std-keyword docutils literal notranslate"><span class="pre">as</span></code> clause in
the <a class="reference internal" href="../reference/compound_stmts.html#with"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code></a> statement, if there is one.</p>
<p>The directory can be explicitly cleaned up by calling the
<code class="xref py py-func docutils literal notranslate"><span class="pre">cleanup()</span></code> method.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.2.</span></p>
</div>
</dd>