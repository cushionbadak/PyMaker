link:
library/functions.html#type

docs:


class type(object)¶

class type(name, bases, dict)
With one argument, return the type of an object.  The return value is a
type object and generally the same object as returned by
object.__class__.
The isinstance() built-in function is recommended for testing the type
of an object, because it takes subclasses into account.
With three arguments, return a new type object.  This is essentially a
dynamic form of the class statement. The name string is the
class name and becomes the __name__ attribute; the bases
tuple itemizes the base classes and becomes the __bases__
attribute; and the dict dictionary is the namespace containing definitions
for class body and is copied to a standard dictionary to become the
__dict__ attribute.  For example, the following two
statements create identical type objects:
>>> class X:
...     a = 1
...
>>> X = type('X', (object,), dict(a=1))


See also Type Objects.

Changed in version 3.6: Subclasses of type which don’t override type.__new__ may no
longer use the one-argument form to get the type of an object.

