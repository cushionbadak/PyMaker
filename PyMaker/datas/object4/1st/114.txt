link:
reference/datamodel.html#object.__rmul__

docs:


object.__radd__(self, other)¶

object.__rsub__(self, other)¶

object.__rmul__(self, other)¶

object.__rmatmul__(self, other)¶

object.__rtruediv__(self, other)¶

object.__rfloordiv__(self, other)¶

object.__rmod__(self, other)¶

object.__rdivmod__(self, other)¶

object.__rpow__(self, other)¶

object.__rlshift__(self, other)¶

object.__rrshift__(self, other)¶

object.__rand__(self, other)¶

object.__rxor__(self, other)¶

object.__ror__(self, other)¶
These methods are called to implement the binary arithmetic operations
(+, -, *, @, /, //, %, divmod(),
pow(), **, <<, >>, &, ^, |) with reflected
(swapped) operands.  These functions are only called if the left operand does
not support the corresponding operation [3] and the operands are of different
types. [4] For instance, to evaluate the expression x - y, where y is
an instance of a class that has an __rsub__() method, y.__rsub__(x)
is called if x.__sub__(y) returns NotImplemented.
Note that ternary pow() will not try calling __rpow__() (the
coercion rules would become too complicated).

Note
If the right operand’s type is a subclass of the left operand’s type and that
subclass provides the reflected method for the operation, this method will be
called before the left operand’s non-reflected method.  This behavior allows
subclasses to override their ancestors’ operations.

