link:
library/sqlite3.html#sqlite3.Connection.set_trace_callback

docs:

<dt id="sqlite3.Connection.set_trace_callback">
<code class="descname">set_trace_callback</code><span class="sig-paren">(</span><em>trace_callback</em><span class="sig-paren">)</span><a class="headerlink" href="#sqlite3.Connection.set_trace_callback" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Registers <em>trace_callback</em> to be called for each SQL statement that is
actually executed by the SQLite backend.</p>
<p>The only argument passed to the callback is the statement (as string) that
is being executed. The return value of the callback is ignored. Note that
the backend does not only run statements passed to the <a class="reference internal" href="#sqlite3.Cursor.execute" title="sqlite3.Cursor.execute"><code class="xref py py-meth docutils literal notranslate"><span class="pre">Cursor.execute()</span></code></a>
methods.  Other sources include the transaction management of the Python
module and the execution of triggers defined in the current database.</p>
<p>Passing <a class="reference internal" href="constants.html#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a> as <em>trace_callback</em> will disable the trace callback.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.3.</span></p>
</div>
</dd>