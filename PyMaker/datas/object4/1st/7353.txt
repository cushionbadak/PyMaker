link:
library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCServer.register_function

docs:

<dt id="xmlrpc.server.SimpleXMLRPCServer.register_function">
<code class="descclassname">SimpleXMLRPCServer.</code><code class="descname">register_function</code><span class="sig-paren">(</span><em>function=None</em>, <em>name=None</em><span class="sig-paren">)</span><a class="headerlink" href="#xmlrpc.server.SimpleXMLRPCServer.register_function" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Register a function that can respond to XML-RPC requests.  If <em>name</em> is given,
it will be the method name associated with <em>function</em>, otherwise
<code class="docutils literal notranslate"><span class="pre">function.__name__</span></code> will be used.  <em>name</em> is a string, and may contain
characters not legal in Python identifiers, including the period character.</p>
<p>This method can also be used as a decorator.  When used as a decorator,
<em>name</em> can only be given as a keyword argument to register <em>function</em> under
<em>name</em>.  If no <em>name</em> is given, <code class="docutils literal notranslate"><span class="pre">function.__name__</span></code> will be used.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.7: </span><a class="reference internal" href="#xmlrpc.server.SimpleXMLRPCServer.register_function" title="xmlrpc.server.SimpleXMLRPCServer.register_function"><code class="xref py py-meth docutils literal notranslate"><span class="pre">register_function()</span></code></a> can be used as a decorator.</p>
</div>
</dd>