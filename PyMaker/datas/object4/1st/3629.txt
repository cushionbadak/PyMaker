link:
library/logging.handlers.html#logging.handlers.SysLogHandler

docs:

<dt id="logging.handlers.SysLogHandler">
<em class="property">class </em><code class="descclassname">logging.handlers.</code><code class="descname">SysLogHandler</code><span class="sig-paren">(</span><em>address=('localhost'</em>, <em>SYSLOG_UDP_PORT)</em>, <em>facility=LOG_USER</em>, <em>socktype=socket.SOCK_DGRAM</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.SysLogHandler" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns a new instance of the <a class="reference internal" href="#logging.handlers.SysLogHandler" title="logging.handlers.SysLogHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">SysLogHandler</span></code></a> class intended to
communicate with a remote Unix machine whose address is given by <em>address</em> in
the form of a <code class="docutils literal notranslate"><span class="pre">(host,</span> <span class="pre">port)</span></code> tuple.  If <em>address</em> is not specified,
<code class="docutils literal notranslate"><span class="pre">('localhost',</span> <span class="pre">514)</span></code> is used.  The address is used to open a socket.  An
alternative to providing a <code class="docutils literal notranslate"><span class="pre">(host,</span> <span class="pre">port)</span></code> tuple is providing an address as a
string, for example ‘/dev/log’. In this case, a Unix domain socket is used to
send the message to the syslog. If <em>facility</em> is not specified,
<code class="xref py py-const docutils literal notranslate"><span class="pre">LOG_USER</span></code> is used. The type of socket opened depends on the
<em>socktype</em> argument, which defaults to <a class="reference internal" href="socket.html#socket.SOCK_DGRAM" title="socket.SOCK_DGRAM"><code class="xref py py-const docutils literal notranslate"><span class="pre">socket.SOCK_DGRAM</span></code></a> and thus
opens a UDP socket. To open a TCP socket (for use with the newer syslog
daemons such as rsyslog), specify a value of <a class="reference internal" href="socket.html#socket.SOCK_STREAM" title="socket.SOCK_STREAM"><code class="xref py py-const docutils literal notranslate"><span class="pre">socket.SOCK_STREAM</span></code></a>.</p>
<p>Note that if your server is not listening on UDP port 514,
<a class="reference internal" href="#logging.handlers.SysLogHandler" title="logging.handlers.SysLogHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">SysLogHandler</span></code></a> may appear not to work. In that case, check what
address you should be using for a domain socket - it’s system dependent.
For example, on Linux it’s usually ‘/dev/log’ but on OS/X it’s
‘/var/run/syslog’. You’ll need to check your platform and use the
appropriate address (you may need to do this check at runtime if your
application needs to run on several platforms). On Windows, you pretty
much have to use the UDP option.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2: </span><em>socktype</em> was added.</p>
</div>
<dl class="method">
<dt id="logging.handlers.SysLogHandler.close">
<code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.SysLogHandler.close" title="Permalink to this definition">¶</a></dt>
<dd><p>Closes the socket to the remote host.</p>
</dd></dl>
<dl class="method">
<dt id="logging.handlers.SysLogHandler.emit">
<code class="descname">emit</code><span class="sig-paren">(</span><em>record</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.SysLogHandler.emit" title="Permalink to this definition">¶</a></dt>
<dd><p>The record is formatted, and then sent to the syslog server. If exception
information is present, it is <em>not</em> sent to the server.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2.1: </span>(See: <a class="reference external" href="https://bugs.python.org/issue12168">bpo-12168</a>.) In earlier versions, the message sent to the
syslog daemons was always terminated with a NUL byte, because early
versions of these daemons expected a NUL terminated message - even
though it’s not in the relevant specification (<span class="target" id="index-0"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc5424.html"><strong>RFC 5424</strong></a>). More recent
versions of these daemons don’t expect the NUL byte but strip it off
if it’s there, and even more recent daemons (which adhere more closely
to RFC 5424) pass the NUL byte on as part of the message.</p>
<p>To enable easier handling of syslog messages in the face of all these
differing daemon behaviours, the appending of the NUL byte has been
made configurable, through the use of a class-level attribute,
<code class="docutils literal notranslate"><span class="pre">append_nul</span></code>. This defaults to <code class="docutils literal notranslate"><span class="pre">True</span></code> (preserving the existing
behaviour) but can be set to <code class="docutils literal notranslate"><span class="pre">False</span></code> on a <code class="docutils literal notranslate"><span class="pre">SysLogHandler</span></code> instance
in order for that instance to <em>not</em> append the NUL terminator.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.3: </span>(See: <a class="reference external" href="https://bugs.python.org/issue12419">bpo-12419</a>.) In earlier versions, there was no facility for
an “ident” or “tag” prefix to identify the source of the message. This
can now be specified using a class-level attribute, defaulting to
<code class="docutils literal notranslate"><span class="pre">""</span></code> to preserve existing behaviour, but which can be overridden on
a <code class="docutils literal notranslate"><span class="pre">SysLogHandler</span></code> instance in order for that instance to prepend
the ident to every message handled. Note that the provided ident must
be text, not bytes, and is prepended to the message exactly as is.</p>
</div>
</dd></dl>
<dl class="method">
<dt id="logging.handlers.SysLogHandler.encodePriority">
<code class="descname">encodePriority</code><span class="sig-paren">(</span><em>facility</em>, <em>priority</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.SysLogHandler.encodePriority" title="Permalink to this definition">¶</a></dt>
<dd><p>Encodes the facility and priority into an integer. You can pass in strings
or integers - if strings are passed, internal mapping dictionaries are
used to convert them to integers.</p>
<p>The symbolic <code class="docutils literal notranslate"><span class="pre">LOG_</span></code> values are defined in <a class="reference internal" href="#logging.handlers.SysLogHandler" title="logging.handlers.SysLogHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">SysLogHandler</span></code></a> and
mirror the values defined in the <code class="docutils literal notranslate"><span class="pre">sys/syslog.h</span></code> header file.</p>
<p><strong>Priorities</strong></p>
<table border="1" class="docutils">
<colgroup>
<col width="63%"/>
<col width="37%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Name (string)</th>
<th class="head">Symbolic value</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">alert</span></code></td>
<td>LOG_ALERT</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">crit</span></code> or <code class="docutils literal notranslate"><span class="pre">critical</span></code></td>
<td>LOG_CRIT</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">debug</span></code></td>
<td>LOG_DEBUG</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">emerg</span></code> or <code class="docutils literal notranslate"><span class="pre">panic</span></code></td>
<td>LOG_EMERG</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">err</span></code> or <code class="docutils literal notranslate"><span class="pre">error</span></code></td>
<td>LOG_ERR</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">info</span></code></td>
<td>LOG_INFO</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">notice</span></code></td>
<td>LOG_NOTICE</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">warn</span></code> or <code class="docutils literal notranslate"><span class="pre">warning</span></code></td>
<td>LOG_WARNING</td>
</tr>
</tbody>
</table>
<p><strong>Facilities</strong></p>
<table border="1" class="docutils">
<colgroup>
<col width="50%"/>
<col width="50%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Name (string)</th>
<th class="head">Symbolic value</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">auth</span></code></td>
<td>LOG_AUTH</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">authpriv</span></code></td>
<td>LOG_AUTHPRIV</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">cron</span></code></td>
<td>LOG_CRON</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">daemon</span></code></td>
<td>LOG_DAEMON</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">ftp</span></code></td>
<td>LOG_FTP</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">kern</span></code></td>
<td>LOG_KERN</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">lpr</span></code></td>
<td>LOG_LPR</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">mail</span></code></td>
<td>LOG_MAIL</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">news</span></code></td>
<td>LOG_NEWS</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">syslog</span></code></td>
<td>LOG_SYSLOG</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">user</span></code></td>
<td>LOG_USER</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">uucp</span></code></td>
<td>LOG_UUCP</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">local0</span></code></td>
<td>LOG_LOCAL0</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">local1</span></code></td>
<td>LOG_LOCAL1</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">local2</span></code></td>
<td>LOG_LOCAL2</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">local3</span></code></td>
<td>LOG_LOCAL3</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">local4</span></code></td>
<td>LOG_LOCAL4</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">local5</span></code></td>
<td>LOG_LOCAL5</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">local6</span></code></td>
<td>LOG_LOCAL6</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">local7</span></code></td>
<td>LOG_LOCAL7</td>
</tr>
</tbody>
</table>
</dd></dl>
<dl class="method">
<dt id="logging.handlers.SysLogHandler.mapPriority">
<code class="descname">mapPriority</code><span class="sig-paren">(</span><em>levelname</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.SysLogHandler.mapPriority" title="Permalink to this definition">¶</a></dt>
<dd><p>Maps a logging level name to a syslog priority name.
You may need to override this if you are using custom levels, or
if the default algorithm is not suitable for your needs. The
default algorithm maps <code class="docutils literal notranslate"><span class="pre">DEBUG</span></code>, <code class="docutils literal notranslate"><span class="pre">INFO</span></code>, <code class="docutils literal notranslate"><span class="pre">WARNING</span></code>, <code class="docutils literal notranslate"><span class="pre">ERROR</span></code> and
<code class="docutils literal notranslate"><span class="pre">CRITICAL</span></code> to the equivalent syslog names, and all other level
names to ‘warning’.</p>
</dd></dl>
</dd>