link:
library/logging.handlers.html#watchedfilehandler

docs:

WatchedFileHandler¶
The WatchedFileHandler class, located in the logging.handlers
module, is a FileHandler which watches the file it is logging to. If
the file changes, it is closed and reopened using the file name.
A file change can happen because of usage of programs such as newsyslog and
logrotate which perform log file rotation. This handler, intended for use
under Unix/Linux, watches the file to see if it has changed since the last emit.
(A file is deemed to have changed if its device or inode have changed.) If the
file has changed, the old file stream is closed, and the file opened to get a
new stream.
This handler is not appropriate for use under Windows, because under Windows
open log files cannot be moved or renamed - logging opens the files with
exclusive locks - and so there is no need for such a handler. Furthermore,
ST_INO is not supported under Windows; stat() always returns zero
for this value.


class logging.handlers.WatchedFileHandler(filename, mode='a', encoding=None, delay=False)¶
Returns a new instance of the WatchedFileHandler class. The specified
file is opened and used as the stream for logging. If mode is not specified,
'a' is used.  If encoding is not None, it is used to open the file
with that encoding.  If delay is true, then file opening is deferred until the
first call to emit().  By default, the file grows indefinitely.

Changed in version 3.6: As well as string values, Path objects are also accepted
for the filename argument.



reopenIfNeeded()¶
Checks to see if the file has changed.  If it has, the existing stream is
flushed and closed and the file opened again, typically as a precursor to
outputting the record to the file.

New in version 3.6.




emit(record)¶
Outputs the record to the file, but first calls reopenIfNeeded() to
reopen the file if it has changed.


