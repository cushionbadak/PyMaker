link:
library/py_compile.html#py_compile.compile

docs:


py_compile.compile(file, cfile=None, dfile=None, doraise=False, optimize=-1, invalidation_mode=PycInvalidationMode.TIMESTAMP)Â¶
Compile a source file to byte-code and write out the byte-code cache file.
The source code is loaded from the file named file.  The byte-code is
written to cfile, which defaults to the PEP 3147/PEP 488 path, ending
in .pyc.
For example, if file is /foo/bar/baz.py cfile will default to
/foo/bar/__pycache__/baz.cpython-32.pyc for Python 3.2.  If dfile is
specified, it is used as the name of the source file in error messages when
instead of file.  If doraise is true, a PyCompileError is raised
when an error is encountered while compiling file. If doraise is false
(the default), an error string is written to sys.stderr, but no exception
is raised.  This function returns the path to byte-compiled file, i.e.
whatever cfile value was used.
If the path that cfile becomes (either explicitly specified or computed)
is a symlink or non-regular file, FileExistsError will be raised.
This is to act as a warning that import will turn those paths into regular
files if it is allowed to write byte-compiled files to those paths. This is
a side-effect of import using file renaming to place the final byte-compiled
file into place to prevent concurrent file writing issues.
optimize controls the optimization level and is passed to the built-in
compile() function.  The default of -1 selects the optimization
level of the current interpreter.
invalidation_mode should be a member of the PycInvalidationMode
enum and controls how the generated bytecode cache is invalidated at
runtime.  The default is PycInvalidationMode.CHECKED_HASH if
the SOURCE_DATE_EPOCH environment variable is set, otherwise
the default is PycInvalidationMode.TIMESTAMP.

Changed in version 3.2: Changed default value of cfile to be PEP 3147-compliant.  Previous
default was file + 'c' ('o' if optimization was enabled).
Also added the optimize parameter.


Changed in version 3.4: Changed code to use importlib for the byte-code cache file writing.
This means file creation/writing semantics now match what importlib
does, e.g. permissions, write-and-move semantics, etc. Also added the
caveat that FileExistsError is raised if cfile is a symlink or
non-regular file.


Changed in version 3.7: The invalidation_mode parameter was added as specified in PEP 552.
If the SOURCE_DATE_EPOCH environment variable is set,
invalidation_mode will be forced to
PycInvalidationMode.CHECKED_HASH.


Changed in version 3.7.2: The SOURCE_DATE_EPOCH environment variable no longer
overrides the value of the invalidation_mode argument, and determines
its default value instead.

