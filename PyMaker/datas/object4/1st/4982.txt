link:
library/asyncio-api-index.html#tasks

docs:

TasksÂ¶
Utilities to run asyncio programs, create Tasks, and
await on multiple things with timeouts.






run()
Create event loop, run a coroutine, close the loop.

create_task()
Start an asyncio Task.

await sleep()
Sleep for a number of seconds.

await gather()
Schedule and wait for things concurrently.

await wait_for()
Run with a timeout.

await shield()
Shield from cancellation.

await wait()
Monitor for completion.

current_task()
Return the current Task.

all_tasks()
Return all tasks for an event loop.

Task
Task object.

run_coroutine_threadsafe()
Schedule a coroutine from another OS thread.

for in as_completed()
Monitor for completion with a for loop.



Examples

Using asyncio.gather() to run things in parallel.
Using asyncio.wait_for() to enforce a timeout.
Cancellation.
Using asyncio.sleep().
See also the main Tasks documentation page.

