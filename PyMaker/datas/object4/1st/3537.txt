link:
library/logging.html#loggeradapter-objects

docs:

LoggerAdapter Objects¶
LoggerAdapter instances are used to conveniently pass contextual
information into logging calls. For a usage example, see the section on
adding contextual information to your logging output.


class logging.LoggerAdapter(logger, extra)¶
Returns an instance of LoggerAdapter initialized with an
underlying Logger instance and a dict-like object.


process(msg, kwargs)¶
Modifies the message and/or keyword arguments passed to a logging call in
order to insert contextual information. This implementation takes the object
passed as extra to the constructor and adds it to kwargs using key
‘extra’. The return value is a (msg, kwargs) tuple which has the
(possibly modified) versions of the arguments passed in.


In addition to the above, LoggerAdapter supports the following
methods of Logger: debug(), info(),
warning(), error(), exception(),
critical(), log(), isEnabledFor(),
getEffectiveLevel(), setLevel() and
hasHandlers(). These methods have the same signatures as their
counterparts in Logger, so you can use the two types of instances
interchangeably.

Changed in version 3.2: The isEnabledFor(), getEffectiveLevel(),
setLevel() and hasHandlers() methods were added
to LoggerAdapter.  These methods delegate to the underlying logger.

