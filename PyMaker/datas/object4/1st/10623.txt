link:
faq/library.html#how-do-i-make-a-python-script-executable-on-unix

docs:

How do I make a Python script executable on Unix?¶
You need to do two things: the script file’s mode must be executable and the
first line must begin with #! followed by the path of the Python
interpreter.
The first is done by executing chmod +x scriptfile or perhaps chmod 755
scriptfile.
The second can be done in a number of ways.  The most straightforward way is to
write
#!/usr/local/bin/python


as the very first line of your file, using the pathname for where the Python
interpreter is installed on your platform.
If you would like the script to be independent of where the Python interpreter
lives, you can use the env program.  Almost all Unix variants support
the following, assuming the Python interpreter is in a directory on the user’s
PATH:
#!/usr/bin/env python


Don’t do this for CGI scripts.  The PATH variable for CGI scripts is
often very minimal, so you need to use the actual absolute pathname of the
interpreter.
Occasionally, a user’s environment is so full that the /usr/bin/env
program fails; or there’s no env program at all.  In that case, you can try the
following hack (due to Alex Rezinsky):
#! /bin/sh
""":"
exec python $0 ${1+"$@"}
"""


The minor disadvantage is that this defines the script’s __doc__ string.
However, you can fix that by adding
__doc__ = """...Whatever..."""


