link:
library/sys.html#sys.platform

docs:


sys.platform¶
This string contains a platform identifier that can be used to append
platform-specific components to sys.path, for instance.
For Unix systems, except on Linux, this is the lowercased OS name as
returned by uname -s with the first part of the version as returned by
uname -r appended, e.g. 'sunos5' or 'freebsd8', at the time
when Python was built.  Unless you want to test for a specific system
version, it is therefore recommended to use the following idiom:
if sys.platform.startswith('freebsd'):
    # FreeBSD-specific code here...
elif sys.platform.startswith('linux'):
    # Linux-specific code here...


For other systems, the values are:






System
platform value



Linux
'linux'

Windows
'win32'

Windows/Cygwin
'cygwin'

Mac OS X
'darwin'




Changed in version 3.3: On Linux, sys.platform doesn’t contain the major version anymore.
It is always 'linux', instead of 'linux2' or 'linux3'.  Since
older Python versions include the version number, it is recommended to
always use the startswith idiom presented above.


See also
os.name has a coarser granularity.  os.uname() gives
system-dependent version information.
The platform module provides detailed checks for the
system’s identity.

