link:
library/zlib.html#zlib.compressobj

docs:


zlib.compressobj(level=-1, method=DEFLATED, wbits=MAX_WBITS, memLevel=DEF_MEM_LEVEL, strategy=Z_DEFAULT_STRATEGY[, zdict])¶
Returns a compression object, to be used for compressing data streams that won’t
fit into memory at once.
level is the compression level – an integer from 0 to 9 or -1.
A value of 1 (Z_BEST_SPEED) is fastest and produces the least compression,
while a value of 9 (Z_BEST_COMPRESSION) is slowest and produces the most.
0 (Z_NO_COMPRESSION) is no compression.  The default value is -1 (Z_DEFAULT_COMPRESSION).
Z_DEFAULT_COMPRESSION represents a default compromise between speed and compression
(currently equivalent to level 6).
method is the compression algorithm. Currently, the only supported value is
DEFLATED.
The wbits argument controls the size of the history buffer (or the
“window size”) used when compressing data, and whether a header and
trailer is included in the output.  It can take several ranges of values,
defaulting to 15 (MAX_WBITS):

+9 to +15: The base-two logarithm of the window size, which
therefore ranges between 512 and 32768.  Larger values produce
better compression at the expense of greater memory usage.  The
resulting output will include a zlib-specific header and trailer.
−9 to −15: Uses the absolute value of wbits as the
window size logarithm, while producing a raw output stream with no
header or trailing checksum.
+25 to +31 = 16 + (9 to 15): Uses the low 4 bits of the value as the
window size logarithm, while including a basic gzip header
and trailing checksum in the output.

The memLevel argument controls the amount of memory used for the
internal compression state. Valid values range from 1 to 9.
Higher values use more memory, but are faster and produce smaller output.
strategy is used to tune the compression algorithm. Possible values are
Z_DEFAULT_STRATEGY, Z_FILTERED, Z_HUFFMAN_ONLY,
Z_RLE (zlib 1.2.0.1) and Z_FIXED (zlib 1.2.2.2).
zdict is a predefined compression dictionary. This is a sequence of bytes
(such as a bytes object) containing subsequences that are expected
to occur frequently in the data that is to be compressed. Those subsequences
that are expected to be most common should come at the end of the dictionary.

Changed in version 3.3: Added the zdict parameter and keyword argument support.

