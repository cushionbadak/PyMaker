link:
library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor

docs:


class concurrent.futures.ThreadPoolExecutor(max_workers=None, thread_name_prefix='', initializer=None, initargs=())Â¶
An Executor subclass that uses a pool of at most max_workers
threads to execute calls asynchronously.
initializer is an optional callable that is called at the start of
each worker thread; initargs is a tuple of arguments passed to the
initializer.  Should initializer raise an exception, all currently
pending jobs will raise a BrokenThreadPool,
as well as any attempt to submit more jobs to the pool.

Changed in version 3.5: If max_workers is None or
not given, it will default to the number of processors on the machine,
multiplied by 5, assuming that ThreadPoolExecutor is often
used to overlap I/O instead of CPU work and the number of workers
should be higher than the number of workers
for ProcessPoolExecutor.


New in version 3.6: The thread_name_prefix argument was added to allow users to
control the threading.Thread names for worker threads created by
the pool for easier debugging.


Changed in version 3.7: Added the initializer and initargs arguments.

