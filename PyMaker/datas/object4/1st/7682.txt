link:
library/ossaudiodev.html#ossaudiodev.oss_audio_device.getfmts

docs:

<dt id="ossaudiodev.oss_audio_device.getfmts">
<code class="descclassname">oss_audio_device.</code><code class="descname">getfmts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#ossaudiodev.oss_audio_device.getfmts" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a bitmask of the audio output formats supported by the soundcard.  Some
of the formats supported by OSS are:</p>
<table border="1" class="docutils">
<colgroup>
<col width="36%"/>
<col width="64%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Format</th>
<th class="head">Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_MU_LAW</span></code></td>
<td>a logarithmic encoding (used by Sun <code class="docutils literal notranslate"><span class="pre">.au</span></code>
files and <code class="file docutils literal notranslate"><span class="pre">/dev/audio</span></code>)</td>
</tr>
<tr class="row-odd"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_A_LAW</span></code></td>
<td>a logarithmic encoding</td>
</tr>
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_IMA_ADPCM</span></code></td>
<td>a 4:1 compressed format defined by the
Interactive Multimedia Association</td>
</tr>
<tr class="row-odd"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_U8</span></code></td>
<td>Unsigned, 8-bit audio</td>
</tr>
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_S16_LE</span></code></td>
<td>Signed, 16-bit audio, little-endian byte
order (as used by Intel processors)</td>
</tr>
<tr class="row-odd"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_S16_BE</span></code></td>
<td>Signed, 16-bit audio, big-endian byte order
(as used by 68k, PowerPC, Sparc)</td>
</tr>
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_S8</span></code></td>
<td>Signed, 8 bit audio</td>
</tr>
<tr class="row-odd"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_U16_LE</span></code></td>
<td>Unsigned, 16-bit little-endian audio</td>
</tr>
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_U16_BE</span></code></td>
<td>Unsigned, 16-bit big-endian audio</td>
</tr>
</tbody>
</table>
<p>Consult the OSS documentation for a full list of audio formats, and note that
most devices support only a subset of these formats.  Some older devices only
support <code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_U8</span></code>; the most common format used today is
<code class="xref py py-const docutils literal notranslate"><span class="pre">AFMT_S16_LE</span></code>.</p>
</dd>