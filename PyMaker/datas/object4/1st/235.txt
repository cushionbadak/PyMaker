link:
reference/expressions.html#agen.aclose

docs:


coroutine agen.aclose()Â¶
Returns an awaitable that when run will throw a GeneratorExit into
the asynchronous generator function at the point where it was paused.
If the asynchronous generator function then exits gracefully, is already
closed, or raises GeneratorExit (by not catching the exception),
then the returned awaitable will raise a StopIteration exception.
Any further awaitables returned by subsequent calls to the asynchronous
generator will raise a StopAsyncIteration exception.  If the
asynchronous generator yields a value, a RuntimeError is raised
by the awaitable.  If the asynchronous generator raises any other exception,
it is propagated to the caller of the awaitable.  If the asynchronous
generator has already exited due to an exception or normal exit, then
further calls to aclose() will return an awaitable that does nothing.
