link:
library/dbm.html#module-dbm.dumb

docs:

dbm.dumb — Portable DBM implementation¶
Source code: Lib/dbm/dumb.py

Note
The dbm.dumb module is intended as a last resort fallback for the
dbm module when a more robust module is not available. The dbm.dumb
module is not written for speed and is not nearly as heavily used as the other
database modules.


The dbm.dumb module provides a persistent dictionary-like interface which
is written entirely in Python.  Unlike other modules such as dbm.gnu no
external library is required.  As with other persistent mappings, the keys and
values are always stored as bytes.
The module defines the following:


exception dbm.dumb.error¶
Raised on dbm.dumb-specific errors, such as I/O errors.  KeyError is
raised for general mapping errors like specifying an incorrect key.



dbm.dumb.open(filename[, flag[, mode]])¶
Open a dumbdbm database and return a dumbdbm object.  The filename argument is
the basename of the database file (without any specific extensions).  When a
dumbdbm database is created, files with .dat and .dir extensions
are created.
The optional flag argument supports only the semantics of 'c'
and 'n' values.  Other values will default to database being always
opened for update, and will be created if it does not exist.
The optional mode argument is the Unix mode of the file, used only when the
database has to be created.  It defaults to octal 0o666 (and will be modified
by the prevailing umask).

Warning
It is possible to crash the Python interpreter when loading a database
with a sufficiently large/complex entry due to stack depth limitations in
Python’s AST compiler.


Changed in version 3.5: open() always creates a new database when the flag has the value
'n'.


Deprecated since version 3.6, will be removed in version 3.8: Creating database in 'r' and 'w' modes.  Modifying database in
'r' mode.

In addition to the methods provided by the
collections.abc.MutableMapping class, dumbdbm objects
provide the following methods:


dumbdbm.sync()¶
Synchronize the on-disk directory and data files.  This method is called
by the Shelve.sync() method.



dumbdbm.close()¶
Close the dumbdbm database.


