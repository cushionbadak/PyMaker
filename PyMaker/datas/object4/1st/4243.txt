link:
library/multiprocessing.html#the-process-class

docs:

The Process classÂ¶
In multiprocessing, processes are spawned by creating a Process
object and then calling its start() method.  Process
follows the API of threading.Thread.  A trivial example of a
multiprocess program is
from multiprocessing import Process

def f(name):
    print('hello', name)

if __name__ == '__main__':
    p = Process(target=f, args=('bob',))
    p.start()
    p.join()


To show the individual process IDs involved, here is an expanded example:
from multiprocessing import Process
import os

def info(title):
    print(title)
    print('module name:', __name__)
    print('parent process:', os.getppid())
    print('process id:', os.getpid())

def f(name):
    info('function f')
    print('hello', name)

if __name__ == '__main__':
    info('main line')
    p = Process(target=f, args=('bob',))
    p.start()
    p.join()


For an explanation of why the if __name__ == '__main__' part is
necessary, see Programming guidelines.
