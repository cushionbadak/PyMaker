link:
library/pickle.html#dispatch-tables

docs:

Dispatch TablesÂ¶
If one wants to customize pickling of some classes without disturbing
any other code which depends on pickling, then one can create a
pickler with a private dispatch table.
The global dispatch table managed by the copyreg module is
available as copyreg.dispatch_table.  Therefore, one may
choose to use a modified copy of copyreg.dispatch_table as a
private dispatch table.
For example
f = io.BytesIO()
p = pickle.Pickler(f)
p.dispatch_table = copyreg.dispatch_table.copy()
p.dispatch_table[SomeClass] = reduce_SomeClass


creates an instance of pickle.Pickler with a private dispatch
table which handles the SomeClass class specially.  Alternatively,
the code
class MyPickler(pickle.Pickler):
    dispatch_table = copyreg.dispatch_table.copy()
    dispatch_table[SomeClass] = reduce_SomeClass
f = io.BytesIO()
p = MyPickler(f)


does the same, but all instances of MyPickler will by default
share the same dispatch table.  The equivalent code using the
copyreg module is
copyreg.pickle(SomeClass, reduce_SomeClass)
f = io.BytesIO()
p = pickle.Pickler(f)


