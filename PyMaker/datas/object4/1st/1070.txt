link:
library/datetime.html#available-types

docs:

Available Types¶


class datetime.date
An idealized naive date, assuming the current Gregorian calendar always was, and
always will be, in effect. Attributes: year, month, and
day.



class datetime.time
An idealized time, independent of any particular day, assuming that every day
has exactly 24*60*60 seconds (there is no notion of “leap seconds” here).
Attributes: hour, minute, second, microsecond,
and tzinfo.



class datetime.datetime
A combination of a date and a time. Attributes: year, month,
day, hour, minute, second, microsecond,
and tzinfo.



class datetime.timedelta
A duration expressing the difference between two date, time,
or datetime instances to microsecond resolution.



class datetime.tzinfo
An abstract base class for time zone information objects.  These are used by the
datetime and time classes to provide a customizable notion of
time adjustment (for example, to account for time zone and/or daylight saving
time).



class datetime.timezone
A class that implements the tzinfo abstract base class as a
fixed offset from the UTC.

New in version 3.2.


Objects of these types are immutable.
Objects of the date type are always naive.
An object of type time or datetime may be naive or aware.
A datetime object d is aware if d.tzinfo is not None and
d.tzinfo.utcoffset(d) does not return None.  If d.tzinfo is
None, or if d.tzinfo is not None but d.tzinfo.utcoffset(d)
returns None, d is naive.  A time object t is aware
if t.tzinfo is not None and t.tzinfo.utcoffset(None) does not return
None.  Otherwise, t is naive.
The distinction between naive and aware doesn’t apply to timedelta
objects.
Subclass relationships:
object
    timedelta
    tzinfo
        timezone
    time
    date
        datetime


