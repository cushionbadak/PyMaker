link:
library/lzma.html#specifying-custom-filter-chains

docs:

Specifying custom filter chains¶
A filter chain specifier is a sequence of dictionaries, where each dictionary
contains the ID and options for a single filter. Each dictionary must contain
the key "id", and may contain additional keys to specify filter-dependent
options. Valid filter IDs are as follows:


Compression filters:

FILTER_LZMA1 (for use with FORMAT_ALONE)
FILTER_LZMA2 (for use with FORMAT_XZ and FORMAT_RAW)





Delta filter:

FILTER_DELTA





Branch-Call-Jump (BCJ) filters:

FILTER_X86
FILTER_IA64
FILTER_ARM
FILTER_ARMTHUMB
FILTER_POWERPC
FILTER_SPARC





A filter chain can consist of up to 4 filters, and cannot be empty. The last
filter in the chain must be a compression filter, and any other filters must be
delta or BCJ filters.
Compression filters support the following options (specified as additional
entries in the dictionary representing the filter):


preset: A compression preset to use as a source of default values for
options that are not specified explicitly.
dict_size: Dictionary size in bytes. This should be between 4 KiB and
1.5 GiB (inclusive).
lc: Number of literal context bits.
lp: Number of literal position bits. The sum lc + lp must be at
most 4.
pb: Number of position bits; must be at most 4.
mode: MODE_FAST or MODE_NORMAL.
nice_len: What should be considered a “nice length” for a match.
This should be 273 or less.
mf: What match finder to use – MF_HC3, MF_HC4,
MF_BT2, MF_BT3, or MF_BT4.
depth: Maximum search depth used by match finder. 0 (default) means to
select automatically based on other filter options.


The delta filter stores the differences between bytes, producing more repetitive
input for the compressor in certain circumstances. It supports one option,
dist. This indicates the distance between bytes to be subtracted. The
default is 1, i.e. take the differences between adjacent bytes.
The BCJ filters are intended to be applied to machine code. They convert
relative branches, calls and jumps in the code to use absolute addressing, with
the aim of increasing the redundancy that can be exploited by the compressor.
These filters support one option, start_offset. This specifies the address
that should be mapped to the beginning of the input data. The default is 0.
