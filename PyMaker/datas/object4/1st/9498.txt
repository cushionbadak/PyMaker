link:
library/inspect.html#inspect.Parameter.replace

docs:

<dt id="inspect.Parameter.replace">
<code class="descname">replace</code><span class="sig-paren">(</span><em>*[, name][, kind][, default][, annotation]</em><span class="sig-paren">)</span><a class="headerlink" href="#inspect.Parameter.replace" title="Permalink to this definition">Â¶</a></dt>
<dd><blockquote>
<div><p>Create a new Parameter instance based on the instance replaced was invoked
on.  To override a <a class="reference internal" href="#inspect.Parameter" title="inspect.Parameter"><code class="xref py py-class docutils literal notranslate"><span class="pre">Parameter</span></code></a> attribute, pass the corresponding
argument.  To remove a default value or/and an annotation from a
Parameter, pass <a class="reference internal" href="#inspect.Parameter.empty" title="inspect.Parameter.empty"><code class="xref py py-attr docutils literal notranslate"><span class="pre">Parameter.empty</span></code></a>.</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">inspect</span> <span class="k">import</span> <span class="n">Parameter</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">param</span> <span class="o">=</span> <span class="n">Parameter</span><span class="p">(</span><span class="s1">'foo'</span><span class="p">,</span> <span class="n">Parameter</span><span class="o">.</span><span class="n">KEYWORD_ONLY</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">str</span><span class="p">(</span><span class="n">param</span><span class="p">)</span>
<span class="go">'foo=42'</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">str</span><span class="p">(</span><span class="n">param</span><span class="o">.</span><span class="n">replace</span><span class="p">())</span> <span class="c1"># Will create a shallow copy of 'param'</span>
<span class="go">'foo=42'</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">str</span><span class="p">(</span><span class="n">param</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="n">Parameter</span><span class="o">.</span><span class="n">empty</span><span class="p">,</span> <span class="n">annotation</span><span class="o">=</span><span class="s1">'spam'</span><span class="p">))</span>
<span class="go">"foo:'spam'"</span>
</pre></div>
</div>
</div></blockquote>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>In Python 3.3 Parameter objects were allowed to have <code class="docutils literal notranslate"><span class="pre">name</span></code> set
to <code class="docutils literal notranslate"><span class="pre">None</span></code> if their <code class="docutils literal notranslate"><span class="pre">kind</span></code> was set to <code class="docutils literal notranslate"><span class="pre">POSITIONAL_ONLY</span></code>.
This is no longer permitted.</p>
</div>
</dd>