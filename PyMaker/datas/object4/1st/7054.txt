link:
library/smtpd.html#smtpd.SMTPChannel

docs:

<dt id="smtpd.SMTPChannel">
<em class="property">class </em><code class="descclassname">smtpd.</code><code class="descname">SMTPChannel</code><span class="sig-paren">(</span><em>server</em>, <em>conn</em>, <em>addr</em>, <em>data_size_limit=33554432</em>, <em>map=None</em>, <em>enable_SMTPUTF8=False</em>, <em>decode_data=False</em><span class="sig-paren">)</span><a class="headerlink" href="#smtpd.SMTPChannel" title="Permalink to this definition">¶</a></dt>
<dd><p>Create a new <a class="reference internal" href="#smtpd.SMTPChannel" title="smtpd.SMTPChannel"><code class="xref py py-class docutils literal notranslate"><span class="pre">SMTPChannel</span></code></a> object which manages the communication
between the server and a single SMTP client.</p>
<p><em>conn</em> and <em>addr</em> are as per the instance variables described below.</p>
<p><em>data_size_limit</em> specifies the maximum number of bytes that will be
accepted in a <code class="docutils literal notranslate"><span class="pre">DATA</span></code> command.  A value of <code class="docutils literal notranslate"><span class="pre">None</span></code> or <code class="docutils literal notranslate"><span class="pre">0</span></code> means no
limit.</p>
<p><em>enable_SMTPUTF8</em> determines whether the <code class="docutils literal notranslate"><span class="pre">SMTPUTF8</span></code> extension (as defined
in <span class="target" id="index-7"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc6531.html"><strong>RFC 6531</strong></a>) should be enabled.  The default is <code class="docutils literal notranslate"><span class="pre">False</span></code>.
<em>decode_data</em> and <em>enable_SMTPUTF8</em> cannot be set to <code class="docutils literal notranslate"><span class="pre">True</span></code> at the same
time.</p>
<p>A dictionary can be specified in <em>map</em> to avoid using a global socket map.</p>
<p><em>decode_data</em> specifies whether the data portion of the SMTP transaction
should be decoded using UTF-8.  The default is <code class="docutils literal notranslate"><span class="pre">False</span></code>.
<em>decode_data</em> and <em>enable_SMTPUTF8</em> cannot be set to <code class="docutils literal notranslate"><span class="pre">True</span></code> at the same
time.</p>
<p>To use a custom SMTPChannel implementation you need to override the
<a class="reference internal" href="#smtpd.SMTPServer.channel_class" title="smtpd.SMTPServer.channel_class"><code class="xref py py-attr docutils literal notranslate"><span class="pre">SMTPServer.channel_class</span></code></a> of your <a class="reference internal" href="#smtpd.SMTPServer" title="smtpd.SMTPServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">SMTPServer</span></code></a>.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>The <em>decode_data</em> and <em>enable_SMTPUTF8</em> parameters were added.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span><em>decode_data</em> is now <code class="docutils literal notranslate"><span class="pre">False</span></code> by default.</p>
</div>
<p>The <a class="reference internal" href="#smtpd.SMTPChannel" title="smtpd.SMTPChannel"><code class="xref py py-class docutils literal notranslate"><span class="pre">SMTPChannel</span></code></a> has the following instance variables:</p>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.smtp_server">
<code class="descname">smtp_server</code><a class="headerlink" href="#smtpd.SMTPChannel.smtp_server" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds the <a class="reference internal" href="#smtpd.SMTPServer" title="smtpd.SMTPServer"><code class="xref py py-class docutils literal notranslate"><span class="pre">SMTPServer</span></code></a> that spawned this channel.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.conn">
<code class="descname">conn</code><a class="headerlink" href="#smtpd.SMTPChannel.conn" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds the socket object connecting to the client.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.addr">
<code class="descname">addr</code><a class="headerlink" href="#smtpd.SMTPChannel.addr" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds the address of the client, the second value returned by
<a class="reference internal" href="socket.html#socket.socket.accept" title="socket.socket.accept"><code class="xref py py-func docutils literal notranslate"><span class="pre">socket.accept</span></code></a></p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.received_lines">
<code class="descname">received_lines</code><a class="headerlink" href="#smtpd.SMTPChannel.received_lines" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds a list of the line strings (decoded using UTF-8) received from
the client. The lines have their <code class="docutils literal notranslate"><span class="pre">"\r\n"</span></code> line ending translated to
<code class="docutils literal notranslate"><span class="pre">"\n"</span></code>.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.smtp_state">
<code class="descname">smtp_state</code><a class="headerlink" href="#smtpd.SMTPChannel.smtp_state" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds the current state of the channel. This will be either
<code class="xref py py-attr docutils literal notranslate"><span class="pre">COMMAND</span></code> initially and then <code class="xref py py-attr docutils literal notranslate"><span class="pre">DATA</span></code> after the client sends
a “DATA” line.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.seen_greeting">
<code class="descname">seen_greeting</code><a class="headerlink" href="#smtpd.SMTPChannel.seen_greeting" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds a string containing the greeting sent by the client in its “HELO”.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.mailfrom">
<code class="descname">mailfrom</code><a class="headerlink" href="#smtpd.SMTPChannel.mailfrom" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds a string containing the address identified in the “MAIL FROM:” line
from the client.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.rcpttos">
<code class="descname">rcpttos</code><a class="headerlink" href="#smtpd.SMTPChannel.rcpttos" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds a list of strings containing the addresses identified in the
“RCPT TO:” lines from the client.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.received_data">
<code class="descname">received_data</code><a class="headerlink" href="#smtpd.SMTPChannel.received_data" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds a string containing all of the data sent by the client during the
DATA state, up to but not including the terminating <code class="docutils literal notranslate"><span class="pre">"\r\n.\r\n"</span></code>.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.fqdn">
<code class="descname">fqdn</code><a class="headerlink" href="#smtpd.SMTPChannel.fqdn" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds the fully-qualified domain name of the server as returned by
<a class="reference internal" href="socket.html#socket.getfqdn" title="socket.getfqdn"><code class="xref py py-func docutils literal notranslate"><span class="pre">socket.getfqdn()</span></code></a>.</p>
</dd></dl>
<dl class="attribute">
<dt id="smtpd.SMTPChannel.peer">
<code class="descname">peer</code><a class="headerlink" href="#smtpd.SMTPChannel.peer" title="Permalink to this definition">¶</a></dt>
<dd><p>Holds the name of the client peer as returned by <code class="docutils literal notranslate"><span class="pre">conn.getpeername()</span></code>
where <code class="docutils literal notranslate"><span class="pre">conn</span></code> is <a class="reference internal" href="#smtpd.SMTPChannel.conn" title="smtpd.SMTPChannel.conn"><code class="xref py py-attr docutils literal notranslate"><span class="pre">conn</span></code></a>.</p>
</dd></dl>
<p>The <a class="reference internal" href="#smtpd.SMTPChannel" title="smtpd.SMTPChannel"><code class="xref py py-class docutils literal notranslate"><span class="pre">SMTPChannel</span></code></a> operates by invoking methods named <code class="docutils literal notranslate"><span class="pre">smtp_&lt;command&gt;</span></code>
upon reception of a command line from the client. Built into the base
<a class="reference internal" href="#smtpd.SMTPChannel" title="smtpd.SMTPChannel"><code class="xref py py-class docutils literal notranslate"><span class="pre">SMTPChannel</span></code></a> class are methods for handling the following commands
(and responding to them appropriately):</p>
<table border="1" class="docutils">
<colgroup>
<col width="11%"/>
<col width="89%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Command</th>
<th class="head">Action taken</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>HELO</td>
<td>Accepts the greeting from the client and stores it in
<a class="reference internal" href="#smtpd.SMTPChannel.seen_greeting" title="smtpd.SMTPChannel.seen_greeting"><code class="xref py py-attr docutils literal notranslate"><span class="pre">seen_greeting</span></code></a>.  Sets server to base command mode.</td>
</tr>
<tr class="row-odd"><td>EHLO</td>
<td>Accepts the greeting from the client and stores it in
<a class="reference internal" href="#smtpd.SMTPChannel.seen_greeting" title="smtpd.SMTPChannel.seen_greeting"><code class="xref py py-attr docutils literal notranslate"><span class="pre">seen_greeting</span></code></a>.  Sets server to extended command mode.</td>
</tr>
<tr class="row-even"><td>NOOP</td>
<td>Takes no action.</td>
</tr>
<tr class="row-odd"><td>QUIT</td>
<td>Closes the connection cleanly.</td>
</tr>
<tr class="row-even"><td>MAIL</td>
<td>Accepts the “MAIL FROM:” syntax and stores the supplied address as
<a class="reference internal" href="#smtpd.SMTPChannel.mailfrom" title="smtpd.SMTPChannel.mailfrom"><code class="xref py py-attr docutils literal notranslate"><span class="pre">mailfrom</span></code></a>.  In extended command mode, accepts the
<span class="target" id="index-8"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc1870.html"><strong>RFC 1870</strong></a> SIZE attribute and responds appropriately based on the
value of <em>data_size_limit</em>.</td>
</tr>
<tr class="row-odd"><td>RCPT</td>
<td>Accepts the “RCPT TO:” syntax and stores the supplied addresses in
the <a class="reference internal" href="#smtpd.SMTPChannel.rcpttos" title="smtpd.SMTPChannel.rcpttos"><code class="xref py py-attr docutils literal notranslate"><span class="pre">rcpttos</span></code></a> list.</td>
</tr>
<tr class="row-even"><td>RSET</td>
<td>Resets the <a class="reference internal" href="#smtpd.SMTPChannel.mailfrom" title="smtpd.SMTPChannel.mailfrom"><code class="xref py py-attr docutils literal notranslate"><span class="pre">mailfrom</span></code></a>, <a class="reference internal" href="#smtpd.SMTPChannel.rcpttos" title="smtpd.SMTPChannel.rcpttos"><code class="xref py py-attr docutils literal notranslate"><span class="pre">rcpttos</span></code></a>, and
<a class="reference internal" href="#smtpd.SMTPChannel.received_data" title="smtpd.SMTPChannel.received_data"><code class="xref py py-attr docutils literal notranslate"><span class="pre">received_data</span></code></a>, but not the greeting.</td>
</tr>
<tr class="row-odd"><td>DATA</td>
<td>Sets the internal state to <code class="xref py py-attr docutils literal notranslate"><span class="pre">DATA</span></code> and stores remaining lines
from the client in <a class="reference internal" href="#smtpd.SMTPChannel.received_data" title="smtpd.SMTPChannel.received_data"><code class="xref py py-attr docutils literal notranslate"><span class="pre">received_data</span></code></a> until the terminator
<code class="docutils literal notranslate"><span class="pre">"\r\n.\r\n"</span></code> is received.</td>
</tr>
<tr class="row-even"><td>HELP</td>
<td>Returns minimal information on command syntax</td>
</tr>
<tr class="row-odd"><td>VRFY</td>
<td>Returns code 252 (the server doesn’t know if the address is valid)</td>
</tr>
<tr class="row-even"><td>EXPN</td>
<td>Reports that the command is not implemented.</td>
</tr>
</tbody>
</table>
</dd>