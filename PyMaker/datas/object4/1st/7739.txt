link:
library/gettext.html#the-gnutranslations-class

docs:

The GNUTranslations class¶
The gettext module provides one additional class derived from
NullTranslations: GNUTranslations.  This class overrides
_parse() to enable reading GNU gettext format .mo files
in both big-endian and little-endian format.
GNUTranslations parses optional metadata out of the translation
catalog. It is convention with GNU gettext to include metadata as
the translation for the empty string. This metadata is in RFC 822-style
key: value pairs, and should contain the Project-Id-Version key.  If the
key Content-Type is found, then the charset property is used to
initialize the “protected” _charset instance variable, defaulting to
None if not found.  If the charset encoding is specified, then all message
ids and message strings read from the catalog are converted to Unicode using
this encoding, else ASCII is assumed.
Since message ids are read as Unicode strings too, all *gettext() methods
will assume message ids as Unicode strings, not byte strings.
The entire set of key/value pairs are placed into a dictionary and set as the
“protected” _info instance variable.
If the .mo file’s magic number is invalid, the major version number is
unexpected, or if other problems occur while reading the file, instantiating a
GNUTranslations class can raise OSError.


class gettext.GNUTranslations¶
The following methods are overridden from the base class implementation:


gettext(message)¶
Look up the message id in the catalog and return the corresponding message
string, as a Unicode string.  If there is no entry in the catalog for the
message id, and a fallback has been set, the look up is forwarded to the
fallback’s gettext() method.  Otherwise, the
message id is returned.



ngettext(singular, plural, n)¶
Do a plural-forms lookup of a message id.  singular is used as the message id
for purposes of lookup in the catalog, while n is used to determine which
plural form to use.  The returned message string is a Unicode string.
If the message id is not found in the catalog, and a fallback is specified,
the request is forwarded to the fallback’s ngettext()
method.  Otherwise, when n is 1 singular is returned, and plural is
returned in all other cases.
Here is an example:
n = len(os.listdir('.'))
cat = GNUTranslations(somefile)
message = cat.ngettext(
    'There is %(num)d file in this directory',
    'There are %(num)d files in this directory',
    n) % {'num': n}





lgettext(message)¶



lngettext(singular, plural, n)¶
Equivalent to gettext() and ngettext(), but the translation
is returned as a byte string encoded in the preferred system encoding
if no encoding  was explicitly set with
set_output_charset().

Warning
These methods should be avoided in Python 3.  See the warning for the
lgettext() function.



