link:
library/ipaddress.html#ipaddress.IPv6Network

docs:

<dt id="ipaddress.IPv6Network">
<em class="property">class </em><code class="descclassname">ipaddress.</code><code class="descname">IPv6Network</code><span class="sig-paren">(</span><em>address</em>, <em>strict=True</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network" title="Permalink to this definition">¶</a></dt>
<dd><p>Construct an IPv6 network definition.  <em>address</em> can be one of the following:</p>
<ol class="arabic">
<li><p class="first">A string consisting of an IP address and an optional prefix length,
separated by a slash (<code class="docutils literal notranslate"><span class="pre">/</span></code>).  The IP address is the network address,
and the prefix length must be a single number, the <em>prefix</em>.  If no
prefix length is provided, it’s considered to be <code class="docutils literal notranslate"><span class="pre">/128</span></code>.</p>
<p>Note that currently expanded netmasks are not supported.  That means
<code class="docutils literal notranslate"><span class="pre">2001:db00::0/24</span></code> is a valid argument while <code class="docutils literal notranslate"><span class="pre">2001:db00::0/ffff:ff00::</span></code>
not.</p>
</li>
<li><p class="first">An integer that fits into 128 bits.  This is equivalent to a
single-address network, with the network address being <em>address</em> and
the mask being <code class="docutils literal notranslate"><span class="pre">/128</span></code>.</p>
</li>
<li><p class="first">An integer packed into a <a class="reference internal" href="stdtypes.html#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> object of length 16, big-endian.
The interpretation is similar to an integer <em>address</em>.</p>
</li>
<li><p class="first">A two-tuple of an address description and a netmask, where the address
description is either a string, a 128-bits integer, a 16-bytes packed
integer, or an existing IPv6Address object; and the netmask is an
integer representing the prefix length.</p>
</li>
</ol>
<p>An <a class="reference internal" href="#ipaddress.AddressValueError" title="ipaddress.AddressValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">AddressValueError</span></code></a> is raised if <em>address</em> is not a valid IPv6
address.  A <a class="reference internal" href="#ipaddress.NetmaskValueError" title="ipaddress.NetmaskValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NetmaskValueError</span></code></a> is raised if the mask is not valid for
an IPv6 address.</p>
<p>If <em>strict</em> is <code class="docutils literal notranslate"><span class="pre">True</span></code> and host bits are set in the supplied address,
then <a class="reference internal" href="exceptions.html#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> is raised.  Otherwise, the host bits are masked out
to determine the appropriate network address.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>Added the two-tuple form for the <em>address</em> constructor parameter.</p>
</div>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.version">
<code class="descname">version</code><a class="headerlink" href="#ipaddress.IPv6Network.version" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.max_prefixlen">
<code class="descname">max_prefixlen</code><a class="headerlink" href="#ipaddress.IPv6Network.max_prefixlen" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.is_multicast">
<code class="descname">is_multicast</code><a class="headerlink" href="#ipaddress.IPv6Network.is_multicast" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.is_private">
<code class="descname">is_private</code><a class="headerlink" href="#ipaddress.IPv6Network.is_private" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.is_unspecified">
<code class="descname">is_unspecified</code><a class="headerlink" href="#ipaddress.IPv6Network.is_unspecified" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.is_reserved">
<code class="descname">is_reserved</code><a class="headerlink" href="#ipaddress.IPv6Network.is_reserved" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.is_loopback">
<code class="descname">is_loopback</code><a class="headerlink" href="#ipaddress.IPv6Network.is_loopback" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.is_link_local">
<code class="descname">is_link_local</code><a class="headerlink" href="#ipaddress.IPv6Network.is_link_local" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.network_address">
<code class="descname">network_address</code><a class="headerlink" href="#ipaddress.IPv6Network.network_address" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.broadcast_address">
<code class="descname">broadcast_address</code><a class="headerlink" href="#ipaddress.IPv6Network.broadcast_address" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.hostmask">
<code class="descname">hostmask</code><a class="headerlink" href="#ipaddress.IPv6Network.hostmask" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.netmask">
<code class="descname">netmask</code><a class="headerlink" href="#ipaddress.IPv6Network.netmask" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.with_prefixlen">
<code class="descname">with_prefixlen</code><a class="headerlink" href="#ipaddress.IPv6Network.with_prefixlen" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.compressed">
<code class="descname">compressed</code><a class="headerlink" href="#ipaddress.IPv6Network.compressed" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.exploded">
<code class="descname">exploded</code><a class="headerlink" href="#ipaddress.IPv6Network.exploded" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.with_netmask">
<code class="descname">with_netmask</code><a class="headerlink" href="#ipaddress.IPv6Network.with_netmask" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.with_hostmask">
<code class="descname">with_hostmask</code><a class="headerlink" href="#ipaddress.IPv6Network.with_hostmask" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.num_addresses">
<code class="descname">num_addresses</code><a class="headerlink" href="#ipaddress.IPv6Network.num_addresses" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.prefixlen">
<code class="descname">prefixlen</code><a class="headerlink" href="#ipaddress.IPv6Network.prefixlen" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.hosts">
<code class="descname">hosts</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.hosts" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns an iterator over the usable hosts in the network.  The usable
hosts are all the IP addresses that belong to the network, except the
Subnet-Router anycast address.  For networks with a mask length of 127,
the Subnet-Router anycast address is also included in the result.</p>
</dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.overlaps">
<code class="descname">overlaps</code><span class="sig-paren">(</span><em>other</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.overlaps" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.address_exclude">
<code class="descname">address_exclude</code><span class="sig-paren">(</span><em>network</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.address_exclude" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.subnets">
<code class="descname">subnets</code><span class="sig-paren">(</span><em>prefixlen_diff=1</em>, <em>new_prefix=None</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.subnets" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.supernet">
<code class="descname">supernet</code><span class="sig-paren">(</span><em>prefixlen_diff=1</em>, <em>new_prefix=None</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.supernet" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.subnet_of">
<code class="descname">subnet_of</code><span class="sig-paren">(</span><em>other</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.subnet_of" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.supernet_of">
<code class="descname">supernet_of</code><span class="sig-paren">(</span><em>other</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.supernet_of" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>
<dl class="method">
<dt id="ipaddress.IPv6Network.compare_networks">
<code class="descname">compare_networks</code><span class="sig-paren">(</span><em>other</em><span class="sig-paren">)</span><a class="headerlink" href="#ipaddress.IPv6Network.compare_networks" title="Permalink to this definition">¶</a></dt>
<dd><p>Refer to the corresponding attribute documentation in
<a class="reference internal" href="#ipaddress.IPv4Network" title="ipaddress.IPv4Network"><code class="xref py py-class docutils literal notranslate"><span class="pre">IPv4Network</span></code></a>.</p>
</dd></dl>
<dl class="attribute">
<dt id="ipaddress.IPv6Network.is_site_local">
<code class="descname">is_site_local</code><a class="headerlink" href="#ipaddress.IPv6Network.is_site_local" title="Permalink to this definition">¶</a></dt>
<dd><p>These attribute is true for the network as a whole if it is true
for both the network address and the broadcast address.</p>
</dd></dl>
</dd>