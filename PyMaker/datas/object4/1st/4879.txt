link:
library/asyncio-protocol.html#transports-hierarchy

docs:

Transports Hierarchy¶


class asyncio.BaseTransport¶
Base class for all transports.  Contains methods that all
asyncio transports share.



class asyncio.WriteTransport(BaseTransport)¶
A base transport for write-only connections.
Instances of the WriteTransport class are returned from
the loop.connect_write_pipe() event loop method and
are also used by subprocess-related methods like
loop.subprocess_exec().



class asyncio.ReadTransport(BaseTransport)¶
A base transport for read-only connections.
Instances of the ReadTransport class are returned from
the loop.connect_read_pipe() event loop method and
are also used by subprocess-related methods like
loop.subprocess_exec().



class asyncio.Transport(WriteTransport, ReadTransport)¶
Interface representing a bidirectional transport, such as a
TCP connection.
The user does not instantiate a transport directly; they call a
utility function, passing it a protocol factory and other
information necessary to create the transport and protocol.
Instances of the Transport class are returned from or used by
event loop methods like loop.create_connection(),
loop.create_unix_connection(),
loop.create_server(), loop.sendfile(), etc.



class asyncio.DatagramTransport(BaseTransport)¶
A transport for datagram (UDP) connections.
Instances of the DatagramTransport class are returned from
the loop.create_datagram_endpoint() event loop method.



class asyncio.SubprocessTransport(BaseTransport)¶
An abstraction to represent a connection between a parent and its
child OS process.
Instances of the SubprocessTransport class are returned from
event loop methods loop.subprocess_shell() and
loop.subprocess_exec().

