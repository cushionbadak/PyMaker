link:
library/socket.html#socket.socket.sendall

docs:

<dt id="socket.socket.sendall">
<code class="descclassname">socket.</code><code class="descname">sendall</code><span class="sig-paren">(</span><em>bytes</em><span class="optional">[</span>, <em>flags</em><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#socket.socket.sendall" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Send data to the socket.  The socket must be connected to a remote socket.  The
optional <em>flags</em> argument has the same meaning as for <a class="reference internal" href="#socket.socket.recv" title="socket.socket.recv"><code class="xref py py-meth docutils literal notranslate"><span class="pre">recv()</span></code></a> above.
Unlike <a class="reference internal" href="#socket.socket.send" title="socket.socket.send"><code class="xref py py-meth docutils literal notranslate"><span class="pre">send()</span></code></a>, this method continues to send data from <em>bytes</em> until
either all data has been sent or an error occurs.  <code class="docutils literal notranslate"><span class="pre">None</span></code> is returned on
success.  On error, an exception is raised, and there is no way to determine how
much data, if any, was successfully sent.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>The socket timeout is no more reset each time data is sent successfully.
The socket timeout is now the maximum total duration to send all data.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>If the system call is interrupted and the signal handler does not raise
an exception, the method now retries the system call instead of raising
an <a class="reference internal" href="exceptions.html#InterruptedError" title="InterruptedError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">InterruptedError</span></code></a> exception (see <span class="target" id="index-11"></span><a class="pep reference external" href="https://www.python.org/dev/peps/pep-0475"><strong>PEP 475</strong></a> for the rationale).</p>
</div>
</dd>