link:
library/inspect.html#inspect.signature

docs:

<dt id="inspect.signature">
<code class="descclassname">inspect.</code><code class="descname">signature</code><span class="sig-paren">(</span><em>callable</em>, <em>*</em>, <em>follow_wrapped=True</em><span class="sig-paren">)</span><a class="headerlink" href="#inspect.signature" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a <a class="reference internal" href="#inspect.Signature" title="inspect.Signature"><code class="xref py py-class docutils literal notranslate"><span class="pre">Signature</span></code></a> object for the given <code class="docutils literal notranslate"><span class="pre">callable</span></code>:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">inspect</span> <span class="k">import</span> <span class="n">signature</span>
<span class="gp">&gt;&gt;&gt; </span><span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="n">b</span><span class="p">:</span><span class="nb">int</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<span class="gp">... </span>    <span class="k">pass</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">sig</span> <span class="o">=</span> <span class="n">signature</span><span class="p">(</span><span class="n">foo</span><span class="p">)</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">str</span><span class="p">(</span><span class="n">sig</span><span class="p">)</span>
<span class="go">'(a, *, b:int, **kwargs)'</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">str</span><span class="p">(</span><span class="n">sig</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">'b'</span><span class="p">])</span>
<span class="go">'b:int'</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">sig</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">'b'</span><span class="p">]</span><span class="o">.</span><span class="n">annotation</span>
<span class="go">&lt;class 'int'&gt;</span>
</pre></div>
</div>
<p>Accepts a wide range of Python callables, from plain functions and classes to
<a class="reference internal" href="functools.html#functools.partial" title="functools.partial"><code class="xref py py-func docutils literal notranslate"><span class="pre">functools.partial()</span></code></a> objects.</p>
<p>Raises <a class="reference internal" href="exceptions.html#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> if no signature can be provided, and
<a class="reference internal" href="exceptions.html#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a> if that type of object is not supported.</p>
<p>A slash(/) in the signature of a function denotes that the parameters prior
to it are positional-only. For more info, see
<a class="reference internal" href="../faq/programming.html#faq-positional-only-arguments"><span class="std std-ref">the FAQ entry on positional-only parameters</span></a>.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.5: </span><code class="docutils literal notranslate"><span class="pre">follow_wrapped</span></code> parameter. Pass <code class="docutils literal notranslate"><span class="pre">False</span></code> to get a signature of
<code class="docutils literal notranslate"><span class="pre">callable</span></code> specifically (<code class="docutils literal notranslate"><span class="pre">callable.__wrapped__</span></code> will not be used to
unwrap decorated callables.)</p>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Some callables may not be introspectable in certain implementations of
Python.  For example, in CPython, some built-in functions defined in
C provide no metadata about their arguments.</p>
</div>
</dd>