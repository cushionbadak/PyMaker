link:
library/mimetypes.html#mimetypes-objects

docs:

MimeTypes Objects¶
The MimeTypes class may be useful for applications which may want more
than one MIME-type database; it provides an interface similar to the one of the
mimetypes module.


class mimetypes.MimeTypes(filenames=(), strict=True)¶
This class represents a MIME-types database.  By default, it provides access to
the same database as the rest of this module. The initial database is a copy of
that provided by the module, and may be extended by loading additional
mime.types-style files into the database using the read() or
readfp() methods.  The mapping dictionaries may also be cleared before
loading additional data if the default data is not desired.
The optional filenames parameter can be used to cause additional files to be
loaded “on top” of the default database.


suffix_map¶
Dictionary mapping suffixes to suffixes.  This is used to allow recognition of
encoded files for which the encoding and the type are indicated by the same
extension.  For example, the .tgz extension is mapped to .tar.gz
to allow the encoding and type to be recognized separately.  This is initially a
copy of the global suffix_map defined in the module.



encodings_map¶
Dictionary mapping filename extensions to encoding types.  This is initially a
copy of the global encodings_map defined in the module.



types_map¶
Tuple containing two dictionaries, mapping filename extensions to MIME types:
the first dictionary is for the non-standards types and the second one is for
the standard types. They are initialized by common_types and
types_map.



types_map_inv¶
Tuple containing two dictionaries, mapping MIME types to a list of filename
extensions: the first dictionary is for the non-standards types and the
second one is for the standard types. They are initialized by
common_types and types_map.



guess_extension(type, strict=True)¶
Similar to the guess_extension() function, using the tables stored as part
of the object.



guess_type(url, strict=True)¶
Similar to the guess_type() function, using the tables stored as part of
the object.



guess_all_extensions(type, strict=True)¶
Similar to the guess_all_extensions() function, using the tables stored
as part of the object.



read(filename, strict=True)¶
Load MIME information from a file named filename.  This uses readfp() to
parse the file.
If strict is True, information will be added to list of standard types,
else to the list of non-standard types.



readfp(fp, strict=True)¶
Load MIME type information from an open file fp.  The file must have the format of
the standard mime.types files.
If strict is True, information will be added to the list of standard
types, else to the list of non-standard types.



read_windows_registry(strict=True)¶
Load MIME type information from the Windows registry.
Availability: Windows.
If strict is True, information will be added to the list of standard
types, else to the list of non-standard types.

New in version 3.2.



