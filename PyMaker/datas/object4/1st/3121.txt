link:
library/os.html#os.statvfs

docs:


os.statvfs(path)¶
Perform a statvfs() system call on the given path.  The return value is
an object whose attributes describe the filesystem on the given path, and
correspond to the members of the statvfs structure, namely:
f_bsize, f_frsize, f_blocks, f_bfree,
f_bavail, f_files, f_ffree, f_favail,
f_flag, f_namemax, f_fsid.
Two module-level constants are defined for the f_flag attribute’s
bit-flags: if ST_RDONLY is set, the filesystem is mounted
read-only, and if ST_NOSUID is set, the semantics of
setuid/setgid bits are disabled or not supported.
Additional module-level constants are defined for GNU/glibc based systems.
These are ST_NODEV (disallow access to device special files),
ST_NOEXEC (disallow program execution), ST_SYNCHRONOUS
(writes are synced at once), ST_MANDLOCK (allow mandatory locks on an FS),
ST_WRITE (write on file/directory/symlink), ST_APPEND
(append-only file), ST_IMMUTABLE (immutable file), ST_NOATIME
(do not update access times), ST_NODIRATIME (do not update directory access
times), ST_RELATIME (update atime relative to mtime/ctime).
This function can support specifying a file descriptor.
Availability: Unix.

Changed in version 3.2: The ST_RDONLY and ST_NOSUID constants were added.


New in version 3.3: Added support for specifying an open file descriptor for path.


Changed in version 3.4: The ST_NODEV, ST_NOEXEC, ST_SYNCHRONOUS,
ST_MANDLOCK, ST_WRITE, ST_APPEND,
ST_IMMUTABLE, ST_NOATIME, ST_NODIRATIME,
and ST_RELATIME constants were added.


Changed in version 3.6: Accepts a path-like object.


New in version 3.7: Added f_fsid.

