link:
library/zipfile.html#zipfile.ZipFile.open

docs:


ZipFile.open(name, mode='r', pwd=None, *, force_zip64=False)Â¶
Access a member of the archive as a binary file-like object.  name
can be either the name of a file within the archive or a ZipInfo
object.  The mode parameter, if included, must be 'r' (the default)
or 'w'.  pwd is the password used to decrypt encrypted ZIP files.
open() is also a context manager and therefore supports the
with statement:
with ZipFile('spam.zip') as myzip:
    with myzip.open('eggs.txt') as myfile:
        print(myfile.read())


With mode 'r' the file-like object
(ZipExtFile) is read-only and provides the following methods:
read(), readline(),
readlines(), seek(),
tell(), __iter__(), __next__().
These objects can operate independently of the ZipFile.
With mode='w', a writable file handle is returned, which supports the
write() method.  While a writable file handle is open,
attempting to read or write other files in the ZIP file will raise a
ValueError.
When writing a file, if the file size is not known in advance but may exceed
2 GiB, pass force_zip64=True to ensure that the header format is
capable of supporting large files.  If the file size is known in advance,
construct a ZipInfo object with file_size set, and
use that as the name parameter.

Note
The open(), read() and extract() methods can take a filename
or a ZipInfo object.  You will appreciate this when trying to read a
ZIP file that contains members with duplicate names.


Changed in version 3.6: Removed support of mode='U'.  Use io.TextIOWrapper for reading
compressed text files in universal newlines mode.


Changed in version 3.6: open() can now be used to write files into the archive with the
mode='w' option.


Changed in version 3.6: Calling open() on a closed ZipFile will raise a ValueError.
Previously, a RuntimeError was raised.

