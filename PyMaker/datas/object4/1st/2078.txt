link:
library/os.path.html#os.path.basename

docs:

<dt id="os.path.basename">
<code class="descclassname">os.path.</code><code class="descname">basename</code><span class="sig-paren">(</span><em>path</em><span class="sig-paren">)</span><a class="headerlink" href="#os.path.basename" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return the base name of pathname <em>path</em>.  This is the second element of the
pair returned by passing <em>path</em> to the function <a class="reference internal" href="#os.path.split" title="os.path.split"><code class="xref py py-func docutils literal notranslate"><span class="pre">split()</span></code></a>.  Note that
the result of this function is different
from the Unix <strong class="program">basename</strong> program; where <strong class="program">basename</strong> for
<code class="docutils literal notranslate"><span class="pre">'/foo/bar/'</span></code> returns <code class="docutils literal notranslate"><span class="pre">'bar'</span></code>, the <a class="reference internal" href="#os.path.basename" title="os.path.basename"><code class="xref py py-func docutils literal notranslate"><span class="pre">basename()</span></code></a> function returns an
empty string (<code class="docutils literal notranslate"><span class="pre">''</span></code>).</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>Accepts a <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like object</span></a>.</p>
</div>
</dd>