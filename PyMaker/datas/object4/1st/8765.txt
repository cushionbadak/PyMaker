link:
library/test.html#test.support.run_unittest

docs:

<dt id="test.support.run_unittest">
<code class="descclassname">test.support.</code><code class="descname">run_unittest</code><span class="sig-paren">(</span><em>*classes</em><span class="sig-paren">)</span><a class="headerlink" href="#test.support.run_unittest" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Execute <a class="reference internal" href="unittest.html#unittest.TestCase" title="unittest.TestCase"><code class="xref py py-class docutils literal notranslate"><span class="pre">unittest.TestCase</span></code></a> subclasses passed to the function. The
function scans the classes for methods starting with the prefix <code class="docutils literal notranslate"><span class="pre">test_</span></code>
and executes the tests individually.</p>
<p>It is also legal to pass strings as parameters; these should be keys in
<code class="docutils literal notranslate"><span class="pre">sys.modules</span></code>. Each associated module will be scanned by
<code class="docutils literal notranslate"><span class="pre">unittest.TestLoader.loadTestsFromModule()</span></code>. This is usually seen in the
following <code class="xref py py-func docutils literal notranslate"><span class="pre">test_main()</span></code> function:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">test_main</span><span class="p">():</span>
    <span class="n">support</span><span class="o">.</span><span class="n">run_unittest</span><span class="p">(</span><span class="vm">__name__</span><span class="p">)</span>
</pre></div>
</div>
<p>This will run all tests defined in the named module.</p>
</dd>