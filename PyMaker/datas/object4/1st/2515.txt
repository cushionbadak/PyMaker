link:
library/lzma.html#lzma.LZMAFile

docs:

<dt id="lzma.LZMAFile">
<em class="property">class </em><code class="descclassname">lzma.</code><code class="descname">LZMAFile</code><span class="sig-paren">(</span><em>filename=None</em>, <em>mode="r"</em>, <em>*</em>, <em>format=None</em>, <em>check=-1</em>, <em>preset=None</em>, <em>filters=None</em><span class="sig-paren">)</span><a class="headerlink" href="#lzma.LZMAFile" title="Permalink to this definition">¶</a></dt>
<dd><p>Open an LZMA-compressed file in binary mode.</p>
<p>An <a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a> can wrap an already-open <a class="reference internal" href="../glossary.html#term-file-object"><span class="xref std std-term">file object</span></a>, or operate
directly on a named file. The <em>filename</em> argument specifies either the file
object to wrap, or the name of the file to open (as a <a class="reference internal" href="stdtypes.html#str" title="str"><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></a>,
<a class="reference internal" href="stdtypes.html#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> or <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like</span></a> object). When wrapping an
existing file object, the wrapped file will not be closed when the
<a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a> is closed.</p>
<p>The <em>mode</em> argument can be either <code class="docutils literal notranslate"><span class="pre">"r"</span></code> for reading (default), <code class="docutils literal notranslate"><span class="pre">"w"</span></code> for
overwriting, <code class="docutils literal notranslate"><span class="pre">"x"</span></code> for exclusive creation, or <code class="docutils literal notranslate"><span class="pre">"a"</span></code> for appending. These
can equivalently be given as <code class="docutils literal notranslate"><span class="pre">"rb"</span></code>, <code class="docutils literal notranslate"><span class="pre">"wb"</span></code>, <code class="docutils literal notranslate"><span class="pre">"xb"</span></code> and <code class="docutils literal notranslate"><span class="pre">"ab"</span></code>
respectively.</p>
<p>If <em>filename</em> is a file object (rather than an actual file name), a mode of
<code class="docutils literal notranslate"><span class="pre">"w"</span></code> does not truncate the file, and is instead equivalent to <code class="docutils literal notranslate"><span class="pre">"a"</span></code>.</p>
<p>When opening a file for reading, the input file may be the concatenation of
multiple separate compressed streams. These are transparently decoded as a
single logical stream.</p>
<p>When opening a file for reading, the <em>format</em> and <em>filters</em> arguments have
the same meanings as for <a class="reference internal" href="#lzma.LZMADecompressor" title="lzma.LZMADecompressor"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMADecompressor</span></code></a>. In this case, the <em>check</em>
and <em>preset</em> arguments should not be used.</p>
<p>When opening a file for writing, the <em>format</em>, <em>check</em>, <em>preset</em> and
<em>filters</em> arguments have the same meanings as for <a class="reference internal" href="#lzma.LZMACompressor" title="lzma.LZMACompressor"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMACompressor</span></code></a>.</p>
<p><a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a> supports all the members specified by
<a class="reference internal" href="io.html#io.BufferedIOBase" title="io.BufferedIOBase"><code class="xref py py-class docutils literal notranslate"><span class="pre">io.BufferedIOBase</span></code></a>, except for <code class="xref py py-meth docutils literal notranslate"><span class="pre">detach()</span></code> and <code class="xref py py-meth docutils literal notranslate"><span class="pre">truncate()</span></code>.
Iteration and the <a class="reference internal" href="../reference/compound_stmts.html#with"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code></a> statement are supported.</p>
<p>The following method is also provided:</p>
<dl class="method">
<dt id="lzma.LZMAFile.peek">
<code class="descname">peek</code><span class="sig-paren">(</span><em>size=-1</em><span class="sig-paren">)</span><a class="headerlink" href="#lzma.LZMAFile.peek" title="Permalink to this definition">¶</a></dt>
<dd><p>Return buffered data without advancing the file position. At least one
byte of data will be returned, unless EOF has been reached. The exact
number of bytes returned is unspecified (the <em>size</em> argument is ignored).</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">While calling <a class="reference internal" href="#lzma.LZMAFile.peek" title="lzma.LZMAFile.peek"><code class="xref py py-meth docutils literal notranslate"><span class="pre">peek()</span></code></a> does not change the file position of
the <a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a>, it may change the position of the underlying
file object (e.g. if the <a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a> was constructed by passing a
file object for <em>filename</em>).</p>
</div>
</dd></dl>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>Added support for the <code class="docutils literal notranslate"><span class="pre">"x"</span></code> and <code class="docutils literal notranslate"><span class="pre">"xb"</span></code> modes.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>The <a class="reference internal" href="io.html#io.BufferedIOBase.read" title="io.BufferedIOBase.read"><code class="xref py py-meth docutils literal notranslate"><span class="pre">read()</span></code></a> method now accepts an argument of
<code class="docutils literal notranslate"><span class="pre">None</span></code>.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>Accepts a <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like object</span></a>.</p>
</div>
</dd>