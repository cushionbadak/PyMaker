link:
library/codecs.html#codecs.iterencode

docs:

<dt id="codecs.iterencode">
<code class="descclassname">codecs.</code><code class="descname">iterencode</code><span class="sig-paren">(</span><em>iterator</em>, <em>encoding</em>, <em>errors='strict'</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="headerlink" href="#codecs.iterencode" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Uses an incremental encoder to iteratively encode the input provided by
<em>iterator</em>. This function is a <a class="reference internal" href="../glossary.html#term-generator"><span class="xref std std-term">generator</span></a>.
The <em>errors</em> argument (as well as any
other keyword argument) is passed through to the incremental encoder.</p>
<p>This function requires that the codec accept text <a class="reference internal" href="stdtypes.html#str" title="str"><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></a> objects
to encode. Therefore it does not support bytes-to-bytes encoders such as
<code class="docutils literal notranslate"><span class="pre">base64_codec</span></code>.</p>
</dd>