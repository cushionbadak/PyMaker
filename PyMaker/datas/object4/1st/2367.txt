link:
library/dbm.html#dbm.gnu.open

docs:

<dt id="dbm.gnu.open">
<code class="descclassname">dbm.gnu.</code><code class="descname">open</code><span class="sig-paren">(</span><em>filename</em><span class="optional">[</span>, <em>flag</em><span class="optional">[</span>, <em>mode</em><span class="optional">]</span><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#dbm.gnu.open" title="Permalink to this definition">¶</a></dt>
<dd><p>Open a <code class="docutils literal notranslate"><span class="pre">gdbm</span></code> database and return a <code class="xref py py-class docutils literal notranslate"><span class="pre">gdbm</span></code> object.  The <em>filename</em>
argument is the name of the database file.</p>
<p>The optional <em>flag</em> argument can be:</p>
<table border="1" class="docutils">
<colgroup>
<col width="17%"/>
<col width="83%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Value</th>
<th class="head">Meaning</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">'r'</span></code></td>
<td>Open existing database for reading only
(default)</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">'w'</span></code></td>
<td>Open existing database for reading and
writing</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">'c'</span></code></td>
<td>Open database for reading and writing,
creating it if it doesn’t exist</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">'n'</span></code></td>
<td>Always create a new, empty database, open
for reading and writing</td>
</tr>
</tbody>
</table>
<p>The following additional characters may be appended to the flag to control
how the database is opened:</p>
<table border="1" class="docutils">
<colgroup>
<col width="17%"/>
<col width="83%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Value</th>
<th class="head">Meaning</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">'f'</span></code></td>
<td>Open the database in fast mode.  Writes
to the database will not be synchronized.</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">'s'</span></code></td>
<td>Synchronized mode. This will cause changes
to the database to be immediately written
to the file.</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">'u'</span></code></td>
<td>Do not lock database.</td>
</tr>
</tbody>
</table>
<p>Not all flags are valid for all versions of <code class="docutils literal notranslate"><span class="pre">gdbm</span></code>.  The module constant
<code class="xref py py-const docutils literal notranslate"><span class="pre">open_flags</span></code> is a string of supported flag characters.  The exception
<a class="reference internal" href="#dbm.gnu.error" title="dbm.gnu.error"><code class="xref py py-exc docutils literal notranslate"><span class="pre">error</span></code></a> is raised if an invalid flag is specified.</p>
<p>The optional <em>mode</em> argument is the Unix mode of the file, used only when the
database has to be created.  It defaults to octal <code class="docutils literal notranslate"><span class="pre">0o666</span></code>.</p>
<p>In addition to the dictionary-like methods, <code class="docutils literal notranslate"><span class="pre">gdbm</span></code> objects have the
following methods:</p>
<dl class="method">
<dt id="dbm.gnu.gdbm.firstkey">
<code class="descclassname">gdbm.</code><code class="descname">firstkey</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#dbm.gnu.gdbm.firstkey" title="Permalink to this definition">¶</a></dt>
<dd><p>It’s possible to loop over every key in the database using this method  and the
<a class="reference internal" href="#dbm.gnu.gdbm.nextkey" title="dbm.gnu.gdbm.nextkey"><code class="xref py py-meth docutils literal notranslate"><span class="pre">nextkey()</span></code></a> method.  The traversal is ordered by <code class="docutils literal notranslate"><span class="pre">gdbm</span></code>’s internal
hash values, and won’t be sorted by the key values.  This method returns
the starting key.</p>
</dd></dl>
<dl class="method">
<dt id="dbm.gnu.gdbm.nextkey">
<code class="descclassname">gdbm.</code><code class="descname">nextkey</code><span class="sig-paren">(</span><em>key</em><span class="sig-paren">)</span><a class="headerlink" href="#dbm.gnu.gdbm.nextkey" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the key that follows <em>key</em> in the traversal.  The following code prints
every key in the database <code class="docutils literal notranslate"><span class="pre">db</span></code>, without having to create a list in memory that
contains them all:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">k</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">firstkey</span><span class="p">()</span>
<span class="k">while</span> <span class="n">k</span> <span class="o">!=</span> <span class="kc">None</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
    <span class="n">k</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">nextkey</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</pre></div>
</div>
</dd></dl>
<dl class="method">
<dt id="dbm.gnu.gdbm.reorganize">
<code class="descclassname">gdbm.</code><code class="descname">reorganize</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#dbm.gnu.gdbm.reorganize" title="Permalink to this definition">¶</a></dt>
<dd><p>If you have carried out a lot of deletions and would like to shrink the space
used by the <code class="docutils literal notranslate"><span class="pre">gdbm</span></code> file, this routine will reorganize the database.  <code class="docutils literal notranslate"><span class="pre">gdbm</span></code>
objects will not shorten the length of a database file except by using this
reorganization; otherwise, deleted file space will be kept and reused as new
(key, value) pairs are added.</p>
</dd></dl>
<dl class="method">
<dt id="dbm.gnu.gdbm.sync">
<code class="descclassname">gdbm.</code><code class="descname">sync</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#dbm.gnu.gdbm.sync" title="Permalink to this definition">¶</a></dt>
<dd><p>When the database has been opened in fast mode, this method forces any
unwritten data to be written to the disk.</p>
</dd></dl>
<dl class="method">
<dt id="dbm.gnu.gdbm.close">
<code class="descclassname">gdbm.</code><code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#dbm.gnu.gdbm.close" title="Permalink to this definition">¶</a></dt>
<dd><p>Close the <code class="docutils literal notranslate"><span class="pre">gdbm</span></code> database.</p>
</dd></dl>
</dd>