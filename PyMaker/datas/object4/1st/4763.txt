link:
library/asyncio-eventloop.html#asyncio.get_event_loop

docs:


asyncio.get_event_loop()Â¶
Get the current event loop.  If there is no current event loop set
in the current OS thread and set_event_loop() has not yet
been called, asyncio will create a new event loop and set it as the
current one.
Because this function has rather complex behavior (especially
when custom event loop policies are in use), using the
get_running_loop() function is preferred to get_event_loop()
in coroutines and callbacks.
Consider also using the asyncio.run() function instead of using
lower level functions to manually create and close an event loop.
