link:
library/email.message.html#email.message.EmailMessage.__getitem__

docs:

<dt id="email.message.EmailMessage.__getitem__">
<code class="descname">__getitem__</code><span class="sig-paren">(</span><em>name</em><span class="sig-paren">)</span><a class="headerlink" href="#email.message.EmailMessage.__getitem__" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the value of the named header field.  <em>name</em> does not include the
colon field separator.  If the header is missing, <code class="docutils literal notranslate"><span class="pre">None</span></code> is returned; a
<a class="reference internal" href="exceptions.html#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a> is never raised.</p>
<p>Note that if the named field appears more than once in the message’s
headers, exactly which of those field values will be returned is
undefined.  Use the <a class="reference internal" href="#email.message.EmailMessage.get_all" title="email.message.EmailMessage.get_all"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_all()</span></code></a> method to get the values of all the
extant headers named <em>name</em>.</p>
<p>Using the standard (non-<code class="docutils literal notranslate"><span class="pre">compat32</span></code>) policies, the returned value is an
instance of a subclass of <a class="reference internal" href="email.headerregistry.html#email.headerregistry.BaseHeader" title="email.headerregistry.BaseHeader"><code class="xref py py-class docutils literal notranslate"><span class="pre">email.headerregistry.BaseHeader</span></code></a>.</p>
</dd>