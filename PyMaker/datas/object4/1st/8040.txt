link:
library/tkinter.html#file-handlers

docs:

File Handlers¶
Tk allows you to register and unregister a callback function which will be
called from the Tk mainloop when I/O is possible on a file descriptor.
Only one handler may be registered per file descriptor. Example code:
import tkinter
widget = tkinter.Tk()
mask = tkinter.READABLE | tkinter.WRITABLE
widget.tk.createfilehandler(file, mask, callback)
...
widget.tk.deletefilehandler(file)


This feature is not available on Windows.
Since you don’t know how many bytes are available for reading, you may not
want to use the BufferedIOBase or TextIOBase
read() or readline() methods,
since these will insist on reading a predefined number of bytes.
For sockets, the recv() or
recvfrom() methods will work fine; for other files,
use raw reads or os.read(file.fileno(), maxbytecount).


Widget.tk.createfilehandler(file, mask, func)¶
Registers the file handler callback function func. The file argument
may either be an object with a fileno() method (such as
a file or socket object), or an integer file descriptor. The mask
argument is an ORed combination of any of the three constants below.
The callback is called as follows:
callback(file, mask)





Widget.tk.deletefilehandler(file)¶
Unregisters a file handler.



tkinter.READABLE¶

tkinter.WRITABLE¶

tkinter.EXCEPTION¶
Constants used in the mask arguments.

