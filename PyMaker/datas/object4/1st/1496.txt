link:
library/enum.html#others

docs:

Others¶
While IntEnum is part of the enum module, it would be very
simple to implement independently:
class IntEnum(int, Enum):
    pass


This demonstrates how similar derived enumerations can be defined; for example
a StrEnum that mixes in str instead of int.
Some rules:

When subclassing Enum, mix-in types must appear before
Enum itself in the sequence of bases, as in the IntEnum
example above.
While Enum can have members of any type, once you mix in an
additional type, all the members must have values of that type, e.g.
int above.  This restriction does not apply to mix-ins which only
add methods and don’t specify another data type such as int or
str.
When another data type is mixed in, the value attribute is not the
same as the enum member itself, although it is equivalent and will compare
equal.
%-style formatting:  %s and %r call the Enum class’s
__str__() and __repr__() respectively; other codes (such as
%i or %h for IntEnum) treat the enum member as its mixed-in type.
Formatted string literals, str.format(),
and format() will use the mixed-in
type’s __format__().  If the Enum class’s str() or
repr() is desired, use the !s or !r format codes.

