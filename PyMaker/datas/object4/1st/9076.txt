link:
library/tracemalloc.html#functions

docs:

Functions¶


tracemalloc.clear_traces()¶
Clear traces of memory blocks allocated by Python.
See also stop().



tracemalloc.get_object_traceback(obj)¶
Get the traceback where the Python object obj was allocated.
Return a Traceback instance, or None if the tracemalloc
module is not tracing memory allocations or did not trace the allocation of
the object.
See also gc.get_referrers() and sys.getsizeof() functions.



tracemalloc.get_traceback_limit()¶
Get the maximum number of frames stored in the traceback of a trace.
The tracemalloc module must be tracing memory allocations to
get the limit, otherwise an exception is raised.
The limit is set by the start() function.



tracemalloc.get_traced_memory()¶
Get the current size and peak size of memory blocks traced by the
tracemalloc module as a tuple: (current: int, peak: int).



tracemalloc.get_tracemalloc_memory()¶
Get the memory usage in bytes of the tracemalloc module used to store
traces of memory blocks.
Return an int.



tracemalloc.is_tracing()¶
True if the tracemalloc module is tracing Python memory
allocations, False otherwise.
See also start() and stop() functions.



tracemalloc.start(nframe: int=1)¶
Start tracing Python memory allocations: install hooks on Python memory
allocators. Collected tracebacks of traces will be limited to nframe
frames. By default, a trace of a memory block only stores the most recent
frame: the limit is 1. nframe must be greater or equal to 1.
Storing more than 1 frame is only useful to compute statistics grouped
by 'traceback' or to compute cumulative statistics: see the
Snapshot.compare_to() and Snapshot.statistics() methods.
Storing more frames increases the memory and CPU overhead of the
tracemalloc module. Use the get_tracemalloc_memory() function
to measure how much memory is used by the tracemalloc module.
The PYTHONTRACEMALLOC environment variable
(PYTHONTRACEMALLOC=NFRAME) and the -X tracemalloc=NFRAME
command line option can be used to start tracing at startup.
See also stop(), is_tracing() and get_traceback_limit()
functions.



tracemalloc.stop()¶
Stop tracing Python memory allocations: uninstall hooks on Python memory
allocators. Also clears all previously collected traces of memory blocks
allocated by Python.
Call take_snapshot() function to take a snapshot of traces before
clearing them.
See also start(), is_tracing() and clear_traces()
functions.



tracemalloc.take_snapshot()¶
Take a snapshot of traces of memory blocks allocated by Python. Return a new
Snapshot instance.
The snapshot does not include memory blocks allocated before the
tracemalloc module started to trace memory allocations.
Tracebacks of traces are limited to get_traceback_limit() frames. Use
the nframe parameter of the start() function to store more frames.
The tracemalloc module must be tracing memory allocations to take a
snapshot, see the start() function.
See also the get_object_traceback() function.

