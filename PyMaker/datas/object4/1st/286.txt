link:
reference/compound_stmts.html#the-async-for-statement

docs:

8.8.2. The async for statementÂ¶

async_for_stmt ::=  "async" for_stmt

An asynchronous iterable is able to call asynchronous code in its
iter implementation, and asynchronous iterator can call asynchronous
code in its next method.
The async for statement allows convenient iteration over asynchronous
iterators.
The following code:
async for TARGET in ITER:
    BLOCK
else:
    BLOCK2


Is semantically equivalent to:
iter = (ITER)
iter = type(iter).__aiter__(iter)
running = True
while running:
    try:
        TARGET = await type(iter).__anext__(iter)
    except StopAsyncIteration:
        running = False
    else:
        BLOCK
else:
    BLOCK2


See also __aiter__() and __anext__() for details.
It is a SyntaxError to use an async for statement outside the
body of a coroutine function.
