link:
library/getopt.html#getopt.getopt

docs:

<dt id="getopt.getopt">
<code class="descclassname">getopt.</code><code class="descname">getopt</code><span class="sig-paren">(</span><em>args</em>, <em>shortopts</em>, <em>longopts=[]</em><span class="sig-paren">)</span><a class="headerlink" href="#getopt.getopt" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Parses command line options and parameter list.  <em>args</em> is the argument list to
be parsed, without the leading reference to the running program. Typically, this
means <code class="docutils literal notranslate"><span class="pre">sys.argv[1:]</span></code>. <em>shortopts</em> is the string of option letters that the
script wants to recognize, with options that require an argument followed by a
colon (<code class="docutils literal notranslate"><span class="pre">':'</span></code>; i.e., the same format that Unix <code class="xref c c-func docutils literal notranslate"><span class="pre">getopt()</span></code> uses).</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Unlike GNU <code class="xref c c-func docutils literal notranslate"><span class="pre">getopt()</span></code>, after a non-option argument, all further
arguments are considered also non-options. This is similar to the way
non-GNU Unix systems work.</p>
</div>
<p><em>longopts</em>, if specified, must be a list of strings with the names of the
long options which should be supported.  The leading <code class="docutils literal notranslate"><span class="pre">'--'</span></code> characters
should not be included in the option name.  Long options which require an
argument should be followed by an equal sign (<code class="docutils literal notranslate"><span class="pre">'='</span></code>).  Optional arguments
are not supported.  To accept only long options, <em>shortopts</em> should be an
empty string.  Long options on the command line can be recognized so long as
they provide a prefix of the option name that matches exactly one of the
accepted options.  For example, if <em>longopts</em> is <code class="docutils literal notranslate"><span class="pre">['foo',</span> <span class="pre">'frob']</span></code>, the
option <code class="docutils literal notranslate"><span class="pre">--fo</span></code> will match as <code class="docutils literal notranslate"><span class="pre">--foo</span></code>, but <code class="docutils literal notranslate"><span class="pre">--f</span></code> will
not match uniquely, so <a class="reference internal" href="#getopt.GetoptError" title="getopt.GetoptError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">GetoptError</span></code></a> will be raised.</p>
<p>The return value consists of two elements: the first is a list of <code class="docutils literal notranslate"><span class="pre">(option,</span>
<span class="pre">value)</span></code> pairs; the second is the list of program arguments left after the
option list was stripped (this is a trailing slice of <em>args</em>).  Each
option-and-value pair returned has the option as its first element, prefixed
with a hyphen for short options (e.g., <code class="docutils literal notranslate"><span class="pre">'-x'</span></code>) or two hyphens for long
options (e.g., <code class="docutils literal notranslate"><span class="pre">'--long-option'</span></code>), and the option argument as its
second element, or an empty string if the option has no argument.  The
options occur in the list in the same order in which they were found, thus
allowing multiple occurrences.  Long and short options may be mixed.</p>
</dd>