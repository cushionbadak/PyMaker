link:
library/csv.html#csv.DictReader

docs:


class csv.DictReader(f, fieldnames=None, restkey=None, restval=None, dialect='excel', *args, **kwds)Â¶
Create an object that operates like a regular reader but maps the
information in each row to an OrderedDict
whose keys are given by the optional fieldnames parameter.
The fieldnames parameter is a sequence.  If fieldnames is
omitted, the values in the first row of file f will be used as the
fieldnames.  Regardless of how the fieldnames are determined, the ordered
dictionary preserves their original ordering.
If a row has more fields than fieldnames, the remaining data is put in a
list and stored with the fieldname specified by restkey (which defaults
to None).  If a non-blank row has fewer fields than fieldnames, the
missing values are filled-in with None.
All other optional or keyword arguments are passed to the underlying
reader instance.

Changed in version 3.6: Returned rows are now of type OrderedDict.

A short usage example:
>>> import csv
>>> with open('names.csv', newline='') as csvfile:
...     reader = csv.DictReader(csvfile)
...     for row in reader:
...         print(row['first_name'], row['last_name'])
...
Eric Idle
John Cleese

>>> print(row)
OrderedDict([('first_name', 'John'), ('last_name', 'Cleese')])


