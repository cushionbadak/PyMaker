link:
library/logging.handlers.html#queuehandler

docs:

QueueHandler¶

New in version 3.2.

The QueueHandler class, located in the logging.handlers module,
supports sending logging messages to a queue, such as those implemented in the
queue or multiprocessing modules.
Along with the QueueListener class, QueueHandler can be used
to let handlers do their work on a separate thread from the one which does the
logging. This is important in Web applications and also other service
applications where threads servicing clients need to respond as quickly as
possible, while any potentially slow operations (such as sending an email via
SMTPHandler) are done on a separate thread.


class logging.handlers.QueueHandler(queue)¶
Returns a new instance of the QueueHandler class. The instance is
initialized with the queue to send messages to. The queue can be any
queue-like object; it’s used as-is by the enqueue() method, which needs
to know how to send messages to it.


emit(record)¶
Enqueues the result of preparing the LogRecord.



prepare(record)¶
Prepares a record for queuing. The object returned by this
method is enqueued.
The base implementation formats the record to merge the message,
arguments, and exception information, if present.  It also
removes unpickleable items from the record in-place.
You might want to override this method if you want to convert
the record to a dict or JSON string, or send a modified copy
of the record while leaving the original intact.



enqueue(record)¶
Enqueues the record on the queue using put_nowait(); you may
want to override this if you want to use blocking behaviour, or a
timeout, or a customized queue implementation.


