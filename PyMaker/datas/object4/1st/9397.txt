link:
library/traceback.html#traceback.TracebackException

docs:

<dt id="traceback.TracebackException">
<em class="property">class </em><code class="descclassname">traceback.</code><code class="descname">TracebackException</code><span class="sig-paren">(</span><em>exc_type</em>, <em>exc_value</em>, <em>exc_traceback</em>, <em>*</em>, <em>limit=None</em>, <em>lookup_lines=True</em>, <em>capture_locals=False</em><span class="sig-paren">)</span><a class="headerlink" href="#traceback.TracebackException" title="Permalink to this definition">¶</a></dt>
<dd><p>Capture an exception for later rendering. <em>limit</em>, <em>lookup_lines</em> and
<em>capture_locals</em> are as for the <a class="reference internal" href="#traceback.StackSummary" title="traceback.StackSummary"><code class="xref py py-class docutils literal notranslate"><span class="pre">StackSummary</span></code></a> class.</p>
<p>Note that when locals are captured, they are also shown in the traceback.</p>
<dl class="attribute">
<dt id="traceback.TracebackException.__cause__">
<code class="descname">__cause__</code><a class="headerlink" href="#traceback.TracebackException.__cause__" title="Permalink to this definition">¶</a></dt>
<dd><p>A <a class="reference internal" href="#traceback.TracebackException" title="traceback.TracebackException"><code class="xref py py-class docutils literal notranslate"><span class="pre">TracebackException</span></code></a> of the original <code class="docutils literal notranslate"><span class="pre">__cause__</span></code>.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.__context__">
<code class="descname">__context__</code><a class="headerlink" href="#traceback.TracebackException.__context__" title="Permalink to this definition">¶</a></dt>
<dd><p>A <a class="reference internal" href="#traceback.TracebackException" title="traceback.TracebackException"><code class="xref py py-class docutils literal notranslate"><span class="pre">TracebackException</span></code></a> of the original <code class="docutils literal notranslate"><span class="pre">__context__</span></code>.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.__suppress_context__">
<code class="descname">__suppress_context__</code><a class="headerlink" href="#traceback.TracebackException.__suppress_context__" title="Permalink to this definition">¶</a></dt>
<dd><p>The <code class="docutils literal notranslate"><span class="pre">__suppress_context__</span></code> value from the original exception.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.stack">
<code class="descname">stack</code><a class="headerlink" href="#traceback.TracebackException.stack" title="Permalink to this definition">¶</a></dt>
<dd><p>A <a class="reference internal" href="#traceback.StackSummary" title="traceback.StackSummary"><code class="xref py py-class docutils literal notranslate"><span class="pre">StackSummary</span></code></a> representing the traceback.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.exc_type">
<code class="descname">exc_type</code><a class="headerlink" href="#traceback.TracebackException.exc_type" title="Permalink to this definition">¶</a></dt>
<dd><p>The class of the original traceback.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.filename">
<code class="descname">filename</code><a class="headerlink" href="#traceback.TracebackException.filename" title="Permalink to this definition">¶</a></dt>
<dd><p>For syntax errors - the file name where the error occurred.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.lineno">
<code class="descname">lineno</code><a class="headerlink" href="#traceback.TracebackException.lineno" title="Permalink to this definition">¶</a></dt>
<dd><p>For syntax errors - the line number where the error occurred.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.text">
<code class="descname">text</code><a class="headerlink" href="#traceback.TracebackException.text" title="Permalink to this definition">¶</a></dt>
<dd><p>For syntax errors - the text where the error occurred.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.offset">
<code class="descname">offset</code><a class="headerlink" href="#traceback.TracebackException.offset" title="Permalink to this definition">¶</a></dt>
<dd><p>For syntax errors - the offset into the text where the error occurred.</p>
</dd></dl>
<dl class="attribute">
<dt id="traceback.TracebackException.msg">
<code class="descname">msg</code><a class="headerlink" href="#traceback.TracebackException.msg" title="Permalink to this definition">¶</a></dt>
<dd><p>For syntax errors - the compiler error message.</p>
</dd></dl>
<dl class="classmethod">
<dt id="traceback.TracebackException.from_exception">
<em class="property">classmethod </em><code class="descname">from_exception</code><span class="sig-paren">(</span><em>exc</em>, <em>*</em>, <em>limit=None</em>, <em>lookup_lines=True</em>, <em>capture_locals=False</em><span class="sig-paren">)</span><a class="headerlink" href="#traceback.TracebackException.from_exception" title="Permalink to this definition">¶</a></dt>
<dd><p>Capture an exception for later rendering. <em>limit</em>, <em>lookup_lines</em> and
<em>capture_locals</em> are as for the <a class="reference internal" href="#traceback.StackSummary" title="traceback.StackSummary"><code class="xref py py-class docutils literal notranslate"><span class="pre">StackSummary</span></code></a> class.</p>
<p>Note that when locals are captured, they are also shown in the traceback.</p>
</dd></dl>
<dl class="method">
<dt id="traceback.TracebackException.format">
<code class="descname">format</code><span class="sig-paren">(</span><em>*</em>, <em>chain=True</em><span class="sig-paren">)</span><a class="headerlink" href="#traceback.TracebackException.format" title="Permalink to this definition">¶</a></dt>
<dd><p>Format the exception.</p>
<p>If <em>chain</em> is not <code class="docutils literal notranslate"><span class="pre">True</span></code>, <code class="docutils literal notranslate"><span class="pre">__cause__</span></code> and <code class="docutils literal notranslate"><span class="pre">__context__</span></code> will not
be formatted.</p>
<p>The return value is a generator of strings, each ending in a newline and
some containing internal newlines. <a class="reference internal" href="#traceback.print_exception" title="traceback.print_exception"><code class="xref py py-func docutils literal notranslate"><span class="pre">print_exception()</span></code></a>
is a wrapper around this method which just prints the lines to a file.</p>
<p>The message indicating which exception occurred is always the last
string in the output.</p>
</dd></dl>
<dl class="method">
<dt id="traceback.TracebackException.format_exception_only">
<code class="descname">format_exception_only</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#traceback.TracebackException.format_exception_only" title="Permalink to this definition">¶</a></dt>
<dd><p>Format the exception part of the traceback.</p>
<p>The return value is a generator of strings, each ending in a newline.</p>
<p>Normally, the generator emits a single string; however, for
<a class="reference internal" href="exceptions.html#SyntaxError" title="SyntaxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SyntaxError</span></code></a> exceptions, it emits several lines that (when
printed) display detailed information about where the syntax
error occurred.</p>
<p>The message indicating which exception occurred is always the last
string in the output.</p>
</dd></dl>
</dd>