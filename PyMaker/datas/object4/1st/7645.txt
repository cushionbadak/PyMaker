link:
library/chunk.html#chunk.Chunk

docs:

<dt id="chunk.Chunk">
<em class="property">class </em><code class="descclassname">chunk.</code><code class="descname">Chunk</code><span class="sig-paren">(</span><em>file</em>, <em>align=True</em>, <em>bigendian=True</em>, <em>inclheader=False</em><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk" title="Permalink to this definition">¶</a></dt>
<dd><p>Class which represents a chunk.  The <em>file</em> argument is expected to be a
file-like object.  An instance of this class is specifically allowed.  The
only method that is needed is <code class="xref py py-meth docutils literal notranslate"><span class="pre">read()</span></code>.  If the methods
<a class="reference internal" href="io.html#io.IOBase.seek" title="io.IOBase.seek"><code class="xref py py-meth docutils literal notranslate"><span class="pre">seek()</span></code></a> and <a class="reference internal" href="io.html#io.IOBase.tell" title="io.IOBase.tell"><code class="xref py py-meth docutils literal notranslate"><span class="pre">tell()</span></code></a> are present and don’t
raise an exception, they are also used.
If these methods are present and raise an exception, they are expected to not
have altered the object.  If the optional argument <em>align</em> is true, chunks
are assumed to be aligned on 2-byte boundaries.  If <em>align</em> is false, no
alignment is assumed.  The default value is true.  If the optional argument
<em>bigendian</em> is false, the chunk size is assumed to be in little-endian order.
This is needed for WAVE audio files. The default value is true.  If the
optional argument <em>inclheader</em> is true, the size given in the chunk header
includes the size of the header.  The default value is false.</p>
<p>A <a class="reference internal" href="#chunk.Chunk" title="chunk.Chunk"><code class="xref py py-class docutils literal notranslate"><span class="pre">Chunk</span></code></a> object supports the following methods:</p>
<dl class="method">
<dt id="chunk.Chunk.getname">
<code class="descname">getname</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.getname" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the name (ID) of the chunk.  This is the first 4 bytes of the
chunk.</p>
</dd></dl>
<dl class="method">
<dt id="chunk.Chunk.getsize">
<code class="descname">getsize</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.getsize" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the size of the chunk.</p>
</dd></dl>
<dl class="method">
<dt id="chunk.Chunk.close">
<code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.close" title="Permalink to this definition">¶</a></dt>
<dd><p>Close and skip to the end of the chunk.  This does not close the
underlying file.</p>
</dd></dl>
<p>The remaining methods will raise <a class="reference internal" href="exceptions.html#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a> if called after the
<a class="reference internal" href="#chunk.Chunk.close" title="chunk.Chunk.close"><code class="xref py py-meth docutils literal notranslate"><span class="pre">close()</span></code></a> method has been called.  Before Python 3.3, they used to
raise <a class="reference internal" href="exceptions.html#IOError" title="IOError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">IOError</span></code></a>, now an alias of <a class="reference internal" href="exceptions.html#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a>.</p>
<dl class="method">
<dt id="chunk.Chunk.isatty">
<code class="descname">isatty</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.isatty" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns <code class="docutils literal notranslate"><span class="pre">False</span></code>.</p>
</dd></dl>
<dl class="method">
<dt id="chunk.Chunk.seek">
<code class="descname">seek</code><span class="sig-paren">(</span><em>pos</em>, <em>whence=0</em><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.seek" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the chunk’s current position.  The <em>whence</em> argument is optional and
defaults to <code class="docutils literal notranslate"><span class="pre">0</span></code> (absolute file positioning); other values are <code class="docutils literal notranslate"><span class="pre">1</span></code>
(seek relative to the current position) and <code class="docutils literal notranslate"><span class="pre">2</span></code> (seek relative to the
file’s end).  There is no return value. If the underlying file does not
allow seek, only forward seeks are allowed.</p>
</dd></dl>
<dl class="method">
<dt id="chunk.Chunk.tell">
<code class="descname">tell</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.tell" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the current position into the chunk.</p>
</dd></dl>
<dl class="method">
<dt id="chunk.Chunk.read">
<code class="descname">read</code><span class="sig-paren">(</span><em>size=-1</em><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.read" title="Permalink to this definition">¶</a></dt>
<dd><p>Read at most <em>size</em> bytes from the chunk (less if the read hits the end of
the chunk before obtaining <em>size</em> bytes).  If the <em>size</em> argument is
negative or omitted, read all data until the end of the chunk.  An empty
bytes object is returned when the end of the chunk is encountered
immediately.</p>
</dd></dl>
<dl class="method">
<dt id="chunk.Chunk.skip">
<code class="descname">skip</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#chunk.Chunk.skip" title="Permalink to this definition">¶</a></dt>
<dd><p>Skip to the end of the chunk.  All further calls to <a class="reference internal" href="#chunk.Chunk.read" title="chunk.Chunk.read"><code class="xref py py-meth docutils literal notranslate"><span class="pre">read()</span></code></a> for the
chunk will return <code class="docutils literal notranslate"><span class="pre">b''</span></code>.  If you are not interested in the contents of
the chunk, this method should be called so that the file points to the
start of the next chunk.</p>
</dd></dl>
</dd>