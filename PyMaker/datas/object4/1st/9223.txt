link:
library/sys.html#sys.implementation

docs:

<dt id="sys.implementation">
<code class="descclassname">sys.</code><code class="descname">implementation</code><a class="headerlink" href="#sys.implementation" title="Permalink to this definition">¶</a></dt>
<dd><p>An object containing information about the implementation of the
currently running Python interpreter.  The following attributes are
required to exist in all Python implementations.</p>
<p><em>name</em> is the implementation’s identifier, e.g. <code class="docutils literal notranslate"><span class="pre">'cpython'</span></code>.  The actual
string is defined by the Python implementation, but it is guaranteed to be
lower case.</p>
<p><em>version</em> is a named tuple, in the same format as
<a class="reference internal" href="#sys.version_info" title="sys.version_info"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.version_info</span></code></a>.  It represents the version of the Python
<em>implementation</em>.  This has a distinct meaning from the specific
version of the Python <em>language</em> to which the currently running
interpreter conforms, which <code class="docutils literal notranslate"><span class="pre">sys.version_info</span></code> represents.  For
example, for PyPy 1.8 <code class="docutils literal notranslate"><span class="pre">sys.implementation.version</span></code> might be
<code class="docutils literal notranslate"><span class="pre">sys.version_info(1,</span> <span class="pre">8,</span> <span class="pre">0,</span> <span class="pre">'final',</span> <span class="pre">0)</span></code>, whereas <code class="docutils literal notranslate"><span class="pre">sys.version_info</span></code>
would be <code class="docutils literal notranslate"><span class="pre">sys.version_info(2,</span> <span class="pre">7,</span> <span class="pre">2,</span> <span class="pre">'final',</span> <span class="pre">0)</span></code>.  For CPython they
are the same value, since it is the reference implementation.</p>
<p><em>hexversion</em> is the implementation version in hexadecimal format, like
<a class="reference internal" href="#sys.hexversion" title="sys.hexversion"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.hexversion</span></code></a>.</p>
<p><em>cache_tag</em> is the tag used by the import machinery in the filenames of
cached modules.  By convention, it would be a composite of the
implementation’s name and version, like <code class="docutils literal notranslate"><span class="pre">'cpython-33'</span></code>.  However, a
Python implementation may use some other value if appropriate.  If
<code class="docutils literal notranslate"><span class="pre">cache_tag</span></code> is set to <code class="docutils literal notranslate"><span class="pre">None</span></code>, it indicates that module caching should
be disabled.</p>
<p><a class="reference internal" href="#sys.implementation" title="sys.implementation"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.implementation</span></code></a> may contain additional attributes specific to
the Python implementation.  These non-standard attributes must start with
an underscore, and are not described here.  Regardless of its contents,
<a class="reference internal" href="#sys.implementation" title="sys.implementation"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.implementation</span></code></a> will not change during a run of the interpreter,
nor between implementation versions.  (It may change between Python
language versions, however.)  See <span class="target" id="index-14"></span><a class="pep reference external" href="https://www.python.org/dev/peps/pep-0421"><strong>PEP 421</strong></a> for more information.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.3.</span></p>
</div>
</dd>