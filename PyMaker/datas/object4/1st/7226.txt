link:
library/http.cookies.html#morsel-objects

docs:

Morsel Objects¶


class http.cookies.Morsel¶
Abstract a key/value pair, which has some RFC 2109 attributes.
Morsels are dictionary-like objects, whose set of keys is constant — the valid
RFC 2109 attributes, which are

expires
path
comment
domain
max-age
secure
version
httponly

The attribute httponly specifies that the cookie is only transferred
in HTTP requests, and is not accessible through JavaScript. This is intended
to mitigate some forms of cross-site scripting.
The keys are case-insensitive and their default value is ''.

Changed in version 3.5: __eq__() now takes key and value
into account.


Changed in version 3.7: Attributes key, value and
coded_value are read-only.  Use set() for
setting them.




Morsel.value¶
The value of the cookie.



Morsel.coded_value¶
The encoded value of the cookie — this is what should be sent.



Morsel.key¶
The name of the cookie.



Morsel.set(key, value, coded_value)¶
Set the key, value and coded_value attributes.



Morsel.isReservedKey(K)¶
Whether K is a member of the set of keys of a Morsel.



Morsel.output(attrs=None, header='Set-Cookie:')¶
Return a string representation of the Morsel, suitable to be sent as an HTTP
header. By default, all the attributes are included, unless attrs is given, in
which case it should be a list of attributes to use. header is by default
"Set-Cookie:".



Morsel.js_output(attrs=None)¶
Return an embeddable JavaScript snippet, which, if run on a browser which
supports JavaScript, will act the same as if the HTTP header was sent.
The meaning for attrs is the same as in output().



Morsel.OutputString(attrs=None)¶
Return a string representing the Morsel, without any surrounding HTTP or
JavaScript.
The meaning for attrs is the same as in output().



Morsel.update(values)¶
Update the values in the Morsel dictionary with the values in the dictionary
values.  Raise an error if any of the keys in the values dict is not a
valid RFC 2109 attribute.

Changed in version 3.5: an error is raised for invalid keys.




Morsel.copy(value)¶
Return a shallow copy of the Morsel object.

Changed in version 3.5: return a Morsel object instead of a dict.




Morsel.setdefault(key, value=None)¶
Raise an error if key is not a valid RFC 2109 attribute, otherwise
behave the same as dict.setdefault().

