link:
reference/datamodel.html#object.__init_subclass__

docs:


classmethod object.__init_subclass__(cls)¶
This method is called whenever the containing class is subclassed.
cls is then the new subclass. If defined as a normal instance method,
this method is implicitly converted to a class method.
Keyword arguments which are given to a new class are passed to
the parent’s class __init_subclass__. For compatibility with
other classes using __init_subclass__, one should take out the
needed keyword arguments and pass the others over to the base
class, as in:
class Philosopher:
    def __init_subclass__(cls, default_name, **kwargs):
        super().__init_subclass__(**kwargs)
        cls.default_name = default_name

class AustralianPhilosopher(Philosopher, default_name="Bruce"):
    pass


The default implementation object.__init_subclass__ does
nothing, but raises an error if it is called with any arguments.

Note
The metaclass hint metaclass is consumed by the rest of the type
machinery, and is never passed to __init_subclass__ implementations.
The actual metaclass (rather than the explicit hint) can be accessed as
type(cls).


New in version 3.6.

