link:
library/os.path.html#os.path.exists

docs:

<dt id="os.path.exists">
<code class="descclassname">os.path.</code><code class="descname">exists</code><span class="sig-paren">(</span><em>path</em><span class="sig-paren">)</span><a class="headerlink" href="#os.path.exists" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return <code class="docutils literal notranslate"><span class="pre">True</span></code> if <em>path</em> refers to an existing path or an open
file descriptor.  Returns <code class="docutils literal notranslate"><span class="pre">False</span></code> for broken symbolic links.  On
some platforms, this function may return <code class="docutils literal notranslate"><span class="pre">False</span></code> if permission is
not granted to execute <a class="reference internal" href="os.html#os.stat" title="os.stat"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.stat()</span></code></a> on the requested file, even
if the <em>path</em> physically exists.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.3: </span><em>path</em> can now be an integer: <code class="docutils literal notranslate"><span class="pre">True</span></code> is returned if it is an
 open file descriptor, <code class="docutils literal notranslate"><span class="pre">False</span></code> otherwise.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>Accepts a <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like object</span></a>.</p>
</div>
</dd>