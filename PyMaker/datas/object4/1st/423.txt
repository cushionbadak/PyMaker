link:
library/stdtypes.html#str.format

docs:

<dt id="str.format">
<code class="descclassname">str.</code><code class="descname">format</code><span class="sig-paren">(</span><em>*args</em>, <em>**kwargs</em><span class="sig-paren">)</span><a class="headerlink" href="#str.format" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Perform a string formatting operation.  The string on which this method is
called can contain literal text or replacement fields delimited by braces
<code class="docutils literal notranslate"><span class="pre">{}</span></code>.  Each replacement field contains either the numeric index of a
positional argument, or the name of a keyword argument.  Returns a copy of
the string where each replacement field is replaced with the string value of
the corresponding argument.</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="s2">"The sum of 1 + 2 is </span><span class="si">{0}</span><span class="s2">"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span>
<span class="go">'The sum of 1 + 2 is 3'</span>
</pre></div>
</div>
<p>See <a class="reference internal" href="string.html#formatstrings"><span class="std std-ref">Format String Syntax</span></a> for a description of the various formatting options
that can be specified in format strings.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">When formatting a number (<a class="reference internal" href="functions.html#int" title="int"><code class="xref py py-class docutils literal notranslate"><span class="pre">int</span></code></a>, <a class="reference internal" href="functions.html#float" title="float"><code class="xref py py-class docutils literal notranslate"><span class="pre">float</span></code></a>, <a class="reference internal" href="functions.html#complex" title="complex"><code class="xref py py-class docutils literal notranslate"><span class="pre">complex</span></code></a>,
<a class="reference internal" href="decimal.html#decimal.Decimal" title="decimal.Decimal"><code class="xref py py-class docutils literal notranslate"><span class="pre">decimal.Decimal</span></code></a> and subclasses) with the <code class="docutils literal notranslate"><span class="pre">n</span></code> type
(ex: <code class="docutils literal notranslate"><span class="pre">'{:n}'.format(1234)</span></code>), the function temporarily sets the
<code class="docutils literal notranslate"><span class="pre">LC_CTYPE</span></code> locale to the <code class="docutils literal notranslate"><span class="pre">LC_NUMERIC</span></code> locale to decode
<code class="docutils literal notranslate"><span class="pre">decimal_point</span></code> and <code class="docutils literal notranslate"><span class="pre">thousands_sep</span></code> fields of <code class="xref c c-func docutils literal notranslate"><span class="pre">localeconv()</span></code> if
they are non-ASCII or longer than 1 byte, and the <code class="docutils literal notranslate"><span class="pre">LC_NUMERIC</span></code> locale is
different than the <code class="docutils literal notranslate"><span class="pre">LC_CTYPE</span></code> locale.  This temporary change affects
other threads.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.7: </span>When formatting a number with the <code class="docutils literal notranslate"><span class="pre">n</span></code> type, the function sets
temporarily the <code class="docutils literal notranslate"><span class="pre">LC_CTYPE</span></code> locale to the <code class="docutils literal notranslate"><span class="pre">LC_NUMERIC</span></code> locale in some
cases.</p>
</div>
</dd>