link:
library/argparse.html#argparse.ArgumentParser.parse_args

docs:

<dt id="argparse.ArgumentParser.parse_args">
<code class="descclassname">ArgumentParser.</code><code class="descname">parse_args</code><span class="sig-paren">(</span><em>args=None</em>, <em>namespace=None</em><span class="sig-paren">)</span><a class="headerlink" href="#argparse.ArgumentParser.parse_args" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Convert argument strings to objects and assign them as attributes of the
namespace.  Return the populated namespace.</p>
<p>Previous calls to <a class="reference internal" href="#argparse.ArgumentParser.add_argument" title="argparse.ArgumentParser.add_argument"><code class="xref py py-meth docutils literal notranslate"><span class="pre">add_argument()</span></code></a> determine exactly what objects are
created and how they are assigned. See the documentation for
<a class="reference internal" href="#argparse.ArgumentParser.add_argument" title="argparse.ArgumentParser.add_argument"><code class="xref py py-meth docutils literal notranslate"><span class="pre">add_argument()</span></code></a> for details.</p>
<ul class="simple">
<li><a class="reference internal" href="#args">args</a> - List of strings to parse.  The default is taken from
<a class="reference internal" href="sys.html#sys.argv" title="sys.argv"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.argv</span></code></a>.</li>
<li><a class="reference internal" href="#namespace">namespace</a> - An object to take the attributes.  The default is a new empty
<a class="reference internal" href="#argparse.Namespace" title="argparse.Namespace"><code class="xref py py-class docutils literal notranslate"><span class="pre">Namespace</span></code></a> object.</li>
</ul>
</dd>