link:
library/random.html#bookkeeping-functions

docs:

Bookkeeping functions¶


random.seed(a=None, version=2)¶
Initialize the random number generator.
If a is omitted or None, the current system time is used.  If
randomness sources are provided by the operating system, they are used
instead of the system time (see the os.urandom() function for details
on availability).
If a is an int, it is used directly.
With version 2 (the default), a str, bytes, or bytearray
object gets converted to an int and all of its bits are used.
With version 1 (provided for reproducing random sequences from older versions
of Python), the algorithm for str and bytes generates a
narrower range of seeds.

Changed in version 3.2: Moved to the version 2 scheme which uses all of the bits in a string seed.




random.getstate()¶
Return an object capturing the current internal state of the generator.  This
object can be passed to setstate() to restore the state.



random.setstate(state)¶
state should have been obtained from a previous call to getstate(), and
setstate() restores the internal state of the generator to what it was at
the time getstate() was called.



random.getrandbits(k)¶
Returns a Python integer with k random bits. This method is supplied with
the MersenneTwister generator and some other generators may also provide it
as an optional part of the API. When available, getrandbits() enables
randrange() to handle arbitrarily large ranges.

