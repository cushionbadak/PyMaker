link:
library/email.generator.html#email.generator.BytesGenerator.flatten

docs:

<dt id="email.generator.BytesGenerator.flatten">
<code class="descname">flatten</code><span class="sig-paren">(</span><em>msg</em>, <em>unixfrom=False</em>, <em>linesep=None</em><span class="sig-paren">)</span><a class="headerlink" href="#email.generator.BytesGenerator.flatten" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Print the textual representation of the message object structure rooted
at <em>msg</em> to the output file specified when the <a class="reference internal" href="#email.generator.BytesGenerator" title="email.generator.BytesGenerator"><code class="xref py py-class docutils literal notranslate"><span class="pre">BytesGenerator</span></code></a>
instance was created.</p>
<p>If the <a class="reference internal" href="email.policy.html#module-email.policy" title="email.policy: Controlling the parsing and generating of messages"><code class="xref py py-mod docutils literal notranslate"><span class="pre">policy</span></code></a> option <a class="reference internal" href="email.policy.html#email.policy.Policy.cte_type" title="email.policy.Policy.cte_type"><code class="xref py py-attr docutils literal notranslate"><span class="pre">cte_type</span></code></a>
is <code class="docutils literal notranslate"><span class="pre">8bit</span></code> (the default), copy any headers in the original parsed
message that have not been modified to the output with any bytes with the
high bit set reproduced as in the original, and preserve the non-ASCII
<em class="mailheader">Content-Transfer-Encoding</em> of any body parts that have them.
If <code class="docutils literal notranslate"><span class="pre">cte_type</span></code> is <code class="docutils literal notranslate"><span class="pre">7bit</span></code>, convert the bytes with the high bit set as
needed using an ASCII-compatible <em class="mailheader">Content-Transfer-Encoding</em>.
That is, transform parts with non-ASCII
<em class="mailheader">Content-Transfer-Encoding</em>
(<em class="mailheader">Content-Transfer-Encoding: 8bit</em>) to an ASCII compatible
<em class="mailheader">Content-Transfer-Encoding</em>, and encode RFC-invalid non-ASCII
bytes in headers using the MIME <code class="docutils literal notranslate"><span class="pre">unknown-8bit</span></code> character set, thus
rendering them RFC-compliant.</p>
<p>If <em>unixfrom</em> is <code class="docutils literal notranslate"><span class="pre">True</span></code>, print the envelope header delimiter used by
the Unix mailbox format (see <a class="reference internal" href="mailbox.html#module-mailbox" title="mailbox: Manipulate mailboxes in various formats"><code class="xref py py-mod docutils literal notranslate"><span class="pre">mailbox</span></code></a>) before the first of the
<span class="target" id="index-0"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc5322.html"><strong>RFC 5322</strong></a> headers of the root message object.  If the root object has
no envelope header, craft a standard one.  The default is <code class="docutils literal notranslate"><span class="pre">False</span></code>.
Note that for subparts, no envelope header is ever printed.</p>
<p>If <em>linesep</em> is not <code class="docutils literal notranslate"><span class="pre">None</span></code>, use it as the separator character between
all the lines of the flattened message.  If <em>linesep</em> is <code class="docutils literal notranslate"><span class="pre">None</span></code> (the
default), use the value specified in the <em>policy</em>.</p>
</dd>