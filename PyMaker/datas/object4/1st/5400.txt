link:
library/asyncore.html#asyncore.dispatcher.recv

docs:

<dt id="asyncore.dispatcher.recv">
<code class="descname">recv</code><span class="sig-paren">(</span><em>buffer_size</em><span class="sig-paren">)</span><a class="headerlink" href="#asyncore.dispatcher.recv" title="Permalink to this definition">¶</a></dt>
<dd><p>Read at most <em>buffer_size</em> bytes from the socket’s remote end-point.  An
empty bytes object implies that the channel has been closed from the
other end.</p>
<p>Note that <a class="reference internal" href="#asyncore.dispatcher.recv" title="asyncore.dispatcher.recv"><code class="xref py py-meth docutils literal notranslate"><span class="pre">recv()</span></code></a> may raise <a class="reference internal" href="exceptions.html#BlockingIOError" title="BlockingIOError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">BlockingIOError</span></code></a> , even though
<a class="reference internal" href="select.html#select.select" title="select.select"><code class="xref py py-func docutils literal notranslate"><span class="pre">select.select()</span></code></a> or <a class="reference internal" href="select.html#select.poll" title="select.poll"><code class="xref py py-func docutils literal notranslate"><span class="pre">select.poll()</span></code></a> has reported the socket
ready for reading.</p>
</dd>