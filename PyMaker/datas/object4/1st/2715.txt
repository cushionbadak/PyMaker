link:
library/configparser.html#fallback-values

docs:

Fallback Values¶
As with a dictionary, you can use a section’s get() method to
provide fallback values:
>>> topsecret.get('Port')
'50022'
>>> topsecret.get('CompressionLevel')
'9'
>>> topsecret.get('Cipher')
>>> topsecret.get('Cipher', '3des-cbc')
'3des-cbc'


Please note that default values have precedence over fallback values.
For instance, in our example the 'CompressionLevel' key was
specified only in the 'DEFAULT' section.  If we try to get it from
the section 'topsecret.server.com', we will always get the default,
even if we specify a fallback:
>>> topsecret.get('CompressionLevel', '3')
'9'


One more thing to be aware of is that the parser-level get() method
provides a custom, more complex interface, maintained for backwards
compatibility.  When using this method, a fallback value can be provided via
the fallback keyword-only argument:
>>> config.get('bitbucket.org', 'monster',
...            fallback='No such things as monsters')
'No such things as monsters'


The same fallback argument can be used with the
getint(), getfloat() and
getboolean() methods, for example:
>>> 'BatchMode' in topsecret
False
>>> topsecret.getboolean('BatchMode', fallback=True)
True
>>> config['DEFAULT']['BatchMode'] = 'no'
>>> topsecret.getboolean('BatchMode', fallback=True)
False


