link:
library/sys.html#sys.set_asyncgen_hooks

docs:

<dt id="sys.set_asyncgen_hooks">
<code class="descclassname">sys.</code><code class="descname">set_asyncgen_hooks</code><span class="sig-paren">(</span><em>firstiter</em>, <em>finalizer</em><span class="sig-paren">)</span><a class="headerlink" href="#sys.set_asyncgen_hooks" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Accepts two optional keyword arguments which are callables that accept an
<a class="reference internal" href="../glossary.html#term-asynchronous-generator-iterator"><span class="xref std std-term">asynchronous generator iterator</span></a> as an argument. The <em>firstiter</em>
callable will be called when an asynchronous generator is iterated for the
first time. The <em>finalizer</em> will be called when an asynchronous generator
is about to be garbage collected.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.6: </span>See <span class="target" id="index-26"></span><a class="pep reference external" href="https://www.python.org/dev/peps/pep-0525"><strong>PEP 525</strong></a> for more details, and for a reference example of a
<em>finalizer</em> method see the implementation of
<code class="docutils literal notranslate"><span class="pre">asyncio.Loop.shutdown_asyncgens</span></code> in
<a class="reference external" href="https://github.com/python/cpython/tree/3.7/Lib/asyncio/base_events.py">Lib/asyncio/base_events.py</a></p>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">This function has been added on a provisional basis (see <span class="target" id="index-27"></span><a class="pep reference external" href="https://www.python.org/dev/peps/pep-0411"><strong>PEP 411</strong></a>
for details.)</p>
</div>
</dd>