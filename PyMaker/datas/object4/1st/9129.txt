link:
library/tracemalloc.html#tracemalloc.Traceback.format

docs:

<dt id="tracemalloc.Traceback.format">
<code class="descname">format</code><span class="sig-paren">(</span><em>limit=None</em>, <em>most_recent_first=False</em><span class="sig-paren">)</span><a class="headerlink" href="#tracemalloc.Traceback.format" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Format the traceback as a list of lines with newlines. Use the
<a class="reference internal" href="linecache.html#module-linecache" title="linecache: This module provides random access to individual lines from text files."><code class="xref py py-mod docutils literal notranslate"><span class="pre">linecache</span></code></a> module to retrieve lines from the source code.
If <em>limit</em> is set, format the <em>limit</em> most recent frames if <em>limit</em>
is positive. Otherwise, format the <code class="docutils literal notranslate"><span class="pre">abs(limit)</span></code> oldest frames.
If <em>most_recent_first</em> is <code class="docutils literal notranslate"><span class="pre">True</span></code>, the order of the formatted frames
is reversed, returning the most recent frame first instead of last.</p>
<p>Similar to the <a class="reference internal" href="traceback.html#traceback.format_tb" title="traceback.format_tb"><code class="xref py py-func docutils literal notranslate"><span class="pre">traceback.format_tb()</span></code></a> function, except that
<a class="reference internal" href="#tracemalloc.Traceback.format" title="tracemalloc.Traceback.format"><code class="xref py py-meth docutils literal notranslate"><span class="pre">format()</span></code></a> does not include newlines.</p>
<p>Example:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s2">"Traceback (most recent call first):"</span><span class="p">)</span>
<span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">traceback</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</pre></div>
</div>
<p>Output:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">first</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">"test.py"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">9</span>
    <span class="n">obj</span> <span class="o">=</span> <span class="n">Object</span><span class="p">()</span>
  <span class="n">File</span> <span class="s2">"test.py"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">12</span>
    <span class="n">tb</span> <span class="o">=</span> <span class="n">tracemalloc</span><span class="o">.</span><span class="n">get_object_traceback</span><span class="p">(</span><span class="n">f</span><span class="p">())</span>
</pre></div>
</div>
</dd>