link:
library/socket.html#socket.fromfd

docs:

<dt id="socket.fromfd">
<code class="descclassname">socket.</code><code class="descname">fromfd</code><span class="sig-paren">(</span><em>fd</em>, <em>family</em>, <em>type</em>, <em>proto=0</em><span class="sig-paren">)</span><a class="headerlink" href="#socket.fromfd" title="Permalink to this definition">¶</a></dt>
<dd><p>Duplicate the file descriptor <em>fd</em> (an integer as returned by a file object’s
<code class="xref py py-meth docutils literal notranslate"><span class="pre">fileno()</span></code> method) and build a socket object from the result.  Address
family, socket type and protocol number are as for the <a class="reference internal" href="#socket.socket" title="socket.socket"><code class="xref py py-func docutils literal notranslate"><span class="pre">socket()</span></code></a> function
above. The file descriptor should refer to a socket, but this is not checked —
subsequent operations on the object may fail if the file descriptor is invalid.
This function is rarely needed, but can be used to get or set socket options on
a socket passed to a program as standard input or output (such as a server
started by the Unix inet daemon).  The socket is assumed to be in blocking mode.</p>
<p>The newly created socket is <a class="reference internal" href="os.html#fd-inheritance"><span class="std std-ref">non-inheritable</span></a>.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>The returned socket is now non-inheritable.</p>
</div>
</dd>