link:
library/concurrent.futures.html#concurrent.futures.as_completed

docs:


concurrent.futures.as_completed(fs, timeout=None)¶
Returns an iterator over the Future instances (possibly created by
different Executor instances) given by fs that yields futures as
they complete (finished or were cancelled). Any futures given by fs that
are duplicated will be returned once. Any futures that completed before
as_completed() is called will be yielded first.  The returned iterator
raises a concurrent.futures.TimeoutError if __next__()
is called and the result isn’t available after timeout seconds from the
original call to as_completed().  timeout can be an int or float. If
timeout is not specified or None, there is no limit to the wait time.
