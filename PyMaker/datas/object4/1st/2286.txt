link:
library/shutil.html#shutil.register_archive_format

docs:

<dt id="shutil.register_archive_format">
<code class="descclassname">shutil.</code><code class="descname">register_archive_format</code><span class="sig-paren">(</span><em>name</em>, <em>function</em><span class="optional">[</span>, <em>extra_args</em><span class="optional">[</span>, <em>description</em><span class="optional">]</span><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#shutil.register_archive_format" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Register an archiver for the format <em>name</em>.</p>
<p><em>function</em> is the callable that will be used to unpack archives. The callable
will receive the <em>base_name</em> of the file to create, followed by the
<em>base_dir</em> (which defaults to <a class="reference internal" href="os.html#os.curdir" title="os.curdir"><code class="xref py py-data docutils literal notranslate"><span class="pre">os.curdir</span></code></a>) to start archiving from.
Further arguments are passed as keyword arguments: <em>owner</em>, <em>group</em>,
<em>dry_run</em> and <em>logger</em> (as passed in <a class="reference internal" href="#shutil.make_archive" title="shutil.make_archive"><code class="xref py py-func docutils literal notranslate"><span class="pre">make_archive()</span></code></a>).</p>
<p>If given, <em>extra_args</em> is a sequence of <code class="docutils literal notranslate"><span class="pre">(name,</span> <span class="pre">value)</span></code> pairs that will be
used as extra keywords arguments when the archiver callable is used.</p>
<p><em>description</em> is used by <a class="reference internal" href="#shutil.get_archive_formats" title="shutil.get_archive_formats"><code class="xref py py-func docutils literal notranslate"><span class="pre">get_archive_formats()</span></code></a> which returns the
list of archivers.  Defaults to an empty string.</p>
</dd>