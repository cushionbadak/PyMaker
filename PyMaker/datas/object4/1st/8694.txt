link:
library/2to3.html#2to3fixer-operator

docs:

<dt id="2to3fixer-operator">
<code class="descname">operator</code><a class="headerlink" href="#2to3fixer-operator" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Converts calls to various functions in the <a class="reference internal" href="operator.html#module-operator" title="operator: Functions corresponding to the standard operators."><code class="xref py py-mod docutils literal notranslate"><span class="pre">operator</span></code></a> module to other,
but equivalent, function calls.  When needed, the appropriate <code class="docutils literal notranslate"><span class="pre">import</span></code>
statements are added, e.g. <code class="docutils literal notranslate"><span class="pre">import</span> <span class="pre">collections.abc</span></code>.  The following mapping
are made:</p>
<table border="1" class="docutils">
<colgroup>
<col width="43%"/>
<col width="57%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">From</th>
<th class="head">To</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">operator.isCallable(obj)</span></code></td>
<td><code class="docutils literal notranslate"><span class="pre">callable(obj)</span></code></td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">operator.sequenceIncludes(obj)</span></code></td>
<td><code class="docutils literal notranslate"><span class="pre">operator.contains(obj)</span></code></td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">operator.isSequenceType(obj)</span></code></td>
<td><code class="docutils literal notranslate"><span class="pre">isinstance(obj,</span> <span class="pre">collections.abc.Sequence)</span></code></td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">operator.isMappingType(obj)</span></code></td>
<td><code class="docutils literal notranslate"><span class="pre">isinstance(obj,</span> <span class="pre">collections.abc.Mapping)</span></code></td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">operator.isNumberType(obj)</span></code></td>
<td><code class="docutils literal notranslate"><span class="pre">isinstance(obj,</span> <span class="pre">numbers.Number)</span></code></td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">operator.repeat(obj,</span> <span class="pre">n)</span></code></td>
<td><code class="docutils literal notranslate"><span class="pre">operator.mul(obj,</span> <span class="pre">n)</span></code></td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">operator.irepeat(obj,</span> <span class="pre">n)</span></code></td>
<td><code class="docutils literal notranslate"><span class="pre">operator.imul(obj,</span> <span class="pre">n)</span></code></td>
</tr>
</tbody>
</table>
</dd>