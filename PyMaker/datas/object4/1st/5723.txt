link:
library/email.mime.html#email.mime.audio.MIMEAudio

docs:


class email.mime.audio.MIMEAudio(_audiodata, _subtype=None, _encoder=email.encoders.encode_base64, *, policy=compat32, **_params)Â¶
Module: email.mime.audio
A subclass of MIMENonMultipart, the
MIMEAudio class is used to create MIME message objects of major type
audio. _audiodata is a string containing the raw audio data.  If
this data can be decoded by the standard Python module sndhdr, then the
subtype will be automatically included in the Content-Type header.
Otherwise you can explicitly specify the audio subtype via the _subtype
argument.  If the minor type could not be guessed and _subtype was not given,
then TypeError is raised.
Optional _encoder is a callable (i.e. function) which will perform the actual
encoding of the audio data for transport.  This callable takes one argument,
which is the MIMEAudio instance. It should use
get_payload() and
set_payload() to change the payload to encoded
form.  It should also add
any Content-Transfer-Encoding or other headers to the message
object as necessary.  The default encoding is base64.  See the
email.encoders module for a list of the built-in encoders.
Optional policy argument defaults to compat32.
_params are passed straight through to the base class constructor.

Changed in version 3.6: Added policy keyword-only parameter.

