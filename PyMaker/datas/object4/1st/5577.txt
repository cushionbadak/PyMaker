link:
library/email.policy.html#email.policy.Policy.register_defect

docs:

<dt id="email.policy.Policy.register_defect">
<code class="descname">register_defect</code><span class="sig-paren">(</span><em>obj</em>, <em>defect</em><span class="sig-paren">)</span><a class="headerlink" href="#email.policy.Policy.register_defect" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Register a <em>defect</em> on <em>obj</em>.  In the email package, <em>defect</em> will always
be a subclass of <code class="xref py py-class docutils literal notranslate"><span class="pre">Defect</span></code>.</p>
<p>The default implementation calls the <code class="docutils literal notranslate"><span class="pre">append</span></code> method of the <code class="docutils literal notranslate"><span class="pre">defects</span></code>
attribute of <em>obj</em>.  When the email package calls <a class="reference internal" href="#email.policy.Policy.handle_defect" title="email.policy.Policy.handle_defect"><code class="xref py py-attr docutils literal notranslate"><span class="pre">handle_defect</span></code></a>,
<em>obj</em> will normally have a <code class="docutils literal notranslate"><span class="pre">defects</span></code> attribute that has an <code class="docutils literal notranslate"><span class="pre">append</span></code>
method.  Custom object types used with the email package (for example,
custom <code class="docutils literal notranslate"><span class="pre">Message</span></code> objects) should also provide such an attribute,
otherwise defects in parsed messages will raise unexpected errors.</p>
</dd>