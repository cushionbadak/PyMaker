link:
library/unittest.mock.html#any

docs:

ANY¶


unittest.mock.ANY¶

Sometimes you may need to make assertions about some of the arguments in a
call to mock, but either not care about some of the arguments or want to pull
them individually out of call_args and make more complex
assertions on them.
To ignore certain arguments you can pass in objects that compare equal to
everything. Calls to assert_called_with() and
assert_called_once_with() will then succeed no matter what was
passed in.
>>> mock = Mock(return_value=None)
>>> mock('foo', bar=object())
>>> mock.assert_called_once_with('foo', bar=ANY)


ANY can also be used in comparisons with call lists like
mock_calls:
>>> m = MagicMock(return_value=None)
>>> m(1)
>>> m(1, 2)
>>> m(object())
>>> m.mock_calls == [call(1), call(1, 2), ANY]
True


