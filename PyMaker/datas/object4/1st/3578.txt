link:
library/logging.config.html#import-resolution-and-custom-importers

docs:

Import resolution and custom importers¶
Import resolution, by default, uses the builtin __import__() function
to do its importing. You may want to replace this with your own importing
mechanism: if so, you can replace the importer attribute of the
DictConfigurator or its superclass, the
BaseConfigurator class. However, you need to be
careful because of the way functions are accessed from classes via
descriptors. If you are using a Python callable to do your imports, and you
want to define it at class level rather than instance level, you need to wrap
it with staticmethod(). For example:
from importlib import import_module
from logging.config import BaseConfigurator

BaseConfigurator.importer = staticmethod(import_module)


You don’t need to wrap with staticmethod() if you’re setting the import
callable on a configurator instance.
