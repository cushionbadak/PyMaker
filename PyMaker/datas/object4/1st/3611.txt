link:
library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler

docs:

<dt id="logging.handlers.TimedRotatingFileHandler">
<em class="property">class </em><code class="descclassname">logging.handlers.</code><code class="descname">TimedRotatingFileHandler</code><span class="sig-paren">(</span><em>filename</em>, <em>when='h'</em>, <em>interval=1</em>, <em>backupCount=0</em>, <em>encoding=None</em>, <em>delay=False</em>, <em>utc=False</em>, <em>atTime=None</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.TimedRotatingFileHandler" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns a new instance of the <a class="reference internal" href="#logging.handlers.TimedRotatingFileHandler" title="logging.handlers.TimedRotatingFileHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">TimedRotatingFileHandler</span></code></a> class. The
specified file is opened and used as the stream for logging. On rotating it also
sets the filename suffix. Rotating happens based on the product of <em>when</em> and
<em>interval</em>.</p>
<p>You can use the <em>when</em> to specify the type of <em>interval</em>. The list of possible
values is below.  Note that they are not case sensitive.</p>
<table border="1" class="docutils">
<colgroup>
<col width="23%"/>
<col width="41%"/>
<col width="36%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Value</th>
<th class="head">Type of interval</th>
<th class="head">If/how <em>atTime</em> is used</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">'S'</span></code></td>
<td>Seconds</td>
<td>Ignored</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">'M'</span></code></td>
<td>Minutes</td>
<td>Ignored</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">'H'</span></code></td>
<td>Hours</td>
<td>Ignored</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">'D'</span></code></td>
<td>Days</td>
<td>Ignored</td>
</tr>
<tr class="row-even"><td><code class="docutils literal notranslate"><span class="pre">'W0'-'W6'</span></code></td>
<td>Weekday (0=Monday)</td>
<td>Used to compute initial
rollover time</td>
</tr>
<tr class="row-odd"><td><code class="docutils literal notranslate"><span class="pre">'midnight'</span></code></td>
<td>Roll over at midnight, if
<em>atTime</em> not specified,
else at time <em>atTime</em></td>
<td>Used to compute initial
rollover time</td>
</tr>
</tbody>
</table>
<p>When using weekday-based rotation, specify ‘W0’ for Monday, ‘W1’ for
Tuesday, and so on up to ‘W6’ for Sunday. In this case, the value passed for
<em>interval</em> isn’t used.</p>
<p>The system will save old log files by appending extensions to the filename.
The extensions are date-and-time based, using the strftime format
<code class="docutils literal notranslate"><span class="pre">%Y-%m-%d_%H-%M-%S</span></code> or a leading portion thereof, depending on the
rollover interval.</p>
<p>When computing the next rollover time for the first time (when the handler
is created), the last modification time of an existing log file, or else
the current time, is used to compute when the next rotation will occur.</p>
<p>If the <em>utc</em> argument is true, times in UTC will be used; otherwise
local time is used.</p>
<p>If <em>backupCount</em> is nonzero, at most <em>backupCount</em> files
will be kept, and if more would be created when rollover occurs, the oldest
one is deleted. The deletion logic uses the interval to determine which
files to delete, so changing the interval may leave old files lying around.</p>
<p>If <em>delay</em> is true, then file opening is deferred until the first call to
<a class="reference internal" href="#logging.handlers.TimedRotatingFileHandler.emit" title="logging.handlers.TimedRotatingFileHandler.emit"><code class="xref py py-meth docutils literal notranslate"><span class="pre">emit()</span></code></a>.</p>
<p>If <em>atTime</em> is not <code class="docutils literal notranslate"><span class="pre">None</span></code>, it must be a <code class="docutils literal notranslate"><span class="pre">datetime.time</span></code> instance which
specifies the time of day when rollover occurs, for the cases where rollover
is set to happen “at midnight” or “on a particular weekday”. Note that in
these cases, the <em>atTime</em> value is effectively used to compute the <em>initial</em>
rollover, and subsequent rollovers would be calculated via the normal
interval calculation.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Calculation of the initial rollover time is done when the handler
is initialised. Calculation of subsequent rollover times is done only
when rollover occurs, and rollover occurs only when emitting output. If
this is not kept in mind, it might lead to some confusion. For example,
if an interval of “every minute” is set, that does not mean you will
always see log files with times (in the filename) separated by a minute;
if, during application execution, logging output is generated more
frequently than once a minute, <em>then</em> you can expect to see log files
with times separated by a minute. If, on the other hand, logging messages
are only output once every five minutes (say), then there will be gaps in
the file times corresponding to the minutes where no output (and hence no
rollover) occurred.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span><em>atTime</em> parameter was added.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>As well as string values, <a class="reference internal" href="pathlib.html#pathlib.Path" title="pathlib.Path"><code class="xref py py-class docutils literal notranslate"><span class="pre">Path</span></code></a> objects are also accepted
for the <em>filename</em> argument.</p>
</div>
<dl class="method">
<dt id="logging.handlers.TimedRotatingFileHandler.doRollover">
<code class="descname">doRollover</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.TimedRotatingFileHandler.doRollover" title="Permalink to this definition">¶</a></dt>
<dd><p>Does a rollover, as described above.</p>
</dd></dl>
<dl class="method">
<dt id="logging.handlers.TimedRotatingFileHandler.emit">
<code class="descname">emit</code><span class="sig-paren">(</span><em>record</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.TimedRotatingFileHandler.emit" title="Permalink to this definition">¶</a></dt>
<dd><p>Outputs the record to the file, catering for rollover as described above.</p>
</dd></dl>
</dd>