link:
library/types.html#types.ModuleType

docs:

<dt id="types.ModuleType">
<em class="property">class </em><code class="descclassname">types.</code><code class="descname">ModuleType</code><span class="sig-paren">(</span><em>name</em>, <em>doc=None</em><span class="sig-paren">)</span><a class="headerlink" href="#types.ModuleType" title="Permalink to this definition">¶</a></dt>
<dd><p>The type of <a class="reference internal" href="../glossary.html#term-module"><span class="xref std std-term">modules</span></a>. Constructor takes the name of the
module to be created and optionally its <a class="reference internal" href="../glossary.html#term-docstring"><span class="xref std std-term">docstring</span></a>.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Use <a class="reference internal" href="importlib.html#importlib.util.module_from_spec" title="importlib.util.module_from_spec"><code class="xref py py-func docutils literal notranslate"><span class="pre">importlib.util.module_from_spec()</span></code></a> to create a new module if you
wish to set the various import-controlled attributes.</p>
</div>
<dl class="attribute">
<dt id="types.ModuleType.__doc__">
<code class="descname">__doc__</code><a class="headerlink" href="#types.ModuleType.__doc__" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="../glossary.html#term-docstring"><span class="xref std std-term">docstring</span></a> of the module. Defaults to <code class="docutils literal notranslate"><span class="pre">None</span></code>.</p>
</dd></dl>
<dl class="attribute">
<dt id="types.ModuleType.__loader__">
<code class="descname">__loader__</code><a class="headerlink" href="#types.ModuleType.__loader__" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="../glossary.html#term-loader"><span class="xref std std-term">loader</span></a> which loaded the module. Defaults to <code class="docutils literal notranslate"><span class="pre">None</span></code>.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>Defaults to <code class="docutils literal notranslate"><span class="pre">None</span></code>. Previously the attribute was optional.</p>
</div>
</dd></dl>
<dl class="attribute">
<dt id="types.ModuleType.__name__">
<code class="descname">__name__</code><a class="headerlink" href="#types.ModuleType.__name__" title="Permalink to this definition">¶</a></dt>
<dd><p>The name of the module.</p>
</dd></dl>
<dl class="attribute">
<dt id="types.ModuleType.__package__">
<code class="descname">__package__</code><a class="headerlink" href="#types.ModuleType.__package__" title="Permalink to this definition">¶</a></dt>
<dd><p>Which <a class="reference internal" href="../glossary.html#term-package"><span class="xref std std-term">package</span></a> a module belongs to. If the module is top-level
(i.e. not a part of any specific package) then the attribute should be set
to <code class="docutils literal notranslate"><span class="pre">''</span></code>, else it should be set to the name of the package (which can be
<a class="reference internal" href="../reference/import.html#__name__" title="__name__"><code class="xref py py-attr docutils literal notranslate"><span class="pre">__name__</span></code></a> if the module is a package itself). Defaults to <code class="docutils literal notranslate"><span class="pre">None</span></code>.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>Defaults to <code class="docutils literal notranslate"><span class="pre">None</span></code>. Previously the attribute was optional.</p>
</div>
</dd></dl>
</dd>