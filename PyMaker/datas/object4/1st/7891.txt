link:
library/turtle.html#using-events

docs:

Using events¶


turtle.onclick(fun, btn=1, add=None)¶




Parameters:
fun – a function with two arguments which will be called with the
coordinates of the clicked point on the canvas
btn – number of the mouse-button, defaults to 1 (left mouse button)
add – True or False – if True, a new binding will be
added, otherwise it will replace a former binding





Bind fun to mouse-click events on this turtle.  If fun is None,
existing bindings are removed.  Example for the anonymous turtle, i.e. the
procedural way:
>>> def turn(x, y):
...     left(180)
...
>>> onclick(turn)  # Now clicking into the turtle will turn it.
>>> onclick(None)  # event-binding will be removed





turtle.onrelease(fun, btn=1, add=None)¶




Parameters:
fun – a function with two arguments which will be called with the
coordinates of the clicked point on the canvas
btn – number of the mouse-button, defaults to 1 (left mouse button)
add – True or False – if True, a new binding will be
added, otherwise it will replace a former binding





Bind fun to mouse-button-release events on this turtle.  If fun is
None, existing bindings are removed.
>>> class MyTurtle(Turtle):
...     def glow(self,x,y):
...         self.fillcolor("red")
...     def unglow(self,x,y):
...         self.fillcolor("")
...
>>> turtle = MyTurtle()
>>> turtle.onclick(turtle.glow)     # clicking on turtle turns fillcolor red,
>>> turtle.onrelease(turtle.unglow) # releasing turns it to transparent.





turtle.ondrag(fun, btn=1, add=None)¶




Parameters:
fun – a function with two arguments which will be called with the
coordinates of the clicked point on the canvas
btn – number of the mouse-button, defaults to 1 (left mouse button)
add – True or False – if True, a new binding will be
added, otherwise it will replace a former binding





Bind fun to mouse-move events on this turtle.  If fun is None,
existing bindings are removed.
Remark: Every sequence of mouse-move-events on a turtle is preceded by a
mouse-click event on that turtle.
>>> turtle.ondrag(turtle.goto)


Subsequently, clicking and dragging the Turtle will move it across
the screen thereby producing handdrawings (if pen is down).

