link:
library/mailbox.html#mailbox.MaildirMessage

docs:

<dt id="mailbox.MaildirMessage">
<em class="property">class </em><code class="descclassname">mailbox.</code><code class="descname">MaildirMessage</code><span class="sig-paren">(</span><em>message=None</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage" title="Permalink to this definition">¶</a></dt>
<dd><p>A message with Maildir-specific behaviors. Parameter <em>message</em> has the same
meaning as with the <a class="reference internal" href="#mailbox.Message" title="mailbox.Message"><code class="xref py py-class docutils literal notranslate"><span class="pre">Message</span></code></a> constructor.</p>
<p>Typically, a mail user agent application moves all of the messages in the
<code class="file docutils literal notranslate"><span class="pre">new</span></code> subdirectory to the <code class="file docutils literal notranslate"><span class="pre">cur</span></code> subdirectory after the first time
the user opens and closes the mailbox, recording that the messages are old
whether or not they’ve actually been read. Each message in <code class="file docutils literal notranslate"><span class="pre">cur</span></code> has an
“info” section added to its file name to store information about its state.
(Some mail readers may also add an “info” section to messages in
<code class="file docutils literal notranslate"><span class="pre">new</span></code>.)  The “info” section may take one of two forms: it may contain
“2,” followed by a list of standardized flags (e.g., “2,FR”) or it may
contain “1,” followed by so-called experimental information. Standard flags
for Maildir messages are as follows:</p>
<table border="1" class="docutils">
<colgroup>
<col width="13%"/>
<col width="19%"/>
<col width="68%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Flag</th>
<th class="head">Meaning</th>
<th class="head">Explanation</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>D</td>
<td>Draft</td>
<td>Under composition</td>
</tr>
<tr class="row-odd"><td>F</td>
<td>Flagged</td>
<td>Marked as important</td>
</tr>
<tr class="row-even"><td>P</td>
<td>Passed</td>
<td>Forwarded, resent, or bounced</td>
</tr>
<tr class="row-odd"><td>R</td>
<td>Replied</td>
<td>Replied to</td>
</tr>
<tr class="row-even"><td>S</td>
<td>Seen</td>
<td>Read</td>
</tr>
<tr class="row-odd"><td>T</td>
<td>Trashed</td>
<td>Marked for subsequent deletion</td>
</tr>
</tbody>
</table>
<p><a class="reference internal" href="#mailbox.MaildirMessage" title="mailbox.MaildirMessage"><code class="xref py py-class docutils literal notranslate"><span class="pre">MaildirMessage</span></code></a> instances offer the following methods:</p>
<dl class="method">
<dt id="mailbox.MaildirMessage.get_subdir">
<code class="descname">get_subdir</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.get_subdir" title="Permalink to this definition">¶</a></dt>
<dd><p>Return either “new” (if the message should be stored in the <code class="file docutils literal notranslate"><span class="pre">new</span></code>
subdirectory) or “cur” (if the message should be stored in the <code class="file docutils literal notranslate"><span class="pre">cur</span></code>
subdirectory).</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A message is typically moved from <code class="file docutils literal notranslate"><span class="pre">new</span></code> to <code class="file docutils literal notranslate"><span class="pre">cur</span></code> after its
mailbox has been accessed, whether or not the message is has been
read. A message <code class="docutils literal notranslate"><span class="pre">msg</span></code> has been read if <code class="docutils literal notranslate"><span class="pre">"S"</span> <span class="pre">in</span> <span class="pre">msg.get_flags()</span></code> is
<code class="docutils literal notranslate"><span class="pre">True</span></code>.</p>
</div>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.set_subdir">
<code class="descname">set_subdir</code><span class="sig-paren">(</span><em>subdir</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.set_subdir" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the subdirectory the message should be stored in. Parameter <em>subdir</em>
must be either “new” or “cur”.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.get_flags">
<code class="descname">get_flags</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.get_flags" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a string specifying the flags that are currently set. If the
message complies with the standard Maildir format, the result is the
concatenation in alphabetical order of zero or one occurrence of each of
<code class="docutils literal notranslate"><span class="pre">'D'</span></code>, <code class="docutils literal notranslate"><span class="pre">'F'</span></code>, <code class="docutils literal notranslate"><span class="pre">'P'</span></code>, <code class="docutils literal notranslate"><span class="pre">'R'</span></code>, <code class="docutils literal notranslate"><span class="pre">'S'</span></code>, and <code class="docutils literal notranslate"><span class="pre">'T'</span></code>. The empty string
is returned if no flags are set or if “info” contains experimental
semantics.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.set_flags">
<code class="descname">set_flags</code><span class="sig-paren">(</span><em>flags</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.set_flags" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the flags specified by <em>flags</em> and unset all others.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.add_flag">
<code class="descname">add_flag</code><span class="sig-paren">(</span><em>flag</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.add_flag" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the flag(s) specified by <em>flag</em> without changing other flags. To add
more than one flag at a time, <em>flag</em> may be a string of more than one
character. The current “info” is overwritten whether or not it contains
experimental information rather than flags.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.remove_flag">
<code class="descname">remove_flag</code><span class="sig-paren">(</span><em>flag</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.remove_flag" title="Permalink to this definition">¶</a></dt>
<dd><p>Unset the flag(s) specified by <em>flag</em> without changing other flags. To
remove more than one flag at a time, <em>flag</em> maybe a string of more than
one character.  If “info” contains experimental information rather than
flags, the current “info” is not modified.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.get_date">
<code class="descname">get_date</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.get_date" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the delivery date of the message as a floating-point number
representing seconds since the epoch.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.set_date">
<code class="descname">set_date</code><span class="sig-paren">(</span><em>date</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.set_date" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the delivery date of the message to <em>date</em>, a floating-point number
representing seconds since the epoch.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.get_info">
<code class="descname">get_info</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.get_info" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a string containing the “info” for a message. This is useful for
accessing and modifying “info” that is experimental (i.e., not a list of
flags).</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MaildirMessage.set_info">
<code class="descname">set_info</code><span class="sig-paren">(</span><em>info</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MaildirMessage.set_info" title="Permalink to this definition">¶</a></dt>
<dd><p>Set “info” to <em>info</em>, which should be a string.</p>
</dd></dl>
</dd>