link:
library/curses.html#curses.textpad.Textbox

docs:

<dt id="curses.textpad.Textbox">
<em class="property">class </em><code class="descclassname">curses.textpad.</code><code class="descname">Textbox</code><span class="sig-paren">(</span><em>win</em><span class="sig-paren">)</span><a class="headerlink" href="#curses.textpad.Textbox" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a textbox widget object.  The <em>win</em> argument should be a curses
<a class="reference internal" href="#curses-window-objects"><span class="std std-ref">window</span></a> object in which the textbox is to
be contained. The edit cursor of the textbox is initially located at the
upper left hand corner of the containing window, with coordinates <code class="docutils literal notranslate"><span class="pre">(0,</span> <span class="pre">0)</span></code>.
The instance’s <a class="reference internal" href="#curses.textpad.Textbox.stripspaces" title="curses.textpad.Textbox.stripspaces"><code class="xref py py-attr docutils literal notranslate"><span class="pre">stripspaces</span></code></a> flag is initially on.</p>
<p><a class="reference internal" href="#curses.textpad.Textbox" title="curses.textpad.Textbox"><code class="xref py py-class docutils literal notranslate"><span class="pre">Textbox</span></code></a> objects have the following methods:</p>
<dl class="method">
<dt id="curses.textpad.Textbox.edit">
<code class="descname">edit</code><span class="sig-paren">(</span><span class="optional">[</span><em>validator</em><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#curses.textpad.Textbox.edit" title="Permalink to this definition">¶</a></dt>
<dd><p>This is the entry point you will normally use.  It accepts editing
keystrokes until one of the termination keystrokes is entered.  If
<em>validator</em> is supplied, it must be a function.  It will be called for
each keystroke entered with the keystroke as a parameter; command dispatch
is done on the result. This method returns the window contents as a
string; whether blanks in the window are included is affected by the
<a class="reference internal" href="#curses.textpad.Textbox.stripspaces" title="curses.textpad.Textbox.stripspaces"><code class="xref py py-attr docutils literal notranslate"><span class="pre">stripspaces</span></code></a> attribute.</p>
</dd></dl>
<dl class="method">
<dt id="curses.textpad.Textbox.do_command">
<code class="descname">do_command</code><span class="sig-paren">(</span><em>ch</em><span class="sig-paren">)</span><a class="headerlink" href="#curses.textpad.Textbox.do_command" title="Permalink to this definition">¶</a></dt>
<dd><p>Process a single command keystroke.  Here are the supported special
keystrokes:</p>
<table border="1" class="docutils">
<colgroup>
<col width="30%"/>
<col width="70%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Keystroke</th>
<th class="head">Action</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><kbd class="kbd docutils literal notranslate">Control-A</kbd></td>
<td>Go to left edge of window.</td>
</tr>
<tr class="row-odd"><td><kbd class="kbd docutils literal notranslate">Control-B</kbd></td>
<td>Cursor left, wrapping to previous line if
appropriate.</td>
</tr>
<tr class="row-even"><td><kbd class="kbd docutils literal notranslate">Control-D</kbd></td>
<td>Delete character under cursor.</td>
</tr>
<tr class="row-odd"><td><kbd class="kbd docutils literal notranslate">Control-E</kbd></td>
<td>Go to right edge (stripspaces off) or end
of line (stripspaces on).</td>
</tr>
<tr class="row-even"><td><kbd class="kbd docutils literal notranslate">Control-F</kbd></td>
<td>Cursor right, wrapping to next line when
appropriate.</td>
</tr>
<tr class="row-odd"><td><kbd class="kbd docutils literal notranslate">Control-G</kbd></td>
<td>Terminate, returning the window contents.</td>
</tr>
<tr class="row-even"><td><kbd class="kbd docutils literal notranslate">Control-H</kbd></td>
<td>Delete character backward.</td>
</tr>
<tr class="row-odd"><td><kbd class="kbd docutils literal notranslate">Control-J</kbd></td>
<td>Terminate if the window is 1 line,
otherwise insert newline.</td>
</tr>
<tr class="row-even"><td><kbd class="kbd docutils literal notranslate">Control-K</kbd></td>
<td>If line is blank, delete it, otherwise
clear to end of line.</td>
</tr>
<tr class="row-odd"><td><kbd class="kbd docutils literal notranslate">Control-L</kbd></td>
<td>Refresh screen.</td>
</tr>
<tr class="row-even"><td><kbd class="kbd docutils literal notranslate">Control-N</kbd></td>
<td>Cursor down; move down one line.</td>
</tr>
<tr class="row-odd"><td><kbd class="kbd docutils literal notranslate">Control-O</kbd></td>
<td>Insert a blank line at cursor location.</td>
</tr>
<tr class="row-even"><td><kbd class="kbd docutils literal notranslate">Control-P</kbd></td>
<td>Cursor up; move up one line.</td>
</tr>
</tbody>
</table>
<p>Move operations do nothing if the cursor is at an edge where the movement
is not possible.  The following synonyms are supported where possible:</p>
<table border="1" class="docutils">
<colgroup>
<col width="57%"/>
<col width="43%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Constant</th>
<th class="head">Keystroke</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">KEY_LEFT</span></code></td>
<td><kbd class="kbd docutils literal notranslate">Control-B</kbd></td>
</tr>
<tr class="row-odd"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">KEY_RIGHT</span></code></td>
<td><kbd class="kbd docutils literal notranslate">Control-F</kbd></td>
</tr>
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">KEY_UP</span></code></td>
<td><kbd class="kbd docutils literal notranslate">Control-P</kbd></td>
</tr>
<tr class="row-odd"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">KEY_DOWN</span></code></td>
<td><kbd class="kbd docutils literal notranslate">Control-N</kbd></td>
</tr>
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">KEY_BACKSPACE</span></code></td>
<td><kbd class="kbd docutils literal notranslate">Control-h</kbd></td>
</tr>
</tbody>
</table>
<p>All other keystrokes are treated as a command to insert the given
character and move right (with line wrapping).</p>
</dd></dl>
<dl class="method">
<dt id="curses.textpad.Textbox.gather">
<code class="descname">gather</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#curses.textpad.Textbox.gather" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the window contents as a string; whether blanks in the
window are included is affected by the <a class="reference internal" href="#curses.textpad.Textbox.stripspaces" title="curses.textpad.Textbox.stripspaces"><code class="xref py py-attr docutils literal notranslate"><span class="pre">stripspaces</span></code></a> member.</p>
</dd></dl>
<dl class="attribute">
<dt id="curses.textpad.Textbox.stripspaces">
<code class="descname">stripspaces</code><a class="headerlink" href="#curses.textpad.Textbox.stripspaces" title="Permalink to this definition">¶</a></dt>
<dd><p>This attribute is a flag which controls the interpretation of blanks in
the window.  When it is on, trailing blanks on each line are ignored; any
cursor motion that would land the cursor on a trailing blank goes to the
end of that line instead, and trailing blanks are stripped when the window
contents are gathered.</p>
</dd></dl>
</dd>