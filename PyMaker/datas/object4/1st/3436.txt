link:
library/argparse.html#action-classes

docs:

Action classes¶
Action classes implement the Action API, a callable which returns a callable
which processes arguments from the command-line. Any object which follows
this API may be passed as the action parameter to
add_argument().


class argparse.Action(option_strings, dest, nargs=None, const=None, default=None, type=None, choices=None, required=False, help=None, metavar=None)¶

Action objects are used by an ArgumentParser to represent the information
needed to parse a single argument from one or more strings from the
command line. The Action class must accept the two positional arguments
plus any keyword arguments passed to ArgumentParser.add_argument()
except for the action itself.
Instances of Action (or return value of any callable to the action
parameter) should have attributes “dest”, “option_strings”, “default”, “type”,
“required”, “help”, etc. defined. The easiest way to ensure these attributes
are defined is to call Action.__init__.
Action instances should be callable, so subclasses must override the
__call__ method, which should accept four parameters:

parser - The ArgumentParser object which contains this action.
namespace - The Namespace object that will be returned by
parse_args().  Most actions add an attribute to this
object using setattr().
values - The associated command-line arguments, with any type conversions
applied.  Type conversions are specified with the type keyword argument to
add_argument().
option_string - The option string that was used to invoke this action.
The option_string argument is optional, and will be absent if the action
is associated with a positional argument.

The __call__ method may perform arbitrary actions, but will typically set
attributes on the namespace based on dest and values.
