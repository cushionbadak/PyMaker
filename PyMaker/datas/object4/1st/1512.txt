link:
library/enum.html#supported-sunder-names

docs:

Supported _sunder_ names¶

_name_ – name of the member
_value_ – value of the member; can be set / modified in __new__
_missing_ – a lookup function used when a value is not found; may be
overridden
_ignore_ – a list of names, either as a list() or a str(),
that will not be transformed into members, and will be removed from the final
class
_order_ – used in Python 2/3 code to ensure member order is consistent
(class attribute, removed during class creation)
_generate_next_value_ – used by the Functional API and by
auto to get an appropriate value for an enum member; may be
overridden


New in version 3.6: _missing_, _order_, _generate_next_value_


New in version 3.7: _ignore_

To help keep Python 2 / Python 3 code in sync an _order_ attribute can
be provided.  It will be checked against the actual order of the enumeration
and raise an error if the two do not match:
>>> class Color(Enum):
...     _order_ = 'RED GREEN BLUE'
...     RED = 1
...     BLUE = 3
...     GREEN = 2
...
Traceback (most recent call last):
...
TypeError: member order does not match _order_



Note
In Python 2 code the _order_ attribute is necessary as definition
order is lost before it can be recorded.

