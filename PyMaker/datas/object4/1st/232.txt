link:
reference/expressions.html#agen.__anext__

docs:


coroutine agen.__anext__()Â¶
Returns an awaitable which when run starts to execute the asynchronous
generator or resumes it at the last executed yield expression.  When an
asynchronous generator function is resumed with an __anext__()
method, the current yield expression always evaluates to None in
the returned awaitable, which when run will continue to the next yield
expression. The value of the expression_list of the yield
expression is the value of the StopIteration exception raised by
the completing coroutine.  If the asynchronous generator exits without
yielding another value, the awaitable instead raises a
StopAsyncIteration exception, signalling that the asynchronous
iteration has completed.
This method is normally called implicitly by a async for loop.
