link:
library/asyncio-subprocess.html#asyncio.asyncio.subprocess.Process.communicate

docs:


coroutine communicate(input=None)¶
Interact with process:

send data to stdin (if input is not None);
read data from stdout and stderr, until EOF is reached;
wait for process to terminate.

The optional input argument is the data (bytes object)
that will be sent to the child process.
Return a tuple (stdout_data, stderr_data).
If either BrokenPipeError or ConnectionResetError
exception is raised when writing input into stdin, the
exception is ignored.  This condition occurs when the process
exits before all data are written into stdin.
If it is desired to send data to the process’ stdin,
the process needs to be created with stdin=PIPE.  Similarly,
to get anything other than None in the result tuple, the
process has to be created with stdout=PIPE and/or
stderr=PIPE arguments.
Note, that the data read is buffered in memory, so do not use
this method if the data size is large or unlimited.
