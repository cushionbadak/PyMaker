link:
library/time.html#time.pthread_getcpuclockid

docs:

<dt id="time.pthread_getcpuclockid">
<code class="descclassname">time.</code><code class="descname">pthread_getcpuclockid</code><span class="sig-paren">(</span><em>thread_id</em><span class="sig-paren">)</span><a class="headerlink" href="#time.pthread_getcpuclockid" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return the <em>clk_id</em> of the thread-specific CPU-time clock for the specified <em>thread_id</em>.</p>
<p>Use <a class="reference internal" href="threading.html#threading.get_ident" title="threading.get_ident"><code class="xref py py-func docutils literal notranslate"><span class="pre">threading.get_ident()</span></code></a> or the <a class="reference internal" href="threading.html#threading.Thread.ident" title="threading.Thread.ident"><code class="xref py py-attr docutils literal notranslate"><span class="pre">ident</span></code></a>
attribute of <a class="reference internal" href="threading.html#threading.Thread" title="threading.Thread"><code class="xref py py-class docutils literal notranslate"><span class="pre">threading.Thread</span></code></a> objects to get a suitable value
for <em>thread_id</em>.</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">Passing an invalid or expired <em>thread_id</em> may result in
undefined behavior, such as segmentation fault.</p>
</div>
<p class="availability"><a class="reference internal" href="intro.html#availability"><span class="std std-ref">Availability</span></a>: Unix (see the man page for <em class="manpage">pthread_getcpuclockid(3)</em> for
further information).</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.7.</span></p>
</div>
</dd>