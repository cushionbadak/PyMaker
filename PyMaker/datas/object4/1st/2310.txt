link:
library/pickle.html#pickle.load

docs:


pickle.load(file, *, fix_imports=True, encoding="ASCII", errors="strict")¶
Read a pickled object representation from the open file object
file and return the reconstituted object hierarchy specified therein.
This is equivalent to Unpickler(file).load().
The protocol version of the pickle is detected automatically, so no
protocol argument is needed.  Bytes past the pickled object’s
representation are ignored.
The argument file must have two methods, a read() method that takes an
integer argument, and a readline() method that requires no arguments.  Both
methods should return bytes.  Thus file can be an on-disk file opened for
binary reading, an io.BytesIO object, or any other custom object
that meets this interface.
Optional keyword arguments are fix_imports, encoding and errors,
which are used to control compatibility support for pickle stream generated
by Python 2.  If fix_imports is true, pickle will try to map the old
Python 2 names to the new names used in Python 3.  The encoding and
errors tell pickle how to decode 8-bit string instances pickled by Python
2; these default to ‘ASCII’ and ‘strict’, respectively.  The encoding can
be ‘bytes’ to read these 8-bit string instances as bytes objects.
Using encoding='latin1' is required for unpickling NumPy arrays and
instances of datetime, date and
time pickled by Python 2.
