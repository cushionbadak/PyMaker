link:
reference/datamodel.html#object.__getattr__

docs:


object.__getattr__(self, name)Â¶
Called when the default attribute access fails with an AttributeError
(either __getattribute__() raises an AttributeError because
name is not an instance attribute or an attribute in the class tree
for self; or __get__() of a name property raises
AttributeError).  This method should either return the (computed)
attribute value or raise an AttributeError exception.
Note that if the attribute is found through the normal mechanism,
__getattr__() is not called.  (This is an intentional asymmetry between
__getattr__() and __setattr__().) This is done both for efficiency
reasons and because otherwise __getattr__() would have no way to access
other attributes of the instance.  Note that at least for instance variables,
you can fake total control by not inserting any values in the instance attribute
dictionary (but instead inserting them in another object).  See the
__getattribute__() method below for a way to actually get total control
over attribute access.
