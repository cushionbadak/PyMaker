link:
library/string.html#string.Formatter.get_value

docs:

<dt id="string.Formatter.get_value">
<code class="descname">get_value</code><span class="sig-paren">(</span><em>key</em>, <em>args</em>, <em>kwargs</em><span class="sig-paren">)</span><a class="headerlink" href="#string.Formatter.get_value" title="Permalink to this definition">¶</a></dt>
<dd><p>Retrieve a given field value.  The <em>key</em> argument will be either an
integer or a string.  If it is an integer, it represents the index of the
positional argument in <em>args</em>; if it is a string, then it represents a
named argument in <em>kwargs</em>.</p>
<p>The <em>args</em> parameter is set to the list of positional arguments to
<a class="reference internal" href="#string.Formatter.vformat" title="string.Formatter.vformat"><code class="xref py py-meth docutils literal notranslate"><span class="pre">vformat()</span></code></a>, and the <em>kwargs</em> parameter is set to the dictionary of
keyword arguments.</p>
<p>For compound field names, these functions are only called for the first
component of the field name; Subsequent components are handled through
normal attribute and indexing operations.</p>
<p>So for example, the field expression ‘0.name’ would cause
<a class="reference internal" href="#string.Formatter.get_value" title="string.Formatter.get_value"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_value()</span></code></a> to be called with a <em>key</em> argument of 0.  The <code class="docutils literal notranslate"><span class="pre">name</span></code>
attribute will be looked up after <a class="reference internal" href="#string.Formatter.get_value" title="string.Formatter.get_value"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_value()</span></code></a> returns by calling the
built-in <a class="reference internal" href="functions.html#getattr" title="getattr"><code class="xref py py-func docutils literal notranslate"><span class="pre">getattr()</span></code></a> function.</p>
<p>If the index or keyword refers to an item that does not exist, then an
<a class="reference internal" href="exceptions.html#IndexError" title="IndexError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">IndexError</span></code></a> or <a class="reference internal" href="exceptions.html#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a> should be raised.</p>
</dd>