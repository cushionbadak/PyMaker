link:
library/sys.html#sys.getwindowsversion

docs:

<dt id="sys.getwindowsversion">
<code class="descclassname">sys.</code><code class="descname">getwindowsversion</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#sys.getwindowsversion" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a named tuple describing the Windows version
currently running.  The named elements are <em>major</em>, <em>minor</em>,
<em>build</em>, <em>platform</em>, <em>service_pack</em>, <em>service_pack_minor</em>,
<em>service_pack_major</em>, <em>suite_mask</em>, <em>product_type</em> and
<em>platform_version</em>. <em>service_pack</em> contains a string,
<em>platform_version</em> a 3-tuple and all other values are
integers. The components can also be accessed by name, so
<code class="docutils literal notranslate"><span class="pre">sys.getwindowsversion()[0]</span></code> is equivalent to
<code class="docutils literal notranslate"><span class="pre">sys.getwindowsversion().major</span></code>. For compatibility with prior
versions, only the first 5 elements are retrievable by indexing.</p>
<p><em>platform</em> will be <code class="xref py py-const docutils literal notranslate"><span class="pre">2</span> <span class="pre">(VER_PLATFORM_WIN32_NT)</span></code>.</p>
<p><em>product_type</em> may be one of the following values:</p>
<table border="1" class="docutils">
<colgroup>
<col width="54%"/>
<col width="46%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Constant</th>
<th class="head">Meaning</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">1</span> <span class="pre">(VER_NT_WORKSTATION)</span></code></td>
<td>The system is a workstation.</td>
</tr>
<tr class="row-odd"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">2</span> <span class="pre">(VER_NT_DOMAIN_CONTROLLER)</span></code></td>
<td>The system is a domain
controller.</td>
</tr>
<tr class="row-even"><td><code class="xref py py-const docutils literal notranslate"><span class="pre">3</span> <span class="pre">(VER_NT_SERVER)</span></code></td>
<td>The system is a server, but not
a domain controller.</td>
</tr>
</tbody>
</table>
<p>This function wraps the Win32 <code class="xref c c-func docutils literal notranslate"><span class="pre">GetVersionEx()</span></code> function; see the
Microsoft documentation on <code class="xref c c-func docutils literal notranslate"><span class="pre">OSVERSIONINFOEX()</span></code> for more information
about these fields.</p>
<p><em>platform_version</em> returns the accurate major version, minor version and
build number of the current operating system, rather than the version that
is being emulated for the process. It is intended for use in logging rather
than for feature detection.</p>
<p class="availability"><a class="reference internal" href="intro.html#availability"><span class="std std-ref">Availability</span></a>: Windows.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2: </span>Changed to a named tuple and added <em>service_pack_minor</em>,
<em>service_pack_major</em>, <em>suite_mask</em>, and <em>product_type</em>.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>Added <em>platform_version</em></p>
</div>
</dd>