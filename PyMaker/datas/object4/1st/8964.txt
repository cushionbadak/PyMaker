link:
library/pdb.html#pdbcommand-commands

docs:

<dt id="pdbcommand-commands">
<code class="descname">commands</code><code class="descclassname"> [bpnumber]</code><a class="headerlink" href="#pdbcommand-commands" title="Permalink to this definition">¶</a></dt>
<dd><p>Specify a list of commands for breakpoint number <em>bpnumber</em>.  The commands
themselves appear on the following lines.  Type a line containing just
<code class="docutils literal notranslate"><span class="pre">end</span></code> to terminate the commands. An example:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="p">(</span><span class="n">Pdb</span><span class="p">)</span> <span class="n">commands</span> <span class="mi">1</span>
<span class="p">(</span><span class="n">com</span><span class="p">)</span> <span class="n">p</span> <span class="n">some_variable</span>
<span class="p">(</span><span class="n">com</span><span class="p">)</span> <span class="n">end</span>
<span class="p">(</span><span class="n">Pdb</span><span class="p">)</span>
</pre></div>
</div>
<p>To remove all commands from a breakpoint, type <code class="docutils literal notranslate"><span class="pre">commands</span></code> and follow it
immediately with <code class="docutils literal notranslate"><span class="pre">end</span></code>; that is, give no commands.</p>
<p>With no <em>bpnumber</em> argument, <code class="docutils literal notranslate"><span class="pre">commands</span></code> refers to the last breakpoint set.</p>
<p>You can use breakpoint commands to start your program up again.  Simply use
the <a class="reference internal" href="#pdbcommand-continue"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">continue</span></code></a> command, or <a class="reference internal" href="#pdbcommand-step"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">step</span></code></a>,
or any other command that resumes execution.</p>
<p>Specifying any command resuming execution
(currently <a class="reference internal" href="#pdbcommand-continue"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">continue</span></code></a>, <a class="reference internal" href="#pdbcommand-step"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">step</span></code></a>, <a class="reference internal" href="#pdbcommand-next"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">next</span></code></a>,
<a class="reference internal" href="#pdbcommand-return"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">return</span></code></a>, <a class="reference internal" href="#pdbcommand-jump"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">jump</span></code></a>, <a class="reference internal" href="#pdbcommand-quit"><code class="xref std std-pdbcmd docutils literal notranslate"><span class="pre">quit</span></code></a> and their abbreviations)
terminates the command list (as if
that command was immediately followed by end). This is because any time you
resume execution (even with a simple next or step), you may encounter another
breakpoint—which could have its own command list, leading to ambiguities about
which list to execute.</p>
<p>If you use the ‘silent’ command in the command list, the usual message about
stopping at a breakpoint is not printed.  This may be desirable for breakpoints
that are to print a specific message and then continue.  If none of the other
commands print anything, you see no sign that the breakpoint was reached.</p>
</dd>