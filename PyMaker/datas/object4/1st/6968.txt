link:
library/nntplib.html#nntplib.NNTP_SSL

docs:

<dt id="nntplib.NNTP_SSL">
<em class="property">class </em><code class="descclassname">nntplib.</code><code class="descname">NNTP_SSL</code><span class="sig-paren">(</span><em>host</em>, <em>port=563</em>, <em>user=None</em>, <em>password=None</em>, <em>ssl_context=None</em>, <em>readermode=None</em>, <em>usenetrc=False</em><span class="optional">[</span>, <em>timeout</em><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#nntplib.NNTP_SSL" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a new <a class="reference internal" href="#nntplib.NNTP_SSL" title="nntplib.NNTP_SSL"><code class="xref py py-class docutils literal notranslate"><span class="pre">NNTP_SSL</span></code></a> object, representing an encrypted
connection to the NNTP server running on host <em>host</em>, listening at
port <em>port</em>.  <a class="reference internal" href="#nntplib.NNTP_SSL" title="nntplib.NNTP_SSL"><code class="xref py py-class docutils literal notranslate"><span class="pre">NNTP_SSL</span></code></a> objects have the same methods as
<a class="reference internal" href="#nntplib.NNTP" title="nntplib.NNTP"><code class="xref py py-class docutils literal notranslate"><span class="pre">NNTP</span></code></a> objects.  If <em>port</em> is omitted, port 563 (NNTPS) is used.
<em>ssl_context</em> is also optional, and is a <a class="reference internal" href="ssl.html#ssl.SSLContext" title="ssl.SSLContext"><code class="xref py py-class docutils literal notranslate"><span class="pre">SSLContext</span></code></a> object.
Please read <a class="reference internal" href="ssl.html#ssl-security"><span class="std std-ref">Security considerations</span></a> for best practices.
All other parameters behave the same as for <a class="reference internal" href="#nntplib.NNTP" title="nntplib.NNTP"><code class="xref py py-class docutils literal notranslate"><span class="pre">NNTP</span></code></a>.</p>
<p>Note that SSL-on-563 is discouraged per <span class="target" id="index-4"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc4642.html"><strong>RFC 4642</strong></a>, in favor of
STARTTLS as described below.  However, some servers only support the
former.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.2.</span></p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>The class now supports hostname check with
<a class="reference internal" href="ssl.html#ssl.SSLContext.check_hostname" title="ssl.SSLContext.check_hostname"><code class="xref py py-attr docutils literal notranslate"><span class="pre">ssl.SSLContext.check_hostname</span></code></a> and <em>Server Name Indication</em> (see
<a class="reference internal" href="ssl.html#ssl.HAS_SNI" title="ssl.HAS_SNI"><code class="xref py py-data docutils literal notranslate"><span class="pre">ssl.HAS_SNI</span></code></a>).</p>
</div>
</dd>