link:
library/hmac.html#hmac.new

docs:

<dt id="hmac.new">
<code class="descclassname">hmac.</code><code class="descname">new</code><span class="sig-paren">(</span><em>key</em>, <em>msg=None</em>, <em>digestmod=None</em><span class="sig-paren">)</span><a class="headerlink" href="#hmac.new" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a new hmac object.  <em>key</em> is a bytes or bytearray object giving the
secret key.  If <em>msg</em> is present, the method call <code class="docutils literal notranslate"><span class="pre">update(msg)</span></code> is made.
<em>digestmod</em> is the digest name, digest constructor or module for the HMAC
object to use. It supports any name suitable to <a class="reference internal" href="hashlib.html#hashlib.new" title="hashlib.new"><code class="xref py py-func docutils literal notranslate"><span class="pre">hashlib.new()</span></code></a> and
defaults to the <code class="xref py py-data docutils literal notranslate"><span class="pre">hashlib.md5</span></code> constructor.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>Parameter <em>key</em> can be a bytes or bytearray object.
Parameter <em>msg</em> can be of any type supported by <a class="reference internal" href="hashlib.html#module-hashlib" title="hashlib: Secure hash and message digest algorithms."><code class="xref py py-mod docutils literal notranslate"><span class="pre">hashlib</span></code></a>.
Parameter <em>digestmod</em> can be the name of a hash algorithm.</p>
</div>
<div class="deprecated">
<p><span class="versionmodified">Deprecated since version 3.4, will be removed in version 3.8: </span>MD5 as implicit default digest for <em>digestmod</em> is deprecated.</p>
</div>
</dd>