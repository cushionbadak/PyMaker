link:
library/rlcompleter.html#rlcompleter.Completer.complete

docs:

<dt id="rlcompleter.Completer.complete">
<code class="descclassname">Completer.</code><code class="descname">complete</code><span class="sig-paren">(</span><em>text</em>, <em>state</em><span class="sig-paren">)</span><a class="headerlink" href="#rlcompleter.Completer.complete" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the <em>state</em>th completion for <em>text</em>.</p>
<p>If called for <em>text</em> that doesn’t include a period character (<code class="docutils literal notranslate"><span class="pre">'.'</span></code>), it will
complete from names currently defined in <a class="reference internal" href="__main__.html#module-__main__" title="__main__: The environment where the top-level script is run."><code class="xref py py-mod docutils literal notranslate"><span class="pre">__main__</span></code></a>, <a class="reference internal" href="builtins.html#module-builtins" title="builtins: The module that provides the built-in namespace."><code class="xref py py-mod docutils literal notranslate"><span class="pre">builtins</span></code></a> and
keywords (as defined by the <a class="reference internal" href="keyword.html#module-keyword" title="keyword: Test whether a string is a keyword in Python."><code class="xref py py-mod docutils literal notranslate"><span class="pre">keyword</span></code></a> module).</p>
<p>If called for a dotted name, it will try to evaluate anything without obvious
side-effects (functions will not be evaluated, but it can generate calls to
<a class="reference internal" href="../reference/datamodel.html#object.__getattr__" title="object.__getattr__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__getattr__()</span></code></a>) up to the last part, and find matches for the rest via the
<a class="reference internal" href="functions.html#dir" title="dir"><code class="xref py py-func docutils literal notranslate"><span class="pre">dir()</span></code></a> function.  Any exception raised during the evaluation of the
expression is caught, silenced and <a class="reference internal" href="constants.html#None" title="None"><code class="xref py py-const docutils literal notranslate"><span class="pre">None</span></code></a> is returned.</p>
</dd>