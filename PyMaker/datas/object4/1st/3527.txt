link:
library/logging.html#logging.Formatter.formatTime

docs:


formatTime(record, datefmt=None)¶
This method should be called from format() by a formatter which
wants to make use of a formatted time. This method can be overridden in
formatters to provide for any specific requirement, but the basic behavior
is as follows: if datefmt (a string) is specified, it is used with
time.strftime() to format the creation time of the
record. Otherwise, the format ‘%Y-%m-%d %H:%M:%S,uuu’ is used, where the
uuu part is a millisecond value and the other letters are as per the
time.strftime() documentation.  An example time in this format is
2003-01-23 00:29:50,411.  The resulting string is returned.
This function uses a user-configurable function to convert the creation
time to a tuple. By default, time.localtime() is used; to change
this for a particular formatter instance, set the converter attribute
to a function with the same signature as time.localtime() or
time.gmtime(). To change it for all formatters, for example if you
want all logging times to be shown in GMT, set the converter
attribute in the Formatter class.

Changed in version 3.3: Previously, the default format was hard-coded as in this example:
2010-09-06 22:38:15,292 where the part before the comma is
handled by a strptime format string ('%Y-%m-%d %H:%M:%S'), and the
part after the comma is a millisecond value. Because strptime does not
have a format placeholder for milliseconds, the millisecond value is
appended using another format string, '%s,%03d' — and both of these
format strings have been hardcoded into this method. With the change,
these strings are defined as class-level attributes which can be
overridden at the instance level when desired. The names of the
attributes are default_time_format (for the strptime format string)
and default_msec_format (for appending the millisecond value).

