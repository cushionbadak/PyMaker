link:
library/dis.html#opcode-WITH_CLEANUP_START

docs:

<dt id="opcode-WITH_CLEANUP_START">
<code class="descname">WITH_CLEANUP_START</code><a class="headerlink" href="#opcode-WITH_CLEANUP_START" title="Permalink to this definition">¶</a></dt>
<dd><p>Cleans up the stack when a <a class="reference internal" href="../reference/compound_stmts.html#with"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code></a> statement block exits.  TOS is the
context manager’s <a class="reference internal" href="../reference/datamodel.html#object.__exit__" title="object.__exit__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__exit__()</span></code></a> bound method. Below TOS are 1–3 values
indicating how/why the finally clause was entered:</p>
<ul class="simple">
<li>SECOND = <code class="docutils literal notranslate"><span class="pre">None</span></code></li>
<li>(SECOND, THIRD) = (<code class="docutils literal notranslate"><span class="pre">WHY_{RETURN,CONTINUE}</span></code>), retval</li>
<li>SECOND = <code class="docutils literal notranslate"><span class="pre">WHY_*</span></code>; no retval below it</li>
<li>(SECOND, THIRD, FOURTH) = exc_info()</li>
</ul>
<p>In the last case, <code class="docutils literal notranslate"><span class="pre">TOS(SECOND,</span> <span class="pre">THIRD,</span> <span class="pre">FOURTH)</span></code> is called, otherwise
<code class="docutils literal notranslate"><span class="pre">TOS(None,</span> <span class="pre">None,</span> <span class="pre">None)</span></code>.  Pushes SECOND and result of the call
to the stack.</p>
</dd>