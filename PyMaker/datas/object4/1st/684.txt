link:
library/exceptions.html#os-exceptions

docs:

OS exceptions¶
The following exceptions are subclasses of OSError, they get raised
depending on the system error code.


exception BlockingIOError¶
Raised when an operation would block on an object (e.g. socket) set
for non-blocking operation.
Corresponds to errno EAGAIN, EALREADY,
EWOULDBLOCK and EINPROGRESS.
In addition to those of OSError, BlockingIOError can have
one more attribute:


characters_written¶
An integer containing the number of characters written to the stream
before it blocked.  This attribute is available when using the
buffered I/O classes from the io module.




exception ChildProcessError¶
Raised when an operation on a child process failed.
Corresponds to errno ECHILD.



exception ConnectionError¶
A base class for connection-related issues.
Subclasses are BrokenPipeError, ConnectionAbortedError,
ConnectionRefusedError and ConnectionResetError.



exception BrokenPipeError¶
A subclass of ConnectionError, raised when trying to write on a
pipe while the other end has been closed, or trying to write on a socket
which has been shutdown for writing.
Corresponds to errno EPIPE and ESHUTDOWN.



exception ConnectionAbortedError¶
A subclass of ConnectionError, raised when a connection attempt
is aborted by the peer.
Corresponds to errno ECONNABORTED.



exception ConnectionRefusedError¶
A subclass of ConnectionError, raised when a connection attempt
is refused by the peer.
Corresponds to errno ECONNREFUSED.



exception ConnectionResetError¶
A subclass of ConnectionError, raised when a connection is
reset by the peer.
Corresponds to errno ECONNRESET.



exception FileExistsError¶
Raised when trying to create a file or directory which already exists.
Corresponds to errno EEXIST.



exception FileNotFoundError¶
Raised when a file or directory is requested but doesn’t exist.
Corresponds to errno ENOENT.



exception InterruptedError¶
Raised when a system call is interrupted by an incoming signal.
Corresponds to errno EINTR.

Changed in version 3.5: Python now retries system calls when a syscall is interrupted by a
signal, except if the signal handler raises an exception (see PEP 475
for the rationale), instead of raising InterruptedError.




exception IsADirectoryError¶
Raised when a file operation (such as os.remove()) is requested
on a directory.
Corresponds to errno EISDIR.



exception NotADirectoryError¶
Raised when a directory operation (such as os.listdir()) is requested
on something which is not a directory.
Corresponds to errno ENOTDIR.



exception PermissionError¶
Raised when trying to run an operation without the adequate access
rights - for example filesystem permissions.
Corresponds to errno EACCES and EPERM.



exception ProcessLookupError¶
Raised when a given process doesn’t exist.
Corresponds to errno ESRCH.



exception TimeoutError¶
Raised when a system function timed out at the system level.
Corresponds to errno ETIMEDOUT.


New in version 3.3: All the above OSError subclasses were added.


See also
PEP 3151 - Reworking the OS and IO exception hierarchy

