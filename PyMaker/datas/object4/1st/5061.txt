link:
library/socket.html#socket.gethostbyname_ex

docs:

<dt id="socket.gethostbyname_ex">
<code class="descclassname">socket.</code><code class="descname">gethostbyname_ex</code><span class="sig-paren">(</span><em>hostname</em><span class="sig-paren">)</span><a class="headerlink" href="#socket.gethostbyname_ex" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Translate a host name to IPv4 address format, extended interface. Return a
triple <code class="docutils literal notranslate"><span class="pre">(hostname,</span> <span class="pre">aliaslist,</span> <span class="pre">ipaddrlist)</span></code> where <em>hostname</em> is the primary
host name responding to the given <em>ip_address</em>, <em>aliaslist</em> is a (possibly
empty) list of alternative host names for the same address, and <em>ipaddrlist</em> is
a list of IPv4 addresses for the same interface on the same host (often but not
always a single address). <a class="reference internal" href="#socket.gethostbyname_ex" title="socket.gethostbyname_ex"><code class="xref py py-func docutils literal notranslate"><span class="pre">gethostbyname_ex()</span></code></a> does not support IPv6 name
resolution, and <a class="reference internal" href="#socket.getaddrinfo" title="socket.getaddrinfo"><code class="xref py py-func docutils literal notranslate"><span class="pre">getaddrinfo()</span></code></a> should be used instead for IPv4/v6 dual
stack support.</p>
</dd>