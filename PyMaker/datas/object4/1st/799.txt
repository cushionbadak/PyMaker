link:
library/re.html#re.Match.groups

docs:


Match.groups(default=None)Â¶
Return a tuple containing all the subgroups of the match, from 1 up to however
many groups are in the pattern.  The default argument is used for groups that
did not participate in the match; it defaults to None.
For example:
>>> m = re.match(r"(\d+)\.(\d+)", "24.1632")
>>> m.groups()
('24', '1632')


If we make the decimal place and everything after it optional, not all groups
might participate in the match.  These groups will default to None unless
the default argument is given:
>>> m = re.match(r"(\d+)\.?(\d+)?", "24")
>>> m.groups()      # Second group defaults to None.
('24', None)
>>> m.groups('0')   # Now, the second group defaults to '0'.
('24', '0')


