link:
library/ssl.html#ssl.MemoryBIO

docs:

<dt id="ssl.MemoryBIO">
<em class="property">class </em><code class="descclassname">ssl.</code><code class="descname">MemoryBIO</code><a class="headerlink" href="#ssl.MemoryBIO" title="Permalink to this definition">¶</a></dt>
<dd><p>A memory buffer that can be used to pass data between Python and an SSL
protocol instance.</p>
<dl class="attribute">
<dt id="ssl.MemoryBIO.pending">
<code class="descname">pending</code><a class="headerlink" href="#ssl.MemoryBIO.pending" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the number of bytes currently in the memory buffer.</p>
</dd></dl>
<dl class="attribute">
<dt id="ssl.MemoryBIO.eof">
<code class="descname">eof</code><a class="headerlink" href="#ssl.MemoryBIO.eof" title="Permalink to this definition">¶</a></dt>
<dd><p>A boolean indicating whether the memory BIO is current at the end-of-file
position.</p>
</dd></dl>
<dl class="method">
<dt id="ssl.MemoryBIO.read">
<code class="descname">read</code><span class="sig-paren">(</span><em>n=-1</em><span class="sig-paren">)</span><a class="headerlink" href="#ssl.MemoryBIO.read" title="Permalink to this definition">¶</a></dt>
<dd><p>Read up to <em>n</em> bytes from the memory buffer. If <em>n</em> is not specified or
negative, all bytes are returned.</p>
</dd></dl>
<dl class="method">
<dt id="ssl.MemoryBIO.write">
<code class="descname">write</code><span class="sig-paren">(</span><em>buf</em><span class="sig-paren">)</span><a class="headerlink" href="#ssl.MemoryBIO.write" title="Permalink to this definition">¶</a></dt>
<dd><p>Write the bytes from <em>buf</em> to the memory BIO. The <em>buf</em> argument must be an
object supporting the buffer protocol.</p>
<p>The return value is the number of bytes written, which is always equal to
the length of <em>buf</em>.</p>
</dd></dl>
<dl class="method">
<dt id="ssl.MemoryBIO.write_eof">
<code class="descname">write_eof</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#ssl.MemoryBIO.write_eof" title="Permalink to this definition">¶</a></dt>
<dd><p>Write an EOF marker to the memory BIO. After this method has been called, it
is illegal to call <a class="reference internal" href="#ssl.MemoryBIO.write" title="ssl.MemoryBIO.write"><code class="xref py py-meth docutils literal notranslate"><span class="pre">write()</span></code></a>. The attribute <a class="reference internal" href="#ssl.MemoryBIO.eof" title="ssl.MemoryBIO.eof"><code class="xref py py-attr docutils literal notranslate"><span class="pre">eof</span></code></a> will
become true after all data currently in the buffer has been read.</p>
</dd></dl>
</dd>