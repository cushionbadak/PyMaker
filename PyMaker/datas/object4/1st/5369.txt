link:
library/selectors.html#selectors.BaseSelector.select

docs:

<dt id="selectors.BaseSelector.select">
<em class="property">abstractmethod </em><code class="descname">select</code><span class="sig-paren">(</span><em>timeout=None</em><span class="sig-paren">)</span><a class="headerlink" href="#selectors.BaseSelector.select" title="Permalink to this definition">¶</a></dt>
<dd><p>Wait until some registered file objects become ready, or the timeout
expires.</p>
<p>If <code class="docutils literal notranslate"><span class="pre">timeout</span> <span class="pre">&gt;</span> <span class="pre">0</span></code>, this specifies the maximum wait time, in seconds.
If <code class="docutils literal notranslate"><span class="pre">timeout</span> <span class="pre">&lt;=</span> <span class="pre">0</span></code>, the call won’t block, and will report the currently
ready file objects.
If <em>timeout</em> is <code class="docutils literal notranslate"><span class="pre">None</span></code>, the call will block until a monitored file object
becomes ready.</p>
<p>This returns a list of <code class="docutils literal notranslate"><span class="pre">(key,</span> <span class="pre">events)</span></code> tuples, one for each ready file
object.</p>
<p><em>key</em> is the <a class="reference internal" href="#selectors.SelectorKey" title="selectors.SelectorKey"><code class="xref py py-class docutils literal notranslate"><span class="pre">SelectorKey</span></code></a> instance corresponding to a ready file
object.
<em>events</em> is a bitmask of events ready on this file object.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">This method can return before any file object becomes ready or the
timeout has elapsed if the current process receives a signal: in this
case, an empty list will be returned.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>The selector is now retried with a recomputed timeout when interrupted
by a signal if the signal handler did not raise an exception (see
<span class="target" id="index-0"></span><a class="pep reference external" href="https://www.python.org/dev/peps/pep-0475"><strong>PEP 475</strong></a> for the rationale), instead of returning an empty list
of events before the timeout.</p>
</div>
</dd>