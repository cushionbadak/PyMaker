link:
library/asyncio-eventloop.html#display-the-current-date-with-call-later

docs:

Display the current date with call_later()Â¶
An example of a callback displaying the current date every second. The
callback uses the loop.call_later() method to reschedule itself
after 5 seconds, and then stops the event loop:
import asyncio
import datetime

def display_date(end_time, loop):
    print(datetime.datetime.now())
    if (loop.time() + 1.0) < end_time:
        loop.call_later(1, display_date, end_time, loop)
    else:
        loop.stop()

loop = asyncio.get_event_loop()

# Schedule the first call to display_date()
end_time = loop.time() + 5.0
loop.call_soon(display_date, end_time, loop)

# Blocking call interrupted by loop.stop()
try:
    loop.run_forever()
finally:
    loop.close()



See also
A similar current date example
created with a coroutine and the run() function.

