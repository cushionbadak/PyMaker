link:
library/configparser.html#interpolation-of-values

docs:

Interpolation of values¶
On top of the core functionality, ConfigParser supports
interpolation.  This means values can be preprocessed before returning them
from get() calls.


class configparser.BasicInterpolation¶
The default implementation used by ConfigParser.  It enables
values to contain format strings which refer to other values in the same
section, or values in the special default section [1].  Additional default
values can be provided on initialization.
For example:
[Paths]
home_dir: /Users
my_dir: %(home_dir)s/lumberjack
my_pictures: %(my_dir)s/Pictures


In the example above, ConfigParser with interpolation set to
BasicInterpolation() would resolve %(home_dir)s to the value of
home_dir (/Users in this case).  %(my_dir)s in effect would
resolve to /Users/lumberjack.  All interpolations are done on demand so
keys used in the chain of references do not have to be specified in any
specific order in the configuration file.
With interpolation set to None, the parser would simply return
%(my_dir)s/Pictures as the value of my_pictures and
%(home_dir)s/lumberjack as the value of my_dir.



class configparser.ExtendedInterpolation¶
An alternative handler for interpolation which implements a more advanced
syntax, used for instance in zc.buildout.  Extended interpolation is
using ${section:option} to denote a value from a foreign section.
Interpolation can span multiple levels.  For convenience, if the
section: part is omitted, interpolation defaults to the current section
(and possibly the default values from the special section).
For example, the configuration specified above with basic interpolation,
would look like this with extended interpolation:
[Paths]
home_dir: /Users
my_dir: ${home_dir}/lumberjack
my_pictures: ${my_dir}/Pictures


Values from other sections can be fetched as well:
[Common]
home_dir: /Users
library_dir: /Library
system_dir: /System
macports_dir: /opt/local

[Frameworks]
Python: 3.2
path: ${Common:system_dir}/Library/Frameworks/

[Arthur]
nickname: Two Sheds
last_name: Jackson
my_dir: ${Common:home_dir}/twosheds
my_pictures: ${my_dir}/Pictures
python_dir: ${Frameworks:path}/Python/Versions/${Frameworks:Python}



