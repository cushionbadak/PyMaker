link:
library/importlib.html#importlib.abc.PathEntryFinder.find_loader

docs:

<dt id="importlib.abc.PathEntryFinder.find_loader">
<code class="descname">find_loader</code><span class="sig-paren">(</span><em>fullname</em><span class="sig-paren">)</span><a class="headerlink" href="#importlib.abc.PathEntryFinder.find_loader" title="Permalink to this definition">Â¶</a></dt>
<dd><p>A legacy method for finding a <a class="reference internal" href="../glossary.html#term-loader"><span class="xref std std-term">loader</span></a> for the specified
module.  Returns a 2-tuple of <code class="docutils literal notranslate"><span class="pre">(loader,</span> <span class="pre">portion)</span></code> where <code class="docutils literal notranslate"><span class="pre">portion</span></code>
is a sequence of file system locations contributing to part of a namespace
package. The loader may be <code class="docutils literal notranslate"><span class="pre">None</span></code> while specifying <code class="docutils literal notranslate"><span class="pre">portion</span></code> to
signify the contribution of the file system locations to a namespace
package. An empty list can be used for <code class="docutils literal notranslate"><span class="pre">portion</span></code> to signify the loader
is not part of a namespace package. If <code class="docutils literal notranslate"><span class="pre">loader</span></code> is <code class="docutils literal notranslate"><span class="pre">None</span></code> and
<code class="docutils literal notranslate"><span class="pre">portion</span></code> is the empty list then no loader or location for a namespace
package were found (i.e. failure to find anything for the module).</p>
<p>If <a class="reference internal" href="#importlib.abc.PathEntryFinder.find_spec" title="importlib.abc.PathEntryFinder.find_spec"><code class="xref py py-meth docutils literal notranslate"><span class="pre">find_spec()</span></code></a> is defined then backwards-compatible functionality is
provided.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>Returns <code class="docutils literal notranslate"><span class="pre">(None,</span> <span class="pre">[])</span></code> instead of raising <a class="reference internal" href="exceptions.html#NotImplementedError" title="NotImplementedError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NotImplementedError</span></code></a>.
Uses <a class="reference internal" href="#importlib.abc.PathEntryFinder.find_spec" title="importlib.abc.PathEntryFinder.find_spec"><code class="xref py py-meth docutils literal notranslate"><span class="pre">find_spec()</span></code></a> when available to provide functionality.</p>
</div>
<div class="deprecated">
<p><span class="versionmodified">Deprecated since version 3.4: </span>Use <a class="reference internal" href="#importlib.abc.PathEntryFinder.find_spec" title="importlib.abc.PathEntryFinder.find_spec"><code class="xref py py-meth docutils literal notranslate"><span class="pre">find_spec()</span></code></a> instead.</p>
</div>
</dd>