link:
library/logging.handlers.html#logging.handlers.QueueHandler

docs:

<dt id="logging.handlers.QueueHandler">
<em class="property">class </em><code class="descclassname">logging.handlers.</code><code class="descname">QueueHandler</code><span class="sig-paren">(</span><em>queue</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.QueueHandler" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns a new instance of the <a class="reference internal" href="#logging.handlers.QueueHandler" title="logging.handlers.QueueHandler"><code class="xref py py-class docutils literal notranslate"><span class="pre">QueueHandler</span></code></a> class. The instance is
initialized with the queue to send messages to. The queue can be any
queue-like object; it’s used as-is by the <a class="reference internal" href="#logging.handlers.QueueHandler.enqueue" title="logging.handlers.QueueHandler.enqueue"><code class="xref py py-meth docutils literal notranslate"><span class="pre">enqueue()</span></code></a> method, which needs
to know how to send messages to it.</p>
<dl class="method">
<dt id="logging.handlers.QueueHandler.emit">
<code class="descname">emit</code><span class="sig-paren">(</span><em>record</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.QueueHandler.emit" title="Permalink to this definition">¶</a></dt>
<dd><p>Enqueues the result of preparing the LogRecord.</p>
</dd></dl>
<dl class="method">
<dt id="logging.handlers.QueueHandler.prepare">
<code class="descname">prepare</code><span class="sig-paren">(</span><em>record</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.QueueHandler.prepare" title="Permalink to this definition">¶</a></dt>
<dd><p>Prepares a record for queuing. The object returned by this
method is enqueued.</p>
<p>The base implementation formats the record to merge the message,
arguments, and exception information, if present.  It also
removes unpickleable items from the record in-place.</p>
<p>You might want to override this method if you want to convert
the record to a dict or JSON string, or send a modified copy
of the record while leaving the original intact.</p>
</dd></dl>
<dl class="method">
<dt id="logging.handlers.QueueHandler.enqueue">
<code class="descname">enqueue</code><span class="sig-paren">(</span><em>record</em><span class="sig-paren">)</span><a class="headerlink" href="#logging.handlers.QueueHandler.enqueue" title="Permalink to this definition">¶</a></dt>
<dd><p>Enqueues the record on the queue using <code class="docutils literal notranslate"><span class="pre">put_nowait()</span></code>; you may
want to override this if you want to use blocking behaviour, or a
timeout, or a customized queue implementation.</p>
</dd></dl>
</dd>