link:
library/sysconfig.html#sysconfig.get_platform

docs:

<dt id="sysconfig.get_platform">
<code class="descclassname">sysconfig.</code><code class="descname">get_platform</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#sysconfig.get_platform" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a string that identifies the current platform.</p>
<p>This is used mainly to distinguish platform-specific build directories and
platform-specific built distributions.  Typically includes the OS name and
version and the architecture (as supplied by ‘os.uname()’), although the
exact information included depends on the OS; e.g., on Linux, the kernel
version isn’t particularly important.</p>
<p>Examples of returned values:</p>
<ul class="simple">
<li>linux-i586</li>
<li>linux-alpha (?)</li>
<li>solaris-2.6-sun4u</li>
</ul>
<p>Windows will return one of:</p>
<ul class="simple">
<li>win-amd64 (64bit Windows on AMD64, aka x86_64, Intel64, and EM64T)</li>
<li>win32 (all others - specifically, sys.platform is returned)</li>
</ul>
<p>Mac OS X can return:</p>
<ul class="simple">
<li>macosx-10.6-ppc</li>
<li>macosx-10.4-ppc64</li>
<li>macosx-10.3-i386</li>
<li>macosx-10.4-fat</li>
</ul>
<p>For other non-POSIX platforms, currently just returns <a class="reference internal" href="sys.html#sys.platform" title="sys.platform"><code class="xref py py-data docutils literal notranslate"><span class="pre">sys.platform</span></code></a>.</p>
</dd>