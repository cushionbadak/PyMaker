link:
reference/import.html#__cached__

docs:

<dt id="__cached__">
<code class="descname">__cached__</code><a class="headerlink" href="#__cached__" title="Permalink to this definition">¶</a></dt>
<dd><p><code class="docutils literal notranslate"><span class="pre">__file__</span></code> is optional. If set, this attribute’s value must be a
string.  The import system may opt to leave <code class="docutils literal notranslate"><span class="pre">__file__</span></code> unset if it
has no semantic meaning (e.g. a module loaded from a database).</p>
<p>If <code class="docutils literal notranslate"><span class="pre">__file__</span></code> is set, it may also be appropriate to set the
<code class="docutils literal notranslate"><span class="pre">__cached__</span></code> attribute which is the path to any compiled version of
the code (e.g. byte-compiled file). The file does not need to exist
to set this attribute; the path can simply point to where the
compiled file would exist (see <span class="target" id="index-13"></span><a class="pep reference external" href="https://www.python.org/dev/peps/pep-3147"><strong>PEP 3147</strong></a>).</p>
<p>It is also appropriate to set <code class="docutils literal notranslate"><span class="pre">__cached__</span></code> when <code class="docutils literal notranslate"><span class="pre">__file__</span></code> is not
set.  However, that scenario is quite atypical.  Ultimately, the
loader is what makes use of <code class="docutils literal notranslate"><span class="pre">__file__</span></code> and/or <code class="docutils literal notranslate"><span class="pre">__cached__</span></code>.  So
if a loader can load from a cached module but otherwise does not load
from a file, that atypical scenario may be appropriate.</p>
</dd>