link:
library/inspect.html#inspect.formatargspec

docs:


inspect.formatargspec(args[, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, annotations[, formatarg, formatvarargs, formatvarkw, formatvalue, formatreturns, formatannotations]])Â¶
Format a pretty argument spec from the values returned by
getfullargspec().
The first seven arguments are (args, varargs, varkw,
defaults, kwonlyargs, kwonlydefaults, annotations).
The other six arguments are functions that are called to turn argument names,
* argument name, ** argument name, default values, return annotation
and individual annotations into strings, respectively.
For example:
>>> from inspect import formatargspec, getfullargspec
>>> def f(a: int, b: float):
...     pass
...
>>> formatargspec(*getfullargspec(f))
'(a: int, b: float)'



Deprecated since version 3.5: Use signature() and
Signature Object, which provide a
better introspecting API for callables.

