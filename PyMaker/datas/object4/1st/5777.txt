link:
library/email.utils.html#email.utils.format_datetime

docs:

<dt id="email.utils.format_datetime">
<code class="descclassname">email.utils.</code><code class="descname">format_datetime</code><span class="sig-paren">(</span><em>dt</em>, <em>usegmt=False</em><span class="sig-paren">)</span><a class="headerlink" href="#email.utils.format_datetime" title="Permalink to this definition">¶</a></dt>
<dd><p>Like <code class="docutils literal notranslate"><span class="pre">formatdate</span></code>, but the input is a <a class="reference internal" href="datetime.html#module-datetime" title="datetime: Basic date and time types."><code class="xref py py-mod docutils literal notranslate"><span class="pre">datetime</span></code></a> instance.  If it is
a naive datetime, it is assumed to be “UTC with no information about the
source timezone”, and the conventional <code class="docutils literal notranslate"><span class="pre">-0000</span></code> is used for the timezone.
If it is an aware <code class="docutils literal notranslate"><span class="pre">datetime</span></code>, then the numeric timezone offset is used.
If it is an aware timezone with offset zero, then <em>usegmt</em> may be set to
<code class="docutils literal notranslate"><span class="pre">True</span></code>, in which case the string <code class="docutils literal notranslate"><span class="pre">GMT</span></code> is used instead of the numeric
timezone offset.  This provides a way to generate standards conformant HTTP
date headers.</p>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.3.</span></p>
</div>
</dd>