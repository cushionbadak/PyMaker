link:
library/unittest.mock.html#unittest.mock.Mock.call_args

docs:


call_args¶
This is either None (if the mock hasn’t been called), or the
arguments that the mock was last called with. This will be in the
form of a tuple: the first member is any ordered arguments the mock
was called with (or an empty tuple) and the second member is any
keyword arguments (or an empty dictionary).
>>> mock = Mock(return_value=None)
>>> print(mock.call_args)
None
>>> mock()
>>> mock.call_args
call()
>>> mock.call_args == ()
True
>>> mock(3, 4)
>>> mock.call_args
call(3, 4)
>>> mock.call_args == ((3, 4),)
True
>>> mock(3, 4, 5, key='fish', next='w00t!')
>>> mock.call_args
call(3, 4, 5, key='fish', next='w00t!')


call_args, along with members of the lists call_args_list,
method_calls and mock_calls are call objects.
These are tuples, so they can be unpacked to get at the individual
arguments and make more complex assertions. See
calls as tuples.
