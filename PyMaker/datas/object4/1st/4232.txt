link:
library/threading.html#threading.Barrier.wait

docs:


wait(timeout=None)¶
Pass the barrier.  When all the threads party to the barrier have called
this function, they are all released simultaneously.  If a timeout is
provided, it is used in preference to any that was supplied to the class
constructor.
The return value is an integer in the range 0 to parties – 1, different
for each thread.  This can be used to select a thread to do some special
housekeeping, e.g.:
i = barrier.wait()
if i == 0:
    # Only one thread needs to print this
    print("passed the barrier")


If an action was provided to the constructor, one of the threads will
have called it prior to being released.  Should this call raise an error,
the barrier is put into the broken state.
If the call times out, the barrier is put into the broken state.
This method may raise a BrokenBarrierError exception if the
barrier is broken or reset while a thread is waiting.
