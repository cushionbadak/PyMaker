link:
library/re.html#re.Pattern.search

docs:

<dt id="re.Pattern.search">
<code class="descclassname">Pattern.</code><code class="descname">search</code><span class="sig-paren">(</span><em>string</em><span class="optional">[</span>, <em>pos</em><span class="optional">[</span>, <em>endpos</em><span class="optional">]</span><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#re.Pattern.search" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Scan through <em>string</em> looking for the first location where this regular
expression produces a match, and return a corresponding <a class="reference internal" href="#match-objects"><span class="std std-ref">match object</span></a>.  Return <code class="docutils literal notranslate"><span class="pre">None</span></code> if no position in the string matches the
pattern; note that this is different from finding a zero-length match at some
point in the string.</p>
<p>The optional second parameter <em>pos</em> gives an index in the string where the
search is to start; it defaults to <code class="docutils literal notranslate"><span class="pre">0</span></code>.  This is not completely equivalent to
slicing the string; the <code class="docutils literal notranslate"><span class="pre">'^'</span></code> pattern character matches at the real beginning
of the string and at positions just after a newline, but not necessarily at the
index where the search is to start.</p>
<p>The optional parameter <em>endpos</em> limits how far the string will be searched; it
will be as if the string is <em>endpos</em> characters long, so only the characters
from <em>pos</em> to <code class="docutils literal notranslate"><span class="pre">endpos</span> <span class="pre">-</span> <span class="pre">1</span></code> will be searched for a match.  If <em>endpos</em> is less
than <em>pos</em>, no match will be found; otherwise, if <em>rx</em> is a compiled regular
expression object, <code class="docutils literal notranslate"><span class="pre">rx.search(string,</span> <span class="pre">0,</span> <span class="pre">50)</span></code> is equivalent to
<code class="docutils literal notranslate"><span class="pre">rx.search(string[:50],</span> <span class="pre">0)</span></code>.</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">pattern</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s2">"d"</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">pattern</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">"dog"</span><span class="p">)</span>     <span class="c1"># Match at index 0</span>
<span class="go">&lt;re.Match object; span=(0, 1), match='d'&gt;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">pattern</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s2">"dog"</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>  <span class="c1"># No match; search doesn't include the "d"</span>
</pre></div>
</div>
</dd>