link:
library/multiprocessing.html#authentication-keys

docs:

Authentication keysÂ¶
When one uses Connection.recv, the
data received is automatically
unpickled. Unfortunately unpickling data from an untrusted source is a security
risk. Therefore Listener and Client() use the hmac module
to provide digest authentication.
An authentication key is a byte string which can be thought of as a
password: once a connection is established both ends will demand proof
that the other knows the authentication key.  (Demonstrating that both
ends are using the same key does not involve sending the key over
the connection.)
If authentication is requested but no authentication key is specified then the
return value of current_process().authkey is used (see
Process).  This value will be automatically inherited by
any Process object that the current process creates.
This means that (by default) all processes of a multi-process program will share
a single authentication key which can be used when setting up connections
between themselves.
Suitable authentication keys can also be generated by using os.urandom().
