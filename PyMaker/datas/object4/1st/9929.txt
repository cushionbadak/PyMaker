link:
library/tokenize.html#tokenize.tokenize

docs:


tokenize.tokenize(readline)Â¶
The tokenize() generator requires one argument, readline, which
must be a callable object which provides the same interface as the
io.IOBase.readline() method of file objects.  Each call to the
function should return one line of input as bytes.
The generator produces 5-tuples with these members: the token type; the
token string; a 2-tuple (srow, scol) of ints specifying the row and
column where the token begins in the source; a 2-tuple (erow, ecol) of
ints specifying the row and column where the token ends in the source; and
the line on which the token was found. The line passed (the last tuple item)
is the logical line; continuation lines are included.  The 5 tuple is
returned as a named tuple with the field names:
type string start end line.
The returned named tuple has an additional property named
exact_type that contains the exact operator type for
OP tokens.  For all other token types exact_type
equals the named tuple type field.

Changed in version 3.1: Added support for named tuples.


Changed in version 3.3: Added support for exact_type.

tokenize() determines the source encoding of the file by looking for a
UTF-8 BOM or encoding cookie, according to PEP 263.
