link:
library/ssl.html#ssl.SSLContext

docs:


class ssl.SSLContext(protocol=PROTOCOL_TLS)¶
Create a new SSL context.  You may pass protocol which must be one
of the PROTOCOL_* constants defined in this module.  The parameter
specifies which version of the SSL protocol to use.  Typically, the
server chooses a particular protocol version, and the client must adapt
to the server’s choice.  Most of the versions are not interoperable
with the other versions.  If not specified, the default is
PROTOCOL_TLS; it provides the most compatibility with other
versions.
Here’s a table showing which versions in a client (down the side) can connect
to which versions in a server (along the top):












client / server
SSLv2
SSLv3
TLS [3]
TLSv1
TLSv1.1
TLSv1.2

SSLv2
yes
no
no [1]
no
no
no

SSLv3
no
yes
no [2]
no
no
no

TLS (SSLv23) [3]
no [1]
no [2]
yes
yes
yes
yes

TLSv1
no
no
yes
yes
no
no

TLSv1.1
no
no
yes
no
yes
no

TLSv1.2
no
no
yes
no
no
yes




Footnotes



[1](1, 2) SSLContext disables SSLv2 with OP_NO_SSLv2 by default.





[2](1, 2) SSLContext disables SSLv3 with OP_NO_SSLv3 by default.





[3](1, 2) TLS 1.3 protocol will be available with PROTOCOL_TLS in
OpenSSL >= 1.1.1. There is no dedicated PROTOCOL constant for just
TLS 1.3.



See also
create_default_context() lets the ssl module choose
security settings for a given purpose.


Changed in version 3.6: The context is created with secure default values. The options
OP_NO_COMPRESSION, OP_CIPHER_SERVER_PREFERENCE,
OP_SINGLE_DH_USE, OP_SINGLE_ECDH_USE,
OP_NO_SSLv2 (except for PROTOCOL_SSLv2),
and OP_NO_SSLv3 (except for PROTOCOL_SSLv3) are
set by default. The initial cipher suite list contains only HIGH
ciphers, no NULL ciphers and no MD5 ciphers (except for
PROTOCOL_SSLv2).

