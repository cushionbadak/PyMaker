link:
library/turtle.html#how-to-configure-screen-and-turtles

docs:

How to configure Screen and Turtles¶
The built-in default configuration mimics the appearance and behaviour of the
old turtle module in order to retain best possible compatibility with it.
If you want to use a different configuration which better reflects the features
of this module or which better fits to your needs, e.g. for use in a classroom,
you can prepare a configuration file turtle.cfg which will be read at import
time and modify the configuration according to its settings.
The built in configuration would correspond to the following turtle.cfg:
width = 0.5
height = 0.75
leftright = None
topbottom = None
canvwidth = 400
canvheight = 300
mode = standard
colormode = 1.0
delay = 10
undobuffersize = 1000
shape = classic
pencolor = black
fillcolor = black
resizemode = noresize
visible = True
language = english
exampleturtle = turtle
examplescreen = screen
title = Python Turtle Graphics
using_IDLE = False


Short explanation of selected entries:

The first four lines correspond to the arguments of the Screen.setup()
method.
Line 5 and 6 correspond to the arguments of the method
Screen.screensize().
shape can be any of the built-in shapes, e.g: arrow, turtle, etc.  For more
info try help(shape).
If you want to use no fillcolor (i.e. make the turtle transparent), you have
to write fillcolor = "" (but all nonempty strings must not have quotes in
the cfg-file).
If you want to reflect the turtle its state, you have to use resizemode =
auto.
If you set e.g. language = italian the docstringdict
turtle_docstringdict_italian.py will be loaded at import time (if
present on the import path, e.g. in the same directory as turtle.
The entries exampleturtle and examplescreen define the names of these
objects as they occur in the docstrings.  The transformation of
method-docstrings to function-docstrings will delete these names from the
docstrings.
using_IDLE: Set this to True if you regularly work with IDLE and its -n
switch (“no subprocess”).  This will prevent exitonclick() to enter the
mainloop.

There can be a turtle.cfg file in the directory where turtle is
stored and an additional one in the current working directory.  The latter will
override the settings of the first one.
The Lib/turtledemo directory contains a turtle.cfg file.  You can
study it as an example and see its effects when running the demos (preferably
not from within the demo-viewer).
