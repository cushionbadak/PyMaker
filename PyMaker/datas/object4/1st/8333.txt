link:
library/doctest.html#simple-usage-checking-examples-in-docstrings

docs:

Simple Usage: Checking Examples in Docstrings¶
The simplest way to start using doctest (but not necessarily the way you’ll
continue to do it) is to end each module M with:
if __name__ == "__main__":
    import doctest
    doctest.testmod()


doctest then examines docstrings in module M.
Running the module as a script causes the examples in the docstrings to get
executed and verified:
python M.py


This won’t display anything unless an example fails, in which case the failing
example(s) and the cause(s) of the failure(s) are printed to stdout, and the
final line of output is ***Test Failed*** N failures., where N is the
number of examples that failed.
Run it with the -v switch instead:
python M.py -v


and a detailed report of all examples tried is printed to standard output, along
with assorted summaries at the end.
You can force verbose mode by passing verbose=True to testmod(), or
prohibit it by passing verbose=False.  In either of those cases,
sys.argv is not examined by testmod() (so passing -v or not
has no effect).
There is also a command line shortcut for running testmod().  You can
instruct the Python interpreter to run the doctest module directly from the
standard library and pass the module name(s) on the command line:
python -m doctest -v example.py


This will import example.py as a standalone module and run
testmod() on it.  Note that this may not work correctly if the file is
part of a package and imports other submodules from that package.
For more information on testmod(), see section Basic API.
