link:
library/functools.html#functools.cmp_to_key

docs:


functools.cmp_to_key(func)Â¶
Transform an old-style comparison function to a key function.  Used
with tools that accept key functions (such as sorted(), min(),
max(), heapq.nlargest(), heapq.nsmallest(),
itertools.groupby()).  This function is primarily used as a transition
tool for programs being converted from Python 2 which supported the use of
comparison functions.
A comparison function is any callable that accept two arguments, compares them,
and returns a negative number for less-than, zero for equality, or a positive
number for greater-than.  A key function is a callable that accepts one
argument and returns another value to be used as the sort key.
Example:
sorted(iterable, key=cmp_to_key(locale.strcoll))  # locale-aware sort order


For sorting examples and a brief sorting tutorial, see Sorting HOW TO.

New in version 3.2.

