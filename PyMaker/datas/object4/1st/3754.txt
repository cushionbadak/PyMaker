link:
library/curses.html#curses.wrapper

docs:

<dt id="curses.wrapper">
<code class="descclassname">curses.</code><code class="descname">wrapper</code><span class="sig-paren">(</span><em>func</em>, <em>...</em><span class="sig-paren">)</span><a class="headerlink" href="#curses.wrapper" title="Permalink to this definition">¶</a></dt>
<dd><p>Initialize curses and call another callable object, <em>func</em>, which should be the
rest of your curses-using application.  If the application raises an exception,
this function will restore the terminal to a sane state before re-raising the
exception and generating a traceback.  The callable object <em>func</em> is then passed
the main window ‘stdscr’ as its first argument, followed by any other arguments
passed to <code class="xref py py-func docutils literal notranslate"><span class="pre">wrapper()</span></code>.  Before calling <em>func</em>, <code class="xref py py-func docutils literal notranslate"><span class="pre">wrapper()</span></code> turns on
cbreak mode, turns off echo, enables the terminal keypad, and initializes colors
if the terminal has color support.  On exit (whether normally or by exception)
it restores cooked mode, turns on echo, and disables the terminal keypad.</p>
</dd>