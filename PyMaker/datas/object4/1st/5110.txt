link:
library/socket.html#socket.socket.sendto

docs:

<dt id="socket.socket.sendto">
<code class="descclassname">socket.</code><code class="descname">sendto</code><span class="sig-paren">(</span><em>bytes</em>, <em>address</em><span class="sig-paren">)</span><a class="headerlink" href="#socket.socket.sendto" title="Permalink to this definition">¶</a></dt>
<dt>
<code class="descclassname">socket.</code><code class="descname">sendto</code><span class="sig-paren">(</span><em>bytes</em>, <em>flags</em>, <em>address</em><span class="sig-paren">)</span></dt>
<dd><p>Send data to the socket.  The socket should not be connected to a remote socket,
since the destination socket is specified by <em>address</em>.  The optional <em>flags</em>
argument has the same meaning as for <a class="reference internal" href="#socket.socket.recv" title="socket.socket.recv"><code class="xref py py-meth docutils literal notranslate"><span class="pre">recv()</span></code></a> above.  Return the number of
bytes sent. (The format of <em>address</em> depends on the address family — see
above.)</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>If the system call is interrupted and the signal handler does not raise
an exception, the method now retries the system call instead of raising
an <a class="reference internal" href="exceptions.html#InterruptedError" title="InterruptedError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">InterruptedError</span></code></a> exception (see <span class="target" id="index-12"></span><a class="pep reference external" href="https://www.python.org/dev/peps/pep-0475"><strong>PEP 475</strong></a> for the rationale).</p>
</div>
</dd>