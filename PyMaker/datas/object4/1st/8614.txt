link:
library/unittest.mock.html#sentinel

docs:

sentinel¶


unittest.mock.sentinel¶
The sentinel object provides a convenient way of providing unique
objects for your tests.
Attributes are created on demand when you access them by name. Accessing
the same attribute will always return the same object. The objects
returned have a sensible repr so that test failure messages are readable.

Changed in version 3.7: The sentinel attributes now preserve their identity when they are
copied or pickled.


Sometimes when testing you need to test that a specific object is passed as an
argument to another method, or returned. It can be common to create named
sentinel objects to test this. sentinel provides a convenient way of
creating and testing the identity of objects like this.
In this example we monkey patch method to return sentinel.some_object:
>>> real = ProductionClass()
>>> real.method = Mock(name="method")
>>> real.method.return_value = sentinel.some_object
>>> result = real.method()
>>> assert result is sentinel.some_object
>>> sentinel.some_object
sentinel.some_object


