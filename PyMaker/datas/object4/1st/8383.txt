link:
library/doctest.html#doctest.DocTestFinder

docs:

<dt id="doctest.DocTestFinder">
<em class="property">class </em><code class="descclassname">doctest.</code><code class="descname">DocTestFinder</code><span class="sig-paren">(</span><em>verbose=False</em>, <em>parser=DocTestParser()</em>, <em>recurse=True</em>, <em>exclude_empty=True</em><span class="sig-paren">)</span><a class="headerlink" href="#doctest.DocTestFinder" title="Permalink to this definition">¶</a></dt>
<dd><p>A processing class used to extract the <a class="reference internal" href="#doctest.DocTest" title="doctest.DocTest"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTest</span></code></a>s that are relevant to
a given object, from its docstring and the docstrings of its contained objects.
<a class="reference internal" href="#doctest.DocTest" title="doctest.DocTest"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTest</span></code></a>s can be extracted from modules, classes, functions,
methods, staticmethods, classmethods, and properties.</p>
<p>The optional argument <em>verbose</em> can be used to display the objects searched by
the finder.  It defaults to <code class="docutils literal notranslate"><span class="pre">False</span></code> (no output).</p>
<p>The optional argument <em>parser</em> specifies the <a class="reference internal" href="#doctest.DocTestParser" title="doctest.DocTestParser"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTestParser</span></code></a> object (or a
drop-in replacement) that is used to extract doctests from docstrings.</p>
<p>If the optional argument <em>recurse</em> is false, then <a class="reference internal" href="#doctest.DocTestFinder.find" title="doctest.DocTestFinder.find"><code class="xref py py-meth docutils literal notranslate"><span class="pre">DocTestFinder.find()</span></code></a>
will only examine the given object, and not any contained objects.</p>
<p>If the optional argument <em>exclude_empty</em> is false, then
<a class="reference internal" href="#doctest.DocTestFinder.find" title="doctest.DocTestFinder.find"><code class="xref py py-meth docutils literal notranslate"><span class="pre">DocTestFinder.find()</span></code></a> will include tests for objects with empty docstrings.</p>
<p><a class="reference internal" href="#doctest.DocTestFinder" title="doctest.DocTestFinder"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTestFinder</span></code></a> defines the following method:</p>
<dl class="method">
<dt id="doctest.DocTestFinder.find">
<code class="descname">find</code><span class="sig-paren">(</span><em>obj[, name][, module][, globs][, extraglobs]</em><span class="sig-paren">)</span><a class="headerlink" href="#doctest.DocTestFinder.find" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a list of the <a class="reference internal" href="#doctest.DocTest" title="doctest.DocTest"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTest</span></code></a>s that are defined by <em>obj</em>’s
docstring, or by any of its contained objects’ docstrings.</p>
<p>The optional argument <em>name</em> specifies the object’s name; this name will be
used to construct names for the returned <a class="reference internal" href="#doctest.DocTest" title="doctest.DocTest"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTest</span></code></a>s.  If <em>name</em> is
not specified, then <code class="docutils literal notranslate"><span class="pre">obj.__name__</span></code> is used.</p>
<p>The optional parameter <em>module</em> is the module that contains the given object.
If the module is not specified or is <code class="docutils literal notranslate"><span class="pre">None</span></code>, then the test finder will attempt
to automatically determine the correct module.  The object’s module is used:</p>
<ul class="simple">
<li>As a default namespace, if <em>globs</em> is not specified.</li>
<li>To prevent the DocTestFinder from extracting DocTests from objects that are
imported from other modules.  (Contained objects with modules other than
<em>module</em> are ignored.)</li>
<li>To find the name of the file containing the object.</li>
<li>To help find the line number of the object within its file.</li>
</ul>
<p>If <em>module</em> is <code class="docutils literal notranslate"><span class="pre">False</span></code>, no attempt to find the module will be made.  This is
obscure, of use mostly in testing doctest itself: if <em>module</em> is <code class="docutils literal notranslate"><span class="pre">False</span></code>, or
is <code class="docutils literal notranslate"><span class="pre">None</span></code> but cannot be found automatically, then all objects are considered
to belong to the (non-existent) module, so all contained objects will
(recursively) be searched for doctests.</p>
<p>The globals for each <a class="reference internal" href="#doctest.DocTest" title="doctest.DocTest"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTest</span></code></a> is formed by combining <em>globs</em> and
<em>extraglobs</em> (bindings in <em>extraglobs</em> override bindings in <em>globs</em>).  A new
shallow copy of the globals dictionary is created for each <a class="reference internal" href="#doctest.DocTest" title="doctest.DocTest"><code class="xref py py-class docutils literal notranslate"><span class="pre">DocTest</span></code></a>.
If <em>globs</em> is not specified, then it defaults to the module’s <em>__dict__</em>, if
specified, or <code class="docutils literal notranslate"><span class="pre">{}</span></code> otherwise.  If <em>extraglobs</em> is not specified, then it
defaults to <code class="docutils literal notranslate"><span class="pre">{}</span></code>.</p>
</dd></dl>
</dd>