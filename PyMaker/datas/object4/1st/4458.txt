link:
library/subprocess.html#subprocess.CalledProcessError

docs:

<dt id="subprocess.CalledProcessError">
<em class="property">exception </em><code class="descclassname">subprocess.</code><code class="descname">CalledProcessError</code><a class="headerlink" href="#subprocess.CalledProcessError" title="Permalink to this definition">¶</a></dt>
<dd><p>Subclass of <a class="reference internal" href="#subprocess.SubprocessError" title="subprocess.SubprocessError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">SubprocessError</span></code></a>, raised when a process run by
<a class="reference internal" href="#subprocess.check_call" title="subprocess.check_call"><code class="xref py py-func docutils literal notranslate"><span class="pre">check_call()</span></code></a> or <a class="reference internal" href="#subprocess.check_output" title="subprocess.check_output"><code class="xref py py-func docutils literal notranslate"><span class="pre">check_output()</span></code></a> returns a non-zero exit status.</p>
<dl class="attribute">
<dt id="subprocess.CalledProcessError.returncode">
<code class="descname">returncode</code><a class="headerlink" href="#subprocess.CalledProcessError.returncode" title="Permalink to this definition">¶</a></dt>
<dd><p>Exit status of the child process.  If the process exited due to a
signal, this will be the negative signal number.</p>
</dd></dl>
<dl class="attribute">
<dt id="subprocess.CalledProcessError.cmd">
<code class="descname">cmd</code><a class="headerlink" href="#subprocess.CalledProcessError.cmd" title="Permalink to this definition">¶</a></dt>
<dd><p>Command that was used to spawn the child process.</p>
</dd></dl>
<dl class="attribute">
<dt id="subprocess.CalledProcessError.output">
<code class="descname">output</code><a class="headerlink" href="#subprocess.CalledProcessError.output" title="Permalink to this definition">¶</a></dt>
<dd><p>Output of the child process if it was captured by <a class="reference internal" href="#subprocess.run" title="subprocess.run"><code class="xref py py-func docutils literal notranslate"><span class="pre">run()</span></code></a> or
<a class="reference internal" href="#subprocess.check_output" title="subprocess.check_output"><code class="xref py py-func docutils literal notranslate"><span class="pre">check_output()</span></code></a>.  Otherwise, <code class="docutils literal notranslate"><span class="pre">None</span></code>.</p>
</dd></dl>
<dl class="attribute">
<dt id="subprocess.CalledProcessError.stdout">
<code class="descname">stdout</code><a class="headerlink" href="#subprocess.CalledProcessError.stdout" title="Permalink to this definition">¶</a></dt>
<dd><p>Alias for output, for symmetry with <a class="reference internal" href="#subprocess.CalledProcessError.stderr" title="subprocess.CalledProcessError.stderr"><code class="xref py py-attr docutils literal notranslate"><span class="pre">stderr</span></code></a>.</p>
</dd></dl>
<dl class="attribute">
<dt id="subprocess.CalledProcessError.stderr">
<code class="descname">stderr</code><a class="headerlink" href="#subprocess.CalledProcessError.stderr" title="Permalink to this definition">¶</a></dt>
<dd><p>Stderr output of the child process if it was captured by <a class="reference internal" href="#subprocess.run" title="subprocess.run"><code class="xref py py-func docutils literal notranslate"><span class="pre">run()</span></code></a>.
Otherwise, <code class="docutils literal notranslate"><span class="pre">None</span></code>.</p>
</dd></dl>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span><em>stdout</em> and <em>stderr</em> attributes added</p>
</div>
</dd>