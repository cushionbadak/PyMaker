link:
library/email.compat32-message.html#email.message.Message.get_params

docs:

<dt id="email.message.Message.get_params">
<code class="descname">get_params</code><span class="sig-paren">(</span><em>failobj=None</em>, <em>header='content-type'</em>, <em>unquote=True</em><span class="sig-paren">)</span><a class="headerlink" href="#email.message.Message.get_params" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the message’s <em class="mailheader">Content-Type</em> parameters, as a list.
The elements of the returned list are 2-tuples of key/value pairs, as
split on the <code class="docutils literal notranslate"><span class="pre">'='</span></code> sign.  The left hand side of the <code class="docutils literal notranslate"><span class="pre">'='</span></code> is the key,
while the right hand side is the value.  If there is no <code class="docutils literal notranslate"><span class="pre">'='</span></code> sign in
the parameter the value is the empty string, otherwise the value is as
described in <a class="reference internal" href="#email.message.Message.get_param" title="email.message.Message.get_param"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_param()</span></code></a> and is unquoted if optional <em>unquote</em> is
<code class="docutils literal notranslate"><span class="pre">True</span></code> (the default).</p>
<p>Optional <em>failobj</em> is the object to return if there is no
<em class="mailheader">Content-Type</em> header.  Optional <em>header</em> is the header to
search instead of <em class="mailheader">Content-Type</em>.</p>
<p>This is a legacy method.  On the
<code class="xref py py-class docutils literal notranslate"><span class="pre">EmailMessage</span></code> class its functionality is
replaced by the <em>params</em> property of the individual header objects
returned by the header access methods.</p>
</dd>