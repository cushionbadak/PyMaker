link:
library/lzma.html#lzma.open

docs:

<dt id="lzma.open">
<code class="descclassname">lzma.</code><code class="descname">open</code><span class="sig-paren">(</span><em>filename</em>, <em>mode="rb"</em>, <em>*</em>, <em>format=None</em>, <em>check=-1</em>, <em>preset=None</em>, <em>filters=None</em>, <em>encoding=None</em>, <em>errors=None</em>, <em>newline=None</em><span class="sig-paren">)</span><a class="headerlink" href="#lzma.open" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Open an LZMA-compressed file in binary or text mode, returning a <a class="reference internal" href="../glossary.html#term-file-object"><span class="xref std std-term">file
object</span></a>.</p>
<p>The <em>filename</em> argument can be either an actual file name (given as a
<a class="reference internal" href="stdtypes.html#str" title="str"><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></a>, <a class="reference internal" href="stdtypes.html#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> or <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like</span></a> object), in
which case the named file is opened, or it can be an existing file object
to read from or write to.</p>
<p>The <em>mode</em> argument can be any of <code class="docutils literal notranslate"><span class="pre">"r"</span></code>, <code class="docutils literal notranslate"><span class="pre">"rb"</span></code>, <code class="docutils literal notranslate"><span class="pre">"w"</span></code>, <code class="docutils literal notranslate"><span class="pre">"wb"</span></code>,
<code class="docutils literal notranslate"><span class="pre">"x"</span></code>, <code class="docutils literal notranslate"><span class="pre">"xb"</span></code>, <code class="docutils literal notranslate"><span class="pre">"a"</span></code> or <code class="docutils literal notranslate"><span class="pre">"ab"</span></code> for binary mode, or <code class="docutils literal notranslate"><span class="pre">"rt"</span></code>,
<code class="docutils literal notranslate"><span class="pre">"wt"</span></code>, <code class="docutils literal notranslate"><span class="pre">"xt"</span></code>, or <code class="docutils literal notranslate"><span class="pre">"at"</span></code> for text mode. The default is <code class="docutils literal notranslate"><span class="pre">"rb"</span></code>.</p>
<p>When opening a file for reading, the <em>format</em> and <em>filters</em> arguments have
the same meanings as for <a class="reference internal" href="#lzma.LZMADecompressor" title="lzma.LZMADecompressor"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMADecompressor</span></code></a>. In this case, the <em>check</em>
and <em>preset</em> arguments should not be used.</p>
<p>When opening a file for writing, the <em>format</em>, <em>check</em>, <em>preset</em> and
<em>filters</em> arguments have the same meanings as for <a class="reference internal" href="#lzma.LZMACompressor" title="lzma.LZMACompressor"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMACompressor</span></code></a>.</p>
<p>For binary mode, this function is equivalent to the <a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a>
constructor: <code class="docutils literal notranslate"><span class="pre">LZMAFile(filename,</span> <span class="pre">mode,</span> <span class="pre">...)</span></code>. In this case, the <em>encoding</em>,
<em>errors</em> and <em>newline</em> arguments must not be provided.</p>
<p>For text mode, a <a class="reference internal" href="#lzma.LZMAFile" title="lzma.LZMAFile"><code class="xref py py-class docutils literal notranslate"><span class="pre">LZMAFile</span></code></a> object is created, and wrapped in an
<a class="reference internal" href="io.html#io.TextIOWrapper" title="io.TextIOWrapper"><code class="xref py py-class docutils literal notranslate"><span class="pre">io.TextIOWrapper</span></code></a> instance with the specified encoding, error
handling behavior, and line ending(s).</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>Added support for the <code class="docutils literal notranslate"><span class="pre">"x"</span></code>, <code class="docutils literal notranslate"><span class="pre">"xb"</span></code> and <code class="docutils literal notranslate"><span class="pre">"xt"</span></code> modes.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>Accepts a <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like object</span></a>.</p>
</div>
</dd>