link:
library/enum.html#creating-an-enum

docs:

Creating an Enum¶
Enumerations are created using the class syntax, which makes them
easy to read and write.  An alternative creation method is described in
Functional API.  To define an enumeration, subclass Enum as
follows:
>>> from enum import Enum
>>> class Color(Enum):
...     RED = 1
...     GREEN = 2
...     BLUE = 3
...



Note
Enum member values
Member values can be anything: int, str, etc..  If
the exact value is unimportant you may use auto instances and an
appropriate value will be chosen for you.  Care must be taken if you mix
auto with other values.


Note
Nomenclature

The class Color is an enumeration (or enum)
The attributes Color.RED, Color.GREEN, etc., are
enumeration members (or enum members) and are functionally constants.
The enum members have names and values (the name of
Color.RED is RED, the value of Color.BLUE is
3, etc.)



Note
Even though we use the class syntax to create Enums, Enums
are not normal Python classes.  See How are Enums different? for
more details.

Enumeration members have human readable string representations:
>>> print(Color.RED)
Color.RED


…while their repr has more information:
>>> print(repr(Color.RED))
<Color.RED: 1>


The type of an enumeration member is the enumeration it belongs to:
>>> type(Color.RED)
<enum 'Color'>
>>> isinstance(Color.GREEN, Color)
True
>>>


Enum members also have a property that contains just their item name:
>>> print(Color.RED.name)
RED


Enumerations support iteration, in definition order:
>>> class Shake(Enum):
...     VANILLA = 7
...     CHOCOLATE = 4
...     COOKIES = 9
...     MINT = 3
...
>>> for shake in Shake:
...     print(shake)
...
Shake.VANILLA
Shake.CHOCOLATE
Shake.COOKIES
Shake.MINT


Enumeration members are hashable, so they can be used in dictionaries and sets:
>>> apples = {}
>>> apples[Color.RED] = 'red delicious'
>>> apples[Color.GREEN] = 'granny smith'
>>> apples == {Color.RED: 'red delicious', Color.GREEN: 'granny smith'}
True


