link:
library/codecs.html#codecs.EncodedFile

docs:

<dt id="codecs.EncodedFile">
<code class="descclassname">codecs.</code><code class="descname">EncodedFile</code><span class="sig-paren">(</span><em>file</em>, <em>data_encoding</em>, <em>file_encoding=None</em>, <em>errors='strict'</em><span class="sig-paren">)</span><a class="headerlink" href="#codecs.EncodedFile" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return a <a class="reference internal" href="#codecs.StreamRecoder" title="codecs.StreamRecoder"><code class="xref py py-class docutils literal notranslate"><span class="pre">StreamRecoder</span></code></a> instance, a wrapped version of <em>file</em>
which provides transparent transcoding. The original file is closed
when the wrapped version is closed.</p>
<p>Data written to the wrapped file is decoded according to the given
<em>data_encoding</em> and then written to the original file as bytes using
<em>file_encoding</em>. Bytes read from the original file are decoded
according to <em>file_encoding</em>, and the result is encoded
using <em>data_encoding</em>.</p>
<p>If <em>file_encoding</em> is not given, it defaults to <em>data_encoding</em>.</p>
<p><em>errors</em> may be given to define the error handling. It defaults to
<code class="docutils literal notranslate"><span class="pre">'strict'</span></code>, which causes <a class="reference internal" href="exceptions.html#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> to be raised in case an encoding
error occurs.</p>
</dd>