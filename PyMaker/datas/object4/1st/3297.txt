link:
library/io.html#io.RawIOBase

docs:

<dt id="io.RawIOBase">
<em class="property">class </em><code class="descclassname">io.</code><code class="descname">RawIOBase</code><a class="headerlink" href="#io.RawIOBase" title="Permalink to this definition">¶</a></dt>
<dd><p>Base class for raw binary I/O.  It inherits <a class="reference internal" href="#io.IOBase" title="io.IOBase"><code class="xref py py-class docutils literal notranslate"><span class="pre">IOBase</span></code></a>.  There is no
public constructor.</p>
<p>Raw binary I/O typically provides low-level access to an underlying OS
device or API, and does not try to encapsulate it in high-level primitives
(this is left to Buffered I/O and Text I/O, described later in this page).</p>
<p>In addition to the attributes and methods from <a class="reference internal" href="#io.IOBase" title="io.IOBase"><code class="xref py py-class docutils literal notranslate"><span class="pre">IOBase</span></code></a>,
<a class="reference internal" href="#io.RawIOBase" title="io.RawIOBase"><code class="xref py py-class docutils literal notranslate"><span class="pre">RawIOBase</span></code></a> provides the following methods:</p>
<dl class="method">
<dt id="io.RawIOBase.read">
<code class="descname">read</code><span class="sig-paren">(</span><em>size=-1</em><span class="sig-paren">)</span><a class="headerlink" href="#io.RawIOBase.read" title="Permalink to this definition">¶</a></dt>
<dd><p>Read up to <em>size</em> bytes from the object and return them.  As a convenience,
if <em>size</em> is unspecified or -1, all bytes until EOF are returned.
Otherwise, only one system call is ever made.  Fewer than <em>size</em> bytes may
be returned if the operating system call returns fewer than <em>size</em> bytes.</p>
<p>If 0 bytes are returned, and <em>size</em> was not 0, this indicates end of file.
If the object is in non-blocking mode and no bytes are available,
<code class="docutils literal notranslate"><span class="pre">None</span></code> is returned.</p>
<p>The default implementation defers to <a class="reference internal" href="#io.RawIOBase.readall" title="io.RawIOBase.readall"><code class="xref py py-meth docutils literal notranslate"><span class="pre">readall()</span></code></a> and
<a class="reference internal" href="#io.RawIOBase.readinto" title="io.RawIOBase.readinto"><code class="xref py py-meth docutils literal notranslate"><span class="pre">readinto()</span></code></a>.</p>
</dd></dl>
<dl class="method">
<dt id="io.RawIOBase.readall">
<code class="descname">readall</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#io.RawIOBase.readall" title="Permalink to this definition">¶</a></dt>
<dd><p>Read and return all the bytes from the stream until EOF, using multiple
calls to the stream if necessary.</p>
</dd></dl>
<dl class="method">
<dt id="io.RawIOBase.readinto">
<code class="descname">readinto</code><span class="sig-paren">(</span><em>b</em><span class="sig-paren">)</span><a class="headerlink" href="#io.RawIOBase.readinto" title="Permalink to this definition">¶</a></dt>
<dd><p>Read bytes into a pre-allocated, writable
<a class="reference internal" href="../glossary.html#term-bytes-like-object"><span class="xref std std-term">bytes-like object</span></a> <em>b</em>, and return the
number of bytes read.  For example, <em>b</em> might be a <a class="reference internal" href="stdtypes.html#bytearray" title="bytearray"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytearray</span></code></a>.
If the object is in non-blocking mode and no bytes
are available, <code class="docutils literal notranslate"><span class="pre">None</span></code> is returned.</p>
</dd></dl>
<dl class="method">
<dt id="io.RawIOBase.write">
<code class="descname">write</code><span class="sig-paren">(</span><em>b</em><span class="sig-paren">)</span><a class="headerlink" href="#io.RawIOBase.write" title="Permalink to this definition">¶</a></dt>
<dd><p>Write the given <a class="reference internal" href="../glossary.html#term-bytes-like-object"><span class="xref std std-term">bytes-like object</span></a>, <em>b</em>, to the
underlying raw stream, and return the number of
bytes written.  This can be less than the length of <em>b</em> in
bytes, depending on specifics of the underlying raw
stream, and especially if it is in non-blocking mode.  <code class="docutils literal notranslate"><span class="pre">None</span></code> is
returned if the raw stream is set not to block and no single byte could
be readily written to it.  The caller may release or mutate <em>b</em> after
this method returns, so the implementation should only access <em>b</em>
during the method call.</p>
</dd></dl>
</dd>