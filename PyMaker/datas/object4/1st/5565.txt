link:
library/email.generator.html#email.generator.DecodedGenerator

docs:


class email.generator.DecodedGenerator(outfp, mangle_from_=None, maxheaderlen=None, fmt=None, *, policy=None)¶
Act like Generator, except that for any subpart of the message
passed to Generator.flatten(), if the subpart is of main type
text, print the decoded payload of the subpart, and if the main
type is not text, instead of printing it fill in the string
fmt using information from the part and print the resulting
filled-in string.
To fill in fmt, execute fmt % part_info, where part_info
is a dictionary composed of the following keys and values:

type – Full MIME type of the non-text part
maintype – Main MIME type of the non-text part
subtype – Sub-MIME type of the non-text part
filename – Filename of the non-text part
description – Description associated with the non-text part
encoding – Content transfer encoding of the non-text part

If fmt is None, use the following default fmt:

“[Non-text (%(type)s) part of message omitted, filename %(filename)s]”
Optional _mangle_from_ and maxheaderlen are as with the
Generator base class.
