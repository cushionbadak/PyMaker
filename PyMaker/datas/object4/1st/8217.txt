link:
library/idle.html#menus

docs:

Menus¶
IDLE has two main window types, the Shell window and the Editor window.  It is
possible to have multiple editor windows simultaneously.  On Windows and
Linux, each has its own top menu.  Each menu documented below indicates
which window type it is associated with.
Output windows, such as used for Edit => Find in Files, are a subtype of editor
window.  They currently have the same top menu but a different
default title and context menu.
On macOS, there is one application menu.  It dynamically changes according
to the window currently selected.  It has an IDLE menu, and some entries
described below are moved around to conform to Apple guidlines.

File menu (Shell and Editor)¶

New File
Create a new file editing window.
Open…
Open an existing file with an Open dialog.
Recent Files
Open a list of recent files.  Click one to open it.
Open Module…
Open an existing module (searches sys.path).


Class Browser
Show functions, classes, and methods in the current Editor file in a
tree structure.  In the shell, open a module first.
Path Browser
Show sys.path directories, modules, functions, classes and methods in a
tree structure.
Save
Save the current window to the associated file, if there is one.  Windows
that have been changed since being opened or last saved have a * before
and after the window title.  If there is no associated file,
do Save As instead.
Save As…
Save the current window with a Save As dialog.  The file saved becomes the
new associated file for the window.
Save Copy As…
Save the current window to different file without changing the associated
file.
Print Window
Print the current window to the default printer.
Close
Close the current window (ask to save if unsaved).
Exit
Close all windows and quit IDLE (ask to save unsaved windows).



Edit menu (Shell and Editor)¶

Undo
Undo the last change to the current window.  A maximum of 1000 changes may
be undone.
Redo
Redo the last undone change to the current window.
Cut
Copy selection into the system-wide clipboard; then delete the selection.
Copy
Copy selection into the system-wide clipboard.
Paste
Insert contents of the system-wide clipboard into the current window.

The clipboard functions are also available in context menus.

Select All
Select the entire contents of the current window.
Find…
Open a search dialog with many options
Find Again
Repeat the last search, if there is one.
Find Selection
Search for the currently selected string, if there is one.
Find in Files…
Open a file search dialog.  Put results in a new output window.
Replace…
Open a search-and-replace dialog.
Go to Line
Move cursor to the line number requested and make that line visible.
Show Completions
Open a scrollable list allowing selection of keywords and attributes. See
Completions in the Editing and navigation section below.
Expand Word
Expand a prefix you have typed to match a full word in the same window;
repeat to get a different expansion.
Show call tip
After an unclosed parenthesis for a function, open a small window with
function parameter hints.  See Calltips in the
Editing and navigation section below.
Show surrounding parens
Highlight the surrounding parenthesis.



Format menu (Editor window only)¶

Indent Region
Shift selected lines right by the indent width (default 4 spaces).
Dedent Region
Shift selected lines left by the indent width (default 4 spaces).
Comment Out Region
Insert ## in front of selected lines.
Uncomment Region
Remove leading # or ## from selected lines.
Tabify Region
Turn leading stretches of spaces into tabs. (Note: We recommend using
4 space blocks to indent Python code.)
Untabify Region
Turn all tabs into the correct number of spaces.
Toggle Tabs
Open a dialog to switch between indenting with spaces and tabs.
New Indent Width
Open a dialog to change indent width. The accepted default by the Python
community is 4 spaces.
Format Paragraph
Reformat the current blank-line-delimited paragraph in comment block or
multiline string or selected line in a string.  All lines in the
paragraph will be formatted to less than N columns, where N defaults to 72.
Strip trailing whitespace
Remove trailing space and other whitespace characters after the last
non-whitespace character of a line by applying str.rstrip to each line,
including lines within multiline strings.



Run menu (Editor window only)¶

Python Shell
Open or wake up the Python Shell window.
Check Module
Check the syntax of the module currently open in the Editor window. If the
module has not been saved IDLE will either prompt the user to save or
autosave, as selected in the General tab of the Idle Settings dialog.  If
there is a syntax error, the approximate location is indicated in the
Editor window.
Run Module
Do Check Module (above).  If no error, restart the shell to clean the
environment, then execute the module.  Output is displayed in the Shell
window.  Note that output requires use of print or write.
When execution is complete, the Shell retains focus and displays a prompt.
At this point, one may interactively explore the result of execution.
This is similar to executing a file with python -i file at a command
line.



Shell menu (Shell window only)¶

View Last Restart
Scroll the shell window to the last Shell restart.
Restart Shell
Restart the shell to clean the environment.
Previous History
Cycle through earlier commands in history which match the current entry.
Next History
Cycle through later commands in history which match the current entry.
Interrupt Execution
Stop a running program.



Debug menu (Shell window only)¶

Go to File/Line
Look on the current line. with the cursor, and the line above for a filename
and line number.  If found, open the file if not already open, and show the
line.  Use this to view source lines referenced in an exception traceback
and lines found by Find in Files. Also available in the context menu of
the Shell window and Output windows.


Debugger (toggle)
When activated, code entered in the Shell or run from an Editor will run
under the debugger.  In the Editor, breakpoints can be set with the context
menu.  This feature is still incomplete and somewhat experimental.
Stack Viewer
Show the stack traceback of the last exception in a tree widget, with
access to locals and globals.
Auto-open Stack Viewer
Toggle automatically opening the stack viewer on an unhandled exception.



Options menu (Shell and Editor)¶

Configure IDLE
Open a configuration dialog and change preferences for the following:
fonts, indentation, keybindings, text color themes, startup windows and
size, additional help sources, and extensions.  On macOS,  open the
configuration dialog by selecting Preferences in the application
menu. For more, see
Setting preferences under Help and preferences.
Zoom/Restore Height
Toggles the window between normal size and maximum height. The initial size
defaults to 40 lines by 80 chars unless changed on the General tab of the
Configure IDLE dialog.
Show/Hide Code Context (Editor Window only)
Open a pane at the top of the edit window which shows the block context
of the code which has scrolled above the top of the window.  See
Code Context in the Editing and Navigation section below.



Window menu (Shell and Editor)¶
Lists the names of all open windows; select one to bring it to the foreground
(deiconifying it if necessary).


Help menu (Shell and Editor)¶

About IDLE
Display version, copyright, license, credits, and more.
IDLE Help
Display this IDLE document, detailing the menu options, basic editing and
navigation, and other tips.
Python Docs
Access local Python documentation, if installed, or start a web browser
and open docs.python.org showing the latest Python documentation.
Turtle Demo
Run the turtledemo module with example Python code and turtle drawings.

Additional help sources may be added here with the Configure IDLE dialog under
the General tab. See the Help sources subsection below
for more on Help menu choices.


Context Menus¶
Open a context menu by right-clicking in a window (Control-click on macOS).
Context menus have the standard clipboard functions also on the Edit menu.

Cut
Copy selection into the system-wide clipboard; then delete the selection.
Copy
Copy selection into the system-wide clipboard.
Paste
Insert contents of the system-wide clipboard into the current window.

Editor windows also have breakpoint functions.  Lines with a breakpoint set are
specially marked.  Breakpoints only have an effect when running under the
debugger.  Breakpoints for a file are saved in the user’s .idlerc directory.

Set Breakpoint
Set a breakpoint on the current line.
Clear Breakpoint
Clear the breakpoint on that line.

Shell and Output windows also have the following.

Go to file/line
Same as in Debug menu.

The Shell window also has an output squeezing facility explained in the Python
Shell window subsection below.

Squeeze
If the cursor is over an output line, squeeze all the output between
the code above and the prompt below down to a ‘Squeezed text’ label.


