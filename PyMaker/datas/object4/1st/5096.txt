link:
library/socket.html#socket.socket.getsockopt

docs:

<dt id="socket.socket.getsockopt">
<code class="descclassname">socket.</code><code class="descname">getsockopt</code><span class="sig-paren">(</span><em>level</em>, <em>optname</em><span class="optional">[</span>, <em>buflen</em><span class="optional">]</span><span class="sig-paren">)</span><a class="headerlink" href="#socket.socket.getsockopt" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Return the value of the given socket option (see the Unix man page
<em class="manpage">getsockopt(2)</em>).  The needed symbolic constants (<code class="xref py py-const docutils literal notranslate"><span class="pre">SO_*</span></code> etc.)
are defined in this module.  If <em>buflen</em> is absent, an integer option is assumed
and its integer value is returned by the function.  If <em>buflen</em> is present, it
specifies the maximum length of the buffer used to receive the option in, and
this buffer is returned as a bytes object.  It is up to the caller to decode the
contents of the buffer (see the optional built-in module <a class="reference internal" href="struct.html#module-struct" title="struct: Interpret bytes as packed binary data."><code class="xref py py-mod docutils literal notranslate"><span class="pre">struct</span></code></a> for a way
to decode C structures encoded as byte strings).</p>
</dd>