link:
library/subprocess.html#windows-popen-helpers

docs:

Windows Popen Helpers¶
The STARTUPINFO class and following constants are only available
on Windows.


class subprocess.STARTUPINFO(*, dwFlags=0, hStdInput=None, hStdOutput=None, hStdError=None, wShowWindow=0, lpAttributeList=None)¶
Partial support of the Windows
STARTUPINFO
structure is used for Popen creation.  The following attributes can
be set by passing them as keyword-only arguments.

Changed in version 3.7: Keyword-only argument support was added.



dwFlags¶
A bit field that determines whether certain STARTUPINFO
attributes are used when the process creates a window.
si = subprocess.STARTUPINFO()
si.dwFlags = subprocess.STARTF_USESTDHANDLES | subprocess.STARTF_USESHOWWINDOW





hStdInput¶
If dwFlags specifies STARTF_USESTDHANDLES, this attribute
is the standard input handle for the process. If
STARTF_USESTDHANDLES is not specified, the default for standard
input is the keyboard buffer.



hStdOutput¶
If dwFlags specifies STARTF_USESTDHANDLES, this attribute
is the standard output handle for the process. Otherwise, this attribute
is ignored and the default for standard output is the console window’s
buffer.



hStdError¶
If dwFlags specifies STARTF_USESTDHANDLES, this attribute
is the standard error handle for the process. Otherwise, this attribute is
ignored and the default for standard error is the console window’s buffer.



wShowWindow¶
If dwFlags specifies STARTF_USESHOWWINDOW, this attribute
can be any of the values that can be specified in the nCmdShow
parameter for the
ShowWindow
function, except for SW_SHOWDEFAULT. Otherwise, this attribute is
ignored.
SW_HIDE is provided for this attribute. It is used when
Popen is called with shell=True.



lpAttributeList¶
A dictionary of additional attributes for process creation as given in
STARTUPINFOEX, see
UpdateProcThreadAttribute.
Supported attributes:

handle_list
Sequence of handles that will be inherited. close_fds must be true if
non-empty.
The handles must be temporarily made inheritable by
os.set_handle_inheritable() when passed to the Popen
constructor, else OSError will be raised with Windows error
ERROR_INVALID_PARAMETER (87).

Warning
In a multithreaded process, use caution to avoid leaking handles
that are marked inheritable when combining this feature with
concurrent calls to other process creation functions that inherit
all handles such as os.system().  This also applies to
standard handle redirection, which temporarily creates inheritable
handles.




New in version 3.7.




Windows Constants¶
The subprocess module exposes the following constants.


subprocess.STD_INPUT_HANDLE¶
The standard input device. Initially, this is the console input buffer,
CONIN$.



subprocess.STD_OUTPUT_HANDLE¶
The standard output device. Initially, this is the active console screen
buffer, CONOUT$.



subprocess.STD_ERROR_HANDLE¶
The standard error device. Initially, this is the active console screen
buffer, CONOUT$.



subprocess.SW_HIDE¶
Hides the window. Another window will be activated.



subprocess.STARTF_USESTDHANDLES¶
Specifies that the STARTUPINFO.hStdInput,
STARTUPINFO.hStdOutput, and STARTUPINFO.hStdError attributes
contain additional information.



subprocess.STARTF_USESHOWWINDOW¶
Specifies that the STARTUPINFO.wShowWindow attribute contains
additional information.



subprocess.CREATE_NEW_CONSOLE¶
The new process has a new console, instead of inheriting its parent’s
console (the default).



subprocess.CREATE_NEW_PROCESS_GROUP¶
A Popen creationflags parameter to specify that a new process
group will be created. This flag is necessary for using os.kill()
on the subprocess.
This flag is ignored if CREATE_NEW_CONSOLE is specified.



subprocess.ABOVE_NORMAL_PRIORITY_CLASS¶
A Popen creationflags parameter to specify that a new process
will have an above average priority.

New in version 3.7.




subprocess.BELOW_NORMAL_PRIORITY_CLASS¶
A Popen creationflags parameter to specify that a new process
will have a below average priority.

New in version 3.7.




subprocess.HIGH_PRIORITY_CLASS¶
A Popen creationflags parameter to specify that a new process
will have a high priority.

New in version 3.7.




subprocess.IDLE_PRIORITY_CLASS¶
A Popen creationflags parameter to specify that a new process
will have an idle (lowest) priority.

New in version 3.7.




subprocess.NORMAL_PRIORITY_CLASS¶
A Popen creationflags parameter to specify that a new process
will have an normal priority. (default)

New in version 3.7.




subprocess.REALTIME_PRIORITY_CLASS¶
A Popen creationflags parameter to specify that a new process
will have realtime priority.
You should almost never use REALTIME_PRIORITY_CLASS, because this interrupts
system threads that manage mouse input, keyboard input, and background disk
flushing. This class can be appropriate for applications that “talk” directly
to hardware or that perform brief tasks that should have limited interruptions.

New in version 3.7.




subprocess.CREATE_NO_WINDOW¶
A Popen creationflags parameter to specify that a new process
will not create a window.

New in version 3.7.




subprocess.DETACHED_PROCESS¶
A Popen creationflags parameter to specify that a new process
will not inherit its parent’s console.
This value cannot be used with CREATE_NEW_CONSOLE.

New in version 3.7.




subprocess.CREATE_DEFAULT_ERROR_MODE¶
A Popen creationflags parameter to specify that a new process
does not inherit the error mode of the calling process. Instead, the new
process gets the default error mode.
This feature is particularly useful for multithreaded shell applications
that run with hard errors disabled.

New in version 3.7.




subprocess.CREATE_BREAKAWAY_FROM_JOB¶
A Popen creationflags parameter to specify that a new process
is not associated with the job.

New in version 3.7.



