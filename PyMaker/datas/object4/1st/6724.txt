link:
library/urllib.request.html#urllib.request.URLopener

docs:


class urllib.request.URLopener(proxies=None, **x509)¶

Deprecated since version 3.3.

Base class for opening and reading URLs.  Unless you need to support opening
objects using schemes other than http:, ftp:, or file:,
you probably want to use FancyURLopener.
By default, the URLopener class sends a User-Agent header
of urllib/VVV, where VVV is the urllib version number.
Applications can define their own User-Agent header by subclassing
URLopener or FancyURLopener and setting the class attribute
version to an appropriate string value in the subclass definition.
The optional proxies parameter should be a dictionary mapping scheme names to
proxy URLs, where an empty dictionary turns proxies off completely.  Its default
value is None, in which case environmental proxy settings will be used if
present, as discussed in the definition of urlopen(), above.
Additional keyword parameters, collected in x509, may be used for
authentication of the client when using the https: scheme.  The keywords
key_file and cert_file are supported to provide an  SSL key and certificate;
both are needed to support client authentication.
URLopener objects will raise an OSError exception if the server
returns an error code.


open(fullurl, data=None)¶
Open fullurl using the appropriate protocol.  This method sets up cache and
proxy information, then calls the appropriate open method with its input
arguments.  If the scheme is not recognized, open_unknown() is called.
The data argument has the same meaning as the data argument of
urlopen().
This method always quotes fullurl using quote().



open_unknown(fullurl, data=None)¶
Overridable interface to open unknown URL types.



retrieve(url, filename=None, reporthook=None, data=None)¶
Retrieves the contents of url and places it in filename.  The return value
is a tuple consisting of a local filename and either an
email.message.Message object containing the response headers (for remote
URLs) or None (for local URLs).  The caller must then open and read the
contents of filename.  If filename is not given and the URL refers to a
local file, the input filename is returned.  If the URL is non-local and
filename is not given, the filename is the output of tempfile.mktemp()
with a suffix that matches the suffix of the last path component of the input
URL.  If reporthook is given, it must be a function accepting three numeric
parameters: A chunk number, the maximum size chunks are read in and the total size of the download
(-1 if unknown).  It will be called once at the start and after each chunk of data is read from the
network.  reporthook is ignored for local URLs.
If the url uses the http: scheme identifier, the optional data
argument may be given to specify a POST request (normally the request type
is GET).  The data argument must in standard
application/x-www-form-urlencoded format; see the
urllib.parse.urlencode() function.



version¶
Variable that specifies the user agent of the opener object.  To get
urllib to tell servers that it is a particular user agent, set this in a
subclass as a class variable or in the constructor before calling the base
constructor.

