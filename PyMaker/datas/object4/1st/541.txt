link:
library/stdtypes.html#bytes.title

docs:


bytes.title()¶

bytearray.title()¶
Return a titlecased version of the binary sequence where words start with
an uppercase ASCII character and the remaining characters are lowercase.
Uncased byte values are left unmodified.
For example:
>>> b'Hello world'.title()
b'Hello World'


Lowercase ASCII characters are those byte values in the sequence
b'abcdefghijklmnopqrstuvwxyz'. Uppercase ASCII characters
are those byte values in the sequence b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
All other byte values are uncased.
The algorithm uses a simple language-independent definition of a word as
groups of consecutive letters.  The definition works in many contexts but
it means that apostrophes in contractions and possessives form word
boundaries, which may not be the desired result:
>>> b"they're bill's friends from the UK".title()
b"They'Re Bill'S Friends From The Uk"


A workaround for apostrophes can be constructed using regular expressions:
>>> import re
>>> def titlecase(s):
...     return re.sub(rb"[A-Za-z]+('[A-Za-z]+)?",
...                   lambda mo: mo.group(0)[0:1].upper() +
...                              mo.group(0)[1:].lower(),
...                   s)
...
>>> titlecase(b"they're bill's friends.")
b"They're Bill's Friends."



Note
The bytearray version of this method does not operate in place - it
always produces a new object, even if no changes were made.

