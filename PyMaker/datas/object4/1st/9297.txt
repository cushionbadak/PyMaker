link:
library/warnings.html#updating-code-for-new-versions-of-dependencies

docs:

Updating Code For New Versions of Dependencies¶
Warning categories that are primarily of interest to Python developers (rather
than end users of applications written in Python) are ignored by default.
Notably, this “ignored by default” list includes DeprecationWarning
(for every module except __main__), which means developers should make sure
to test their code with typically ignored warnings made visible in order to
receive timely notifications of future breaking API changes (whether in the
standard library or third party packages).
In the ideal case, the code will have a suitable test suite, and the test runner
will take care of implicitly enabling all warnings when running tests
(the test runner provided by the unittest module does this).
In less ideal cases, applications can be checked for use of deprecated
interfaces by passing -Wd to the Python interpreter (this is
shorthand for -W default) or setting PYTHONWARNINGS=default in
the environment. This enables default handling for all warnings, including those
that are ignored by default. To change what action is taken for encountered
warnings you can change what argument is passed to -W (e.g.
-W error). See the -W flag for more details on what is
possible.
