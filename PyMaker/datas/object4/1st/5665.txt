link:
library/email.contentmanager.html#email.contentmanager.raw_data_manager

docs:

<dt id="email.contentmanager.raw_data_manager">
<code class="descclassname">email.contentmanager.</code><code class="descname">raw_data_manager</code><a class="headerlink" href="#email.contentmanager.raw_data_manager" title="Permalink to this definition">¶</a></dt>
<dd><p>This content manager provides only a minimum interface beyond that provided
by <a class="reference internal" href="email.compat32-message.html#email.message.Message" title="email.message.Message"><code class="xref py py-class docutils literal notranslate"><span class="pre">Message</span></code></a> itself:  it deals only with text, raw
byte strings, and <a class="reference internal" href="email.compat32-message.html#email.message.Message" title="email.message.Message"><code class="xref py py-class docutils literal notranslate"><span class="pre">Message</span></code></a> objects.  Nevertheless, it
provides significant advantages compared to the base API: <code class="docutils literal notranslate"><span class="pre">get_content</span></code> on
a text part will return a unicode string without the application needing to
manually decode it, <code class="docutils literal notranslate"><span class="pre">set_content</span></code> provides a rich set of options for
controlling the headers added to a part and controlling the content transfer
encoding, and it enables the use of the various <code class="docutils literal notranslate"><span class="pre">add_</span></code> methods, thereby
simplifying the creation of multipart messages.</p>
<dl class="method">
<dt id="email.contentmanager.get_content">
<code class="descclassname">email.contentmanager.</code><code class="descname">get_content</code><span class="sig-paren">(</span><em>msg</em>, <em>errors='replace'</em><span class="sig-paren">)</span><a class="headerlink" href="#email.contentmanager.get_content" title="Permalink to this definition">¶</a></dt>
<dd><p>Return the payload of the part as either a string (for <code class="docutils literal notranslate"><span class="pre">text</span></code> parts), an
<a class="reference internal" href="email.message.html#email.message.EmailMessage" title="email.message.EmailMessage"><code class="xref py py-class docutils literal notranslate"><span class="pre">EmailMessage</span></code></a> object (for <code class="docutils literal notranslate"><span class="pre">message/rfc822</span></code>
parts), or a <code class="docutils literal notranslate"><span class="pre">bytes</span></code> object (for all other non-multipart types).  Raise
a <a class="reference internal" href="exceptions.html#KeyError" title="KeyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">KeyError</span></code></a> if called on a <code class="docutils literal notranslate"><span class="pre">multipart</span></code>.  If the part is a
<code class="docutils literal notranslate"><span class="pre">text</span></code> part and <em>errors</em> is specified, use it as the error handler when
decoding the payload to unicode.  The default error handler is
<code class="docutils literal notranslate"><span class="pre">replace</span></code>.</p>
</dd></dl>
<dl class="method">
<dt id="email.contentmanager.set_content">
<code class="descclassname">email.contentmanager.</code><code class="descname">set_content</code><span class="sig-paren">(</span><em>msg</em>, <em>&lt;'str'&gt;</em>, <em>subtype="plain"</em>, <em>charset='utf-8'                     cte=None</em>, <em>disposition=None</em>, <em>filename=None</em>, <em>cid=None</em>, <em>params=None</em>, <em>headers=None</em><span class="sig-paren">)</span><a class="headerlink" href="#email.contentmanager.set_content" title="Permalink to this definition">¶</a></dt>
<dt>
<code class="descclassname">email.contentmanager.</code><code class="descname">set_content</code><span class="sig-paren">(</span><em>msg</em>, <em>&lt;'bytes'&gt;</em>, <em>maintype</em>, <em>subtype</em>, <em>cte="base64"</em>, <em>disposition=None</em>, <em>filename=None</em>, <em>cid=None</em>, <em>params=None</em>, <em>headers=None</em><span class="sig-paren">)</span></dt>
<dt>
<code class="descclassname">email.contentmanager.</code><code class="descname">set_content</code><span class="sig-paren">(</span><em>msg</em>, <em>&lt;'EmailMessage'&gt;</em>, <em>cte=None</em>, <em>disposition=None</em>, <em>filename=None</em>, <em>cid=None</em>, <em>params=None</em>, <em>headers=None</em><span class="sig-paren">)</span></dt>
<dd><p>Add headers and payload to <em>msg</em>:</p>
<p>Add a <em class="mailheader">Content-Type</em> header with a <code class="docutils literal notranslate"><span class="pre">maintype/subtype</span></code>
value.</p>
<blockquote>
<div><ul class="simple">
<li>For <code class="docutils literal notranslate"><span class="pre">str</span></code>, set the MIME <code class="docutils literal notranslate"><span class="pre">maintype</span></code> to <code class="docutils literal notranslate"><span class="pre">text</span></code>, and set the
subtype to <em>subtype</em> if it is specified, or <code class="docutils literal notranslate"><span class="pre">plain</span></code> if it is not.</li>
<li>For <code class="docutils literal notranslate"><span class="pre">bytes</span></code>, use the specified <em>maintype</em> and <em>subtype</em>, or
raise a <a class="reference internal" href="exceptions.html#TypeError" title="TypeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">TypeError</span></code></a> if they are not specified.</li>
<li>For <a class="reference internal" href="email.message.html#email.message.EmailMessage" title="email.message.EmailMessage"><code class="xref py py-class docutils literal notranslate"><span class="pre">EmailMessage</span></code></a> objects, set the maintype
to <code class="docutils literal notranslate"><span class="pre">message</span></code>, and set the subtype to <em>subtype</em> if it is
specified or <code class="docutils literal notranslate"><span class="pre">rfc822</span></code> if it is not.  If <em>subtype</em> is
<code class="docutils literal notranslate"><span class="pre">partial</span></code>, raise an error (<code class="docutils literal notranslate"><span class="pre">bytes</span></code> objects must be used to
construct <code class="docutils literal notranslate"><span class="pre">message/partial</span></code> parts).</li>
</ul>
</div></blockquote>
<p>If <em>charset</em> is provided (which is valid only for <code class="docutils literal notranslate"><span class="pre">str</span></code>), encode the
string to bytes using the specified character set.  The default is
<code class="docutils literal notranslate"><span class="pre">utf-8</span></code>.  If the specified <em>charset</em> is a known alias for a standard
MIME charset name, use the standard charset instead.</p>
<p>If <em>cte</em> is set, encode the payload using the specified content transfer
encoding, and set the <em class="mailheader">Content-Transfer-Encoding</em> header to
that value.  Possible values for <em>cte</em> are <code class="docutils literal notranslate"><span class="pre">quoted-printable</span></code>,
<code class="docutils literal notranslate"><span class="pre">base64</span></code>, <code class="docutils literal notranslate"><span class="pre">7bit</span></code>, <code class="docutils literal notranslate"><span class="pre">8bit</span></code>, and <code class="docutils literal notranslate"><span class="pre">binary</span></code>.  If the input cannot be
encoded in the specified encoding (for example, specifying a <em>cte</em> of
<code class="docutils literal notranslate"><span class="pre">7bit</span></code> for an input that contains non-ASCII values), raise a
<a class="reference internal" href="exceptions.html#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a>.</p>
<blockquote>
<div><ul class="simple">
<li>For <code class="docutils literal notranslate"><span class="pre">str</span></code> objects, if <em>cte</em> is not set use heuristics to
determine the most compact encoding.</li>
<li>For <a class="reference internal" href="email.message.html#email.message.EmailMessage" title="email.message.EmailMessage"><code class="xref py py-class docutils literal notranslate"><span class="pre">EmailMessage</span></code></a>, per <span class="target" id="index-0"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc2046.html"><strong>RFC 2046</strong></a>, raise
an error if a <em>cte</em> of <code class="docutils literal notranslate"><span class="pre">quoted-printable</span></code> or <code class="docutils literal notranslate"><span class="pre">base64</span></code> is
requested for <em>subtype</em> <code class="docutils literal notranslate"><span class="pre">rfc822</span></code>, and for any <em>cte</em> other than
<code class="docutils literal notranslate"><span class="pre">7bit</span></code> for <em>subtype</em> <code class="docutils literal notranslate"><span class="pre">external-body</span></code>.  For
<code class="docutils literal notranslate"><span class="pre">message/rfc822</span></code>, use <code class="docutils literal notranslate"><span class="pre">8bit</span></code> if <em>cte</em> is not specified.  For
all other values of <em>subtype</em>, use <code class="docutils literal notranslate"><span class="pre">7bit</span></code>.</li>
</ul>
</div></blockquote>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A <em>cte</em> of <code class="docutils literal notranslate"><span class="pre">binary</span></code> does not actually work correctly yet.
The <code class="docutils literal notranslate"><span class="pre">EmailMessage</span></code> object as modified by <code class="docutils literal notranslate"><span class="pre">set_content</span></code> is
correct, but <a class="reference internal" href="email.generator.html#email.generator.BytesGenerator" title="email.generator.BytesGenerator"><code class="xref py py-class docutils literal notranslate"><span class="pre">BytesGenerator</span></code></a> does not
serialize it correctly.</p>
</div>
<p>If <em>disposition</em> is set, use it as the value of the
<em class="mailheader">Content-Disposition</em> header.  If not specified, and
<em>filename</em> is specified, add the header with the value <code class="docutils literal notranslate"><span class="pre">attachment</span></code>.
If <em>disposition</em> is not specified and <em>filename</em> is also not specified,
do not add the header.  The only valid values for <em>disposition</em> are
<code class="docutils literal notranslate"><span class="pre">attachment</span></code> and <code class="docutils literal notranslate"><span class="pre">inline</span></code>.</p>
<p>If <em>filename</em> is specified, use it as the value of the <code class="docutils literal notranslate"><span class="pre">filename</span></code>
parameter of the <em class="mailheader">Content-Disposition</em> header.</p>
<p>If <em>cid</em> is specified, add a <em class="mailheader">Content-ID</em> header with
<em>cid</em> as its value.</p>
<p>If <em>params</em> is specified, iterate its <code class="docutils literal notranslate"><span class="pre">items</span></code> method and use the
resulting <code class="docutils literal notranslate"><span class="pre">(key,</span> <span class="pre">value)</span></code> pairs to set additional parameters on the
<em class="mailheader">Content-Type</em> header.</p>
<p>If <em>headers</em> is specified and is a list of strings of the form
<code class="docutils literal notranslate"><span class="pre">headername:</span> <span class="pre">headervalue</span></code> or a list of <code class="docutils literal notranslate"><span class="pre">header</span></code> objects
(distinguished from strings by having a <code class="docutils literal notranslate"><span class="pre">name</span></code> attribute), add the
headers to <em>msg</em>.</p>
</dd></dl>
</dd>