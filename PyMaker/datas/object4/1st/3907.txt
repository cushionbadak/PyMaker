link:
library/platform.html#windows-platform

docs:

Windows Platform¶


platform.win32_ver(release='', version='', csd='', ptype='')¶
Get additional version information from the Windows Registry and return a tuple
(release, version, csd, ptype) referring to OS release, version number,
CSD level (service pack) and OS type (multi/single processor).
As a hint: ptype is 'Uniprocessor Free' on single processor NT machines
and 'Multiprocessor Free' on multi processor machines. The ‘Free’ refers
to the OS version being free of debugging code. It could also state ‘Checked’
which means the OS version uses debugging code, i.e. code that checks arguments,
ranges, etc.

Note
This function works best with Mark Hammond’s
win32all package installed, but also on Python 2.3 and
later (support for this was added in Python 2.6). It obviously
only runs on Win32 compatible platforms.



Win95/98 specific¶


platform.popen(cmd, mode='r', bufsize=-1)¶
Portable popen() interface.  Find a working popen implementation
preferring win32pipe.popen().  On Windows NT, win32pipe.popen()
should work; on Windows 9x it hangs due to bugs in the MS C library.

Deprecated since version 3.3: This function is obsolete.  Use the subprocess module.  Check
especially the Replacing Older Functions with the subprocess Module section.



