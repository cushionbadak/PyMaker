link:
library/asyncio-protocol.html#asyncio.BaseTransport.get_extra_info

docs:


BaseTransport.get_extra_info(name, default=None)¶
Return information about the transport or underlying resources
it uses.
name is a string representing the piece of transport-specific
information to get.
default is the value to return if the information is not
available, or if the transport does not support querying it
with the given third-party event loop implementation or on the
current platform.
For example, the following code attempts to get the underlying
socket object of the transport:
sock = transport.get_extra_info('socket')
if sock is not None:
    print(sock.getsockopt(...))


Categories of information that can be queried on some transports:

socket:
'peername': the remote address to which the socket is
connected, result of socket.socket.getpeername()
(None on error)
'socket': socket.socket instance
'sockname': the socket’s own address,
result of socket.socket.getsockname()


SSL socket:
'compression': the compression algorithm being used as a
string, or None if the connection isn’t compressed; result
of ssl.SSLSocket.compression()
'cipher': a three-value tuple containing the name of the
cipher being used, the version of the SSL protocol that defines
its use, and the number of secret bits being used; result of
ssl.SSLSocket.cipher()
'peercert': peer certificate; result of
ssl.SSLSocket.getpeercert()
'sslcontext': ssl.SSLContext instance
'ssl_object': ssl.SSLObject or
ssl.SSLSocket instance


pipe:
'pipe': pipe object


subprocess:
'subprocess': subprocess.Popen instance



