link:
library/profile.html#pstats.Stats.sort_stats

docs:


sort_stats(*keys)Â¶
This method modifies the Stats object by sorting it according to
the supplied criteria.  The argument can be either a string or a SortKey
enum identifying the basis of a sort (example: 'time', 'name',
SortKey.TIME or SortKey.NAME). The SortKey enums argument have
advantage over the string argument in that it is more robust and less
error prone.
When more than one key is provided, then additional keys are used as
secondary criteria when there is equality in all keys selected before
them.  For example, sort_stats(SortKey.NAME, SortKey.FILE) will sort
all the entries according to their function name, and resolve all ties
(identical function names) by sorting by file name.
For the string argument, abbreviations can be used for any key names, as
long as the abbreviation is unambiguous.
The following are the valid string and SortKey:







Valid String Arg
Valid enum Arg
Meaning



'calls'
SortKey.CALLS
call count

'cumulative'
SortKey.CUMULATIVE
cumulative time

'cumtime'
N/A
cumulative time

'file'
N/A
file name

'filename'
SortKey.FILENAME
file name

'module'
N/A
file name

'ncalls'
N/A
call count

'pcalls'
SortKey.PCALLS
primitive call count

'line'
SortKey.LINE
line number

'name'
SortKey.NAME
function name

'nfl'
SortKey.NFL
name/file/line

'stdname'
SortKey.STDNAME
standard name

'time'
SortKey.TIME
internal time

'tottime'
N/A
internal time



Note that all sorts on statistics are in descending order (placing most
time consuming items first), where as name, file, and line number searches
are in ascending order (alphabetical). The subtle distinction between
SortKey.NFL and SortKey.STDNAME is that the standard name is a
sort of the name as printed, which means that the embedded line numbers
get compared in an odd way.  For example, lines 3, 20, and 40 would (if
the file names were the same) appear in the string order 20, 3 and 40.
In contrast, SortKey.NFL does a numeric compare of the line numbers.
In fact, sort_stats(SortKey.NFL) is the same as
sort_stats(SortKey.NAME, SortKey.FILENAME, SortKey.LINE).
For backward-compatibility reasons, the numeric arguments -1, 0,
1, and 2 are permitted.  They are interpreted as 'stdname',
'calls', 'time', and 'cumulative' respectively.  If this old
style format (numeric) is used, only one sort key (the numeric key) will
be used, and additional arguments will be silently ignored.

New in version 3.7: Added the SortKey enum.

