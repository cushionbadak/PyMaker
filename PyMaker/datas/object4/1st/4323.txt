link:
library/multiprocessing.html#multiprocessing.Array

docs:


multiprocessing.Array(typecode_or_type, size_or_initializer, *, lock=True)¶
Return a ctypes array allocated from shared memory.  By default the return
value is actually a synchronized wrapper for the array.
typecode_or_type determines the type of the elements of the returned array:
it is either a ctypes type or a one character typecode of the kind used by
the array module.  If size_or_initializer is an integer, then it
determines the length of the array, and the array will be initially zeroed.
Otherwise, size_or_initializer is a sequence which is used to initialize
the array and whose length determines the length of the array.
If lock is True (the default) then a new lock object is created to
synchronize access to the value.  If lock is a Lock or
RLock object then that will be used to synchronize access to the
value.  If lock is False then access to the returned object will not be
automatically protected by a lock, so it will not necessarily be
“process-safe”.
Note that lock is a keyword only argument.
Note that an array of ctypes.c_char has value and raw
attributes which allow one to use it to store and retrieve strings.
