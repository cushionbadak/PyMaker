link:
library/shutil.html#shutil.move

docs:

<dt id="shutil.move">
<code class="descclassname">shutil.</code><code class="descname">move</code><span class="sig-paren">(</span><em>src</em>, <em>dst</em>, <em>copy_function=copy2</em><span class="sig-paren">)</span><a class="headerlink" href="#shutil.move" title="Permalink to this definition">¶</a></dt>
<dd><p>Recursively move a file or directory (<em>src</em>) to another location (<em>dst</em>)
and return the destination.</p>
<p>If the destination is an existing directory, then <em>src</em> is moved inside that
directory. If the destination already exists but is not a directory, it may
be overwritten depending on <a class="reference internal" href="os.html#os.rename" title="os.rename"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.rename()</span></code></a> semantics.</p>
<p>If the destination is on the current filesystem, then <a class="reference internal" href="os.html#os.rename" title="os.rename"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.rename()</span></code></a> is
used. Otherwise, <em>src</em> is copied to <em>dst</em> using <em>copy_function</em> and then
removed.  In case of symlinks, a new symlink pointing to the target of <em>src</em>
will be created in or as <em>dst</em> and <em>src</em> will be removed.</p>
<p>If <em>copy_function</em> is given, it must be a callable that takes two arguments
<em>src</em> and <em>dst</em>, and will be used to copy <em>src</em> to <em>dest</em> if
<a class="reference internal" href="os.html#os.rename" title="os.rename"><code class="xref py py-func docutils literal notranslate"><span class="pre">os.rename()</span></code></a> cannot be used.  If the source is a directory,
<a class="reference internal" href="#shutil.copytree" title="shutil.copytree"><code class="xref py py-func docutils literal notranslate"><span class="pre">copytree()</span></code></a> is called, passing it the <code class="xref py py-func docutils literal notranslate"><span class="pre">copy_function()</span></code>. The
default <em>copy_function</em> is <a class="reference internal" href="#shutil.copy2" title="shutil.copy2"><code class="xref py py-func docutils literal notranslate"><span class="pre">copy2()</span></code></a>.  Using <a class="reference internal" href="#shutil.copy" title="shutil.copy"><code class="xref py py-func docutils literal notranslate"><span class="pre">copy()</span></code></a> as the
<em>copy_function</em> allows the move to succeed when it is not possible to also
copy the metadata, at the expense of not copying any of the metadata.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.3: </span>Added explicit symlink handling for foreign filesystems, thus adapting
it to the behavior of GNU’s <strong class="program">mv</strong>.
Now returns <em>dst</em>.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span>Added the <em>copy_function</em> keyword argument.</p>
</div>
</dd>