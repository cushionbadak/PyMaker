link:
library/os.html#os.symlink

docs:

<dt id="os.symlink">
<code class="descclassname">os.</code><code class="descname">symlink</code><span class="sig-paren">(</span><em>src</em>, <em>dst</em>, <em>target_is_directory=False</em>, <em>*</em>, <em>dir_fd=None</em><span class="sig-paren">)</span><a class="headerlink" href="#os.symlink" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Create a symbolic link pointing to <em>src</em> named <em>dst</em>.</p>
<p>On Windows, a symlink represents either a file or a directory, and does not
morph to the target dynamically.  If the target is present, the type of the
symlink will be created to match. Otherwise, the symlink will be created
as a directory if <em>target_is_directory</em> is <code class="docutils literal notranslate"><span class="pre">True</span></code> or a file symlink (the
default) otherwise.  On non-Windows platforms, <em>target_is_directory</em> is ignored.</p>
<p>Symbolic link support was introduced in Windows 6.0 (Vista).  <a class="reference internal" href="#os.symlink" title="os.symlink"><code class="xref py py-func docutils literal notranslate"><span class="pre">symlink()</span></code></a>
will raise a <a class="reference internal" href="exceptions.html#NotImplementedError" title="NotImplementedError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NotImplementedError</span></code></a> on Windows versions earlier than 6.0.</p>
<p>This function can support <a class="reference internal" href="#dir-fd"><span class="std std-ref">paths relative to directory descriptors</span></a>.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>On Windows, the <em>SeCreateSymbolicLinkPrivilege</em> is required in order to
successfully create symlinks. This privilege is not typically granted to
regular users but is available to accounts which can escalate privileges
to the administrator level. Either obtaining the privilege or running your
application as an administrator are ways to successfully create symlinks.</p>
<p class="last"><a class="reference internal" href="exceptions.html#OSError" title="OSError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">OSError</span></code></a> is raised when the function is called by an unprivileged
user.</p>
</div>
<p class="availability"><a class="reference internal" href="intro.html#availability"><span class="std std-ref">Availability</span></a>: Unix, Windows.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2: </span>Added support for Windows 6.0 (Vista) symbolic links.</p>
</div>
<div class="versionadded">
<p><span class="versionmodified">New in version 3.3: </span>Added the <em>dir_fd</em> argument, and now allow <em>target_is_directory</em>
on non-Windows platforms.</p>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.6: </span>Accepts a <a class="reference internal" href="../glossary.html#term-path-like-object"><span class="xref std std-term">path-like object</span></a> for <em>src</em> and <em>dst</em>.</p>
</div>
</dd>