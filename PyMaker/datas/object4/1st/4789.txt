link:
library/asyncio-eventloop.html#asyncio.loop.create_datagram_endpoint

docs:


coroutine loop.create_datagram_endpoint(protocol_factory, local_addr=None, remote_addr=None, *, family=0, proto=0, flags=0, reuse_address=None, reuse_port=None, allow_broadcast=None, sock=None)Â¶
Create a datagram connection.
The socket family can be either AF_INET,
AF_INET6, or AF_UNIX,
depending on host (or the family argument, if provided).
The socket type will be SOCK_DGRAM.
protocol_factory must be a callable returning a
protocol implementation.
A tuple of (transport, protocol) is returned on success.
Other arguments:

local_addr, if given, is a (local_host, local_port) tuple used
to bind the socket to locally.  The local_host and local_port
are looked up using getaddrinfo().
remote_addr, if given, is a (remote_host, remote_port) tuple used
to connect the socket to a remote address.  The remote_host and
remote_port are looked up using getaddrinfo().
family, proto, flags are the optional address family, protocol
and flags to be passed through to getaddrinfo() for host
resolution. If given, these should all be integers from the
corresponding socket module constants.
reuse_address tells the kernel to reuse a local socket in
TIME_WAIT state, without waiting for its natural timeout to
expire. If not specified will automatically be set to True on
Unix.
reuse_port tells the kernel to allow this endpoint to be bound to the
same port as other existing endpoints are bound to, so long as they all
set this flag when being created. This option is not supported on Windows
and some Unixes. If the SO_REUSEPORT constant is not
defined then this capability is unsupported.
allow_broadcast tells the kernel to allow this endpoint to send
messages to the broadcast address.
sock can optionally be specified in order to use a preexisting,
already connected, socket.socket object to be used by the
transport. If specified, local_addr and remote_addr should be omitted
(must be None).

On Windows, with ProactorEventLoop, this method is not supported.
See UDP echo client protocol and
UDP echo server protocol examples.

Changed in version 3.4.4: The family, proto, flags, reuse_address, reuse_port,
*allow_broadcast, and sock parameters were added.

