link:
library/email.compat32-message.html#email.message.Message.set_type

docs:

<dt id="email.message.Message.set_type">
<code class="descname">set_type</code><span class="sig-paren">(</span><em>type</em>, <em>header='Content-Type'</em>, <em>requote=True</em><span class="sig-paren">)</span><a class="headerlink" href="#email.message.Message.set_type" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the main type and subtype for the <em class="mailheader">Content-Type</em>
header. <em>type</em> must be a string in the form <em class="mimetype">maintype/subtype</em>,
otherwise a <a class="reference internal" href="exceptions.html#ValueError" title="ValueError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">ValueError</span></code></a> is raised.</p>
<p>This method replaces the <em class="mailheader">Content-Type</em> header, keeping all
the parameters in place.  If <em>requote</em> is <code class="docutils literal notranslate"><span class="pre">False</span></code>, this leaves the
existing header’s quoting as is, otherwise the parameters will be quoted
(the default).</p>
<p>An alternative header can be specified in the <em>header</em> argument. When the
<em class="mailheader">Content-Type</em> header is set a <em class="mailheader">MIME-Version</em>
header is also added.</p>
<p>This is a legacy method.  On the
<code class="xref py py-class docutils literal notranslate"><span class="pre">EmailMessage</span></code> class its functionality is
replaced by the <code class="docutils literal notranslate"><span class="pre">make_</span></code> and <code class="docutils literal notranslate"><span class="pre">add_</span></code> methods.</p>
</dd>