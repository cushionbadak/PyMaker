link:
library/fileinput.html#fileinput.FileInput

docs:

<dt id="fileinput.FileInput">
<em class="property">class </em><code class="descclassname">fileinput.</code><code class="descname">FileInput</code><span class="sig-paren">(</span><em>files=None</em>, <em>inplace=False</em>, <em>backup=''</em>, <em>bufsize=0</em>, <em>mode='r'</em>, <em>openhook=None</em><span class="sig-paren">)</span><a class="headerlink" href="#fileinput.FileInput" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Class <a class="reference internal" href="#fileinput.FileInput" title="fileinput.FileInput"><code class="xref py py-class docutils literal notranslate"><span class="pre">FileInput</span></code></a> is the implementation; its methods <a class="reference internal" href="#fileinput.filename" title="fileinput.filename"><code class="xref py py-meth docutils literal notranslate"><span class="pre">filename()</span></code></a>,
<a class="reference internal" href="#fileinput.fileno" title="fileinput.fileno"><code class="xref py py-meth docutils literal notranslate"><span class="pre">fileno()</span></code></a>, <a class="reference internal" href="#fileinput.lineno" title="fileinput.lineno"><code class="xref py py-meth docutils literal notranslate"><span class="pre">lineno()</span></code></a>, <a class="reference internal" href="#fileinput.filelineno" title="fileinput.filelineno"><code class="xref py py-meth docutils literal notranslate"><span class="pre">filelineno()</span></code></a>, <a class="reference internal" href="#fileinput.isfirstline" title="fileinput.isfirstline"><code class="xref py py-meth docutils literal notranslate"><span class="pre">isfirstline()</span></code></a>,
<a class="reference internal" href="#fileinput.isstdin" title="fileinput.isstdin"><code class="xref py py-meth docutils literal notranslate"><span class="pre">isstdin()</span></code></a>, <a class="reference internal" href="#fileinput.nextfile" title="fileinput.nextfile"><code class="xref py py-meth docutils literal notranslate"><span class="pre">nextfile()</span></code></a> and <a class="reference internal" href="#fileinput.close" title="fileinput.close"><code class="xref py py-meth docutils literal notranslate"><span class="pre">close()</span></code></a> correspond to the
functions of the same name in the module. In addition it has a
<a class="reference internal" href="io.html#io.TextIOBase.readline" title="io.TextIOBase.readline"><code class="xref py py-meth docutils literal notranslate"><span class="pre">readline()</span></code></a> method which returns the next input line,
and a <a class="reference internal" href="../reference/datamodel.html#object.__getitem__" title="object.__getitem__"><code class="xref py py-meth docutils literal notranslate"><span class="pre">__getitem__()</span></code></a> method which implements the sequence behavior.
The sequence must be accessed in strictly sequential order; random access
and <a class="reference internal" href="io.html#io.TextIOBase.readline" title="io.TextIOBase.readline"><code class="xref py py-meth docutils literal notranslate"><span class="pre">readline()</span></code></a> cannot be mixed.</p>
<p>With <em>mode</em> you can specify which file mode will be passed to <a class="reference internal" href="functions.html#open" title="open"><code class="xref py py-func docutils literal notranslate"><span class="pre">open()</span></code></a>. It
must be one of <code class="docutils literal notranslate"><span class="pre">'r'</span></code>, <code class="docutils literal notranslate"><span class="pre">'rU'</span></code>, <code class="docutils literal notranslate"><span class="pre">'U'</span></code> and <code class="docutils literal notranslate"><span class="pre">'rb'</span></code>.</p>
<p>The <em>openhook</em>, when given, must be a function that takes two arguments,
<em>filename</em> and <em>mode</em>, and returns an accordingly opened file-like object. You
cannot use <em>inplace</em> and <em>openhook</em> together.</p>
<p>A <a class="reference internal" href="#fileinput.FileInput" title="fileinput.FileInput"><code class="xref py py-class docutils literal notranslate"><span class="pre">FileInput</span></code></a> instance can be used as a context manager in the
<a class="reference internal" href="../reference/compound_stmts.html#with"><code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code></a> statement.  In this example, <em>input</em> is closed after the
<code class="xref std std-keyword docutils literal notranslate"><span class="pre">with</span></code> statement is exited, even if an exception occurs:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">with</span> <span class="n">FileInput</span><span class="p">(</span><span class="n">files</span><span class="o">=</span><span class="p">(</span><span class="s1">'spam.txt'</span><span class="p">,</span> <span class="s1">'eggs.txt'</span><span class="p">))</span> <span class="k">as</span> <span class="nb">input</span><span class="p">:</span>
    <span class="n">process</span><span class="p">(</span><span class="nb">input</span><span class="p">)</span>
</pre></div>
</div>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2: </span>Can be used as a context manager.</p>
</div>
<div class="deprecated">
<p><span class="versionmodified">Deprecated since version 3.4: </span>The <code class="docutils literal notranslate"><span class="pre">'rU'</span></code> and <code class="docutils literal notranslate"><span class="pre">'U'</span></code> modes.</p>
</div>
<div class="deprecated">
<p><span class="versionmodified">Deprecated since version 3.6, will be removed in version 3.8: </span>The <em>bufsize</em> parameter.</p>
</div>
</dd>