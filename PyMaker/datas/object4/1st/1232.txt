link:
library/collections.html#collections.ChainMap.new_child

docs:

<dt id="collections.ChainMap.new_child">
<code class="descname">new_child</code><span class="sig-paren">(</span><em>m=None</em><span class="sig-paren">)</span><a class="headerlink" href="#collections.ChainMap.new_child" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Returns a new <a class="reference internal" href="#collections.ChainMap" title="collections.ChainMap"><code class="xref py py-class docutils literal notranslate"><span class="pre">ChainMap</span></code></a> containing a new map followed by
all of the maps in the current instance.  If <code class="docutils literal notranslate"><span class="pre">m</span></code> is specified,
it becomes the new map at the front of the list of mappings; if not
specified, an empty dict is used, so that a call to <code class="docutils literal notranslate"><span class="pre">d.new_child()</span></code>
is equivalent to: <code class="docutils literal notranslate"><span class="pre">ChainMap({},</span> <span class="pre">*d.maps)</span></code>.  This method is used for
creating subcontexts that can be updated without altering values in any
of the parent mappings.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.4: </span>The optional <code class="docutils literal notranslate"><span class="pre">m</span></code> parameter was added.</p>
</div>
</dd>