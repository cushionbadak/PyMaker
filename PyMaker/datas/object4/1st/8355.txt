link:
library/doctest.html#directives

docs:

Directives¶
Doctest directives may be used to modify the option flags for an individual example.  Doctest directives are
special Python comments following an example’s source code:

directive             ::=  "#" "doctest:" directive_options
directive_options     ::=  directive_option ("," directive_option)\*
directive_option      ::=  on_or_off directive_option_name
on_or_off             ::=  "+" \| "-"
directive_option_name ::=  "DONT_ACCEPT_BLANKLINE" \| "NORMALIZE_WHITESPACE" \| ...

Whitespace is not allowed between the + or - and the directive option
name.  The directive option name can be any of the option flag names explained
above.
An example’s doctest directives modify doctest’s behavior for that single
example.  Use + to enable the named behavior, or - to disable it.
For example, this test passes:
>>> print(list(range(20))) 
[0,   1,  2,  3,  4,  5,  6,  7,  8,  9,
10,  11, 12, 13, 14, 15, 16, 17, 18, 19]


Without the directive it would fail, both because the actual output doesn’t have
two blanks before the single-digit list elements, and because the actual output
is on a single line.  This test also passes, and also requires a directive to do
so:
>>> print(list(range(20))) 
[0, 1, ..., 18, 19]


Multiple directives can be used on a single physical line, separated by
commas:
>>> print(list(range(20))) 
[0,    1, ...,   18,    19]


If multiple directive comments are used for a single example, then they are
combined:
>>> print(list(range(20))) 
...                        
[0,    1, ...,   18,    19]


As the previous example shows, you can add ... lines to your example
containing only directives.  This can be useful when an example is too long for
a directive to comfortably fit on the same line:
>>> print(list(range(5)) + list(range(10, 20)) + list(range(30, 40)))
... 
[0, ..., 4, 10, ..., 19, 30, ..., 39]


Note that since all options are disabled by default, and directives apply only
to the example they appear in, enabling options (via + in a directive) is
usually the only meaningful choice.  However, option flags can also be passed to
functions that run doctests, establishing different defaults.  In such cases,
disabling an option via - in a directive can be useful.
