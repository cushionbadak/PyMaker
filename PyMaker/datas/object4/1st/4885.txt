link:
library/asyncio-protocol.html#asyncio.SubprocessTransport

docs:

<dt id="asyncio.SubprocessTransport">
<em class="property">class </em><code class="descclassname">asyncio.</code><code class="descname">SubprocessTransport</code><span class="sig-paren">(</span><em>BaseTransport</em><span class="sig-paren">)</span><a class="headerlink" href="#asyncio.SubprocessTransport" title="Permalink to this definition">Â¶</a></dt>
<dd><p>An abstraction to represent a connection between a parent and its
child OS process.</p>
<p>Instances of the <em>SubprocessTransport</em> class are returned from
event loop methods <a class="reference internal" href="asyncio-eventloop.html#asyncio.loop.subprocess_shell" title="asyncio.loop.subprocess_shell"><code class="xref py py-meth docutils literal notranslate"><span class="pre">loop.subprocess_shell()</span></code></a> and
<a class="reference internal" href="asyncio-eventloop.html#asyncio.loop.subprocess_exec" title="asyncio.loop.subprocess_exec"><code class="xref py py-meth docutils literal notranslate"><span class="pre">loop.subprocess_exec()</span></code></a>.</p>
</dd>