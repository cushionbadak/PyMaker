link:
library/inspect.html#inspect.Parameter.kind

docs:

<dt id="inspect.Parameter.kind">
<code class="descname">kind</code><a class="headerlink" href="#inspect.Parameter.kind" title="Permalink to this definition">¶</a></dt>
<dd><p>Describes how argument values are bound to the parameter.  Possible values
(accessible via <a class="reference internal" href="#inspect.Parameter" title="inspect.Parameter"><code class="xref py py-class docutils literal notranslate"><span class="pre">Parameter</span></code></a>, like <code class="docutils literal notranslate"><span class="pre">Parameter.KEYWORD_ONLY</span></code>):</p>
<table border="1" class="docutils">
<colgroup>
<col width="34%"/>
<col width="66%"/>
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Name</th>
<th class="head">Meaning</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><em>POSITIONAL_ONLY</em></td>
<td><p class="first">Value must be supplied as a positional
argument.</p>
<p class="last">Python has no explicit syntax for defining
positional-only parameters, but many built-in
and extension module functions (especially
those that accept only one or two parameters)
accept them.</p>
</td>
</tr>
<tr class="row-odd"><td><em>POSITIONAL_OR_KEYWORD</em></td>
<td>Value may be supplied as either a keyword or
positional argument (this is the standard
binding behaviour for functions implemented
in Python.)</td>
</tr>
<tr class="row-even"><td><em>VAR_POSITIONAL</em></td>
<td>A tuple of positional arguments that aren’t
bound to any other parameter. This
corresponds to a <code class="docutils literal notranslate"><span class="pre">*args</span></code> parameter in a
Python function definition.</td>
</tr>
<tr class="row-odd"><td><em>KEYWORD_ONLY</em></td>
<td>Value must be supplied as a keyword argument.
Keyword only parameters are those which
appear after a <code class="docutils literal notranslate"><span class="pre">*</span></code> or <code class="docutils literal notranslate"><span class="pre">*args</span></code> entry in a
Python function definition.</td>
</tr>
<tr class="row-even"><td><em>VAR_KEYWORD</em></td>
<td>A dict of keyword arguments that aren’t bound
to any other parameter. This corresponds to a
<code class="docutils literal notranslate"><span class="pre">**kwargs</span></code> parameter in a Python function
definition.</td>
</tr>
</tbody>
</table>
<p>Example: print all keyword-only arguments without default values:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span><span class="o">=</span><span class="mi">10</span><span class="p">):</span>
<span class="gp">... </span>    <span class="k">pass</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">sig</span> <span class="o">=</span> <span class="n">signature</span><span class="p">(</span><span class="n">foo</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="k">for</span> <span class="n">param</span> <span class="ow">in</span> <span class="n">sig</span><span class="o">.</span><span class="n">parameters</span><span class="o">.</span><span class="n">values</span><span class="p">():</span>
<span class="gp">... </span>    <span class="k">if</span> <span class="p">(</span><span class="n">param</span><span class="o">.</span><span class="n">kind</span> <span class="o">==</span> <span class="n">param</span><span class="o">.</span><span class="n">KEYWORD_ONLY</span> <span class="ow">and</span>
<span class="gp">... </span>                       <span class="n">param</span><span class="o">.</span><span class="n">default</span> <span class="ow">is</span> <span class="n">param</span><span class="o">.</span><span class="n">empty</span><span class="p">):</span>
<span class="gp">... </span>        <span class="nb">print</span><span class="p">(</span><span class="s1">'Parameter:'</span><span class="p">,</span> <span class="n">param</span><span class="p">)</span>
<span class="go">Parameter: c</span>
</pre></div>
</div>
</dd>