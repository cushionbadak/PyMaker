link:
library/email.charset.html#email.charset.add_charset

docs:

<dt id="email.charset.add_charset">
<code class="descclassname">email.charset.</code><code class="descname">add_charset</code><span class="sig-paren">(</span><em>charset</em>, <em>header_enc=None</em>, <em>body_enc=None</em>, <em>output_charset=None</em><span class="sig-paren">)</span><a class="headerlink" href="#email.charset.add_charset" title="Permalink to this definition">¶</a></dt>
<dd><p>Add character properties to the global registry.</p>
<p><em>charset</em> is the input character set, and must be the canonical name of a
character set.</p>
<p>Optional <em>header_enc</em> and <em>body_enc</em> is either <code class="docutils literal notranslate"><span class="pre">Charset.QP</span></code> for
quoted-printable, <code class="docutils literal notranslate"><span class="pre">Charset.BASE64</span></code> for base64 encoding,
<code class="docutils literal notranslate"><span class="pre">Charset.SHORTEST</span></code> for the shortest of quoted-printable or base64 encoding,
or <code class="docutils literal notranslate"><span class="pre">None</span></code> for no encoding.  <code class="docutils literal notranslate"><span class="pre">SHORTEST</span></code> is only valid for
<em>header_enc</em>. The default is <code class="docutils literal notranslate"><span class="pre">None</span></code> for no encoding.</p>
<p>Optional <em>output_charset</em> is the character set that the output should be in.
Conversions will proceed from input charset, to Unicode, to the output charset
when the method <code class="xref py py-meth docutils literal notranslate"><span class="pre">Charset.convert()</span></code> is called.  The default is to output in
the same character set as the input.</p>
<p>Both <em>input_charset</em> and <em>output_charset</em> must have Unicode codec entries in the
module’s character set-to-codec mapping; use <a class="reference internal" href="#email.charset.add_codec" title="email.charset.add_codec"><code class="xref py py-func docutils literal notranslate"><span class="pre">add_codec()</span></code></a> to add codecs the
module does not know about.  See the <a class="reference internal" href="codecs.html#module-codecs" title="codecs: Encode and decode data and streams."><code class="xref py py-mod docutils literal notranslate"><span class="pre">codecs</span></code></a> module’s documentation for
more information.</p>
<p>The global character set registry is kept in the module global dictionary
<code class="docutils literal notranslate"><span class="pre">CHARSETS</span></code>.</p>
</dd>