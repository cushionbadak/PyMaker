link:
library/mailbox.html#mailbox.MH

docs:

<dt id="mailbox.MH">
<em class="property">class </em><code class="descclassname">mailbox.</code><code class="descname">MH</code><span class="sig-paren">(</span><em>path</em>, <em>factory=None</em>, <em>create=True</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH" title="Permalink to this definition">¶</a></dt>
<dd><p>A subclass of <a class="reference internal" href="#mailbox.Mailbox" title="mailbox.Mailbox"><code class="xref py py-class docutils literal notranslate"><span class="pre">Mailbox</span></code></a> for mailboxes in MH format. Parameter <em>factory</em>
is a callable object that accepts a file-like message representation (which
behaves as if opened in binary mode) and returns a custom representation. If
<em>factory</em> is <code class="docutils literal notranslate"><span class="pre">None</span></code>, <a class="reference internal" href="#mailbox.MHMessage" title="mailbox.MHMessage"><code class="xref py py-class docutils literal notranslate"><span class="pre">MHMessage</span></code></a> is used as the default message
representation. If <em>create</em> is <code class="docutils literal notranslate"><span class="pre">True</span></code>, the mailbox is created if it does not
exist.</p>
<p>MH is a directory-based mailbox format invented for the MH Message Handling
System, a mail user agent. Each message in an MH mailbox resides in its own
file. An MH mailbox may contain other MH mailboxes (called <em class="dfn">folders</em>) in
addition to messages. Folders may be nested indefinitely. MH mailboxes also
support <em class="dfn">sequences</em>, which are named lists used to logically group
messages without moving them to sub-folders. Sequences are defined in a file
called <code class="file docutils literal notranslate"><span class="pre">.mh_sequences</span></code> in each folder.</p>
<p>The <a class="reference internal" href="#mailbox.MH" title="mailbox.MH"><code class="xref py py-class docutils literal notranslate"><span class="pre">MH</span></code></a> class manipulates MH mailboxes, but it does not attempt to
emulate all of <strong class="program">mh</strong>’s behaviors. In particular, it does not modify
and is not affected by the <code class="file docutils literal notranslate"><span class="pre">context</span></code> or <code class="file docutils literal notranslate"><span class="pre">.mh_profile</span></code> files that
are used by <strong class="program">mh</strong> to store its state and configuration.</p>
<p><a class="reference internal" href="#mailbox.MH" title="mailbox.MH"><code class="xref py py-class docutils literal notranslate"><span class="pre">MH</span></code></a> instances have all of the methods of <a class="reference internal" href="#mailbox.Mailbox" title="mailbox.Mailbox"><code class="xref py py-class docutils literal notranslate"><span class="pre">Mailbox</span></code></a> in addition
to the following:</p>
<dl class="method">
<dt id="mailbox.MH.list_folders">
<code class="descname">list_folders</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.list_folders" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a list of the names of all folders.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.get_folder">
<code class="descname">get_folder</code><span class="sig-paren">(</span><em>folder</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.get_folder" title="Permalink to this definition">¶</a></dt>
<dd><p>Return an <a class="reference internal" href="#mailbox.MH" title="mailbox.MH"><code class="xref py py-class docutils literal notranslate"><span class="pre">MH</span></code></a> instance representing the folder whose name is
<em>folder</em>. A <a class="reference internal" href="#mailbox.NoSuchMailboxError" title="mailbox.NoSuchMailboxError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NoSuchMailboxError</span></code></a> exception is raised if the folder
does not exist.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.add_folder">
<code class="descname">add_folder</code><span class="sig-paren">(</span><em>folder</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.add_folder" title="Permalink to this definition">¶</a></dt>
<dd><p>Create a folder whose name is <em>folder</em> and return an <a class="reference internal" href="#mailbox.MH" title="mailbox.MH"><code class="xref py py-class docutils literal notranslate"><span class="pre">MH</span></code></a> instance
representing it.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.remove_folder">
<code class="descname">remove_folder</code><span class="sig-paren">(</span><em>folder</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.remove_folder" title="Permalink to this definition">¶</a></dt>
<dd><p>Delete the folder whose name is <em>folder</em>. If the folder contains any
messages, a <a class="reference internal" href="#mailbox.NotEmptyError" title="mailbox.NotEmptyError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">NotEmptyError</span></code></a> exception will be raised and the folder
will not be deleted.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.get_sequences">
<code class="descname">get_sequences</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.get_sequences" title="Permalink to this definition">¶</a></dt>
<dd><p>Return a dictionary of sequence names mapped to key lists. If there are no
sequences, the empty dictionary is returned.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.set_sequences">
<code class="descname">set_sequences</code><span class="sig-paren">(</span><em>sequences</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.set_sequences" title="Permalink to this definition">¶</a></dt>
<dd><p>Re-define the sequences that exist in the mailbox based upon <em>sequences</em>,
a dictionary of names mapped to key lists, like returned by
<a class="reference internal" href="#mailbox.MH.get_sequences" title="mailbox.MH.get_sequences"><code class="xref py py-meth docutils literal notranslate"><span class="pre">get_sequences()</span></code></a>.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.pack">
<code class="descname">pack</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.pack" title="Permalink to this definition">¶</a></dt>
<dd><p>Rename messages in the mailbox as necessary to eliminate gaps in
numbering.  Entries in the sequences list are updated correspondingly.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Already-issued keys are invalidated by this operation and should not be
subsequently used.</p>
</div>
</dd></dl>
<p>Some <a class="reference internal" href="#mailbox.Mailbox" title="mailbox.Mailbox"><code class="xref py py-class docutils literal notranslate"><span class="pre">Mailbox</span></code></a> methods implemented by <a class="reference internal" href="#mailbox.MH" title="mailbox.MH"><code class="xref py py-class docutils literal notranslate"><span class="pre">MH</span></code></a> deserve special
remarks:</p>
<dl class="method">
<dt id="mailbox.MH.remove">
<code class="descname">remove</code><span class="sig-paren">(</span><em>key</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.remove" title="Permalink to this definition">¶</a></dt>
<dt id="mailbox.MH.__delitem__">
<code class="descname">__delitem__</code><span class="sig-paren">(</span><em>key</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.__delitem__" title="Permalink to this definition">¶</a></dt>
<dt id="mailbox.MH.discard">
<code class="descname">discard</code><span class="sig-paren">(</span><em>key</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.discard" title="Permalink to this definition">¶</a></dt>
<dd><p>These methods immediately delete the message. The MH convention of marking
a message for deletion by prepending a comma to its name is not used.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.lock">
<code class="descname">lock</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.lock" title="Permalink to this definition">¶</a></dt>
<dt id="mailbox.MH.unlock">
<code class="descname">unlock</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.unlock" title="Permalink to this definition">¶</a></dt>
<dd><p>Three locking mechanisms are used—dot locking and, if available, the
<code class="xref c c-func docutils literal notranslate"><span class="pre">flock()</span></code> and <code class="xref c c-func docutils literal notranslate"><span class="pre">lockf()</span></code> system calls. For MH mailboxes, locking
the mailbox means locking the <code class="file docutils literal notranslate"><span class="pre">.mh_sequences</span></code> file and, only for the
duration of any operations that affect them, locking individual message
files.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.get_file">
<code class="descname">get_file</code><span class="sig-paren">(</span><em>key</em><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.get_file" title="Permalink to this definition">¶</a></dt>
<dd><p>Depending upon the host platform, it may not be possible to remove the
underlying message while the returned file remains open.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.flush">
<code class="descname">flush</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.flush" title="Permalink to this definition">¶</a></dt>
<dd><p>All changes to MH mailboxes are immediately applied, so this method does
nothing.</p>
</dd></dl>
<dl class="method">
<dt id="mailbox.MH.close">
<code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#mailbox.MH.close" title="Permalink to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#mailbox.MH" title="mailbox.MH"><code class="xref py py-class docutils literal notranslate"><span class="pre">MH</span></code></a> instances do not keep any open files, so this method is
equivalent to <a class="reference internal" href="#mailbox.MH.unlock" title="mailbox.MH.unlock"><code class="xref py py-meth docutils literal notranslate"><span class="pre">unlock()</span></code></a>.</p>
</dd></dl>
</dd>