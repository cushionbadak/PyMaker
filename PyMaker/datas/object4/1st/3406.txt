link:
library/argparse.html#argparse.ArgumentParser

docs:

<dt id="argparse.ArgumentParser">
<em class="property">class </em><code class="descclassname">argparse.</code><code class="descname">ArgumentParser</code><span class="sig-paren">(</span><em>prog=None</em>, <em>usage=None</em>, <em>description=None</em>, <em>epilog=None</em>, <em>parents=[]</em>, <em>formatter_class=argparse.HelpFormatter</em>, <em>prefix_chars='-'</em>, <em>fromfile_prefix_chars=None</em>, <em>argument_default=None</em>, <em>conflict_handler='error'</em>, <em>add_help=True</em>, <em>allow_abbrev=True</em><span class="sig-paren">)</span><a class="headerlink" href="#argparse.ArgumentParser" title="Permalink to this definition">¶</a></dt>
<dd><p>Create a new <a class="reference internal" href="#argparse.ArgumentParser" title="argparse.ArgumentParser"><code class="xref py py-class docutils literal notranslate"><span class="pre">ArgumentParser</span></code></a> object. All parameters should be passed
as keyword arguments. Each parameter has its own more detailed description
below, but in short they are:</p>
<ul class="simple">
<li><a class="reference internal" href="#prog">prog</a> - The name of the program (default: <code class="docutils literal notranslate"><span class="pre">sys.argv[0]</span></code>)</li>
<li><a class="reference internal" href="#usage">usage</a> - The string describing the program usage (default: generated from
arguments added to parser)</li>
<li><a class="reference internal" href="#description">description</a> - Text to display before the argument help (default: none)</li>
<li><a class="reference internal" href="#epilog">epilog</a> - Text to display after the argument help (default: none)</li>
<li><a class="reference internal" href="#parents">parents</a> - A list of <a class="reference internal" href="#argparse.ArgumentParser" title="argparse.ArgumentParser"><code class="xref py py-class docutils literal notranslate"><span class="pre">ArgumentParser</span></code></a> objects whose arguments should
also be included</li>
<li><a class="reference internal" href="#formatter-class">formatter_class</a> - A class for customizing the help output</li>
<li><a class="reference internal" href="#prefix-chars">prefix_chars</a> - The set of characters that prefix optional arguments
(default: ‘-‘)</li>
<li><a class="reference internal" href="#fromfile-prefix-chars">fromfile_prefix_chars</a> - The set of characters that prefix files from
which additional arguments should be read (default: <code class="docutils literal notranslate"><span class="pre">None</span></code>)</li>
<li><a class="reference internal" href="#argument-default">argument_default</a> - The global default value for arguments
(default: <code class="docutils literal notranslate"><span class="pre">None</span></code>)</li>
<li><a class="reference internal" href="#conflict-handler">conflict_handler</a> - The strategy for resolving conflicting optionals
(usually unnecessary)</li>
<li><a class="reference internal" href="#add-help">add_help</a> - Add a <code class="docutils literal notranslate"><span class="pre">-h/--help</span></code> option to the parser (default: <code class="docutils literal notranslate"><span class="pre">True</span></code>)</li>
<li><a class="reference internal" href="#allow-abbrev">allow_abbrev</a> - Allows long options to be abbreviated if the
abbreviation is unambiguous. (default: <code class="docutils literal notranslate"><span class="pre">True</span></code>)</li>
</ul>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.5: </span><em>allow_abbrev</em> parameter was added.</p>
</div>
</dd>