link:
library/poplib.html#pop3-objects

docs:

POP3 Objects¶
All POP3 commands are represented by methods of the same name, in lower-case;
most return the response text sent by the server.
An POP3 instance has the following methods:


POP3.set_debuglevel(level)¶
Set the instance’s debugging level.  This controls the amount of debugging
output printed.  The default, 0, produces no debugging output.  A value of
1 produces a moderate amount of debugging output, generally a single line
per request.  A value of 2 or higher produces the maximum amount of
debugging output, logging each line sent and received on the control connection.



POP3.getwelcome()¶
Returns the greeting string sent by the POP3 server.



POP3.capa()¶
Query the server’s capabilities as specified in RFC 2449.
Returns a dictionary in the form {'name': ['param'...]}.

New in version 3.4.




POP3.user(username)¶
Send user command, response should indicate that a password is required.



POP3.pass_(password)¶
Send password, response includes message count and mailbox size. Note: the
mailbox on the server is locked until quit() is called.



POP3.apop(user, secret)¶
Use the more secure APOP authentication to log into the POP3 server.



POP3.rpop(user)¶
Use RPOP authentication (similar to UNIX r-commands) to log into POP3 server.



POP3.stat()¶
Get mailbox status.  The result is a tuple of 2 integers: (message count,
mailbox size).



POP3.list([which])¶
Request message list, result is in the form (response, ['mesg_num octets',
...], octets). If which is set, it is the message to list.



POP3.retr(which)¶
Retrieve whole message number which, and set its seen flag. Result is in form
(response, ['line', ...], octets).



POP3.dele(which)¶
Flag message number which for deletion.  On most servers deletions are not
actually performed until QUIT (the major exception is Eudora QPOP, which
deliberately violates the RFCs by doing pending deletes on any disconnect).



POP3.rset()¶
Remove any deletion marks for the mailbox.



POP3.noop()¶
Do nothing.  Might be used as a keep-alive.



POP3.quit()¶
Signoff:  commit changes, unlock mailbox, drop connection.



POP3.top(which, howmuch)¶
Retrieves the message header plus howmuch lines of the message after the
header of message number which. Result is in form (response, ['line', ...],
octets).
The POP3 TOP command this method uses, unlike the RETR command, doesn’t set the
message’s seen flag; unfortunately, TOP is poorly specified in the RFCs and is
frequently broken in off-brand servers. Test this method by hand against the
POP3 servers you will use before trusting it.



POP3.uidl(which=None)¶
Return message digest (unique id) list. If which is specified, result contains
the unique id for that message in the form 'response mesgnum uid, otherwise
result is list (response, ['mesgnum uid', ...], octets).



POP3.utf8()¶
Try to switch to UTF-8 mode. Returns the server response if successful,
raises error_proto if not. Specified in RFC 6856.

New in version 3.5.




POP3.stls(context=None)¶
Start a TLS session on the active connection as specified in RFC 2595.
This is only allowed before user authentication
context parameter is a ssl.SSLContext object which allows
bundling SSL configuration options, certificates and private keys into
a single (potentially long-lived) structure.  Please read Security considerations
for best practices.
This method supports hostname checking via
ssl.SSLContext.check_hostname and Server Name Indication (see
ssl.HAS_SNI).

New in version 3.4.


Instances of POP3_SSL have no additional methods. The interface of this
subclass is identical to its parent.
