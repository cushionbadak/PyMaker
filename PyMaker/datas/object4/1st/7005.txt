link:
library/nntplib.html#nntplib.NNTP.xhdr

docs:

<dt id="nntplib.NNTP.xhdr">
<code class="descclassname">NNTP.</code><code class="descname">xhdr</code><span class="sig-paren">(</span><em>hdr</em>, <em>str</em>, <em>*</em>, <em>file=None</em><span class="sig-paren">)</span><a class="headerlink" href="#nntplib.NNTP.xhdr" title="Permalink to this definition">Â¶</a></dt>
<dd><p>Send an <code class="docutils literal notranslate"><span class="pre">XHDR</span></code> command.  The <em>hdr</em> argument is a header keyword, e.g.
<code class="docutils literal notranslate"><span class="pre">'subject'</span></code>.  The <em>str</em> argument should have the form <code class="docutils literal notranslate"><span class="pre">'first-last'</span></code>
where <em>first</em> and <em>last</em> are the first and last article numbers to search.
Return a pair <code class="docutils literal notranslate"><span class="pre">(response,</span> <span class="pre">list)</span></code>, where <em>list</em> is a list of pairs <code class="docutils literal notranslate"><span class="pre">(id,</span>
<span class="pre">text)</span></code>, where <em>id</em> is an article number (as a string) and <em>text</em> is the text of
the requested header for that article. If the <em>file</em> parameter is supplied, then
the output of the  <code class="docutils literal notranslate"><span class="pre">XHDR</span></code> command is stored in a file.  If <em>file</em> is a string,
then the method will open a file with that name, write to it  then close it.
If <em>file</em> is a <a class="reference internal" href="../glossary.html#term-file-object"><span class="xref std std-term">file object</span></a>, then it will start calling <code class="xref py py-meth docutils literal notranslate"><span class="pre">write()</span></code> on
it to store the lines of the command output. If <em>file</em> is supplied, then the
returned <em>list</em> is an empty list.</p>
</dd>