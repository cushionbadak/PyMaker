link:
library/email.header.html#email.header.Header

docs:

<dt id="email.header.Header">
<em class="property">class </em><code class="descclassname">email.header.</code><code class="descname">Header</code><span class="sig-paren">(</span><em>s=None</em>, <em>charset=None</em>, <em>maxlinelen=None</em>, <em>header_name=None</em>, <em>continuation_ws=' '</em>, <em>errors='strict'</em><span class="sig-paren">)</span><a class="headerlink" href="#email.header.Header" title="Permalink to this definition">¶</a></dt>
<dd><p>Create a MIME-compliant header that can contain strings in different character
sets.</p>
<p>Optional <em>s</em> is the initial header value.  If <code class="docutils literal notranslate"><span class="pre">None</span></code> (the default), the
initial header value is not set.  You can later append to the header with
<a class="reference internal" href="#email.header.Header.append" title="email.header.Header.append"><code class="xref py py-meth docutils literal notranslate"><span class="pre">append()</span></code></a> method calls.  <em>s</em> may be an instance of <a class="reference internal" href="stdtypes.html#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> or
<a class="reference internal" href="stdtypes.html#str" title="str"><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></a>, but see the <a class="reference internal" href="#email.header.Header.append" title="email.header.Header.append"><code class="xref py py-meth docutils literal notranslate"><span class="pre">append()</span></code></a> documentation for semantics.</p>
<p>Optional <em>charset</em> serves two purposes: it has the same meaning as the <em>charset</em>
argument to the <a class="reference internal" href="#email.header.Header.append" title="email.header.Header.append"><code class="xref py py-meth docutils literal notranslate"><span class="pre">append()</span></code></a> method.  It also sets the default character set
for all subsequent <a class="reference internal" href="#email.header.Header.append" title="email.header.Header.append"><code class="xref py py-meth docutils literal notranslate"><span class="pre">append()</span></code></a> calls that omit the <em>charset</em> argument.  If
<em>charset</em> is not provided in the constructor (the default), the <code class="docutils literal notranslate"><span class="pre">us-ascii</span></code>
character set is used both as <em>s</em>’s initial charset and as the default for
subsequent <a class="reference internal" href="#email.header.Header.append" title="email.header.Header.append"><code class="xref py py-meth docutils literal notranslate"><span class="pre">append()</span></code></a> calls.</p>
<p>The maximum line length can be specified explicitly via <em>maxlinelen</em>.  For
splitting the first line to a shorter value (to account for the field header
which isn’t included in <em>s</em>, e.g. <em class="mailheader">Subject</em>) pass in the name of the
field in <em>header_name</em>.  The default <em>maxlinelen</em> is 76, and the default value
for <em>header_name</em> is <code class="docutils literal notranslate"><span class="pre">None</span></code>, meaning it is not taken into account for the
first line of a long, split header.</p>
<p>Optional <em>continuation_ws</em> must be <span class="target" id="index-9"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc2822.html"><strong>RFC 2822</strong></a>-compliant folding
whitespace, and is usually either a space or a hard tab character.  This
character will be prepended to continuation lines.  <em>continuation_ws</em>
defaults to a single space character.</p>
<p>Optional <em>errors</em> is passed straight through to the <a class="reference internal" href="#email.header.Header.append" title="email.header.Header.append"><code class="xref py py-meth docutils literal notranslate"><span class="pre">append()</span></code></a> method.</p>
<dl class="method">
<dt id="email.header.Header.append">
<code class="descname">append</code><span class="sig-paren">(</span><em>s</em>, <em>charset=None</em>, <em>errors='strict'</em><span class="sig-paren">)</span><a class="headerlink" href="#email.header.Header.append" title="Permalink to this definition">¶</a></dt>
<dd><p>Append the string <em>s</em> to the MIME header.</p>
<p>Optional <em>charset</em>, if given, should be a <a class="reference internal" href="email.charset.html#email.charset.Charset" title="email.charset.Charset"><code class="xref py py-class docutils literal notranslate"><span class="pre">Charset</span></code></a>
instance (see <a class="reference internal" href="email.charset.html#module-email.charset" title="email.charset: Character Sets"><code class="xref py py-mod docutils literal notranslate"><span class="pre">email.charset</span></code></a>) or the name of a character set, which
will be converted to a <a class="reference internal" href="email.charset.html#email.charset.Charset" title="email.charset.Charset"><code class="xref py py-class docutils literal notranslate"><span class="pre">Charset</span></code></a> instance.  A value
of <code class="docutils literal notranslate"><span class="pre">None</span></code> (the default) means that the <em>charset</em> given in the constructor
is used.</p>
<p><em>s</em> may be an instance of <a class="reference internal" href="stdtypes.html#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a> or <a class="reference internal" href="stdtypes.html#str" title="str"><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></a>.  If it is an
instance of <a class="reference internal" href="stdtypes.html#bytes" title="bytes"><code class="xref py py-class docutils literal notranslate"><span class="pre">bytes</span></code></a>, then <em>charset</em> is the encoding of that byte
string, and a <a class="reference internal" href="exceptions.html#UnicodeError" title="UnicodeError"><code class="xref py py-exc docutils literal notranslate"><span class="pre">UnicodeError</span></code></a> will be raised if the string cannot be
decoded with that character set.</p>
<p>If <em>s</em> is an instance of <a class="reference internal" href="stdtypes.html#str" title="str"><code class="xref py py-class docutils literal notranslate"><span class="pre">str</span></code></a>, then <em>charset</em> is a hint specifying
the character set of the characters in the string.</p>
<p>In either case, when producing an <span class="target" id="index-10"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc2822.html"><strong>RFC 2822</strong></a>-compliant header using
<span class="target" id="index-11"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc2047.html"><strong>RFC 2047</strong></a> rules, the string will be encoded using the output codec of
the charset.  If the string cannot be encoded using the output codec, a
UnicodeError will be raised.</p>
<p>Optional <em>errors</em> is passed as the errors argument to the decode call
if <em>s</em> is a byte string.</p>
</dd></dl>
<dl class="method">
<dt id="email.header.Header.encode">
<code class="descname">encode</code><span class="sig-paren">(</span><em>splitchars=';</em>, <em>\t'</em>, <em>maxlinelen=None</em>, <em>linesep='\n'</em><span class="sig-paren">)</span><a class="headerlink" href="#email.header.Header.encode" title="Permalink to this definition">¶</a></dt>
<dd><p>Encode a message header into an RFC-compliant format, possibly wrapping
long lines and encapsulating non-ASCII parts in base64 or quoted-printable
encodings.</p>
<p>Optional <em>splitchars</em> is a string containing characters which should be
given extra weight by the splitting algorithm during normal header
wrapping.  This is in very rough support of <span class="target" id="index-12"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc2822.html"><strong>RFC 2822</strong></a>’s ‘higher level
syntactic breaks’:  split points preceded by a splitchar are preferred
during line splitting, with the characters preferred in the order in
which they appear in the string.  Space and tab may be included in the
string to indicate whether preference should be given to one over the
other as a split point when other split chars do not appear in the line
being split.  Splitchars does not affect <span class="target" id="index-13"></span><a class="rfc reference external" href="https://tools.ietf.org/html/rfc2047.html"><strong>RFC 2047</strong></a> encoded lines.</p>
<p><em>maxlinelen</em>, if given, overrides the instance’s value for the maximum
line length.</p>
<p><em>linesep</em> specifies the characters used to separate the lines of the
folded header.  It defaults to the most useful value for Python
application code (<code class="docutils literal notranslate"><span class="pre">\n</span></code>), but <code class="docutils literal notranslate"><span class="pre">\r\n</span></code> can be specified in order
to produce headers with RFC-compliant line separators.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2: </span>Added the <em>linesep</em> argument.</p>
</div>
</dd></dl>
<p>The <a class="reference internal" href="#email.header.Header" title="email.header.Header"><code class="xref py py-class docutils literal notranslate"><span class="pre">Header</span></code></a> class also provides a number of methods to support
standard operators and built-in functions.</p>
<dl class="method">
<dt id="email.header.Header.__str__">
<code class="descname">__str__</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#email.header.Header.__str__" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns an approximation of the <a class="reference internal" href="#email.header.Header" title="email.header.Header"><code class="xref py py-class docutils literal notranslate"><span class="pre">Header</span></code></a> as a string, using an
unlimited line length.  All pieces are converted to unicode using the
specified encoding and joined together appropriately.  Any pieces with a
charset of <code class="docutils literal notranslate"><span class="pre">'unknown-8bit'</span></code> are decoded as ASCII using the <code class="docutils literal notranslate"><span class="pre">'replace'</span></code>
error handler.</p>
<div class="versionchanged">
<p><span class="versionmodified">Changed in version 3.2: </span>Added handling for the <code class="docutils literal notranslate"><span class="pre">'unknown-8bit'</span></code> charset.</p>
</div>
</dd></dl>
<dl class="method">
<dt id="email.header.Header.__eq__">
<code class="descname">__eq__</code><span class="sig-paren">(</span><em>other</em><span class="sig-paren">)</span><a class="headerlink" href="#email.header.Header.__eq__" title="Permalink to this definition">¶</a></dt>
<dd><p>This method allows you to compare two <a class="reference internal" href="#email.header.Header" title="email.header.Header"><code class="xref py py-class docutils literal notranslate"><span class="pre">Header</span></code></a> instances for
equality.</p>
</dd></dl>
<dl class="method">
<dt id="email.header.Header.__ne__">
<code class="descname">__ne__</code><span class="sig-paren">(</span><em>other</em><span class="sig-paren">)</span><a class="headerlink" href="#email.header.Header.__ne__" title="Permalink to this definition">¶</a></dt>
<dd><p>This method allows you to compare two <a class="reference internal" href="#email.header.Header" title="email.header.Header"><code class="xref py py-class docutils literal notranslate"><span class="pre">Header</span></code></a> instances for
inequality.</p>
</dd></dl>
</dd>