link:
library/asyncio-policy.html#asyncio.AbstractChildWatcher

docs:

<dt id="asyncio.AbstractChildWatcher">
<em class="property">class </em><code class="descclassname">asyncio.</code><code class="descname">AbstractChildWatcher</code><a class="headerlink" href="#asyncio.AbstractChildWatcher" title="Permalink to this definition">¶</a></dt>
<dd><dl class="method">
<dt id="asyncio.AbstractChildWatcher.add_child_handler">
<code class="descname">add_child_handler</code><span class="sig-paren">(</span><em>pid</em>, <em>callback</em>, <em>*args</em><span class="sig-paren">)</span><a class="headerlink" href="#asyncio.AbstractChildWatcher.add_child_handler" title="Permalink to this definition">¶</a></dt>
<dd><p>Register a new child handler.</p>
<p>Arrange for <code class="docutils literal notranslate"><span class="pre">callback(pid,</span> <span class="pre">returncode,</span> <span class="pre">*args)</span></code> to be called
when a process with PID equal to <em>pid</em> terminates.  Specifying
another callback for the same process replaces the previous
handler.</p>
<p>The <em>callback</em> callable must be thread-safe.</p>
</dd></dl>
<dl class="method">
<dt id="asyncio.AbstractChildWatcher.remove_child_handler">
<code class="descname">remove_child_handler</code><span class="sig-paren">(</span><em>pid</em><span class="sig-paren">)</span><a class="headerlink" href="#asyncio.AbstractChildWatcher.remove_child_handler" title="Permalink to this definition">¶</a></dt>
<dd><p>Removes the handler for process with PID equal to <em>pid</em>.</p>
<p>The function returns <code class="docutils literal notranslate"><span class="pre">True</span></code> if the handler was successfully
removed, <code class="docutils literal notranslate"><span class="pre">False</span></code> if there was nothing to remove.</p>
</dd></dl>
<dl class="method">
<dt id="asyncio.AbstractChildWatcher.attach_loop">
<code class="descname">attach_loop</code><span class="sig-paren">(</span><em>loop</em><span class="sig-paren">)</span><a class="headerlink" href="#asyncio.AbstractChildWatcher.attach_loop" title="Permalink to this definition">¶</a></dt>
<dd><p>Attach the watcher to an event loop.</p>
<p>If the watcher was previously attached to an event loop, then
it is first detached before attaching to the new loop.</p>
<p>Note: loop may be <code class="docutils literal notranslate"><span class="pre">None</span></code>.</p>
</dd></dl>
<dl class="method">
<dt id="asyncio.AbstractChildWatcher.close">
<code class="descname">close</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="headerlink" href="#asyncio.AbstractChildWatcher.close" title="Permalink to this definition">¶</a></dt>
<dd><p>Close the watcher.</p>
<p>This method has to be called to ensure that underlying
resources are cleaned-up.</p>
</dd></dl>
</dd>